{"version":3,"sources":["raw-mjs/kendo.html.chiplist.js"],"names":["__meta__","id","name","category","description","depends","features","$","kendo","window","HTMLBase","html","HTMLChipList","extend","init","element","options","that","this","fn","call","wrapper","addClass","_applyAriaAttributes","_addClasses","size","stylingOptions","ariaLabelOption","selectable","attributes","attr","role","removeAttr","renderChipList","arguments","isPlainObject","cssProperties","registerPrefix","jQuery","kendo$1"],"mappings":";;;;;;;;MAAA,uBAEA,MAAAA,SAAA,CACAC,GAAA,gBACAC,KAAA,gBACAC,SAAA,MACAC,YAAA,kDACAC,QAAA,CAAA,aACAC,SAAA,KAGA,SAAAC,GACA,IAAAC,EAAAC,OAAAD,MACAE,EAAAF,EAAAG,KAAAD,SAWAE,EAAAF,EAAAG,OAAA,CACAC,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,KACAR,EAAAS,GAAAL,KAAAM,KAAAH,EAAAF,EAAAC,GACAC,EAAAI,QAAAJ,EAAAF,QAAAO,SAAA,eACAL,EAAAM,qBAAAP,GACAC,EAAAO,aACA,EACAR,QAAA,CACAd,KAAA,eACAuB,KAAA,SACAC,eAAA,CAAA,SAEAH,qBAAA,SAAAP,GACA,IAAAC,EAAAC,KAEAS,IADAX,EAAAT,EAAAM,OAAA,CAAAe,WAAA,QAAAZ,IACAa,YAAA,CAAA,GAAA,cAEA,SAAAb,EAAAY,WACAX,EAAAF,QAAAe,KAAA,CACA,uBAAA,aAAAd,EAAAY,WACAG,KAAA,UACA,aAAAJ,GAAAV,EAAAF,QAAAe,KAAA,MAAA,WACA,mBAAA,eAGAb,EAAAF,QAAAiB,WAAA,wDAEA,IAGAzB,EAAAM,OAAAL,EAAAG,KAAA,CACAsB,eAzCA,SAAAlB,EAAAC,GAMA,OAVA,YAKAkB,UAAA,IAAA3B,EAAA4B,cAAAD,UAAA,OACAlB,EAAAD,EACAA,EAAAR,EAAA,gBAGA,IAAAK,EAAAG,EAAAC,GAAAL,MACA,EAmCAC,aAAAA,IAGAJ,EAAA4B,cAAAC,eAAA,eAAA,eAEA,CAnDA,CAmDA5B,OAAAD,MAAA8B,QACA,IAAAC,QAAA/B,aAEAR,SAAAuC","file":"kendo.html.chiplist.js","sourcesContent":["import './kendo.html.base.js';\n\nconst __meta__ = {\n    id: \"html.chiplist\",\n    name: \"Html.ChipList\",\n    category: \"web\",\n    description: \"HTML rendering utility for Kendo UI for jQuery.\",\n    depends: [\"html.base\"],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        HTMLBase = kendo.html.HTMLBase;\n\n    var renderChipList = function(element, options) {\n        if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<div></div>\");\n        }\n\n        return (new HTMLChipList(element, options)).html();\n    };\n\n    var HTMLChipList = HTMLBase.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that.wrapper = that.element.addClass(\"k-chip-list\");\n            that._applyAriaAttributes(options);\n            that._addClasses();\n        },\n        options: {\n            name: \"HTMLChipList\",\n            size: \"medium\",\n            stylingOptions: [\"size\"]\n        },\n        _applyAriaAttributes: function(options) {\n            var that = this;\n            options = $.extend({ selectable: \"none\" }, options);\n            var ariaLabelOption = (options.attributes || {})[\"aria-label\"];\n\n            if (options.selectable !== \"none\") {\n                that.element.attr({\n                    \"aria-multiselectable\": options.selectable === \"multiple\",\n                    role: \"listbox\",\n                    \"aria-label\": ariaLabelOption || that.element.attr(\"id\") + \" listbox\",\n                    \"aria-orientation\": \"horizontal\"\n                });\n            } else {\n                that.element.removeAttr(\"role aria-label aria-multiselectable aria-orientation\");\n            }\n        }\n    });\n\n    $.extend(kendo.html, {\n        renderChipList: renderChipList,\n        HTMLChipList: HTMLChipList\n    });\n\n    kendo.cssProperties.registerPrefix(\"HTMLChipList\", \"k-chip-list-\");\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}