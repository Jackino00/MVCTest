{"version":3,"sources":["raw-mjs/kendo.ooxml.js"],"names":["IntlService","Workbook","Worksheet","__meta__","id","name","category","advanced","depends","$","register","toString","kendo","convertedWorkbook","ConvertClass","toDataURL","prototype","Object","assign","result","call","this","Error","toDataURLAsync","deferred","Deferred","resolve","then","dataURI","reject","promise","window","ooxml","createZip","JSZip","jQuery"],"mappings":";;;;;;;;MAAA,8BACAA,iBAAAC,cAAAC,cAAA,6BAEA,MAAAC,SAAA,CACAC,GAAA,QACAC,KAAA,kBACAC,SAAA,YACAC,UAAA,EACAC,QAAA,CAAA,OAAA,qBAGA,SAAAC,GAEAT,YAAAU,SAAA,CACAC,SAAAC,MAAAD,WAIA,IAAAE,EAAAD,MAAAE,aAAAb,UACA,IAAAc,EAAAF,EAAAG,UAAAD,UAEAE,OAAAC,OAAAL,EAAAG,UAAA,CACAD,UAAA,WACA,IAAAI,EAAAJ,EAAAK,KAAAC,MACA,GAAA,iBAAAF,EACA,MAAA,IAAAG,MAAA,gHAGA,OAAAH,CACA,EAEAI,eAAA,WACA,IAAAC,EAAAf,EAAAgB,WACAN,EAAAJ,EAAAK,KAAAC,MAWA,MAVA,iBAAAF,EACAA,EAAAK,EAAAE,QAAAP,GACAA,GAAAA,EAAAQ,MACAR,EAAAQ,MAAA,SAAAC,GACAJ,EAAAE,QAAAE,EACA,IAAA,WACAJ,EAAAK,QACA,IAGAL,EAAAM,SACA,IAGAC,OAAAnB,MAAAoB,MAAAD,OAAAnB,MAAAoB,OAAA,CAAA,EACAD,OAAAnB,MAAAoB,MAAAhC,YAAAA,YACA+B,OAAAnB,MAAAoB,MAAA/B,SAAAY,EACAkB,OAAAnB,MAAAoB,MAAA9B,UAAAU,MAAAE,aAAAZ,WACA6B,OAAAnB,MAAAoB,MAAAC,UAAA,WAEA,GAAA,oBAAAC,MACA,MAAA,IAAAZ,MAAA,uHAGA,OAAA,IAAAY,KACA,CAEA,CAlDA,CAkDAH,OAAAnB,MAAAuB,eAEAhC","file":"kendo.ooxml.js","sourcesContent":["import './kendo.core.js';\nimport { I as IntlService, W as Workbook, a as Worksheet } from './kendo.ooxml.cmn.chunk.js';\n\nconst __meta__ = {\n    id: \"ooxml\",\n    name: \"XLSX generation\",\n    category: \"framework\",\n    advanced: true,\n    depends: [\"core\", \"ooxml.cmn.chunk\"]\n};\n\n(function($) {\n\n    IntlService.register({\n        toString: kendo.toString\n    });\n\n\n    let convertedWorkbook = kendo.ConvertClass(Workbook);\n    var toDataURL = convertedWorkbook.prototype.toDataURL;\n\n    Object.assign(convertedWorkbook.prototype, {\n        toDataURL: function() {\n            var result = toDataURL.call(this);\n            if (typeof result !== 'string') {\n                throw new Error('The toDataURL method can be used only with jsZip 2. Either include jsZip 2 or use the toDataURLAsync method.');\n            }\n\n            return result;\n        },\n\n        toDataURLAsync: function() {\n            var deferred = $.Deferred();\n            var result = toDataURL.call(this);\n            if (typeof result === 'string') {\n                result = deferred.resolve(result);\n            } else if (result && result.then) {\n                result.then(function(dataURI) {\n                    deferred.resolve(dataURI);\n                }, function() {\n                    deferred.reject();\n                });\n            }\n\n            return deferred.promise();\n        }\n    });\n\n    window.kendo.ooxml = window.kendo.ooxml || {};\n    window.kendo.ooxml.IntlService = IntlService;\n    window.kendo.ooxml.Workbook = convertedWorkbook;\n    window.kendo.ooxml.Worksheet = kendo.ConvertClass(Worksheet);\n    window.kendo.ooxml.createZip = function() {\n        /* global JSZip */\n        if (typeof JSZip === \"undefined\") {\n            throw new Error(\"JSZip not found. Check http://docs.telerik.com/kendo-ui/framework/excel/introduction#requirements for more details.\");\n        }\n\n        return new JSZip();\n    };\n\n})(window.kendo.jQuery);\n\nexport { __meta__ };\n"]}