{"version":3,"sources":["raw-mjs/kendo.switch.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","ui","NS","Widget","support","CHANGE","switchStyles","widget","track","thumbWrapper","thumb","checked","checkedLabel","unchecked","uncheckedLabel","disabled","readonly","active","DISABLED","ARIA_DISABLED","READONLY","ARIA_READONLY","ARIA_HIDDEN","CHECKED","CLICK","click","TOUCHEND","pointers","KEYDOWN","DOT","encode","htmlEncode","SWITCH_TEMPLATE","template","styles","SWITCH_TRACK_TEMPLATE","SWITCH_THUMB_TEMPLATE","Switch","extend","init","element","options","that","this","fn","call","_wrapper","_initSettings","_aria","_attachEvents","notify","wrapper","type","wrap","parent","style","cssText","hide","append","messages","addClass","className","removeClass","rounded","trackRounded","_applyCssClasses","_applyRoundedClasses","action","cssProperties","getValidClass","propName","value","thumbRounded","find","on","_click","bind","_touchEnd","_keydown","setOptions","_clearCssClasses","text","width","css","enabled","enable","check","_tabindex","attr","labelFor","ariaLabel","ariaLabelledBy","length","labelId","guid","events","size","toggleClass","removeAttr","prop","apply","destroy","off","toggle","_check","trigger","e","keyCode","keys","SPACEBAR","preventDefault","_isTouch","event","test","originalEvent","pointerType","which","target","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.switch.js","sourcesContent":["import './kendo.core.js';\n\nconst __meta__ = {\n    id: \"switch\",\n    name: \"Switch\",\n    category: \"web\",\n    description: \"The Switch widget is used to display two exclusive choices.\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        NS = \".kendoSwitch\",\n        Widget = ui.Widget,\n        support = kendo.support,\n        CHANGE = \"change\",\n        switchStyles = {\n            widget: \"k-switch\",\n            track: \"k-switch-track\",\n            thumbWrapper: \"k-switch-thumb-wrap\",\n            thumb: \"k-switch-thumb\",\n            checked: \"k-switch-on\",\n            checkedLabel: \"k-switch-label-on\",\n            unchecked: \"k-switch-off\",\n            uncheckedLabel: \"k-switch-label-off\",\n            disabled: \"k-disabled\",\n            readonly: \"k-readonly\",\n            active: \"k-active\"\n        },\n        DISABLED = \"disabled\",\n        ARIA_DISABLED = \"aria-disabled\",\n        READONLY = \"readonly\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        CHECKED = \"checked\",\n        CLICK = support.click + NS,\n        TOUCHEND = support.pointers ? \"pointerup\" : \"touchend\",\n        KEYDOWN = \"keydown\" + NS,\n        LABELIDPART = \"_label\",\n        DOT = \".\",\n        encode = kendo.htmlEncode;\n\n    var SWITCH_TEMPLATE = kendo.template(({ styles }) => `<span class=\"${styles.widget}\" role=\"switch\"></span>`);\n\n    var SWITCH_TRACK_TEMPLATE = kendo.template(({ styles, checked, unchecked }) => `<span class='${styles.track}'>` +\n        `<span class='${styles.checkedLabel}'>${encode(checked)}</span>` +\n        `<span class='${styles.uncheckedLabel}'>${encode(unchecked)}</span>` +\n        `</span>`);\n\n    var SWITCH_THUMB_TEMPLATE = kendo.template(({ styles }) => `<span class='${styles.thumbWrapper}'>` +\n        `<span class='${styles.thumb}'></span>` +\n        `</span>`);\n\n    var Switch = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._wrapper();\n\n            that._initSettings();\n\n            that._aria();\n\n            that._attachEvents();\n\n            kendo.notify(that, kendo.ui);\n        },\n\n        _wrapper: function() {\n            var that = this,\n                options = that.options,\n                element = that.element[0],\n                wrapper = $(SWITCH_TEMPLATE({\n                    styles: switchStyles\n                }));\n\n            element.type = \"checkbox\";\n\n            that.wrapper = that.element.wrap(wrapper).parent();\n\n            that.wrapper[0].style.cssText = that.element[0].style.cssText;\n            that.element.hide();\n\n            that.wrapper\n                .append($(SWITCH_TRACK_TEMPLATE({\n                    styles: switchStyles,\n                    checked: options.messages.checked,\n                    unchecked: options.messages.unchecked\n                })))\n                .append($(SWITCH_THUMB_TEMPLATE({\n                    styles: switchStyles\n                })))\n                .addClass(element.className)\n                .removeClass('input-validation-error');\n\n            that.options.rounded = that.options.trackRounded;\n            that._applyCssClasses();\n            that._applyRoundedClasses();\n        },\n\n        _applyRoundedClasses: function(action) {\n            var that = this,\n                options = that.options,\n                trackRounded = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"rounded\",\n                    value: options.trackRounded\n                }),\n                thumbRounded = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"rounded\",\n                    value: options.thumbRounded\n                });\n\n            action = action || \"addClass\";\n\n            that.wrapper.find(DOT + switchStyles.track)[action](trackRounded);\n            that.wrapper.find(DOT + switchStyles.thumb)[action](thumbRounded);\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.wrapper\n                .on(CLICK, that._click.bind(that))\n                .on(TOUCHEND, that._touchEnd.bind(that))\n                .on(KEYDOWN, that._keydown.bind(that));\n        },\n\n        setOptions: function(options) {\n            let that = this,\n                messages = options.messages,\n                checkedLabel,\n                uncheckedLabel;\n\n            that._clearCssClasses(options);\n            that._applyRoundedClasses(\"removeClass\");\n\n            that.options = $.extend(that.options, options);\n\n            if (messages && messages.checked !== undefined$1) {\n                checkedLabel = that.wrapper.find(DOT + switchStyles.checkedLabel);\n                checkedLabel.text(encode(messages.checked));\n            }\n\n            if (messages && messages.unchecked !== undefined$1) {\n                uncheckedLabel = that.wrapper.find(DOT + switchStyles.uncheckedLabel);\n                uncheckedLabel.text(encode(messages.unchecked));\n            }\n\n            if (options.width) {\n                that.wrapper.css({\n                    width: options.width\n                });\n            }\n\n            if (options.enabled !== undefined$1) {\n                that.enable(options.enabled);\n            }\n\n            if (options.readonly !== undefined$1) {\n                that.readonly(options.readonly);\n            }\n\n            that.check(options.checked);\n\n            that.options.rounded = that.options.trackRounded;\n            that._applyCssClasses();\n            that._applyRoundedClasses();\n        },\n\n        _initSettings: function() {\n            var that = this,\n                element = that.element[0],\n                options = that.options;\n\n            if (options.enabled) {\n                that._tabindex();\n            }\n\n            if (options.width) {\n                that.wrapper.css({\n                    width: options.width\n                });\n            }\n\n            if (options.checked === null) {\n                options.checked = element.checked;\n            }\n\n            that.check(options.checked);\n\n            options.enabled = options.enabled && !that.element.attr(DISABLED);\n            that.enable(options.enabled);\n\n            options.readonly = options.readonly || !!that.element.attr(READONLY);\n            that.readonly(options.readonly);\n        },\n\n        _aria: function() {\n            var that = this,\n                element = that.element,\n                wrapper = that.wrapper,\n                id = element.attr(\"id\"),\n                labelFor = $(\"label[for=\\\"\" + id + \"\\\"]\"),\n                ariaLabel = element.attr(\"aria-label\"),\n                ariaLabelledBy = element.attr(\"aria-labelledby\");\n\n            if (ariaLabel) {\n                wrapper.attr(\"aria-label\", ariaLabel);\n            } else if (ariaLabelledBy) {\n                wrapper.attr(\"aria-labelledby\", ariaLabelledBy);\n            } else if (labelFor.length) {\n                var labelId = labelFor.attr(\"id\");\n\n                if (!labelId) {\n                    labelId = (id || kendo.guid()) + LABELIDPART;\n                    labelFor.attr(\"id\", labelId);\n                }\n\n                wrapper.attr(\"aria-labelledby\", labelId);\n            }\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        options: {\n            name: \"Switch\",\n            messages: {\n                checked: \"On\",\n                unchecked: \"Off\"\n            },\n            width: null,\n            checked: null,\n            enabled: true,\n            readonly: false,\n            size: \"medium\",\n            rounded: \"full\",\n            trackRounded: \"full\",\n            thumbRounded: \"full\"\n        },\n\n        check: function(checked) {\n            var that = this,\n                element = that.element[0];\n\n            if (checked === undefined$1) {\n                return element.checked;\n            }\n\n            if (element.checked !== checked) {\n                that.options.checked = element.checked = checked;\n            }\n\n            that.wrapper\n                .attr(ARIA_CHECKED, checked)\n                .toggleClass(switchStyles.checked, checked)\n                .toggleClass(switchStyles.unchecked, !checked)\n                .find(\"[aria-hidden='true']\")\n                .removeAttr(ARIA_HIDDEN);\n\n            if (checked) {\n                that.element\n                    .attr(CHECKED, CHECKED);\n\n                that.wrapper.find(DOT + switchStyles.uncheckedLabel)\n                    .attr(ARIA_HIDDEN, true);\n            } else {\n                that.element\n                    .prop(CHECKED, false);\n\n                that.wrapper.find(DOT + switchStyles.checkedLabel)\n                    .attr(ARIA_HIDDEN, true);\n            }\n        },\n\n        // alias for check, NG support\n        value: function(value) {\n            if (typeof value === \"string\") {\n                value = (value === \"true\");\n            } else if (value === null) {\n                value = false;\n            }\n            return this.check.apply(this, [value]);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this.wrapper.off(NS);\n        },\n\n        toggle: function() {\n            var that = this;\n\n            that.check(!that.element[0].checked);\n        },\n\n        enable: function(enable) {\n            var element = this.element,\n                wrapper = this.wrapper;\n\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            this.options.enabled = enable;\n\n            if (enable) {\n                element.prop(DISABLED, false);\n                wrapper.removeAttr(ARIA_DISABLED);\n            } else {\n                element.attr(DISABLED, DISABLED);\n                wrapper.attr(ARIA_DISABLED, true);\n            }\n\n            wrapper.toggleClass(switchStyles.disabled, !enable);\n        },\n\n        readonly: function(readonly) {\n            var that = this,\n                element = that.element,\n                wrapper = that.wrapper;\n\n            if (typeof readonly == \"undefined\") {\n                readonly = true;\n            }\n\n            that.options.readonly = readonly;\n\n            if (readonly) {\n                element.attr(READONLY, true);\n                wrapper.attr(ARIA_READONLY, true);\n            } else {\n                element.prop(READONLY, false);\n                wrapper.removeAttr(ARIA_READONLY);\n            }\n\n            wrapper.toggleClass(switchStyles.readonly, readonly);\n        },\n\n        _check: function() {\n            var that = this,\n                checked = that.element[0].checked = !that.element[0].checked;\n\n            that.wrapper.trigger(\"focus\");\n\n            if (!that.options.enabled || that.options.readonly ||\n                that.trigger(CHANGE, { checked: checked })) {\n                that.element[0].checked = !checked;\n                return;\n            }\n\n            that.check(checked);\n        },\n\n        _keydown: function(e) {\n            if (e.keyCode === kendo.keys.SPACEBAR) {\n                this._check();\n                e.preventDefault();\n            }\n        },\n\n        _isTouch: function(event) {\n            return /touch/.test(event.type) || (event.originalEvent && /touch/.test(event.originalEvent.pointerType));\n        },\n\n        _click: function(e) {\n            if (!this._isTouch(e) && e.which === 1) {\n                if (e.target === this.element[0]) {\n                    // In this case the input has been clicked directly\n                    // even if hidden that is possible via <label for= >\n                    // thus we should revert its checked state to trigger the change\n                    this.element[0].checked = !this.element[0].checked;\n                }\n\n                this._check();\n            }\n        },\n\n        _touchEnd: function(e) {\n            if (this._isTouch(e)) {\n                this._check();\n                e.preventDefault();\n            }\n        }\n\n    });\n\n    kendo.cssProperties.registerPrefix(\"Switch\", \"k-switch-\");\n\n    kendo.cssProperties.registerValues(\"Switch\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(Switch);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}