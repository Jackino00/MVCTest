{"version":3,"sources":["raw-mjs/kendo.signature.js"],"names":["exports","kendoDrawing","_a","elementOffset","limitValue","Point","Rect","transform","noop","SignaturePad","window","kendo","inputs","common","drawing","util","geometry","element","options","this","lastMoveTime","Object","assign","scale","precision","samplingRate","smooth","color","backgroundColor","strokeWidth","onChange","onDraw","onDrawEnd","pathOptions","stroke","width","lineCap","lineJoin","initSurface","attachEvents","prototype","destroy","detachEvents","clear","rootGroup","path","defineProperty","get","Boolean","points","enumerable","configurable","toString","set","value","MultiPath","parse","append","loadImage","data","size","height","contentWidth","contentHeight","importWidth","importHeight","scaleX","scaleY","Math","min","img","Image","exportImage","_b","exportWidth","exportHeight","exportRect","exportGroup","Group","clip","Path","fromRect","contentGroup","frame","fill","children","push","apply","resize","surface","setOptions","background","Surface","create","type","style","touchAction","offsetWidth","offsetHeight","draw","onPointerDown","bind","onPointerMove","onPointerUp","addEventListener","removeEventListener","touchPoint","e","offset","pageX","pageY","left","top","readonly","isPrimary","button","isMainButton","setPointerCapture","pointerId","point","moveTo","now","Date","getTime","lastPoint","length","minDelta","distanceTo","lineTo","segments","curveFromPoints","paths","splice","pathData","__meta__","id","name","category","description","depends","$","Widget","ui","Dialog","html","outerWidth","_outerWidth","outerHeight","_outerHeight","Pad","ns","CHANGE","OPEN","CLOSE","CLICK","Signature","extend","init","that","fn","call","_createElements","maximizable","_createInput","wrapper","getComputedStyle","_createPad","_createDialogPad","_attachHandlers","_assignLabel","_pad","_dialogPad","enable","fillMode","hideLine","label","popupScale","rounded","exportScale","events","currentOptions","oldBtnClass","getValidCssClass","btns","add","_dialogPadEl","find","targets","removeClass","_clearCssClasses","deepExtend","_destroyPad","_destroyDialog","pad","i","copyPath","_hideLine","_applyCssClasses","toggle","addClass","removeAttr","close","_dialog","open","off","empty","toggleClass","renderButton","icon","insertAfter","_dialogEl","_value","_input","val","reset","attr","_ariaLabel","on","trigger","autocomplete","required","appendTo","remove","line","maximize","padOptions","then","hide","show","canvas","title","closable","keyCode","keys","ESC","cssProperties","registerPrefix","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.signature.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.drawing.js';\nimport './kendo.dialog.js';\nimport './kendo.html.button.js';\n\n(function () {\n\nwindow.kendo = window.kendo || {};\nwindow.kendo.inputs = window.kendo.inputs || {};\n(function (exports, kendoDrawing) {\n\n    var _a = kendoDrawing.util, elementOffset = _a.elementOffset, limitValue = _a.limitValue;\n\n    var Point = kendo.geometry.Point, Rect = kendo.geometry.Rect, transform = kendo.geometry.transform;\n    var noop = function () { };\n    var DECIMAL_DIGITS = 3;\n    var DEFAULT_COLOR = '#000';\n    var DEFAULT_BACKGROUND_COLOR = '#fff';\n    var DEFAULT_PRECISION = 1;\n    var DEFAULT_SAMPLING_RATE = 200; // Updates per second\n    var DEFAULT_STROKE_WIDTH = 1;\n    var DEFAULT_WIDTH = 750;\n    var DEFAULT_HEIGHT = 250;\n    var DEFAULT_SCALE = 1;\n    // Export images at maximized scale (3x) and 2x pixel density to cover HiDPI screens.\n    var DEFAULT_EXPORT_SCALE = 6;\n    var SignaturePad = /** @class */ (function () {\n        function SignaturePad(element, options) {\n            if (options === void 0) { options = {}; }\n            this.element = element;\n            this.lastMoveTime = 0;\n            this.options = Object.assign({\n                scale: DEFAULT_SCALE,\n                precision: DEFAULT_PRECISION,\n                samplingRate: DEFAULT_SAMPLING_RATE,\n                smooth: options.smooth !== false,\n                color: options.color || DEFAULT_COLOR,\n                backgroundColor: options.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n                strokeWidth: DEFAULT_STROKE_WIDTH,\n                onChange: noop,\n                onDraw: noop,\n                onDrawEnd: noop\n            }, options);\n            this.pathOptions = {\n                stroke: {\n                    color: this.options.color,\n                    width: this.options.strokeWidth,\n                    lineCap: 'round',\n                    lineJoin: 'round'\n                }\n            };\n            this.initSurface();\n            this.attachEvents();\n        }\n        SignaturePad.prototype.destroy = function () {\n            this.detachEvents();\n        };\n        SignaturePad.prototype.clear = function () {\n            this.rootGroup.clear();\n            this.path = null;\n        };\n        Object.defineProperty(SignaturePad.prototype, \"isDrawing\", {\n            get: function () {\n                return Boolean(this.points);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(SignaturePad.prototype, \"pathData\", {\n            get: function () {\n                var _a;\n                return (_a = this.path) === null || _a === void 0 ? void 0 : _a.toString(DECIMAL_DIGITS);\n            },\n            set: function (value) {\n                this.clear();\n                this.path = kendoDrawing.MultiPath.parse(value, this.pathOptions);\n                this.rootGroup.append(this.path);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        SignaturePad.prototype.loadImage = function (data, size) {\n            if (size === void 0) { size = []; }\n            if (!data) {\n                this.clear();\n                return;\n            }\n            var _a = this.size, width = _a[0], height = _a[1];\n            var contentWidth = width / this.options.scale;\n            var contentHeight = height / this.options.scale;\n            var importWidth = size[0] || contentWidth * DEFAULT_EXPORT_SCALE;\n            var importHeight = size[1] || contentHeight * DEFAULT_EXPORT_SCALE;\n            var scaleX = contentWidth / importWidth;\n            var scaleY = contentHeight / importHeight;\n            var scale = Math.min(scaleX, scaleY);\n            var img = new kendoDrawing.Image(data, new kendo.geometry.Rect([0, 0], [importWidth, importHeight]));\n            img.transform(transform().scale(scale, scale));\n            this.clear();\n            this.rootGroup.append(img);\n        };\n        SignaturePad.prototype.exportImage = function (options) {\n            var _a;\n            var _b = this.size, width = _b[0], height = _b[1];\n            var contentWidth = width / this.options.scale;\n            var contentHeight = height / this.options.scale;\n            var exportWidth = (options === null || options === void 0 ? void 0 : options.width) || contentWidth * DEFAULT_EXPORT_SCALE;\n            var exportHeight = (options === null || options === void 0 ? void 0 : options.height) || contentHeight * DEFAULT_EXPORT_SCALE;\n            var scaleX = exportWidth / contentWidth;\n            var scaleY = exportHeight / contentHeight;\n            var scale = Math.min(scaleX, scaleY);\n            var exportRect = new Rect([0, 0], [exportWidth, exportHeight]);\n            var exportGroup = new kendoDrawing.Group({\n                clip: kendoDrawing.Path.fromRect(exportRect)\n            });\n            var contentGroup = new kendoDrawing.Group({\n                transform: transform().scale(scale, scale)\n            });\n            var frame = kendoDrawing.Path.fromRect(exportRect, {\n                fill: {\n                    color: this.options.backgroundColor\n                }\n            });\n            exportGroup.append(frame);\n            exportGroup.append(contentGroup);\n            (_a = contentGroup.children).push.apply(_a, this.rootGroup.children);\n            return kendoDrawing.exportImage(exportGroup, Object.assign({\n                width: exportWidth,\n                height: exportHeight\n            }, options));\n        };\n        SignaturePad.prototype.resize = function () {\n            this.surface.resize(true);\n        };\n        SignaturePad.prototype.setOptions = function (options) {\n            Object.assign(this.options, options);\n            this.pathOptions.stroke.color = this.options.color;\n            this.pathOptions.stroke.width = this.options.strokeWidth;\n            if (this.path) {\n                this.path.options.set('stroke.color', this.options.color);\n                this.path.options.set('stroke.width', this.options.strokeWidth);\n            }\n            this.background.options.set('fill.color', this.options.backgroundColor);\n        };\n        SignaturePad.prototype.initSurface = function () {\n            this.surface = kendoDrawing.Surface.create(this.element, { type: 'canvas' });\n            this.element.style.touchAction = 'none';\n            var scale = this.options.scale;\n            this.rootGroup = new kendoDrawing.Group({\n                transform: transform().scale(scale, scale)\n            });\n            // The signature is not resizable, store initial dimensions.\n            var width = this.element.offsetWidth || DEFAULT_WIDTH;\n            var height = this.element.offsetHeight || DEFAULT_HEIGHT;\n            this.size = [width, height];\n            this.background = kendoDrawing.Path.fromRect(new Rect([0, 0], this.size), {\n                fill: {\n                    color: this.options.backgroundColor\n                }\n            });\n            this.surface.draw(this.background);\n            this.surface.draw(this.rootGroup);\n        };\n        SignaturePad.prototype.attachEvents = function () {\n            this.onPointerDown = this.onPointerDown.bind(this);\n            this.onPointerMove = this.onPointerMove.bind(this);\n            this.onPointerUp = this.onPointerUp.bind(this);\n            this.element.addEventListener('pointerdown', this.onPointerDown);\n            this.element.addEventListener('pointermove', this.onPointerMove);\n            this.element.addEventListener('pointerup', this.onPointerUp);\n        };\n        SignaturePad.prototype.detachEvents = function () {\n            this.element.removeEventListener('pointerdown', this.onPointerDown);\n            this.element.removeEventListener('pointermove', this.onPointerMove);\n            this.element.removeEventListener('pointerup', this.onPointerUp);\n        };\n        SignaturePad.prototype.touchPoint = function (e) {\n            var offset = elementOffset(this.element);\n            var pageX = e.pageX;\n            var pageY = e.pageY;\n            var scale = 1 / this.options.scale;\n            return new Point(pageX - offset.left, pageY - offset.top).scale(scale, scale);\n        };\n        SignaturePad.prototype.onPointerDown = function (e) {\n            if (this.options.readonly || !e.isPrimary || !isMainButton(e)) {\n                return;\n            }\n            if (!this.path) {\n                this.path = new kendoDrawing.MultiPath(this.pathOptions);\n                this.rootGroup.append(this.path);\n            }\n            this.options.onDraw();\n            this.element.setPointerCapture(e.pointerId);\n            var point = this.touchPoint(e);\n            this.points = [point];\n            this.path.moveTo(point);\n        };\n        SignaturePad.prototype.onPointerMove = function (e) {\n            if (!this.points || !e.isPrimary) {\n                return;\n            }\n            var now = (new Date()).getTime();\n            var elapsed = now - this.lastMoveTime;\n            var minTimeDelta = 1000 / limitValue(this.options.samplingRate, 1, 10000);\n            if (elapsed < minTimeDelta) {\n                return;\n            }\n            else {\n                this.lastMoveTime = now;\n            }\n            var point = this.touchPoint(e);\n            var lastPoint = this.points[this.points.length - 1];\n            var minDelta = 1 / limitValue(this.options.precision, 0.01, 100);\n            if (point.distanceTo(lastPoint) < minDelta) {\n                return;\n            }\n            this.points.push(point);\n            this.path.lineTo(point);\n        };\n        SignaturePad.prototype.onPointerUp = function (e) {\n            if (!e.isPrimary || !this.path || !this.points || this.options.readonly) {\n                return;\n            }\n            if (this.options.smooth) {\n                var segments = kendoDrawing.Path.curveFromPoints(this.points);\n                this.path.paths.splice(this.path.paths.length - 1, 1, segments);\n            }\n            this.points = null;\n            this.options.onDrawEnd();\n            this.options.onChange(this.pathData);\n        };\n        return SignaturePad;\n    }());\n    function isMainButton(e) {\n        return typeof (e.button) !== 'number' || e.button === 0;\n    }\n\n    exports.SignaturePad = SignaturePad;\n\n})(window.kendo.inputs.common = window.kendo.inputs.common || {}, window.kendo.drawing);\n\n\n})();\n\nconst __meta__ = {\n    id: \"signature\",\n    name: \"Signature\",\n    category: \"web\",\n    description: \"The Signature component ...\",\n    depends: [ \"core\", \"dialog\", \"html.button\", \"drawing\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        Dialog = kendo.ui.Dialog,\n        html = kendo.html,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        Pad = kendo.inputs.common.SignaturePad,\n        ns = \".kendoSignature\",\n        DEFAULT_BACKGROUND_COLOR = '#ffffff',\n        CHANGE = \"change\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CLICK = \"click\",\n        TABINDEX = \"tabindex\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_LABELLEDBY = \"aria-labelledby\";\n\n    var Signature = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            that._createElements(that.element, that.options.maximizable ? \"maxi\" : \"\", false, 1);\n            that._createInput();\n            that.wrapper = that.element;\n            if (!that.options.backgroundColor) {\n                that.options.backgroundColor = getComputedStyle(that.element[0]).backgroundColor || DEFAULT_BACKGROUND_COLOR;\n            }\n\n            that._createPad();\n            that._createDialogPad();\n            that._attachHandlers();\n            that._assignLabel();\n\n            if (that.options.value) {\n                that._pad.loadImage(that.options.value);\n                that._dialogPad.loadImage(that.options.value);\n            }\n\n            if (that.options.readonly) {\n                that.readonly();\n            }\n\n            if (!that.options.enable) {\n                that.enable(false);\n            }\n        },\n\n        options: {\n            name: \"Signature\",\n            color: \"#000000\",\n            enable: true,\n            fillMode: \"solid\",\n            hideLine: false,\n            label: \"\",\n            maximizable: true,\n            popupScale: 3,\n            readonly: false,\n            rounded: \"medium\",\n            size: \"medium\",\n            smooth: false,\n            strokeWidth: 1,\n            exportScale: 2,\n            value: \"\"\n        },\n\n        events: [ CHANGE, OPEN, CLOSE],\n\n        setOptions: function(options) {\n            var currentOptions = this.options;\n            var path;\n            var oldBtnClass = kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size);\n            var btns = this.element.add(this._dialogPadEl).find(\".\" + oldBtnClass);\n            var targets = $(this._pad.element).add(this._dialogPad.element);\n\n            btns.removeClass(oldBtnClass);\n            this._clearCssClasses(currentOptions);\n            this.element.removeClass(kendo.getValidCssClass(\"k-signature-\", \"size\", currentOptions.size));\n            kendo.deepExtend(currentOptions, options);\n            this.options = currentOptions;\n            this.element.width(currentOptions.width);\n            this.element.height(currentOptions.height);\n            this._dialogPadEl.width(currentOptions.width * currentOptions.popupScale);\n            this._dialogPadEl.height(currentOptions.height * currentOptions.popupScale);\n            path = this._pad.path;\n            this._destroyPad();\n            this._destroyDialog();\n            this._createPad();\n            this._createDialogPad();\n            copyPath(this._pad, path);\n            this.enable(currentOptions.enable);\n            this.readonly(currentOptions.readonly);\n            this._hideLine(this.element);\n            this._hideLine(this._dialogPadEl);\n            this._applyCssClasses(this.element);\n            this.element.find(\".k-signature-maximize\").toggle(currentOptions.maximizable);\n            this.element.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n            this.element.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n            btns.addClass(kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size));\n\n            targets.removeAttr(\"aria-label\");\n            this._assignLabel();\n        },\n\n        close: function() {\n            if (!this._dialog) {\n                return;\n            }\n            this._dialog.close();\n        },\n\n        open: function() {\n            if (!this.options.maximizable || !this._dialog) {\n                return;\n            }\n            this._dialog.open();\n        },\n\n        destroy: function() {\n            var that = this;\n            that._destroyPad();\n\n            that._destroyDialog();\n\n            that.element.off(ns);\n            that.element.empty();\n            Widget.fn.destroy.call(that);\n        },\n\n        enable: function(enable) {\n            var enable = enable !== false;\n            if (!enable) {\n                this._dialog.close();\n            }\n\n            this.element.find(\".k-button\").toggle(enable);\n            this.element.toggleClass(\"k-disabled\", !enable);\n            this._pad.options.readonly = !enable;\n            this._dialogPad.options.readonly = !enable;\n        },\n\n        readonly: function(toggle) {\n            var that = this;\n            var toggle = toggle !== false;\n\n            that._pad.options.readonly = toggle;\n            that._dialogPad.options.readonly = toggle;\n\n            var clearButton = that.element.find(\".k-signature-clear\");\n\n            if (!clearButton.length && !toggle) {\n                $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                    icon: \"x\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).insertAfter(that.element.find(\".k-signature-actions-bottom\"));\n\n                $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                    icon: \"x\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).insertAfter(that._dialogEl.find(\".k-signature-actions-bottom\"));\n            }\n\n            that.element.find(\".k-signature-clear\").toggle(!toggle);\n            that._dialogEl.find(\".k-signature-clear\").toggle(!toggle);\n        },\n\n        value: function(value) {\n            if (value !== undefined$1) {\n                this._value = value;\n                this._input.val(value);\n                this._pad.loadImage(value);\n            }\n\n            return this._value;\n        },\n\n        reset: function() {\n            this._dialogPad.clear();\n            this._pad.clear();\n            this._value = \"\";\n        },\n\n        _assignLabel: function() {\n            var targets = $(this._pad.element).add(this._dialogPad.element);\n\n            if (this.options.label) {\n                targets.attr(ARIA_LABEL, this.options.label);\n            } else {\n                this._ariaLabel(targets);\n            }\n\n            this.element.removeAttr(ARIA_LABELLEDBY);\n        },\n\n        _attachHandlers: function() {\n            var that = this;\n            that.element\n                .on(CLICK + ns, \".k-signature-clear\", function() {\n                    that.reset();\n                })\n                .on(CLICK + ns, \".k-signature-maximize\", function() {\n                    that._dialog.open();\n                    that._dialog.wrapper.find(\".k-signature-minimize\").trigger(\"focus\");\n                });\n        },\n\n        _createInput: function() {\n            var that = this;\n            var name = that.element.attr(\"name\");\n            var autocomplete = that.element.attr(\"autocomplete\");\n            var required = that.element.attr(\"required\");\n\n            that._input = $(\"<input class='k-hidden' aria-hidden='true'/>\").appendTo(that.element);\n\n            if (name) {\n                that._input.attr(\"name\", name);\n                that.element.removeAttr(\"name\");\n            }\n\n            if (autocomplete) {\n                that._input.attr(\"autocomplete\", autocomplete);\n                that.element.removeAttr(\"autocomplete\");\n            }\n\n            if (required) {\n                that._input.attr(\"required\", required);\n                that.element.removeAttr(\"required\");\n            }\n        },\n\n        _destroyPad: function() {\n            if (this._pad) {\n                kendo.destroy(this.element.find(\".k-signature-canvas\"));\n                this._pad = null;\n                this.element.find(\".k-signature-canvas\").empty();\n            }\n        },\n\n        _destroyDialog: function() {\n            if (this._dialogPad) {\n                this._dialogPad.destroy();\n                this._dialogPad = null;\n                this._dialogEl.off(ns);\n                this._dialog.destroy();\n                this._dialog = null;\n                this._dialogEl.remove();\n                this._dialogEl = null;\n            }\n        },\n\n        _hideLine: function(wrapper) {\n            var line = wrapper.find(\".k-signature-line\");\n            if (!this.options.hideLine && !line.length) {\n                $(\"<div class='k-signature-line'>\").appendTo(wrapper);\n            }\n\n            if (this.options.hideLine) {\n                line.remove();\n            }\n        },\n\n        _createElements: function(wrapper, button, maximize, scale) {\n            $(\"<div class='k-signature-canvas' role='img' tabindex='0'>\").appendTo(wrapper);\n\n            this._hideLine(wrapper);\n\n            $(\"<div class='k-signature-actions k-signature-actions-top'></div>\").appendTo(wrapper);\n\n            if (button == \"mini\") {\n                $(html.renderButton('<button class=\"k-signature-action k-signature-minimize k-rotate-180\" aria-label=\"Minimize signature\"></button>', {\n                    icon: \"hyperlink-open\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n            }\n\n            if (button == \"maxi\") {\n                $(html.renderButton('<button class=\"k-signature-action k-signature-maximize\" aria-label=\"Maximize signature\"></button>', {\n                    icon: \"hyperlink-open\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n            }\n\n            $(\"<div class='k-signature-actions k-signature-actions-bottom'></div>\").appendTo(wrapper);\n\n            if (!this.options.readonly) {\n                $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"  aria-label=\"Clear signature\"></button>', {\n                    icon: \"x\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).appendTo(wrapper.find(\".k-signature-actions-bottom\"));\n            }\n\n            wrapper.addClass(\"k-input k-signature\");\n\n            wrapper.width(this.options.width * scale);\n            wrapper.height(this.options.height * scale);\n\n            if (maximize) {\n                wrapper.addClass(\"k-signature-maximized\");\n            }\n\n            this._applyCssClasses(wrapper);\n            //workaround as the sizings are added to -signature- but roundings to -input-\n            wrapper.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n            wrapper.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n        },\n\n        _createPad: function() {\n            var that = this;\n            var padOptions = $.extend(true, {}, that.options, {\n                onChange: function() {\n                    var width = outerWidth(that.element, false);\n                    var height = outerHeight(that.element, false);\n                    that._pad.exportImage({\n                        width: width * that.options.exportScale,\n                        height: height * that.options.exportScale\n                    }).then(function(val) {\n                        that._value = val;\n                        that._input.val(val);\n                        that.trigger(CHANGE);\n                    });\n\n                    that._pad.exportImage({\n                        width: width * that.options.exportScale * that.options.popupScale,\n                        height: height * that.options.exportScale * that.options.popupScale\n                    }).then(function(val) {\n                        that._dialogPad.loadImage(val);\n                    });\n                },\n                onDraw: function() {\n                    that.element.find(\".k-button\").hide();\n                },\n                onDrawEnd: function() {\n                    that.element.find(\".k-button\").show();\n                }\n            });\n\n            that._pad = new Pad(that.element.find(\".k-signature-canvas\")[0], padOptions);\n        },\n\n        _createDialogPad: function() {\n            var that = this;\n            var canvas = null;\n\n            that._dialogEl = $(\"<div>\").appendTo(that.element);\n            that._dialog = new Dialog(that._dialogEl, {\n                title: false,\n                closable: false,\n                open: function() {\n                    that.trigger(OPEN);\n                },\n                close: function() {\n                    that.trigger(CLOSE);\n                }\n            });\n\n            that._dialogEl\n                .removeAttr(TABINDEX)\n                .on(\"keydown\", function(e) {\n                    if (e.keyCode === kendo.keys.ESC) {\n                        that._dialog.close();\n                    }\n                });\n\n            that._dialogPadEl = $(\"<div>\").appendTo(that._dialog.element);\n            that._createElements(that._dialogPadEl, \"mini\", true, this.options.popupScale);\n            canvas = that._dialogPadEl.find(\".k-signature-canvas\")[0];\n\n            that._dialogPad = new Pad(canvas, $.extend(true, {}, that.options, {\n                scale: that.options.popupScale,\n                onChange: function() {\n                    var width = outerWidth(that.element, false);\n                    var height = outerHeight(that.element, false);\n                    that._dialogPad.exportImage({\n                        width: width * that.options.exportScale,\n                        height: height * that.options.exportScale\n                    }).then(function(val) {\n                        that._pad.loadImage(val);\n                        that._value = val;\n                        that._input.val(val);\n                        that.trigger(CHANGE);\n                    });\n                },\n                onDraw: function() {\n                    that._dialogEl.find(\".k-button\").hide();\n                },\n                onDrawEnd: function() {\n                    that._dialogEl.find(\".k-button\").show();\n                }\n            }));\n\n            // Dialog should be opened at first for drawing to work\n            that._dialog.close();\n            that._dialogEl\n                .on(CLICK + ns, \".k-signature-clear\", function() {\n                    that.reset();\n                })\n                .on(CLICK + ns, \".k-signature-minimize\", function() {\n                    that._dialog.close();\n                });\n        }\n    });\n\n    function copyPath(pad, path) {\n        if (!path || !path.paths || !path.paths.length) {\n            return;\n        }\n        pad.path = new kendo.drawing.MultiPath(pad.pathOptions);\n        pad.rootGroup.append(pad.path);\n\n        for (var i = 0; i < path.paths.length; i++) {\n            pad.path.paths.push(path.paths[i]);\n        }\n        pad.options.onChange();\n    }\n\n    kendo.cssProperties.registerPrefix(\"Signature\", \"k-input-\");\n\n    kendo.ui.plugin(Signature);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}