{"version":3,"sources":["raw-mjs/kendo.pdfviewer.js"],"names":["download","SearchService","goToNextSearchMatch","goToPreviousSearchMatch","reloadDocument","currentPage","calculateZoomLevel","print","DEFAULT_ZOOM_LEVEL","Scroller","loadPDF","renderPage","scrollToPage","isLoaded","window","pdfjsLib","GlobalWorkerOptions","workerSrc","pdfjsWorker","console","error","$","kendo","extend","DPLProcessor","Class","init","options","viewer","that","this","read","upload","fetchDocument","deferred","Deferred","errorMessages","messages","ajax","type","url","dataType","success","data","stringify","resolve","JSON","parse","xhr","_triggerError","responseText","message","parseError","fetchPageData","number","page","document","pages","pageField","geometries","length","downloadFile","fileName","location","fromJSON","json","_clearPages","total","_renderPages","resize","activatePage","pdfviewer","dpl","processor","jQuery","pdfjs","lib","parseJSON","progress","ui","UploadHelper","_initUpload","uploadElement","extendUploadOptions","uploadOptions","select","_onSelect","bind","_onSuccess","_onError","complete","_onComplete","showFileList","multiple","validation","allowedExtensions","async","saveUrl","autoUpload","saveField","kendoUpload","getKendoUpload","pageContainer","e","response","isPlainObject","XMLHttpRequest","notSupported","fileToUpload","files","trigger","file","extension","toLowerCase","reader","FileReader","onload","target","result","fromFile","onerror","readAsArrayBuffer","rawFile","noop","drawing","Group","Surface","geometryTypes","Path","MultiPath","Rect","Image","Text","Page","pageNumber","element","attr","_updatePageSize","width","height","ratio","pageElement","Math","min","size","destroy","render","BlankPage","_externalDropZoneId","_uploadHelper","_upload","find","dropZone","DPLPage","draw","group","surface","_drawGeometries","load","loaded","then","_initSurface","surfaceOptions","view","kGeometry","i","geometry","_drawPath","_drawRect","_drawImage","_drawText","append","rectGeo","point","transform","_getMatrix","fill","fillOptions","stroke","strokeOptions","imageRect","src","font","content","path","paths","subPath","segments","moveTo","apply","j","segment","points","lineTo","curveTo","closed","close","matrix","Object","create","Matrix","prototype","Command","OpenCommand","fn","call","exec","click","PageChangeCommand","current","targetPage","value","isNaN","_pageNum","numPages","Number","DownloadCommand","notFound","info","title","defaultFileName","_isDPLProcessor","pdf","blob","saveOptions","ExportCommand","dialog","_saveDialog","_initDialog","_updateModel","pagesCount","open","viewModel","exportImage","exportSVG","dialogs","ExportAsDialog","EnableSelectionCommand","_toggleSelection","EnablePanCommand","OpenSearchCommand","searchDialog","SearchDialog","pageContainerWrapper","position","top","offset","left","search","_open","next","_next","prev","_prev","_close","searchService","Promise","all","_loadAllPages","textContainers","get","changeHandler","_change","searchModel","toolbar","unbind","matches","matchIndex","_updateSearchModel","ev","text","matchCase","field","pdfScroller","scroller","model","set","_closeDialog","ZoomCommand","scale","processingLib","_calculateZoom","zoomScale","_setPageContainerScaleFactor","pdfDoc","zoom","dom","rootElement","loadOnDemand","done","pdfPages","currentPageIndex","_pageRenderPromise","_triggerZoomEnd","preventZoom","viewerOptions","scaleValue","_allowResize","_autoFit","zoomIn","zoomRate","zoomOut","_autoZoomScale","parseFloat","toString","match","parseInt","replace","zoomMin","zoomMax","updateComboBox","_updateZoomComboBox","PrintCommand","onPrintComplete","onPrintError","popupBlocked","encode","htmlEncode","Draggable","outerWidth","_outerWidth","EXTENSIONS","keys","ErrorDialog","actions","okText","_dialog","kendoDialog","getKendoDialog","center","fileFormats","description","exportAsDialog","png","svg","_initializeDialog","autoFocus","resizable","modal","preventScroll","maxWidth","template","labels","saveAsType","save","cancel","dialogMessages","kendoWindow","getKendoWindow","observable","name","dragHandle","icon","iconClass","inputLabel","of","previous","_showSearchDialog","_hideSearchDialog","css","innerWidth","kendoStop","kendoAnimate","effects","direction","fade","duration","properties","hide","dialogElm","prepend","_draggable","filter","axis","dragstart","wnd","containment","startPosition","x","client","getOffset","_innerWidth","clientWidth","support","scrollbar","maxLeft","drag","indexOf","max","userEvents","stopPropagation","boundValue","searchText","matchCaseClick","onKeyup","key","keyCode","navigationFn","shiftKey","ENTER","preventDefault","ESC","onInput","__meta__","id","category","depends","NS","PLUS","MINUS","ZERO","NUMPAD_ZERO","Widget","SCROLL","RENDER","ERROR","KEYDOWN","MOUSEWHEEL","UPDATE","PAGE_CHANGE","ZOOMCOMMAND","CHANGE","DISABLED","PROCESSORS","styles","PREDEFINED_ZOOM_VALUES","PDFViewer","deepExtend","_processMessages","_wrapper","_renderToolbar","_initProcessor","_renderPageContainer","_loadDPLDocument","_loadPdfJSDocument","notify","_showWatermarkOverlay","wrapper","events","pdfjsProcessing","dplProcessing","items","defaultPageSize","zoomLevel","actualWidth","autoWidth","fitToWidth","fitToPage","exportAs","toggleSelection","togglePan","defaultTools","pager","overflow","component","componentOptions","navigatable","_isToolbarItem","spacer","zoomInOut","fillMode","buttons","command","showText","enable","dataTextField","dataValueField","valuePrimitive","clearOnEscape","commandOn","togglable","selected","spacer2","exportAsTool","addClass","on","_keydown","_resizeHandler","onResize","plusShortcuts","NUMPAD_PLUS","minusShortcuts","NUMPAD_MINUS","zeroShortcuts","shouldExecute","args","ctrlKey","_blankPage","includes","execute","_handlePageChangeEvent","event","_pageChangeFromScroll","index","_showPagerInputLabels","inputElements","children","eq","add","is","show","_resizePager","responsive","pagerWidth","visibleToolbarItems","Array","from","containerWidth","visibleToolsWidth","gap","temp","elementsToShrink","hidden","removeClass","input","processingOptions","_hasPagerTool","tools","hasPager","tool","toolbarOptions","_processTools","pagerMessages","currentPagerOptions","parentMessages","toolbarElement","appendTo","ToolBar","_toolbarClick","update","_updateToolbar","flatMap","t","zoomLevels","percent","comboOptions","map","concat","dataSource","pageOptions","toolbarEl","zoomCombo","toFocus","first","_getAllItems","isBlank","action","updatePager","pageChangeFromScroll","_updatePager","_updateOnBlank","_resetTabIndex","parent","pagerDataSource","DataSource","pageSize","setDataSource","_togglePagerDisabledClass","totalPages","hasClass","isPredefined","round","currentTarget","val","_initErrorDialog","_errorDialog","dialogInstance","style","setProperty","pagesData","viewerPage","pageData","push","_attachContainerEvents","_getVisiblePagesCount","_renderBlankPage","_resize","clearTimeout","setTimeout","_resizePages","forEach","pageWidth","_pageInfo","emptyPage","currentRatio","_wheel","throttle","activeElement","_scroll","_onDemandScroll","pageToLoadNum","containerHeight","pageNum","pageIndex","_preventScroll","_scrollingStarted","nextPageIndex","_loadVisiblePages","loadPage","originalEvent","wheelDelta","detail","preventComboBoxChange","commandOptions","parentNode","enablePanEventsTracking","ArrayBuffer","arrayBuffer","loadOnDemandPageSize","notFoundError","alertMessage","_setPageNumberAttributes","each","el","preventTrigger","intervalId","setInterval","rendered","renderInProgress","clearInterval","_scrollToActivatedPage","loadedPagesHeight","updatedVisiblePagesCount","clientHeight","_visiblePagesCount","minVisiblePageNum","maxVisiblePageNum","_visiblePages","slice","promises","_updateDocument","rootGroup","background","fromRect","color","saveAs","dataURI","proxyURL","forceProxy","proxyTarget","setOptions","unbindResize","off","empty","disablePanEventsTracking","toggleClass","plugin","kendo$1"],"mappings":"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","file":"kendo.pdfviewer.js","sourcesContent":["import './kendo.mobile.scroller.js';\nimport './kendo.toolbar.js';\nimport './kendo.pager.js';\nimport './kendo.combobox.js';\nimport './kendo.textbox.js';\nimport './kendo.core.js';\nimport './kendo.drawing.js';\nimport './kendo.upload.js';\nimport { d as download, S as SearchService, g as goToNextSearchMatch, a as goToPreviousSearchMatch, r as reloadDocument, c as currentPage, b as calculateZoomLevel, p as print, D as DEFAULT_ZOOM_LEVEL, e as Scroller, l as loadPDF, f as renderPage, s as scrollToPage } from './kendo.pdfviewer-common.cmn.chunk.js';\nimport './kendo.dialog.js';\nimport './kendo.window.js';\nimport './kendo.binder.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.icons.js';\nimport './kendo.draganddrop.js';\nimport './kendo.pdfjs.loader.js';\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        Class = kendo.Class;\n\n    var DPLProcessor = Class.extend({\n        init: function(options, viewer) {\n            var that = this;\n\n            that.options = options;\n            that.read = options.read;\n            that.upload = options.upload;\n            that.download = options.download;\n\n            that.viewer = viewer;\n        },\n        fetchDocument: function() {\n            var that = this,\n                deferred = $.Deferred(),\n                errorMessages = that.viewer.options.messages.errorMessages;\n\n            if (!that.read) {\n                return deferred.resolve();\n            }\n\n            $.ajax({\n                type: that.read.type,\n                url: that.read.url,\n                dataType: that.read.dataType,\n                success: function(data) {\n                    if (typeof data != \"string\") {\n                        data = kendo.stringify(data);\n                    }\n                    deferred.resolve(JSON.parse(data));\n                },\n                error: function(xhr) {\n                    that.viewer._triggerError({\n                        error: xhr.responseText,\n                        message: errorMessages.parseError\n                    });\n                }\n            });\n\n            return deferred;\n        },\n        fetchPageData: function(number) {\n            var that = this;\n            var deferred = $.Deferred();\n            var page = that.viewer.document.pages[number - 1];\n            var data = {};\n            data[that.read.pageField] = number;\n\n            if (!page.geometries.length) {\n                $.ajax({\n                    type: that.read.type,\n                    url: that.read.url,\n                    data: data,\n                    success: function(data) {\n                        deferred.resolve(JSON.parse(data));\n                    },\n                    error: function(xhr) {\n                        that.viewer._triggerError({\n                            error: xhr.responseText,\n                            message: that.viewer.options.messages.errorMessages.parseError\n                        });\n                    }\n                });\n            } else {\n                deferred.resolve(page);\n            }\n\n            return deferred;\n        },\n        downloadFile: function(fileName) {\n            window.location = this.download.url + \"?file=\" + fileName;\n        },\n\n        fromJSON: function(json)\n        {\n            var viewer = this.viewer;\n            viewer._clearPages();\n\n            viewer.document = json;\n            viewer.document.total = viewer.document.pages.length;\n\n            viewer._renderPages();\n            viewer.resize(true);\n\n            viewer.activatePage(1);\n        }\n    });\n\n    extend(kendo, {\n        pdfviewer: {\n            dpl: {\n                processor: DPLProcessor\n            }\n        }\n    });\n})(window.kendo.jQuery);\n\n/* eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\n\nfunction isLoaded() {\n    if (!window.pdfjsLib) {\n        console?.error(`PDF.JS library is required. Make sure that it is properly loaded <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.3.136/pdf.mjs\" type=\"module\"></script>`);\n        return false;\n    }\n\n    if (!window.pdfjsLib?.GlobalWorkerOptions?.workerSrc && !window.pdfjsWorker) {\n        console?.error(`The pdf.worker.mjs script is not loaded. The PDF.JS library will not work correctly.\n    Either load the script:\n    \n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.3.136/pdf.worker.mjs\" type=\"module\"></script>\n    \n    Or set it to the GlobalWorkerOptions.workerSrc property:\n    \n    <script type=\"module\">\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.3.136/pdf.worker.mjs';\n    </script>`);\n    return false;\n    }\n\n    return true;\n}\n\nkendo.pdfviewer.pdfjs = { lib: window.pdfjsLib };\n\n(function($, undefined$1) {\n    var Class = kendo.Class,\n        extend = $.extend,\n        parseJSON = JSON.parse,\n        progress = kendo.ui.progress,\n        Class = kendo.Class,\n        OPEN = \"open\";\n\n    var UploadHelper = Class.extend({\n        init: function(viewer) {\n            this.viewer = viewer;\n            this.errorMessages = this.viewer.options.messages.errorMessages;\n            this.upload = this.viewer.processor && this.viewer.processor.upload;\n        },\n        _initUpload: function(uploadElement, extendUploadOptions) {\n            var uploadOptions = extend({\n                select: this._onSelect.bind(this),\n                success: this._onSuccess.bind(this),\n                error: this._onError.bind(this),\n                complete: this._onComplete.bind(this),\n                showFileList: false,\n                multiple: false,\n                validation: {\n                    allowedExtensions: [\".pdf\"]\n                }\n            }, extendUploadOptions || {});\n\n            if (this.upload) {\n                extend(uploadOptions, {\n                    async: {\n                        saveUrl: this.upload.url,\n                        autoUpload: true,\n                        saveField: this.upload.saveField\n                    }\n                });\n            }\n\n            var upload = (uploadElement || $('<input name=\"files\" accept=\".pdf\" type=\"file\" />')).kendoUpload(uploadOptions).getKendoUpload();\n\n            return upload;\n        },\n        _onComplete: function() {\n            progress(this.viewer.pageContainer, false);\n        },\n        _onSuccess: function(e) {\n            var json = parseJSON(e.response);\n\n            if ($.isPlainObject(json)) {\n                this.viewer.processor.fromJSON(json);\n            }\n            else {\n                this.viewer._triggerError({\n                    error: json,\n                    message: this.errorMessages.parseError\n                });\n            }\n        },\n        _onError: function(e) {\n            this.viewer._triggerError({\n                error: e.XMLHttpRequest.responseText,\n                message: this.errorMessages.notSupported\n            });\n        },\n        _onSelect: function(e) {\n            var that = this;\n            var fileToUpload = e.files[0];\n\n            progress(that.viewer.pageContainer, true);\n\n            if (that.viewer.trigger(OPEN, { file: fileToUpload }) || that.upload) {\n                return;\n            } else if (fileToUpload.extension.toLowerCase() !== \".pdf\") {\n                that.viewer._triggerError({\n                    error: fileToUpload,\n                    message: that.errorMessages.notSupported\n                });\n                return;\n            }\n\n            var reader = new FileReader();\n            reader.onload = function(e) {\n                var document = e.target.result;\n                that.viewer.fromFile(document);\n            };\n            reader.onerror = function() {\n                that.viewer._triggerError({\n                    error: fileToUpload,\n                    message: that.errorMessages.parseError\n                });\n            };\n\n            reader.readAsArrayBuffer(fileToUpload.rawFile);\n        }\n    });\n\n    extend(kendo.pdfviewer, {\n        UploadHelper: UploadHelper\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var extend = $.extend,\n        noop = $.noop,\n        drawing = kendo.drawing,\n        Group = drawing.Group,\n        Surface = drawing.Surface,\n        RENDER = \"render\",\n        Class = kendo.Class,\n        UploadHelper = kendo.pdfviewer.UploadHelper,\n\n        DEFAULT_DPR = 2;\n\n    var geometryTypes = {\n        Path: \"path\",\n        MultiPath: \"multipath\",\n        Rect: \"rect\",\n        Image: \"image\",\n        Text: \"text\"\n    };\n\n    var BLANK_PAGE_TEMPLATE = (dropzoneId) => `<div class=\"k-page k-blank-page\">\n        <div id=\"${dropzoneId}\" class=\"k-external-dropzone\">\n            <div class=\"k-dropzone-inner\">\n                <span class=\"k-dropzone-icon k-icon k-svg-icon k-icon-xxxl k-svg-i-upload\">\n                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                        <path d=\"M32 384v96h448v-96H32zm192-64h64V192h96L256 32 128 192h96v128z\"></path>\n                    </svg>\n                </span>\n                <span class=\"k-dropzone-hint\">Drag and drop files here to upload</span>\n            </div>\n        </div>\n        <input name=\"files\" accept=\".pdf\" type=\"file\" ref-pdfviewer-blank-page-upload>\n    </div>`;\n\n    var Page = Class.extend({\n        init: function(options, viewer) {\n            this.viewer = viewer;\n            this.processor = options.processor;\n            this.options = options;\n            this.pageNumber = options.number;\n\n            this.element = $(\"<div class='k-page' />\");\n            this.element.attr(kendo.attr(\"number\"), this.pageNumber);\n\n            this._updatePageSize(options);\n            this.width = options.width;\n            this.height = options.height;\n        },\n        resize: function(ratio) {\n            var pageElement = this.element;\n\n            this._updatePageSize({\n                width: Math.min(pageElement.width() * ratio, this.width),\n                height: Math.min(pageElement.height() * ratio, this.height)\n            });\n        },\n        _updatePageSize: function(size) {\n            this.element\n                    .width(size.width)\n                    .height(size.height);\n        },\n        destroy: function() {\n            kendo.destroy(this.element);\n        },\n        render: noop\n    });\n\n    var BlankPage = Page.extend({\n        init: function(options, viewer) {\n            this.viewer = viewer;\n            this.options = options;\n            this._externalDropZoneId = `${viewer.element.attr(\"id\")}-external-dropzone`;\n            this.element = $(BLANK_PAGE_TEMPLATE(this._externalDropZoneId));\n            this._uploadHelper = new UploadHelper(viewer);\n        },\n        _initUpload: function() {\n            this._upload = this._uploadHelper._initUpload(this.element.find(\"input[ref-pdfviewer-blank-page-upload]\"), {\n                dropZone: `#${this._externalDropZoneId}`,\n                showFileList: false,\n                async: {\n                    autoUpload: false,\n                    saveUrl: \"save\"\n                }\n            });\n        },\n        resize: noop,\n        _updatePageSize: noop,\n        destroy: function() {\n            if (this._upload) {\n                this._upload.destroy();\n            }\n\n            kendo.destroy(this.element);\n        },\n        render: noop\n    });\n\n    var DPLPage = Page.extend({\n        draw: function() {\n            var that = this,\n                geometries = that.options.geometries;\n\n            that.group = new Group();\n            that.surface.draw(that.group);\n\n            that._drawGeometries(geometries);\n\n            that.viewer.trigger(RENDER, { page: this });\n            kendo.ui.progress(that.element, false);\n        },\n        load: function() {\n            var that = this;\n\n            if (that.loaded || !that.processor)\n            {\n                return;\n            }\n\n            that.processor.fetchPageData(that.pageNumber).then(function(data) {\n                that.options = data;\n                that._initSurface();\n                that.draw();\n            });\n\n            that.loaded = true;\n        },\n        _initSurface: function() {\n            var size = {\n                width: this.element.width(),\n                height: this.element.height()\n            };\n            var surfaceOptions = extend({ width: this.width, height: this.height }, this.viewer.options.view);\n            this.surface = new Surface(this.element, surfaceOptions);\n            this._updatePageSize(size);\n        },\n        _drawGeometries: function(geometries) {\n            var that = this,\n                kGeometry;\n\n            if (!geometries) {\n                return;\n            }\n\n            for (var i = 0; i <= geometries.length; i++) {\n                var geometry = geometries[i];\n\n                if (!geometry) {\n                    continue;\n                }\n\n                switch (geometry.type) {\n                    case geometryTypes.Path:\n                    case geometryTypes.MultiPath:\n                        kGeometry = that._drawPath(geometry);\n                        break;\n                    case geometryTypes.Rect:\n                        kGeometry = that._drawRect(geometry);\n                        break;\n                    case geometryTypes.Image:\n                        kGeometry = that._drawImage(geometry);\n                        break;\n                    case geometryTypes.Text:\n                        kGeometry = that._drawText(geometry);\n                        break;\n                    default:\n                        kGeometry = null;\n                        break;\n                }\n\n                if (kGeometry)\n                {\n                    that.group.append(kGeometry);\n                }\n            }\n        },\n        _drawRect: function(geometry)\n        {\n            var rectGeo = new kendo.geometry.Rect(geometry.point, geometry.size);\n\n            return new drawing.Rect(rectGeo, {\n                transform: this._getMatrix(geometry.transform),\n                fill: geometry.fillOptions,\n                stroke: geometry.strokeOptions\n            });\n        },\n\n        _drawImage: function(geometry)\n        {\n            var imageRect = new kendo.geometry.Rect(geometry.point, geometry.size);\n            return new drawing.Image(geometry.src, imageRect, {\n                transform: this._getMatrix(geometry.transform)\n            });\n        },\n\n        _drawText: function(geometry)\n        {\n            var options = {\n                transform: this._getMatrix(geometry.transform),\n                stroke: geometry.strokeOptions,\n                fill: geometry.fillOptions,\n                font: geometry.font\n            };\n            return new kendo.drawing.Text(geometry.content, geometry.point, options);\n        },\n\n        _drawPath: function(geometry)\n        {\n            var options = {\n                transform: this._getMatrix(geometry.transform),\n                stroke: geometry.strokeOptions,\n                fill: geometry.fillOptions\n            };\n            var path = new drawing.MultiPath(options);\n\n            for (var i = 0; i < geometry.paths.length; i++) {\n                var subPath = geometry.paths[i];\n\n                if (!subPath.segments)\n                {\n                    return;\n                }\n\n                path.moveTo.apply(path, subPath.point);\n\n                for (var j = 0; j < subPath.segments.length; j++) {\n                    var segment = subPath.segments[j];\n                    var drawAction = segment.points.length === 1 ? path.lineTo : path.curveTo;\n                    drawAction.apply(path, segment.points);\n                }\n\n                if (subPath.closed) {\n                    path.close();\n                }\n            }\n\n            return path;\n        },\n\n        _getMatrix: function(transform) {\n            var matrix = Object.create(kendo.geometry.Matrix.prototype);\n            kendo.geometry.Matrix.apply(matrix, transform);\n            return matrix;\n        }\n    });\n\n    extend(kendo.pdfviewer.dpl, {\n        geometryTypes: geometryTypes,\n        Page: DPLPage\n    });\n    extend(kendo.pdfviewer, {\n        BlankPage: BlankPage\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        parseJSON = JSON.parse,\n        progress = kendo.ui.progress,\n        Class = kendo.Class,\n        UploadHelper = kendo.pdfviewer.UploadHelper,\n        OPEN = \"open\",\n        ZOOMSTART = \"zoomStart\",\n        ZOOMEND = \"zoomEnd\";\n\n    var Command = Class.extend({\n        init: function(options) {\n            this.options = options;\n            this.viewer = options.viewer;\n            this.errorMessages = this.viewer.options.messages.errorMessages;\n        }\n    });\n\n    var OpenCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n            this._uploadHelper = new UploadHelper(this.viewer);\n        },\n        exec: function() {\n            this.viewer._upload = this.viewer._upload || this._uploadHelper._initUpload();\n            this.viewer._upload.element.click();\n        },\n    });\n\n    var PageChangeCommand = Command.extend({\n        exec: function() {\n            var targetPage = this.options.value,\n                viewer = this.viewer,\n                current, total;\n\n            if (isNaN(targetPage)) {\n                current = viewer._pageNum;\n                total = viewer.document.total || viewer.document.numPages;\n\n                switch (targetPage) {\n                    case \"first\": targetPage = 1;\n                        break;\n                    case \"prev\": targetPage = current > 1 ? current - 1 : 1;\n                        break;\n                    case \"next\": targetPage = current < total ? current + 1 : total;\n                        break;\n                    case \"last\": targetPage = total;\n                        break;\n                }\n            } else {\n                targetPage = Number(targetPage);\n            }\n\n            viewer.activatePage(targetPage, false);\n        }\n    });\n\n    var DownloadCommand = Command.extend({\n        exec: function() {\n            const that = this;\n            if (!that.viewer.document) {\n                that.viewer._triggerError({\n                    message: that.errorMessages.notFound\n                });\n                return;\n            }\n\n            const fileName = (that.viewer.document.info && that.viewer.document.info.title) ||\n            that.viewer.options.messages.defaultFileName;\n\n            if (that.viewer._isDPLProcessor()) {\n                that.viewer.processor.downloadFile(fileName);\n            } else {\n                download(\n                    { pdf: this.viewer.document, error: (e) => { that.viewer._triggerError({ message: e.message }); } },\n                    fileName,\n                    {},\n                    (blob, fileName, saveOptions) => false\n                );\n            }\n        }\n    });\n\n    var ExportCommand = Command.extend({\n        init: function(options) {\n            options = $.extend(options, this.options);\n            Command.fn.init.call(this, options);\n        },\n        exec: function() {\n            var dialog = (this.viewer._saveDialog || this._initDialog());\n\n            dialog._updateModel({\n                pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                page: this.viewer.options.page\n            });\n\n            dialog.open();\n        },\n        apply: function(viewModel) {\n            var extension = viewModel.extension;\n\n            if (extension === \".png\") {\n                this.viewer.exportImage(viewModel);\n            } else if (extension === \".svg\") {\n                this.viewer.exportSVG(viewModel);\n            }\n        },\n        _initDialog: function() {\n            this.viewer._saveDialog = new kendo.pdfviewer.dialogs.ExportAsDialog({\n                apply: this.apply.bind(this),\n                pagesCount: (this.viewer.document && this.viewer.document.total) || 1,\n                messages: this.viewer.options.messages\n            });\n            return this.viewer._saveDialog;\n        }\n    });\n\n    var EnableSelectionCommand = Command.extend({\n        exec: function() {\n            var that = this,\n                viewer = that.viewer;\n\n                viewer._toggleSelection(true);\n        }\n    });\n\n    var EnablePanCommand = Command.extend({\n        exec: function() {\n            var that = this,\n                viewer = that.viewer;\n\n                viewer._toggleSelection(false);\n        }\n    });\n\n    const OpenSearchCommand = Command.extend({\n        init: function(options) {\n            const that = this;\n\n            that.viewer = options.viewer;\n\n            if (!that.viewer.searchDialog) {\n                that.viewer.searchDialog = new kendo.pdfviewer.dialogs.SearchDialog({\n                    pageContainer: that.viewer.pageContainerWrapper,\n                    position: {\n                        top: that.viewer.pageContainer.offset().top,\n                        left: that.viewer.pageContainer.offset().left\n                    },\n                    messages: that.viewer.options.messages.dialogs.search,\n                    open: that._open.bind(that),\n                    next: that._next.bind(that),\n                    prev: that._prev.bind(that),\n                    close: that._close.bind(that)\n                });\n            }\n\n            Command.fn.init.call(that, options);\n        },\n        exec: function() {\n            const that = this;\n\n            that.viewer.searchDialog.open();\n        },\n        _open: function() {\n            const that = this;\n\n            if (!that.searchService) {\n                Promise.all(that.viewer._loadAllPages()).then(() => {\n                    // Pages, On success, On error\n                    that.searchService = new SearchService({\n                        textContainers: that.viewer.pageContainer.find('.k-text-layer').get() || []\n                    });\n\n                    that.changeHandler = that._change.bind(that);\n                    that.viewer.searchDialog.searchModel.bind(\"change\", that.changeHandler);\n                });\n            }\n        },\n        _close: function() {\n            const that = this;\n            that.searchService.destroy();\n            that.searchService = null;\n            that.viewer.toolbar.element.find(\"[tabindex=0]\").trigger(\"focus\");\n            that.viewer.searchDialog.searchModel.unbind(\"change\", that.changeHandler);\n            that.matches = [];\n            that.matchIndex = null;\n            that._updateSearchModel();\n        },\n        _change: function(ev) {\n            const that = this,\n                text = that.viewer.searchDialog.searchModel[\"searchText\"],\n                matchCase = that.viewer.searchDialog.searchModel[\"matchCase\"];\n\n            if (ev.field === \"searchText\" || ev.field === \"matchCase\") {\n                that.matches = that.searchService.search({ text: text, matchCase: matchCase });\n                that.matchIndex = that.matches.length ? 1 : 0;\n                that._updateSearchModel();\n            }\n        },\n        _next: function() {\n            const that = this,\n                pdfScroller = that.viewer.pdfScroller;\n\n            goToNextSearchMatch({ search: that.searchService, scroller: pdfScroller });\n            that.matchIndex = that.matchIndex + 1 > that.matches.length ? 1 : that.matchIndex + 1;\n            that._updateSearchModel();\n        },\n        _prev: function() {\n            const that = this,\n                pdfScroller = that.viewer.pdfScroller;\n\n            goToPreviousSearchMatch({ search: that.searchService, scroller: pdfScroller });\n            that.matchIndex = that.matchIndex - 1 < 1 ? that.matches.length : that.matchIndex - 1;\n            that._updateSearchModel();\n        },\n        _updateSearchModel: function() {\n            const that = this,\n                model = that.viewer.searchDialog.searchModel;\n\n            if (that.matches && that.matches.length) {\n                model.set(\"matches\", that.matches.length);\n                model.set(\"matchIndex\", that.matchIndex);\n            } else {\n                model.set(\"searchText\", \"\");\n                model.set(\"matches\", 0);\n                model.set(\"matchIndex\", 0);\n            }\n        },\n        _closeDialog: function() {\n            const that = this;\n            that.viewer.searchDialog.close();\n        }\n    });\n\n    var ZoomCommand = Command.extend({\n        exec: function() {\n            const that = this,\n                options = that.options,\n                viewer = that.viewer;\n            let scale = options.value || options.scale;\n\n            if (viewer.processingLib === \"dpl\") {\n                return;\n            }\n\n            scale = that._calculateZoom();\n\n            if (!scale) {\n                return;\n            }\n\n            viewer.zoomScale = scale;\n\n            viewer._setPageContainerScaleFactor(scale);\n\n            if (that.viewer.document) {\n                reloadDocument({\n                    pdfDoc: viewer.document,\n                    zoom: scale,\n                    dom: viewer.pageContainer[0],\n                    rootElement: viewer.element[0],\n                    loadOnDemand: true,\n                    done: (pdfPages) => {\n                        const currentPageIndex = currentPage(viewer.element[0]);\n                        viewer._pageRenderPromise(pdfPages[currentPageIndex], true);\n                        that._triggerZoomEnd(scale);\n                    },\n                    error: (e) => {\n                        that._triggerZoomEnd(scale);\n                    }\n                });\n            }\n        },\n\n        _calculateZoom: function() {\n            var options = this.options,\n                viewer = this.viewer,\n                viewerOptions = viewer.options,\n                pageContainer = viewer.pageContainer,\n                scale = options.value || options.scale,\n                scaleValue = scale,\n                preventZoom;\n\n            viewer._allowResize = false;\n            viewer._autoFit = false;\n\n            if (options.zoomIn) {\n                scaleValue = scale = viewer.zoomScale + viewerOptions.zoomRate;\n            } else if (options.zoomOut) {\n                scaleValue = scale = viewer.zoomScale - viewerOptions.zoomRate;\n            } else if (scale === \"auto\") {\n                viewer._allowResize = true;\n                scaleValue = viewer._autoZoomScale;\n            } else if (typeof scale === \"string\" && !kendo.parseFloat(scale)) {\n                scaleValue = calculateZoomLevel(0, scale, viewer.zoomScale, pageContainer[0]);\n            } else if (scale && scale.toString().match(/^[0-9]+%?$/)) {\n                scale = parseInt(scale.replace('%', ''), 10) / 100;\n                scaleValue = scale;\n            } else {\n                preventZoom = isNaN(scale);\n            }\n\n            if (!preventZoom) {\n                preventZoom = scale < viewerOptions.zoomMin || scale > viewerOptions.zoomMax;\n            }\n\n            if (preventZoom || viewer.trigger(ZOOMSTART, { scale: scale })) {\n                return;\n            }\n\n            if (options.updateComboBox && viewer.toolbar)\n            {\n                viewer._updateZoomComboBox(scale);\n            }\n\n            return scaleValue;\n        },\n\n        _triggerZoomEnd: function(scale) {\n            var that = this,\n                viewer = that.viewer;\n\n            viewer.trigger(ZOOMEND, { scale: scale });\n        }\n    });\n\n    var PrintCommand = Command.extend({\n        init: function(options) {\n            Command.fn.init.call(this, options);\n        },\n        exec: function() {\n            const that = this;\n\n             if (!that.viewer.document) {\n                that.viewer._triggerError({\n                    message: this.errorMessages.notFound\n                });\n                return;\n            }\n\n            progress(that.viewer.pageContainer, true);\n            Promise.all(that.viewer._loadAllPages()).then(() => {\n                // Pages, On success, On error\n                print(that.viewer.pages, that.onPrintComplete.bind(that), that.onPrintError.bind(that));\n            });\n        },\n        onPrintComplete: function() {\n            const that = this;\n            progress(that.viewer.pageContainer, false);\n        },\n        onPrintError: function() {\n            const that = this;\n            progress(that.viewer.pageContainer, false);\n\n            that.viewer._triggerError({\n                message: that.errorMessages.popupBlocked\n            });\n        }\n    });\n\n    extend(kendo.pdfviewer, {\n        OpenCommand: OpenCommand,\n        PageChangeCommand: PageChangeCommand,\n        DownloadCommand: DownloadCommand,\n        EnableSelectionCommand: EnableSelectionCommand,\n        EnablePanCommand: EnablePanCommand,\n        ExportCommand: ExportCommand,\n        PrintCommand: PrintCommand,\n        OpenSearchCommand: OpenSearchCommand,\n        ZoomCommand: ZoomCommand\n    });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n        Class = kendo.Class,\n        Draggable = kendo.ui.Draggable,\n        outerWidth = kendo._outerWidth,\n        EXTENSIONS = {\n            svg: \".svg\",\n            png: \".png\"\n        },\n        keys = kendo.keys;\n\n    var ErrorDialog = Class.extend({\n        init: function(options) {\n            this.options = extend(options, {\n                actions: [{\n                    text: options.messages.dialogs.okText\n                }]\n            });\n            this._dialog = $(\"<div />\")\n                    .kendoDialog(this.options)\n                    .getKendoDialog();\n        },\n        open: function() {\n            this._dialog.center().open();\n        }\n    });\n\n    var ExportAsDialog = Class.extend({\n        init: function(options) {\n            this.options = extend(options, this.options, {\n                fileFormats: [{\n                    description: options.messages.dialogs.exportAsDialog.png,\n                    extension: EXTENSIONS.png\n                }, {\n                    description: options.messages.dialogs.exportAsDialog.svg,\n                    extension: EXTENSIONS.svg\n                }],\n                title: options.messages.dialogs.exportAsDialog.title,\n                open: function() {\n                    this.center();\n                }\n            });\n            this._initializeDialog();\n            return this;\n        },\n        options: {\n            extension: EXTENSIONS.png,\n            autoFocus: true,\n            resizable: false,\n            modal: {\n                preventScroll: true\n            },\n            width: \"90%\",\n            maxWidth: 520,\n            template: ({ messages, total }) =>\n                `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.fileName)}:</label></div>` +\n                \"<div class='k-edit-field'>\" +\n                    \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input class='k-input-inner' data-bind='value: name' /></span>\" +\n                \"</div>\" +\n                \"<div>\" +\n                    `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.saveAsType)}:</label></div>` +\n                    \"<div class='k-edit-field'>\" +\n                    \"<select data-role='dropdownlist' class='k-file-format' \" +\n                        \"data-text-field='description' \" +\n                        \"data-value-field='extension' \" +\n                        \"data-bind='value: extension, source: fileFormats'></select>\" +\n                    \"</div>\" +\n                \"</div>\" +\n                `<div class='k-edit-label'><label>${encode(messages.exportAsDialog.labels.page)}:</label></div>` +\n                \"<div class='k-edit-field'>\" +\n                    `<input data-role='numerictextbox' data-format='n0' data-min='1' data-max='${encode(total)}' data-bind='value: page' />` +\n                \"</div>\" +\n                \"<div class='k-actions'>\" +\n                    `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-bind='click: apply'><span class='k-button-text'>${encode(messages.save)}</span></button>` +\n                    `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-bind='click: close'><span class='k-button-text'>${encode(messages.cancel)}</span></button>` +\n                \"</div>\"\n        },\n        _updateModel: function(options) {\n            if (options.pagesCount) {\n                this.viewModel.set(\"pagesCount\", options.pagesCount);\n            }\n            if (options.page) {\n                this.viewModel.set(\"page\", options.page);\n            }\n        },\n        _initializeDialog: function() {\n            var that = this;\n            var options = that.options;\n            var dialogMessages = options.messages.dialogs;\n            var dialog = $(\"<div class='k-pdf-viewer-window k-action-window k-popup-edit-form' />\")\n                    .append(kendo.template(options.template)({\n                        total: options.pagesCount,\n                        messages: dialogMessages\n                    }))\n                    .kendoWindow(options)\n                    .getKendoWindow();\n\n            that.viewModel = kendo.observable({\n                title: dialogMessages.exportAsDialog.title,\n                name: dialogMessages.exportAsDialog.defaultFileName,\n                extension: options.extension,\n                fileFormats: options.fileFormats,\n                pagesCount: options.pagesCount,\n                page: 1,\n                apply: that.apply.bind(this),\n                close: function() {\n                    dialog.close();\n                }\n            });\n\n            that._dialog = dialog;\n\n            kendo.bind(dialog.element, that.viewModel);\n            return dialog;\n        },\n        open: function() {\n            this._dialog.center().open();\n        },\n        apply: function() {\n            this._dialog.close();\n            this.options.apply({\n                fileName: this.viewModel.name + this.viewModel.extension,\n                extension: this.viewModel.extension,\n                page: this.viewModel.page\n            });\n        }\n    });\n\n    var SearchDialog = Class.extend({\n        init: function(options) {\n            var that = this;\n            that.options = extend({}, options, that.options);\n        },\n        options: {\n            resizable: false,\n            template: ({ messages }) => '<div class=\"k-search-panel k-pos-sticky k-top-center\">' +\n                          `<button aria-label='${encode(messages.dragHandle)}' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-search-dialog-draghandle'>${kendo.ui.icon({ icon: \"handle-drag\", iconClass: \"k-button-icon\" })}</button>` +\n                          \"<span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'>\" +\n                              `<input class='k-search-dialog-input k-input-inner' data-bind='value: boundValue, events: { keyup: onKeyup, input: onInput }' aria-label='${encode( messages.inputLabel)}' title='${encode(messages.inputLabel)}' />` +\n                              `<span class='k-input-suffix'><button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-match-case-button k-match-case-button' data-bind='css: {k-selected: matchCase}, click: matchCaseClick' aria-label='${encode(messages.matchCase)}' title='${encode(messages.matchCase)}'>${kendo.ui.icon({ icon: \"convert-lowercase\", iconClass: \"k-button-icon\" })}</button></span>` +\n                          \"</span>\" +\n                          `<span class='k-search-matches'><span data-bind='text: matchIndex'></span> ${encode(messages.of)} <span data-bind='text: matches'></span></span>` +\n                          `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: prev' aria-label='${encode(messages.previous)}' title='${encode(messages.previous)}'>${kendo.ui.icon({ icon: \"arrow-up\", iconClass: \"k-button-icon\" })}</button>` +\n                          `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: next' aria-label='${encode(messages.next)}' title='${encode(messages.next)}'>${kendo.ui.icon({ icon: \"arrow-down\", iconClass: \"k-button-icon\" })}</button>` +\n                          `<button class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button' data-bind='click: close' aria-label='${encode(messages.close)}' title='${encode(messages.close)}'>${kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" })}</button>` +\n                      \"</div>\"\n        },\n        open: function() {\n            var that = this;\n\n            if (!that.dialog) {\n                that._initializeDialog();\n            }\n\n            that.options.open();\n            that._showSearchDialog();\n        },\n        close: function() {\n            var that = this;\n            that.options.close();\n            that._hideSearchDialog();\n        },\n        _showSearchDialog: function() {\n            var that = this;\n\n            that.dialog.css(\"left\",`${(that.options.pageContainer.innerWidth() / 2) - (outerWidth(that.dialog, true) / 2)}px`);\n\n            that.dialog.kendoStop().kendoAnimate({\n                effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                duration: 350,\n                complete: function(ev) {\n                    that.dialog.find(\".k-search-dialog-input\").trigger(\"focus\");\n                }\n            });\n        },\n        _hideSearchDialog: function() {\n            var that = this;\n\n            that.dialog.kendoStop().kendoAnimate({\n                effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                duration: 350,\n                hide: true\n            });\n        },\n        _initializeDialog: function() {\n            var that = this;\n            var template = kendo.template(that.options.template);\n            var dialogElm = $(template({\n                messages: that.options.messages\n            }));\n\n            that.options.pageContainer.prepend(dialogElm);\n            that.dialog = dialogElm;\n\n            that._draggable = new Draggable(dialogElm, {\n                filter: \".k-search-dialog-draghandle\",\n                axis: \"x\",\n                dragstart: function(e) {\n                    var wnd = that.dialog;\n                    var containment = that.options.pageContainer;\n\n                    wnd.startPosition = {\n                        left: e.x.client - kendo.getOffset(wnd, \"position\").left,\n                    };\n\n                    if (!containment) {\n                        return null;\n                    }\n\n                    containment._innerWidth = containment.innerWidth();\n\n                    if (parseInt(containment._innerWidth, 10) > containment[0].clientWidth) {\n                        containment._innerWidth -= kendo.support.scrollbar();\n                    }\n\n                    wnd.maxLeft = containment._innerWidth - outerWidth(wnd, true);\n                },\n                drag: function(e) {\n                    var wnd = that.dialog;\n                    var position = {};\n                    var left;\n\n                    left = e.x.client - wnd.startPosition.left;\n\n                    if (left && isNaN(left) && left.toString().indexOf(\"px\") < 0) {\n                        position.left = left;\n                    } else {\n                        position.left = Math.max(\n                            Math.min(parseInt(left, 10), parseInt(wnd.maxLeft, 10)),\n                            0\n                        );\n                    }\n\n                    wnd.css(position);\n                },\n            });\n\n            that._draggable.userEvents.stopPropagation = false;\n\n            that.searchModel = kendo.observable({\n                boundValue: \"\",\n                searchText: \"\",\n                matchCase: false,\n                matchIndex: 0,\n                matches: 0,\n                matchCaseClick: function() {\n                    this.set(\"matchCase\", !this.matchCase);\n                },\n                next: that.options.next,\n                prev: that.options.prev,\n                close: function() {\n                    this.set(\"boundValue\", \"\");\n                    that.close();\n                },\n                onKeyup: function(ev) {\n                    var key = ev.keyCode;\n                    var navigationFn = ev.shiftKey ? this.prev : this.next;\n\n                    if (key === keys.ENTER) {\n                        navigationFn();\n                        ev.preventDefault();\n                    } else if (key == keys.ESC) {\n                        this.close();\n                    }\n                },\n                onInput: function(ev) {\n                    this.set(\"searchText\", ev.target.value);\n                }\n            });\n\n            kendo.bind(dialogElm, that.searchModel);\n        }\n    });\n\n    extend(kendo.pdfviewer, {\n        dialogs: {\n            ErrorDialog: ErrorDialog,\n            ExportAsDialog: ExportAsDialog,\n            SearchDialog: SearchDialog\n        }\n    });\n})(window.kendo.jQuery);\n\nconst __meta__ = {\n    id: \"pdfviewer\",\n    name: \"PDFViewer\",\n    category: \"web\",\n    description: \"PDFViewer to display pdfs in the browser\",\n    depends: [\"core\", \"window\", \"dialog\", \"toolbar\", \"draganddrop\", \"upload\", \"combobox\", \"drawing\", \"binder\", \"dropdownlist\", \"numerictextbox\", \"textbox\", \"pager\", \"pdfviewer-common.cmn.chunk\"]\n};\n\n(function($, undefined$1) {\n    var NS = \".kendoPDFViewer\",\n        kendo = window.kendo,\n        ui = kendo.ui,\n        extend = $.extend,\n        drawing = kendo.drawing,\n        keys = $.extend({ PLUS: 187, MINUS: 189, ZERO: 48, NUMPAD_ZERO: 96 }, kendo.keys),\n        Page,\n        BlankPage = kendo.pdfviewer.BlankPage,\n        Widget = ui.Widget,\n        progress = kendo.ui.progress,\n        SCROLL = \"scroll\",\n        RENDER = \"render\",\n        OPEN = \"open\",\n        ERROR = \"error\",\n        KEYDOWN = \"keydown\" + NS,\n        MOUSEWHEEL = \"DOMMouseScroll\" + NS + \" mousewheel\" + NS,\n        UPDATE = \"update\",\n        PAGE_CHANGE = \"pagechange\",\n        ZOOMSTART = \"zoomStart\",\n        ZOOMEND = \"zoomEnd\",\n        ZOOMCOMMAND = \"ZoomCommand\",\n        WHITECOLOR = \"#ffffff\",\n        TABINDEX = \"tabindex\",\n        CLICK = \"click\",\n        CHANGE = \"change\",\n        TOGGLE = \"toggle\",\n        DISABLED = 'k-disabled',\n        PROCESSORS = {\n            pdfjs: \"pdfjs\",\n            dpl: \"dpl\"\n        },\n        styles = {\n            viewer: \"k-pdf-viewer\",\n            scroller: \"k-canvas k-pdf-viewer-canvas k-pos-relative k-overflow-auto\",\n            enableTextSelection: \"k-enable-text-select\",\n            enablePanning: \"k-enable-panning\",\n            highlightClass: \"k-search-highlight\",\n            highlightMarkClass: \"k-search-highlight-mark\",\n            charClass: \"k-text-char\"\n        },\n        PREDEFINED_ZOOM_VALUES = {\n            auto: \"auto\",\n            actual: \"ActualWidth\",\n            fitToWidth: \"FitToWidth\",\n            fitToPage: \"FitToPage\"\n        };\n\n    var PDFViewer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, kendo.deepExtend({}, this.options, options));\n\n            that._processMessages();\n\n            that._wrapper();\n\n            if (that.options.toolbar) {\n                that._renderToolbar();\n            }\n\n            that._initProcessor(options || {});\n            that._renderPageContainer();\n\n            if (that._isDPLProcessor()) {\n                that._loadDPLDocument();\n            } else {\n                that._loadPdfJSDocument();\n            }\n\n            kendo.notify(that, kendo.ui);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay(that.wrapper[0]);\n            }\n        },\n\n        events: [\n            RENDER,\n            OPEN,\n            ERROR,\n            ZOOMSTART,\n            ZOOMEND\n        ],\n\n        options: {\n            name: \"PDFViewer\",\n            view: {\n                type: \"canvas\"\n            },\n            pdfjsProcessing: {\n                file: null,\n                loadOnDemand: true\n            },\n            dplProcessing: {\n                read: {\n                    url: null,\n                    type: \"GET\",\n                    dataType: \"json\",\n                    pageField: \"pageNumber\"\n                },\n                upload: {\n                    url: null,\n                    saveField: \"file\"\n                },\n                download: {\n                    url: null\n                },\n                loadOnDemand: false\n            },\n            toolbar: {\n                items: []\n            },\n            width: 1000,\n            height: 1200,\n            page: 1,\n            defaultPageSize: {\n                width: 794,\n                height: 1123\n            },\n            scale: null,\n            zoomMin: 0.5,\n            zoomMax: 4,\n            zoomRate: 0.25,\n            messages: {\n                defaultFileName: \"Document\",\n                toolbar: {\n                    zoom: {\n                        zoomLevel: \"zoom level\",\n                        zoomOut: \"Zoom Out\",\n                        zoomIn: \"Zoom In\",\n                        actualWidth: \"Actual Width\",\n                        autoWidth: \"Automatic Width\",\n                        fitToWidth: \"Fit to Width\",\n                        fitToPage: \"Fit to Page\"\n                    },\n                    open: \"Open\",\n                    exportAs: \"Export\",\n                    download: \"Download\",\n                    print: \"Print\",\n                    toggleSelection: \"Enable Selection\",\n                    togglePan: \"Enable Panning\",\n                    search: \"Search\"\n                },\n                errorMessages: {\n                    notSupported: \"Only pdf files allowed.\",\n                    parseError: \"PDF file fails to process.\",\n                    notFound: \"File is not found.\",\n                    popupBlocked: \"Popup is blocked.\"\n                },\n                dialogs: {\n                    exportAsDialog: {\n                        title: \"Export...\",\n                        defaultFileName: \"Document\",\n                        pdf: \"Portable Document Format (.pdf)\",\n                        png: \"Portable Network Graphics (.png)\",\n                        svg: \"Scalable Vector Graphics (.svg)\",\n                        labels: {\n                            fileName: \"File name\",\n                            saveAsType: \"Save as\",\n                            page: \"Page\"\n                        }\n                    },\n                    okText: \"OK\",\n                    save: \"Save\",\n                    cancel: \"Cancel\",\n                    search: {\n                        inputLabel: \"Search Text\",\n                        matchCase: \"Match Case\",\n                        next: \"Next Match\",\n                        previous: \"Previous Match\",\n                        close: \"Close\",\n                        of: \"of\",\n                        dragHandle: \"Drag search\"\n                    }\n                }\n            }\n        },\n\n        defaultTools: {\n            pager: {\n                type: \"component\",\n                name: \"pager\",\n                overflow: \"never\",\n                component: \"Pager\",\n                element: '<div></div>',\n                componentOptions: {\n                    navigatable: true,\n                    _isToolbarItem: true,\n                }\n            },\n            spacer: { type: \"spacer\" },\n            zoomInOut: {\n                type: \"buttonGroup\",\n                fillMode: \"flat\",\n                buttons: [\n                    { type: \"button\", icon: \"zoom-out\", name: \"zoomOut\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomOut\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                    { type: \"button\", icon: \"zoom-in\", name: \"zoomIn\", command: \"ZoomCommand\", showText: \"overflow\", options: \"{ \\\"zoomIn\\\": true, \\\"updateComboBox\\\": true }\", fillMode: \"flat\" },\n                ]\n            },\n            zoom: {\n                type: \"component\",\n                name: \"zoom\",\n                command: \"ZoomCommand\",\n                overflow: \"never\",\n                component: \"ComboBox\",\n                data: [50, 100, 150, 200, 300, 400],\n                componentOptions: {\n                    enable: false,\n                    dataTextField: \"text\",\n                    dataValueField: \"percent\",\n                    valuePrimitive: true,\n                    clearOnEscape: false,\n                    commandOn: \"change\",\n                    fillMode: 'flat',\n                }\n            },\n            toggleSelection: {\n                type: \"buttonGroup\",\n                fillMode: \"flat\",\n                buttons: [\n                    {\n                        togglable: true,\n                        command: \"EnableSelectionCommand\",\n                        icon: \"pointer\",\n                        showText: \"overflow\",\n                        name: \"toggleSelection\",\n                        group: \"toggle-pan\",\n                        fillMode: \"flat\"\n                    }, {\n                        togglable: true,\n                        command: \"EnablePanCommand\",\n                        icon: \"hand\",\n                        showText: \"overflow\",\n                        name: \"togglePan\",\n                        group: \"toggle-pan\",\n                        selected: true,\n                        fillMode: \"flat\"\n                    }\n                ]\n            },\n            spacer2: { type: \"spacer\" },\n            search: {\n                type: \"button\",\n                command: \"OpenSearchCommand\",\n                icon: \"search\",\n                name: \"search\",\n                showText: \"overflow\",\n                enable: false,\n                fillMode: \"flat\"\n            },\n            open: {\n                type: \"button\",\n                showText: \"overflow\",\n                name: \"open\",\n                icon: \"folder-open\",\n                command: \"OpenCommand\",\n                fillMode: \"flat\"\n            },\n            download: {\n                type: \"button\",\n                showText: \"overflow\",\n                name: \"download\",\n                icon: \"download\",\n                command: \"DownloadCommand\",\n                enable: false,\n                fillMode: \"flat\"\n            },\n            print: {\n                type: \"button\",\n                showText: \"overflow\",\n                name: \"print\",\n                icon: \"print\",\n                command: \"PrintCommand\",\n                enable: false,\n                fillMode: \"flat\"\n            }\n        },\n\n        exportAsTool: {\n            exportAs: { type: \"button\", showText: \"overflow\", name: \"exportAs\", icon: \"image-export\", command: \"ExportCommand\", fillMode: \"flat\" }\n        },\n\n\n        _processMessages: function() {\n            var messages = this.options.messages.toolbar,\n                zoom = messages.zoom;\n\n            if ($.isPlainObject(zoom)) {\n                this.options.messages.toolbar = $.extend({}, this.options.messages.toolbar, zoom);\n                this.options.messages.toolbar.zoom = zoom.zoomLevel || this.options.messages.toolbar.zoom;\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                options = that.options;\n\n            that.wrapper = that.element;\n\n            that.wrapper\n                    .width(options.width)\n                    .height(options.height)\n                    .addClass(styles.viewer)\n                    .on(KEYDOWN, that._keydown.bind(that));\n\n            that._allowResize = that.options.scale === null;\n            that._autoZoomScale = DEFAULT_ZOOM_LEVEL;\n            that.zoomScale = that.options.scale || that._autoZoomScale;\n\n            that._resizeHandler = kendo.onResize(function() {\n                that.resize();\n            });\n\n            that._pageNum = that.options.page;\n        },\n\n        _keydown: function(e) {\n            var plusShortcuts = [keys.PLUS, keys.NUMPAD_PLUS],\n                minusShortcuts = [keys.MINUS, keys.NUMPAD_MINUS],\n                zeroShortcuts = [keys.ZERO, keys.NUMPAD_ZERO],\n                shouldExecute = false,\n                args = {\n                    command: ZOOMCOMMAND,\n                    options: { updateComboBox: true }\n                };\n\n            if (!e.ctrlKey || this._blankPage || this.processingLib === PROCESSORS.dpl) {\n                return;\n            }\n\n            if (plusShortcuts.includes(e.keyCode)) {\n                args.options.zoomIn = true;\n                shouldExecute = true;\n            } else if (minusShortcuts.includes(e.keyCode)) {\n                args.options.zoomOut = true;\n                shouldExecute = true;\n            } else if (zeroShortcuts.includes(e.keyCode)) {\n                args.options.value = DEFAULT_ZOOM_LEVEL;\n                shouldExecute = true;\n            }\n\n            if (shouldExecute) {\n                this.execute(args);\n                e.preventDefault();\n            }\n        },\n\n        _handlePageChangeEvent: function(event) {\n            const that = this;\n\n            if (!that._pageChangeFromScroll) {\n                this.activatePage(event.index, false);\n                that._showPagerInputLabels();\n            }\n\n            delete that._pageChangeFromScroll;\n        },\n\n        _showPagerInputLabels: function() {\n            const that = this;\n            const inputElements = that.pager.element.find(\".k-pager-input\").children();\n            if (inputElements) {\n                const labels = inputElements.eq(0).add(inputElements.eq(2));\n\n                if (!$(labels).is(\":visible\")) {\n                    labels.show();\n                }\n            }\n        },\n\n        _resizePager: function() {\n            const that = this;\n\n            if (!that.pager || !that.pager.options.responsive) {\n                return;\n            }\n\n            const pagerWidth = kendo._outerWidth(that.pager.element);\n            const visibleToolbarItems = Array.from(that.toolbar.element.children(':not(.k-hidden):not(:has(.k-pager))'));\n            const containerWidth = kendo._outerWidth(that.element);\n\n            let visibleToolsWidth = 0;\n\n            const pattern = /(em|ex|%|px|cm|mm|in|pt|pc|ch|rem|vh|vw|vmin|vmax)$/;\n            const gap = Number(that.toolbar.element.css(\"gap\").replace(pattern,''));\n\n            if (visibleToolbarItems.length > 0) {\n                let temp = 0;\n                for (let i = 0; i < visibleToolbarItems.length; i++) {\n                    temp += kendo._outerWidth(visibleToolbarItems[i]) + gap;\n                }\n                if (temp) {\n                    visibleToolsWidth = temp;\n                }\n            }\n\n            const elementsToShrink = that.pager.element.find(\".k-pager-nav\");\n\n            if ((pagerWidth + visibleToolsWidth + gap) > containerWidth) {\n\n                for (var i = elementsToShrink.length - 1; i >= 0; i--) {\n                    const element = elementsToShrink.eq(i);\n                        element.addClass(\"k-hidden\");\n                }\n            }\n\n            if ((pagerWidth + visibleToolsWidth + gap) < containerWidth) {\n                const hidden = that.pager.element.find(\".k-hidden\");\n\n                for (var i = 0; i < hidden.length; i++) {\n                    const hiddenElement = hidden.eq(i);\n\n                    hiddenElement.removeClass('k-hidden');\n                }\n            }\n\n            if (that.pager.options.input) {\n                that._showPagerInputLabels();\n            }\n        },\n\n        _initProcessor: function(options) {\n            var that = this,\n                processingOptions;\n\n            processingOptions = options.dplProcessing ? that.options.dplProcessing : that.options.pdfjsProcessing;\n            that.processingLib = options.dplProcessing ? PROCESSORS.dpl : PROCESSORS.pdfjs;\n\n            if (that._isDPLProcessor()) {\n                that.processor = new kendo.pdfviewer[that.processingLib].processor(processingOptions, that);\n                Page = kendo.pdfviewer[that.processingLib].Page;\n            } else {\n                isLoaded();\n            }\n        },\n\n        _isDPLProcessor: function() {\n            return this.processingLib === PROCESSORS.dpl;\n        },\n\n        _hasPagerTool: function(tools) {\n            let hasPager = false;\n            let index;\n\n            for (let i = 0; i < tools.length; i++) {\n                const tool = tools[i];\n                if (typeof tool === 'string') {\n                    hasPager = tool.toLowerCase() === 'pager';\n                    index = i;\n                } else {\n                    if (tool.type) {\n                        hasPager = tool.type.toLowerCase() === 'pager';\n                        index = i;\n                    } else if (tool.name) {\n                        hasPager = tool.name.toLowerCase() === 'pager';\n                        if (hasPager) {\n                            delete tool.name;\n                        }\n                        index = i;\n                    }\n                }\n\n                if (hasPager) {\n                    break;\n                }\n            }\n\n            return {\n                hasPager,\n                index\n            };\n        },\n\n        _renderToolbar: function() {\n            var that = this,\n                options = that.options,\n                toolbarOptions = extend({}, options.toolbar),\n                tools = toolbarOptions.items && toolbarOptions.items.length ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n\n            const { hasPager, index } = that._hasPagerTool(tools);\n\n\n            tools = that._processTools(tools);\n\n            if (hasPager) {\n                let pagerMessages = that.options.messages.toolbar.pager;\n\n                if (pagerMessages) {\n                    if (pagerMessages.of) {\n                        pagerMessages.of = `${pagerMessages.of} {0}`;\n                        if (pagerMessages.pages) {\n                            pagerMessages.of = pagerMessages.of + ' ' + pagerMessages.pages;\n                            delete pagerMessages.pages;\n                        }\n                    }\n                }\n                that.defaultTools.pager.componentOptions.messages = pagerMessages;\n                options.messages.toolbar.pager = \"Pager\";\n\n                const currentPagerOptions = that.defaultTools.pager.componentOptions;\n                if (typeof tools[index] !== 'string') {\n                    that.defaultTools.pager.componentOptions = $.extend(tools[index], currentPagerOptions);\n\n                    tools[index] = that.defaultTools.pager;\n                }\n            }\n\n            toolbarOptions = {\n                defaultTools: $.extend({}, that.defaultTools, that.exportAsTool),\n                parentMessages: options.messages.toolbar,\n                tools: tools,\n                resizable: true,\n                fillMode: 'flat'\n            };\n\n            var toolbarElement = $(\"<div />\");\n\n            toolbarElement.appendTo(that.element);\n            that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n            that.options.toolbar = that.toolbar.options;\n\n            that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n            that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n            that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n            if (hasPager) {\n                that.pager = that.toolbar.element.find('.k-pager');\n                if (that.pager.length > 0) {\n                    that.pager = that.pager.data('kendoPager');\n                }\n                that.pager.bind(CHANGE, that._handlePageChangeEvent.bind(that));\n            }\n\n            that.bind({\n                update: that._updateToolbar.bind(that)\n            });\n\n            return that.toolbar;\n        },\n\n        _processTools: function(tools) {\n            var that = this,\n                messages = that.options.messages.toolbar;\n\n            tools = tools.flatMap(t => {\n                if (t === \"zoom\") {\n                    t = that.defaultTools.zoom;\n                }\n\n                if (t.name === \"zoom\") {\n                    t = $.extend({}, that.defaultTools.zoom, t);\n\n                    var zoomLevels = [{\n                        percent: PREDEFINED_ZOOM_VALUES.auto,\n                        text: messages.autoWidth\n                    }, {\n                        percent: PREDEFINED_ZOOM_VALUES.actual,\n                        text: messages.actualWidth\n                    }, {\n                        percent: PREDEFINED_ZOOM_VALUES.fitToWidth,\n                        text: messages.fitToWidth\n                    }, {\n                        percent: PREDEFINED_ZOOM_VALUES.fitToPage,\n                        text: messages.fitToPage\n                    }];\n\n                    // eslint-disable-next-line\n                    var comboOptions = t.data.map(i => { return { percent: i, text: i + \"%\" } });\n                    var value = that.options.scale ? that.options.scale * 100 + \"%\" : \"auto\";\n\n                    zoomLevels = zoomLevels.concat(comboOptions);\n                    t.componentOptions.dataSource = zoomLevels;\n                    t.componentOptions.value = value;\n                }\n\n                return t;\n            });\n\n            return tools;\n        },\n\n        _updateToolbar: function(e) {\n            var pageOptions = {\n                    page: e.page || 1,\n                    total: e.total || 1\n                },\n                toolbar = this.toolbar,\n                toolbarEl = toolbar.element,\n                zoomCombo = toolbarEl.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\"),\n                toFocus = toolbarEl.find(\".k-focus\");\n\n            if (toFocus.length === 0) {\n                toFocus = toolbarEl.find(\"[tabindex=0]\").first();\n\n                if (toFocus.length === 0) {\n                    toFocus = toolbar._getAllItems().first();\n                }\n            }\n\n            if (zoomCombo) {\n                zoomCombo.enable(!e.isBlank);\n                if (e.action === \"zoom\") {\n                    this._updateZoomComboBox(e.zoom);\n                }\n            }\n\n            if (((e.action === \"pagechange\" && e.updatePager !== false) || e.isBlank) && this.pager) {\n                if (e.updatePager) {\n                    pageOptions.updatePager = true;\n                }\n\n                if (e.pageChangeFromScroll) {\n                    pageOptions.pageChangeFromScroll = true;\n                }\n\n                this._updatePager(pageOptions);\n            }\n\n            this._updateOnBlank(e.isBlank);\n\n            toolbar._resetTabIndex(toFocus);\n        },\n\n        _updateOnBlank: function(isBlank) {\n            var toolbar = this.toolbar,\n                toolbarEl = toolbar.element;\n\n            toolbar.enable(toolbarEl.find(\"[data-command=EnableSelectionCommand]\").parent(), !isBlank);\n            toolbar.enable(toolbarEl.find(\"[data-command=ZoomCommand][role=button]\").parent(), !isBlank);\n\n            toolbar.enable(toolbarEl.find(\"[data-command='OpenSearchCommand']\"), !isBlank);\n            toolbar.enable(toolbarEl.find(\"[data-command='DownloadCommand']\"), !isBlank);\n            toolbar.enable(toolbarEl.find(\"[data-command='PrintCommand']\"), !isBlank);\n        },\n\n        _updatePager: function(options) {\n            const that = this;\n            if (options.updatePager) {\n                const isDPLProcessed = that.processingLib === 'dpl';\n\n                const data = isDPLProcessed ? (that.document && that.document.pages ? that.document.pages : []) : that.pages ?? [];\n\n                const pagerDataSource = new kendo.data.DataSource({\n                data: data ?? [],\n                pageSize: 1\n            });\n                that.pager.setDataSource(pagerDataSource);\n                that._resizePager();\n            } else {\n                const current = that.pager.page();\n\n                if (current !== options.page) {\n                    if (options.pageChangeFromScroll) {\n                        that._pageChangeFromScroll = true;\n                    }\n                    that.pager.page(options.page);\n                }\n            }\n            that._showPagerInputLabels();\n            that._togglePagerDisabledClass();\n        },\n\n        _togglePagerDisabledClass: function() {\n            const that = this;\n            const pager = that.pager;\n\n            if (pager.totalPages() <= 1 ) {\n                pager.element.addClass(DISABLED);\n            } else if (pager.element.hasClass(DISABLED)) {\n                pager.element.removeClass(DISABLED);\n            }\n        },\n\n        _updateZoomComboBox: function(value) {\n            var isPredefined = value === PREDEFINED_ZOOM_VALUES.auto ||\n                value === PREDEFINED_ZOOM_VALUES.actual ||\n                value === PREDEFINED_ZOOM_VALUES.fitToPage ||\n                value === PREDEFINED_ZOOM_VALUES.fitToWidth,\n                zoomCombo = this.toolbar.element.find(\"[data-command=ZoomCommand][data-role=combobox]\").data(\"kendoComboBox\");\n\n            if (!isPredefined) {\n                value = Math.round(value * 100) + '%';\n            }\n\n            if (zoomCombo) {\n                zoomCombo.value(value);\n            }\n        },\n\n        _toolbarClick: function(ev) {\n            let target = $(ev.target),\n                command = target.data(\"command\"),\n                options = target.data(\"options\");\n\n            if (!command && !options) {\n                target = $(ev.currentTarget);\n                command = target.data(\"command\");\n                options = target.data(\"options\");\n            }\n\n            options = extend({}, { value: target.val() }, options);\n\n            if (!command) {\n                return;\n            }\n\n            this.execute({\n                command: command,\n                options: options\n            });\n        },\n\n        _initErrorDialog: function(options) {\n            var that = this;\n\n            if (!that._errorDialog) {\n                options = extend(options, {\n                    messages: that.options.messages\n                });\n                var dialogInstance = new kendo.pdfviewer.dialogs.ErrorDialog(options);\n                that._errorDialog = dialogInstance._dialog;\n            }\n            return that._errorDialog;\n        },\n\n        _renderPageContainer: function() {\n            var that = this;\n\n            if (!that.pageContainer) {\n                that.pageContainerWrapper = $(\"<div />\");\n                that.pageContainerWrapper.addClass(styles.scroller);\n\n                that.pageContainer = $(`<div class=\"k-pdf-viewer-pages\" />`);\n                that.pageContainer[0].style.setProperty(\"--scale-factor\", that.zoomScale);\n                that.pageContainer.attr(TABINDEX, 0);\n\n                that.pageContainerWrapper.append(that.pageContainer);\n                that.wrapper.append(that.pageContainerWrapper);\n            }\n        },\n\n        _setPageContainerScaleFactor(scale) {\n            var that = this;\n\n            if (that.pageContainer) {\n                that.pageContainer[0].style.setProperty(\"--scale-factor\", scale);\n            }\n        },\n\n        _triggerError: function(options) {\n            var dialog = this._initErrorDialog();\n            extend(options, {\n                dialog: dialog\n            });\n            if (this.pageContainer) {\n                progress(this.pageContainer, false);\n            }\n\n            if (this.trigger(ERROR, options))\n            {\n                return;\n            }\n\n            dialog.open().content(options.message);\n        },\n\n        _renderPages: function() {\n            var that = this,\n                document = that.document,\n                pagesData;\n\n            that.pages = [];\n\n            if (!document || !document.total) {\n                that._renderBlankPage();\n                return;\n            }\n\n            pagesData = document.pages;\n\n            for (var i = 1; i <= document.total; i++) {\n                var viewerPage,\n                    pageData = {\n                        processor: that.processor,\n                        number: i\n                    };\n\n                if (pagesData && pagesData.length) {\n                    pageData = extend(pageData, pagesData[i - 1]);\n                }\n\n                viewerPage = new Page(pageData, that);\n                that.pages.push(viewerPage);\n                that.pageContainer.append(viewerPage.element);\n            }\n\n            that._attachContainerEvents();\n            that._getVisiblePagesCount();\n            that._updatePager({ updatePager: true });\n        },\n\n        _renderBlankPage: function() {\n            this._blankPage = new BlankPage(this.options.defaultPageSize, this);\n\n            this.pageContainer.append(this._blankPage.element);\n\n            this._blankPage._initUpload();\n            this.trigger(UPDATE, { isBlank: true });\n        },\n\n        _resize: function() {\n            var that = this,\n                containerWidth,\n                ratio;\n\n            if (!that._allowResize) {\n                return;\n            }\n\n            if (!that.pages || !that.pages.length) {\n                if (that._blankPage) {\n                    ratio = containerWidth / that._blankPage.element.width();\n                    that._blankPage.resize(ratio);\n                }\n                return;\n            }\n\n            if (that.toolbar) {\n                that.toolbar.resize(true);\n            }\n\n\n            if (that._resizeHandler) {\n                clearTimeout(that._resizeHandler);\n            }\n            that._resizeHandler = setTimeout(that._resizePages.bind(that), 100);\n        },\n\n        _resizePages: function() {\n            const that = this,\n                containerWidth = that.pageContainer[0].clientWidth;\n            let ratio = 0;\n\n            that.pages.forEach(function(page) {\n                const pageWidth = page.element ? page.element.width() : $(page._pageInfo.emptyPage.pageElement).width();\n                const currentRatio = containerWidth / pageWidth;\n\n                if (currentRatio > ratio) {\n                    ratio = currentRatio;\n                }\n            });\n\n\n            if (that._autoFit) {\n                that.zoom(that._autoFit, true);\n                return;\n            }\n\n            ratio = Math.min(Math.max(ratio, that.options.zoomMin), DEFAULT_ZOOM_LEVEL);\n            if (ratio != that.zoomScale) {\n                that.zoom(ratio, true);\n                that.zoomScale = ratio;\n                that._allowResize = true;\n            }\n\n            if (that.pager && that.pager.element) {\n                that._resizePager();\n            }\n        },\n\n        _attachContainerEvents: function() {\n            var that = this;\n\n            that._wheel = kendo.throttle(\n                that._wheel.bind(that),\n                300\n            );\n\n            if (that.processingLib !== PROCESSORS.dpl) {\n                that.pageContainer.on(MOUSEWHEEL, function(e) {\n                    if (!e.ctrlKey) {\n                        return;\n                    }\n\n                    if (document.activeElement !== that.pageContainer[0]) {\n                        that.pageContainer.trigger(\"focus\");\n                    }\n\n                    that._wheel(e);\n                    e.preventDefault();\n                });\n            }\n\n            that.pageContainer.addClass(styles.enablePanning);\n            if (that._isDPLProcessor()) {\n                that.pageContainerWrapper.bind(SCROLL, that._scroll.bind(that));\n            } else {\n                that.pageContainerWrapper.bind(SCROLL, that._onDemandScroll.bind(that));\n            }\n        },\n\n        _scroll: function(e) {\n            var that = this,\n                containerHeight = that.pageContainerWrapper.height(),\n                total = that.pages.length,\n                pageNum = that._pageNum,\n                pageIndex = pageNum - 1,\n                pageToLoadNum = pageNum,\n                pageToLoad,\n                currentPage$1;\n\n                if (that._preventScroll || !total) {\n                    that._preventScroll = false;\n                    return;\n                }\n\n                that._scrollingStarted = true;\n                const nextPageIndex = currentPage(that.element[0]);\n                currentPage$1 = that.pages[pageIndex];\n                pageToLoadNum = pageNum + nextPageIndex - pageIndex;\n\n                if (pageNum !== pageToLoadNum && pageToLoadNum >= 1 && pageToLoadNum <= total) {\n                    pageToLoad = that.pages[pageToLoadNum - 1].element;\n\n                    if (pageToLoad.offset().top > containerHeight) {\n                        return;\n                    }\n\n                    that._pageNum = pageToLoadNum;\n                    that._loadVisiblePages();\n\n                    that.trigger(UPDATE, { action: PAGE_CHANGE, page: pageToLoadNum, total: total, pageChangeFromScroll: true });\n                }\n        },\n\n        _onDemandScroll: function(e) {\n            const that = this,\n                currentPageIndex = currentPage(that.element[0]) + 1;\n\n            // Render the current and surrounding pages if they have not been rendered already.\n            // We are using +1/-1 twice because the loadPage method treats the parameter as a page number, not page index.\n            that.loadPage(currentPageIndex);\n            that.loadPage(currentPageIndex + 1);\n            that.loadPage(currentPageIndex - 1);\n\n            that.trigger(UPDATE, { action: PAGE_CHANGE, page: currentPageIndex, total: that.pages.length, pageChangeFromScroll: true });\n        },\n\n        _wheel: function(e) {\n            var originalEvent = e.originalEvent,\n                delta = originalEvent.wheelDelta ? -originalEvent.wheelDelta : originalEvent.detail,\n                zoomIn = delta < 0;\n\n            this.execute({\n                command: ZOOMCOMMAND,\n                options: {\n                    zoomIn: zoomIn,\n                    zoomOut: !zoomIn,\n                    updateComboBox: true\n                }\n            });\n\n            e.preventDefault();\n        },\n\n        zoom: function(scale, preventComboBoxChange) {\n            var that = this;\n            if (!scale) {\n                return that.zoomScale;\n            }\n\n            return that.execute({\n                command: ZOOMCOMMAND,\n                options: {\n                    value: scale,\n                    updateComboBox: !preventComboBoxChange\n                }\n            });\n        },\n\n        execute: function(options) {\n            var commandOptions = extend({ viewer: this }, options.options);\n            var command = new kendo.pdfviewer[options.command](commandOptions);\n            return command.exec();\n        },\n\n        _loadDPLDocument: function() {\n            var that = this;\n            var page = that.options.page;\n\n            progress(that.pageContainer, true);\n            that.processor.fetchDocument().done(function(document) {\n                that._clearPages();\n                that.document = document;\n\n                that._renderPages();\n                that.resize(true);\n                if (document) {\n                    page = page >= 1 && page <= document.total ? page : 1;\n                    that.activatePage(page, true);\n                }\n\n                if (that.pdfScroller) {\n                    that.pdfScroller.destroy();\n                }\n\n                that.pdfScroller = new Scroller(that.pageContainer[0].parentNode, {\n                    filter: '.k-page',\n                    events: {}\n                });\n\n                that.pdfScroller.enablePanEventsTracking();\n\n                progress(that.pageContainer, false);\n            });\n        },\n\n        _loadPdfJSDocument: function(data) {\n            const that = this;\n            const options = that.options;\n            const page = options.page;\n            let file;\n\n            if (data) {\n                file = data;\n            } else {\n                file = options.pdfjsProcessing.file;\n            }\n\n            if (!file) {\n                that._renderBlankPage();\n                return;\n            }\n\n            if (typeof file === \"string\") {\n                file = {\n                    url: file\n                };\n            } else if (file instanceof ArrayBuffer) {\n                file = {\n                    arrayBuffer: file\n                };\n            }\n\n            progress(that.pageContainer, true);\n            loadPDF($.extend({}, {\n                rootElement: that.element[0],\n                dom: that.pageContainer[0],\n                zoom: that.zoomScale,\n                loadOnDemandPageSize: 1,\n                done: (e) => {\n                    that.document = e.pdfDoc;\n                    that.pages = e.pdfPages;\n\n                    if (that.pdfScroller) {\n                        that.pdfScroller.destroy();\n                    }\n\n                    that.pdfScroller = new Scroller(that.pageContainer[0].parentNode, {\n                        filter: '.k-page',\n                        events: {}\n                    });\n\n                    that._attachContainerEvents();\n\n                    that.pdfScroller.enablePanEventsTracking();\n                    that._pageRenderPromise(that.pages[0]);\n                    that.activatePage(page, true);\n\n                    that.trigger(UPDATE);\n                    progress(that.pageContainer, false);\n                },\n                error: (e) => {\n                    const notFoundError = e.name.includes(\"Missing\"),\n                        messages = that.options.messages.errorMessages,\n                        alertMessage = notFoundError ? messages.notFound : messages.parseError;\n\n                    that._triggerError({\n                        error: e.message,\n                        message: alertMessage\n                    });\n                },\n                loadOnDemand: that.options.pdfjsProcessing.loadOnDemand\n            }, file));\n        },\n\n        _setPageNumberAttributes: function() {\n            const that = this;\n\n            that.pageContainer.find('.k-page').each((i, el) => {\n                $(el).attr(kendo.attr(\"number\"), i + 1);\n            });\n        },\n\n        _pageRenderPromise: function(page, preventTrigger) {\n            const that = this;\n            return new Promise(resolve => {\n                const intervalId = setInterval(() => {\n                  if (page._pageInfo.rendered && !page._pageInfo.renderInProgress) {\n                    clearInterval(intervalId);\n                    that._setPageNumberAttributes();\n                    if (!preventTrigger) {\n                        that.trigger(RENDER, { page });\n                    }\n                    resolve();\n                  }\n                }, 100);\n              });\n        },\n\n        loadPage: function(number) {\n            const that = this,\n                messages = that.options.messages.errorMessages,\n                page = that.pages && that.pages[number - 1];\n\n            if (!page) {\n                return;\n            }\n\n            if (that._isDPLProcessor()) {\n                return page.load(that.zoomScale);\n            } else if (!page._pageInfo.rendered && !page._pageInfo.renderInProgress) {\n                renderPage(page, page._pageInfo.emptyPage, (e) => {\n                    that._triggerError({\n                        error: e.message,\n                        message: messages.parseError\n                    });\n                });\n\n                return that._pageRenderPromise(page);\n            }\n\n            return Promise.resolve();\n        },\n\n        activatePage: function(number, updatePager) {\n            const that = this,\n                page = that.pages && that.pages[number - 1];\n\n            if (!page) {\n                return;\n            }\n\n            that._pageNum = number;\n\n            if (that._isDPLProcessor()) {\n                that._loadVisiblePages();\n                that._scrollToActivatedPage(number, updatePager);\n            } else {\n                that.loadPage(number).then(() => {\n                    that._scrollToActivatedPage(number, updatePager);\n                });\n            }\n        },\n\n        _scrollToActivatedPage: function(number, updatePager) {\n            const that = this,\n                pageContainer = that.pageContainerWrapper;\n\n            that._preventScroll = true;\n            scrollToPage(pageContainer[0], number - 1);\n            that.trigger(UPDATE, { action: PAGE_CHANGE, page: number, total: that.pages.length, updatePager: updatePager });\n        },\n\n        _getVisiblePagesCount: function() {\n            var that = this,\n                loadedPagesHeight = 0,\n                updatedVisiblePagesCount = 0,\n                containerHeight = that.pageContainer[0].clientHeight,\n                index = 0;\n\n            while (loadedPagesHeight <= containerHeight && index < that.pages.length)\n            {\n                loadedPagesHeight += that.pages[index].element.height();\n                updatedVisiblePagesCount++;\n                index++;\n            }\n\n            that._visiblePagesCount = updatedVisiblePagesCount;\n        },\n\n        _loadVisiblePages: function() {\n            var pagesCount = this.pages && this.pages.length,\n                minVisiblePageNum = Math.max(this._pageNum - this._visiblePagesCount, 1),\n                maxVisiblePageNum = Math.min(this._pageNum + this._visiblePagesCount, pagesCount);\n\n            this._visiblePages = this.pages.slice(minVisiblePageNum - 1, maxVisiblePageNum);\n\n            for (var i = minVisiblePageNum; i <= maxVisiblePageNum; i++)\n            {\n                this.loadPage(i);\n            }\n        },\n\n        _loadAllPages: function() {\n            const pagesCount = this.pages && this.pages.length;\n            const promises = [];\n\n            for (var i = 0; i <= pagesCount; i++)\n            {\n                promises.push(this.loadPage(i));\n            }\n\n            return promises;\n        },\n\n        fromFile: function(file) {\n            const that = this;\n            if (that._isDPLProcessor()) {\n                that.zoomScale = that.options.scale || DEFAULT_ZOOM_LEVEL;\n                that.zoom(that.zoomScale, true);\n                that.trigger(UPDATE, { action: \"zoom\", zoom: that.options.scale || \"auto\" });\n\n                that.processor._updateDocument(file);\n                that._loadDPLDocument();\n            } else {\n                that._loadPdfJSDocument(file);\n            }\n        },\n\n        exportImage: function(options) {\n            var that = this;\n            var pageNumber = options.page;\n            var page = that.pages[pageNumber - 1] || that._blankPage;\n            var rootGroup = new drawing.Group();\n\n            page.load();\n\n            var background = kendo.drawing.Path.fromRect(new kendo.geometry.Rect([0, 0], [page.width, page.height]), {\n                fill: {\n                    color: WHITECOLOR\n                },\n                stroke: null\n            });\n\n            progress(that.pageContainer, true);\n            rootGroup.append(background, page.group);\n\n            drawing.exportImage(rootGroup).done(function(data) {\n                progress(that.pageContainer, false);\n                kendo.saveAs({\n                    dataURI: data,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL || \"\",\n                    forceProxy: options.forceProxy,\n                    proxyTarget: options.proxyTarget\n                });\n            });\n        },\n\n        exportSVG: function(options) {\n            var that = this;\n            var pageNumber = options.page;\n            var page = that.pages[pageNumber - 1] || that._blankPage;\n\n            progress(that.pageContainer, true);\n\n            page.load();\n\n            drawing.exportSVG(page.group).done(function(data) {\n                progress(that.pageContainer, false);\n                kendo.saveAs({\n                    dataURI: data,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL || \"\",\n                    forceProxy: options.forceProxy,\n                    proxyTarget: options.proxyTarget\n                });\n            });\n        },\n\n        setOptions: function(options)\n        {\n            var that = this;\n\n            if (options.pdfjsProcessing || options.dplProcessing) {\n                that._initProcessor(options || {});\n            }\n\n            options = $.extend(that.options, options);\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (options.page) {\n                that._pageNum = options.page;\n                that.activatePage(options.page, false);\n            }\n\n            if (options.width) {\n                that.element.width(options.width);\n            }\n\n            if (options.height) {\n                that.element.height(options.height);\n            }\n        },\n\n        destroy: function()\n        {\n            if (this._resizeHandler)\n            {\n                kendo.unbindResize(this._resizeHandler);\n            }\n\n            //destroy nested components\n            if (this._errorDialog) {\n                this._errorDialog.destroy();\n            }\n\n            if (this._saveDialog) {\n                this._saveDialog.destroy();\n            }\n\n            if (this._upload) {\n                this._upload.destroy();\n            }\n\n            if (this.pager) {\n                this.pager.destroy();\n            }\n\n            if (this.toolbar) {\n                this.toolbar.unbind();\n                this.toolbar.destroy();\n                this.toolbar = null;\n            }\n\n            if (this.pages && this.pages.length && this._isDPLProcessor()) {\n                this.pages.forEach(function(page) {\n                    page.destroy();\n                });\n                this.pages = [];\n            }\n\n            if (this.pdfScroller) {\n                this.pdfScroller.destroy();\n            }\n            this.pageContainer.off(NS);\n            this.pageContainerWrapper.off(NS);\n\n            Widget.fn.destroy.call(this);\n        },\n\n        _clearPages: function() {\n            this.pages = [];\n            this.document = null;\n            this._pageNum = 1;\n\n            this.pageContainer.off(NS);\n            this.pageContainer.empty();\n\n            if (this.pdfScroller)\n            {\n                this.pdfScroller.destroy();\n            }\n        },\n\n        _toggleSelection: function(enable) {\n            var that = this;\n\n            if (enable === undefined$1) {\n                enable = true;\n            }\n\n            if (that.pdfScroller) {\n                enable ? that.pdfScroller.disablePanEventsTracking() : that.pdfScroller.enablePanEventsTracking();\n            }\n\n            that.pageContainer.toggleClass(styles.enableTextSelection, enable);\n            that.pageContainer.toggleClass(styles.enablePanning, !enable);\n        },\n    });\n\n    ui.plugin(PDFViewer);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}