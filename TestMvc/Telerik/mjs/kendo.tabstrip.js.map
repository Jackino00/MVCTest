{"version":3,"sources":["raw-mjs/kendo.tabstrip.js"],"names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","keys","map","each","trim","extend","isFunction","outerWidth","template","_outerWidth","outerHeight","_outerHeight","Widget","excludedNodesRegExp","NS","HREF","PREV","NEXT","SHOW","LINK","LINK_TEXT","LAST","CLICK","IMAGE","FIRST","SELECT","ACTIVATE","CONTENT","CONTENTURL","MOUSEENTER","CONTENTLOAD","DISABLEDSTATE","ACTIVESTATE","FOCUSEDSTATE","HOVERSTATE","NAVIGATABLEITEMS","KEYBOARDNAVIGATABLEITEMS","HOVERABLEITEMS","ARIA_HIDDEN","ARIA_CONTROLS","ARIA_DISABLED","ARIA_SELECTED","ARIA_LABELLEDBY","templates","content","data","contentAttributes","item","textWrapper","tag","contentUrl","textAttributes","image","sprite","text","itemWrapper","wrapperCssClass","group","active","imageUrl","spriteCssClass","empty","rendering","result","index","enabled","push","length","join","url","encoded","htmlEncode","attr","updateTabClasses","tabs","children","addClass","filter","prop","parent","this","is","contents","nodeName","match","nodeType","nodeValue","wrapAll","updateFirstLast","tabGroup","removeClass","scrollButtonHtml","buttonClass","iconClass","icon","ajaxXhr","current","request","ajaxSettings","xhr","event","progressUpload","progress","upload","addEventListener","evt","noProgress","XMLHttpRequest","TabStrip","init","element","options","value","that","fn","call","_animations","_contentUrls","contentUrls","_wrapper","_isRtl","support","isRtl","wrapper","_updateClasses","_dataSource","_tabindex","dataSource","fetch","_tabPosition","_scrollable","_sortable","_processContentUrls","_attachEvents","_initialActivate","notify","_showWatermarkOverlay","events","dataEncodedField","dataTextField","dataContentField","dataImageUrlField","dataUrlField","dataSpriteCssClass","dataContentUrlField","tabPosition","tabTemplate","animation","open","effects","duration","close","collapsible","navigatable","applyMinHeight","scrollable","distance","sortable","setDataSource","setOptions","on","_keyDownProxy","off","activateTab","find","animationSettings","hasCloseAnimation","neighbours","oldTab","itemIndex","reverse","hide","size","kendoRemoveClass","contentAnimators","inRequest","abort","_current","trigger","_scrollableModeActive","_scrollTabsToItem","visibleContents","contentHolder","contentElement","closest","tabsHeight","parseInt","css","kendoStop","kendoAnimate","isAjaxContent","showContentElement","removeAttr","resize","complete","oldMinHeight","showContent","ajaxRequest","kendoAddClass","link","ajaxOptions","type","cache","dataType","error","status","success","destroy","html","e","ajax","append","tab","inserted","_create","idx","tabWrapper","before","_updateContentElements","isNaN","contentElements","kineticScrollNeeded","i","len","eq","scrollContainer","touch","deactivateTab","_refreshHandler","unbind","_scrollPrevButton","remove","_scrollNextButton","disable","_toggleDisabled","enable","state","insertAfter","referenceTab","prev","referenceContent","fromIndex","newTabsCreated","after","_moveUrlItem","insertBefore","next","items","refresh","getter","view","action","model","indexOf","field","get","reload","elements","_removeUrlItem","select","arguments","hasClass","_active","setTimeout","_endItem","_appendUrlItem","_itemClick","bind","_toggleHover","_keydown","_click","prevent","isAnchor","href","collapse","oldFocusedTab","_focused","charAt","ObservableArray","toJSON","isPlainObject","Array","isArray","renderItem","tabstripContent","renderContent","applyStylesFromKendoAttributes","test","parentNode","className","getAttribute","add","candidate","preventFocus","focused","DataSource","create","_elementId","elementId","wrapperId","guid","tabStripID","_getItem","selectedItems","childNodes","_item","endItem","document","activeElement","browser","msie","setActive","j","focus","currentTarget","preventDefault","key","keyCode","rtl","isHorizontal","target","DOWN","UP","RIGHT","LEFT","ENTER","SPACEBAR","HOME","END","from","to","splice","_resize","wrapperOffsetWidth","tabGroupScrollWidth","scrollPrevButton","scrollNextButton","_scrollableAllowed","offsetWidth","scrollWidth","_nowScrollingTabs","mouseDown","mouseUp","isRtlScrollDirection","edge","prepend","_scrollTabsByDelta","_toggleScrollButtons","itemPosition","currentScrollOffset","scrollLeft","itemWidth","itemOffset","position","left","first","tabGroupWidth","mozilla","webkit","version","finish","animate","delta","scrLeft","jQuery","fx","axis","Sortable","container","hint","el","change","_sortChange","start","reference","newIndex","oldIndex","appendTo","toggleClass","ul","Math","floor","disableNextButton","abs","activeItem","activeTab","wrap","prependTo","display","isInitialUpdate","tabId","contentId","setAttribute","currentContent","mobile","Scroller","touchScroller","tabStrip","templateOptions","plugin","kendo$1"],"mappings":"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","file":"kendo.tabstrip.js","sourcesContent":["import './kendo.data.js';\nimport './kendo.icons.js';\nimport './kendo.sortable.js';\n\nconst __meta__ = {\n    id: \"tabstrip\",\n    name: \"TabStrip\",\n    category: \"web\",\n    description: \"The TabStrip widget displays a collection of tabs with associated tab content.\",\n    depends: [ \"data\", \"icons\", \"sortable\" ],\n    features: [ {\n        id: \"tabstrip-fx\",\n        name: \"Animation\",\n        description: \"Support for animation\",\n        depends: [ \"fx\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        keys = kendo.keys,\n        map = $.map,\n        each = $.each,\n        trim = kendo.trim,\n        extend = $.extend,\n        isFunction = kendo.isFunction,\n        template = kendo.template,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        Widget = ui.Widget,\n        excludedNodesRegExp = /^(a|div)$/i,\n        NS = \".kendoTabStrip\",\n        IMG = \"img\",\n        HREF = \"href\",\n        PREV = \"prev\",\n        NEXT = \"next\",\n        SHOW = \"show\",\n        LINK = \"k-link\",\n        LINK_TEXT = \"k-link-text\",\n        LAST = \"k-last\",\n        CLICK = \"click\",\n        ERROR = \"error\",\n        EMPTY = \":empty\",\n        IMAGE = \"k-image\",\n        FIRST = \"k-first\",\n        SELECT = \"select\",\n        ACTIVATE = \"activate\",\n        CONTENT = \"k-tabstrip-content\",\n        CONTENTURL = \"contentUrl\",\n        MOUSEENTER = \"mouseenter\",\n        MOUSELEAVE = \"mouseleave\",\n        CONTENTLOAD = \"contentLoad\",\n        DISABLEDSTATE = \"k-disabled\",\n        ACTIVESTATE = \"k-active\",\n        FOCUSEDSTATE = \"k-focus\",\n        HOVERSTATE = \"k-hover\",\n        NAVIGATABLEITEMS = \".k-item:not(.\" + DISABLEDSTATE + \")\",\n        KEYBOARDNAVIGATABLEITEMS = \".k-item\",\n        HOVERABLEITEMS = \".k-tabstrip-items > \" + NAVIGATABLEITEMS + \":not(.\" + ACTIVESTATE + \")\",\n        DEFAULTDISTANCE = 200,\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_CONTROLS = \"aria-controls\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_ORIENTATION = \"aria-orientation\",\n        ARIA_LABELLEDBY = \"aria-labelledby\",\n\n        templates = {\n            content: (data) =>\n                `<div class='k-tabstrip-content' ${data.contentAttributes(data)} tabindex='0'>${data.content(data.item)}</div>`,\n            textWrapper: ({ tag, item , contentUrl, textAttributes, image, sprite, text }) =>\n                `<${tag(item)} class='${LINK}' ${contentUrl(item)} ${textAttributes(item)}>` + `${image(item)}${sprite(item)}` +\n                        `<span class='${LINK_TEXT}'>${text(item)}</span>` +\n                `</${tag(item)}>`,\n            item: (data) =>templates.itemWrapper(data,`${data.textWrapper(data)}`),\n            itemWrapper: (data, item) =>\n                `<li class='${data.wrapperCssClass(data.group, data.item)}' role='tab' ${data.item.active ? \"aria-selected='true'\" : ''}>` +\n                    item +\n                \"</li>\",\n            image: ({ imageUrl }) => `<img class='k-image' alt='' src='${imageUrl}' />`,\n            sprite: ({ spriteCssClass }) => `<span class='k-sprite ${spriteCssClass}'></span>`,\n            empty: () => \"\",\n        },\n\n        rendering = {\n            wrapperCssClass: function(group, item) {\n                var result = [\"k-item\"],\n                    index = item.index;\n\n                if (item.enabled === false) {\n                    result.push(\"k-disabled\");\n                }\n\n                if (index === 0) {\n                    result.push(\"k-first\");\n                }\n\n                if (index == group.length - 1) {\n                    result.push(\"k-last\");\n                }\n\n                return result.join(\" \");\n            },\n            textAttributes: function(item) {\n                return item.url ? \" href='\" + item.url + \"'\" : \"\";\n            },\n            text: function(item) {\n                return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n            },\n            tag: function(item) {\n                return item.url ? \"a\" : \"span\";\n            },\n            contentAttributes: function(content) {\n                return content.active !== true ? ` ${kendo.attr(\"style-display\")}=\"none\" aria-hidden='true'` : \"\";\n            },\n            content: function(item) {\n                return item.content ? item.content : item.contentUrl ? \"\" : \"&nbsp;\";\n            },\n            contentUrl: function(item) {\n                return item.contentUrl ? kendo.attr(\"content-url\") + '=\"' + item.contentUrl + '\"' : \"\";\n            }\n        };\n\n    function updateTabClasses(tabs) {\n        tabs.children(IMG)\n            .addClass(IMAGE);\n\n        tabs.children(\"a\")\n            .addClass(LINK)\n            .children(IMG)\n            .addClass(IMAGE);\n\n        tabs.filter(\"li[disabled]\")\n            .addClass(DISABLEDSTATE)\n            .attr(ARIA_DISABLED, \"true\")\n            .prop(\"disabled\", false);\n\n        tabs.filter(\":not([class*=k-state])\")\n            .children(\"a\")\n            .filter(\":focus\")\n            .parent()\n            .addClass(ACTIVESTATE);\n\n        tabs.attr(\"role\", \"tab\");\n\n        tabs.each(function() {\n            var item = $(this);\n            item.attr(ARIA_SELECTED, item.is(\".\" + ACTIVESTATE));\n\n            if (!item.children(\".\" + LINK).length) {\n                item\n                    .contents() // exclude groups, real links, templates and empty text nodes\n                    .filter(function() { return (!this.nodeName.match(excludedNodesRegExp) && !(this.nodeType == 3 && !trim(this.nodeValue))); })\n                    .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK + \"'/>\")\n                    .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK_TEXT + \"'/>\");\n            }\n        });\n\n    }\n\n    function updateFirstLast(tabGroup) {\n        var tabs = tabGroup.children(\".k-item\");\n\n        tabs.filter(\".k-first:not(:first-child)\").removeClass(FIRST);\n        tabs.filter(\".k-last:not(:last-child)\").removeClass(LAST);\n        tabs.filter(\":first-child\").addClass(FIRST);\n        if (tabs.length > 1) {\n            tabs.filter(\":last-child\").addClass(LAST);\n        }\n    }\n\n    function scrollButtonHtml(buttonClass, iconClass) {\n        return `<span aria-hidden='true' tabindex='-1' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-tabstrip-${buttonClass}' unselectable='on'>${kendo.ui.icon({ icon: iconClass, iconClass: \"k-button-icon\" })}</span>`;\n    }\n\n    function ajaxXhr() {\n        var current = this,\n            request = $.ajaxSettings.xhr(),\n            event = current.progressUpload ? \"progressUpload\" : current.progress ? \"progress\" : false;\n\n        if (request) {\n            $.each([ request, request.upload ], function() {\n                if (this.addEventListener) {\n                    this.addEventListener(\"progress\", function(evt) {\n                        if (event) {\n                            current[event](evt);\n                        }\n                    }, false);\n                }\n            });\n        }\n\n        current.noProgress = !(window.XMLHttpRequest && ('upload' in new XMLHttpRequest()));\n        return request;\n    }\n\n    var TabStrip = Widget.extend({\n        init: function(element, options) {\n            var that = this, value;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._animations(that.options);\n\n            options = that.options;\n\n            that._contentUrls = options.contentUrls || [];\n\n            that._wrapper();\n            that._isRtl = kendo.support.isRtl(that.wrapper);\n\n            that._updateClasses();\n            that._dataSource();\n\n            that._tabindex(that.tabGroup);\n            that.tabGroup.attr(\"role\", \"tablist\");\n\n            if (options.dataSource) {\n                that.dataSource.fetch();\n            }\n\n            that._tabPosition();\n            that._scrollable();\n            that._sortable();\n            that._processContentUrls();\n            that._attachEvents();\n\n            if (that.options.value) {\n                value = that.options.value;\n            }\n\n            that._initialActivate();\n            that.value(value);\n            kendo.notify(that);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay(that.element[0]);\n            }\n        },\n\n        events: [\n            SELECT,\n            ACTIVATE,\n            SHOW,\n            ERROR,\n            CONTENTLOAD,\n            \"change\",\n            \"dataBinding\",\n            \"dataBound\"\n        ],\n\n        options: {\n            name: \"TabStrip\",\n            dataEncodedField: \"\",\n            dataTextField: \"\",\n            dataContentField: \"\",\n            dataImageUrlField: \"\",\n            dataUrlField: \"\",\n            dataSpriteCssClass: \"\",\n            dataContentUrlField: \"\",\n            tabPosition: \"top\",\n            tabTemplate: null,\n            animation: {\n                open: {\n                    effects: \"expand:vertical fadeIn\",\n                    duration: 200\n                },\n                close: { // if close animation effects are defined, they will be used instead of open.reverse\n                    duration: 200\n                }\n            },\n            collapsible: false,\n            navigatable: true,\n            contentUrls: false,\n            applyMinHeight: true,\n            scrollable: {\n                distance: DEFAULTDISTANCE\n            },\n            sortable: false\n        },\n\n        setDataSource: function(dataSource) {\n            var that = this;\n\n            that.options.dataSource = dataSource;\n            that._dataSource();\n            that.dataSource.fetch();\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                animation = that.options.animation;\n\n            that._animations(options);\n\n            if (options.contentUrls) {\n                that._contentUrls = options.contentUrls;\n            }\n\n            options.animation = extend(true, animation, options.animation);\n\n            if (options.navigatable) {\n                that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n            } else {\n                that.tabGroup.off(\"keydown\" + NS, that._keyDownProxy);\n            }\n\n            Widget.fn.setOptions.call(that, options);\n        },\n\n        activateTab: function(item) {\n            if (this.tabGroup.children(\"[data-animating]\").length) { return; }\n\n            item = this.tabGroup.find(item);\n\n            var that = this,\n                animationSettings = that.options.animation,\n                animation = animationSettings.open,\n                close = extend({}, animationSettings.close),\n                hasCloseAnimation = close && \"effects\" in close,\n                neighbours = item.parent().children(),\n                oldTab = neighbours.filter(\".\" + ACTIVESTATE),\n                itemIndex = neighbours.index(item),\n                isAnimationEnabled = animation && \"duration\" in animation && \"effects\" in animation;\n\n            close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n            // deactivate previously active tab\n            if (kendo.size(animation.effects)) {\n                oldTab.kendoRemoveClass(ACTIVESTATE, { duration: close.duration });\n                item.kendoRemoveClass(HOVERSTATE, { duration: close.duration });\n            } else {\n                oldTab.removeClass(ACTIVESTATE);\n                item.removeClass(HOVERSTATE);\n            }\n\n            // handle content elements\n            var contentAnimators = that.contentAnimators;\n\n            if (that.inRequest) {\n                that.xhr.abort();\n                that.inRequest = false;\n            }\n\n            if (contentAnimators.length === 0) {\n                that.tabGroup.find(\".\" + ACTIVESTATE);\n\n                item.addClass(ACTIVESTATE);\n                that._current(item, true);\n\n                that.trigger(\"change\");\n\n                if (that._scrollableModeActive) {\n                    that._scrollTabsToItem(item);\n                }\n\n                return false;\n            }\n\n            var visibleContents = contentAnimators.filter(\".\" + ACTIVESTATE),\n                contentHolder = that.contentHolder(itemIndex),\n                contentElement = contentHolder.closest(\".k-tabstrip-content\");\n\n            that.tabsHeight = outerHeight(that.tabGroup) +\n                              parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                              parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n            if (contentHolder.length === 0) {\n                visibleContents\n                    .removeClass( ACTIVESTATE )\n                    .attr(ARIA_HIDDEN, true)\n                    .kendoStop(true, true)\n                    .kendoAnimate( close );\n                return false;\n            }\n\n            item.attr(\"data-animating\", true);\n\n            var isAjaxContent = (item.children(\".\" + LINK).data(CONTENTURL) || that._contentUrls[itemIndex] || false) && contentHolder.is(EMPTY),\n                showContentElement = function() {\n                    oldTab.attr(ARIA_SELECTED, false);\n                    item.attr(ARIA_SELECTED, true);\n                    that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n\n                    that._current(item, true);\n\n                    contentElement\n                        .addClass(ACTIVESTATE)\n                        .removeAttr(ARIA_HIDDEN)\n                        .kendoStop(true, true)\n                        .kendoAnimate( extend({ init: function() {\n                            that.trigger(SHOW, { item: item[0], contentElement: contentHolder[0] });\n                            kendo.resize(contentHolder);\n                        } }, animation, {\n                            complete: function() {\n                                // See https://github.com/telerik/kendo-ui-core/issues/6660\n                                that.element.css('min-height', oldMinHeight);\n                                item.removeAttr(\"data-animating\");\n\n                                that.trigger(ACTIVATE, { item: item[0], contentElement: contentHolder[0] });\n                                kendo.resize(contentHolder);\n                            }\n                        } ) );\n                },\n                showContent = function() {\n                    if (!isAjaxContent) {\n                        showContentElement();\n                        that.trigger(\"change\");\n                    } else {\n                        item.removeAttr(\"data-animating\");\n                        that.ajaxRequest(item, contentHolder, function() {\n                            item.attr(\"data-animating\", true);\n                            showContentElement();\n                            that.trigger(\"change\");\n                        });\n                    }\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n\n                };\n\n            // See https://github.com/telerik/kendo-ui-core/issues/6660\n            var oldMinHeight = that.element.css('min-height');\n\n            if (that.options.applyMinHeight) {\n                that.element.css('min-height', that.element.outerHeight());\n            }\n\n            visibleContents.removeClass(ACTIVESTATE);\n            that.tabGroup.find(\".\" + ACTIVESTATE);\n\n            if (kendo.size(animation.effects)) {\n                item.kendoAddClass(ACTIVESTATE, { duration: animation.duration });\n            } else {\n                item.addClass(ACTIVESTATE);\n            }\n\n            visibleContents.attr(ARIA_HIDDEN, true);\n\n            if (visibleContents.length) {\n                visibleContents\n                    .kendoStop(true, true)\n                    .kendoAnimate(extend( {\n                        complete: showContent\n                   }, close ));\n            } else {\n                showContent();\n            }\n\n            return true;\n        },\n\n        ajaxRequest: function(element, content, complete, url) {\n            element = this.tabGroup.find(element);\n\n            var that = this,\n                link = element.find(\".\" + LINK),\n                data = {};\n\n            url = url || link.data(CONTENTURL) || that._contentUrls[element.index()] || link.attr(HREF);\n            that.inRequest = true;\n\n            var ajaxOptions = {\n                type: \"GET\",\n                cache: false,\n                url: url,\n                dataType: \"html\",\n                data: data,\n                xhr: ajaxXhr,\n\n                error: function(xhr, status) {\n                    if (that.trigger(\"error\", { xhr: xhr, status: status })) {\n                        this.complete();\n                    }\n                },\n\n                complete: function(xhr) {\n                    that.inRequest = false;\n                },\n\n                success: function(data) {\n                    try {\n                        kendo.destroy(content);\n                        content.html(data);\n                    } catch (e) {\n                        this.error(this.xhr, \"error\");\n                    }\n\n                    if (complete) {\n                        complete.call(that, content);\n                    }\n\n                    that.trigger(CONTENTLOAD, { item: element[0], contentElement: content[0] });\n                }\n            };\n\n            if (typeof url === \"object\") {\n                ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n\n                if (isFunction(ajaxOptions.url)) {\n                    ajaxOptions.url = ajaxOptions.url();\n                }\n\n                if (isFunction(ajaxOptions.data)) {\n                    ajaxOptions.data = ajaxOptions.data();\n                }\n            }\n\n            that.xhr = $.ajax(ajaxOptions);\n        },\n\n        append: function(tab) {\n            var that = this,\n                inserted = that._create(tab);\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                that.tabGroup.append(this);\n                if (that.options.tabPosition == \"bottom\") {\n                    that.tabWrapper.before(contents);\n                } else {\n                    that.wrapper.append(contents);\n                }\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements();\n            that.resize(true);\n\n            return that;\n        },\n\n        contentElement: function(itemIndex) {\n            if (isNaN(itemIndex - 0)) {\n                return undefined$1;\n            }\n\n            var contentElements = this.contentElements && this.contentElements[0] && !kendo.kineticScrollNeeded ? this.contentElements : this.contentAnimators;\n            var id = $(this.tabGroup.children()[itemIndex]).attr(ARIA_CONTROLS);\n\n            if (contentElements) {\n                for (var i = 0, len = contentElements.length; i < len; i++) {\n                    if (contentElements.eq(i).closest(\".k-tabstrip-content\")[0].id == id) {\n                        return contentElements[i];\n                    }\n                }\n            }\n\n            return undefined$1;\n        },\n\n        contentHolder: function(itemIndex) {\n            var contentElement = $(this.contentElement(itemIndex)),\n                scrollContainer = contentElement.children(\".km-scroll-container\");\n\n            return kendo.support.touch && scrollContainer[0] ? scrollContainer : contentElement;\n        },\n\n        deactivateTab: function(item) {\n            var that = this,\n                animationSettings = that.options.animation,\n                animation = animationSettings.open,\n                close = extend({}, animationSettings.close),\n                hasCloseAnimation = close && \"effects\" in close;\n            item = that.tabGroup.find(item);\n\n            close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\n            if (kendo.size(animation.effects)) {\n                item.kendoRemoveClass(ACTIVESTATE, { duration: animation.duration });\n            } else {\n                item.removeClass(ACTIVESTATE);\n            }\n\n            item.attr(ARIA_SELECTED, false);\n            that.tabGroup.removeAttr(\"aria-activedescendant\");\n\n            that.contentAnimators\n                    .filter(\".\" + ACTIVESTATE)\n                    .kendoStop(true, true)\n                    .kendoAnimate( close )\n                    .removeClass(ACTIVESTATE)\n                    .attr(ARIA_HIDDEN, true);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            if (that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler);\n            }\n\n            that.wrapper.off(NS);\n            that.tabGroup.off(NS);\n\n            if (that._scrollableModeActive) {\n                that._scrollPrevButton.off().remove();\n                that._scrollNextButton.off().remove();\n            }\n\n            kendo.destroy(that.wrapper);\n        },\n\n        disable: function(element) {\n            this._toggleDisabled(element, false);\n\n            return this;\n        },\n\n        enable: function(element, state) {\n            this._toggleDisabled(element, state !== false);\n\n            return this;\n        },\n\n        insertAfter: function(tab, referenceTab) {\n            if ($(tab).is($(referenceTab))) {\n                referenceTab = this.tabGroup.find(referenceTab).prev();\n            } else {\n                referenceTab = this.tabGroup.find(referenceTab);\n            }\n\n            var that = this,\n                inserted = that._create(tab),\n                referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                referenceTab.after(this);\n                referenceContent.after(contents);\n\n                that._moveUrlItem(fromIndex, $(this).index());\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements(inserted.newTabsCreated);\n            that.resize(true);\n\n            return that;\n        },\n\n        insertBefore: function(tab, referenceTab) {\n            if ($(tab).is($(referenceTab))) {\n                referenceTab = this.tabGroup.find(referenceTab).next();\n            } else {\n                referenceTab = this.tabGroup.find(referenceTab);\n            }\n\n            var that = this,\n                inserted = that._create(tab),\n                referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                referenceTab.before(this);\n                referenceContent.before(contents);\n\n                that._moveUrlItem(fromIndex, $(this).index());\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements(inserted.newTabsCreated);\n            that.resize(true);\n\n            return that;\n        },\n\n        items: function() {\n            return this.tabGroup[0].children;\n        },\n\n        refresh: function(e) {\n            var that = this,\n                options = that.options,\n                encoded = kendo.getter(options.dataEncodedField),\n                text = kendo.getter(options.dataTextField),\n                content = kendo.getter(options.dataContentField),\n                contentUrl = kendo.getter(options.dataContentUrlField),\n                image = kendo.getter(options.dataImageUrlField),\n                url = kendo.getter(options.dataUrlField),\n                sprite = kendo.getter(options.dataSpriteCssClass),\n                idx,\n                tabs = [],\n                tab,\n                action,\n                view = that.dataSource.view(),\n                length;\n\n\n            e = e || {};\n            action = e.action;\n\n            if (action) {\n               view = e.items;\n            }\n\n            for (idx = 0, length = view.length; idx < length; idx ++) {\n                tab = {\n                    text: text(view[idx])\n                };\n\n                if (options.tabTemplate) {\n                    tab.model = view[idx];\n                    tab.template = options.tabTemplate;\n                }\n\n                if (options.dataEncodedField) {\n                    tab.encoded = encoded(view[idx]);\n                }\n\n                if (options.dataContentField) {\n                    tab.content = content(view[idx]);\n                }\n\n                if (options.dataContentUrlField) {\n                    tab.contentUrl = contentUrl(view[idx]);\n                }\n\n                if (options.dataUrlField) {\n                    tab.url = url(view[idx]);\n                }\n\n                if (options.dataImageUrlField) {\n                    tab.imageUrl = image(view[idx]);\n                }\n\n                if (options.dataSpriteCssClass) {\n                    tab.spriteCssClass = sprite(view[idx]);\n                }\n\n                tabs[idx] = tab;\n            }\n\n            if (e.action == \"add\") {\n                if (e.index < that.tabGroup.children().length) {\n                    that.insertBefore(tabs, that.tabGroup.children().eq(e.index));\n                } else {\n                    that.append(tabs);\n                }\n            } else if (e.action == \"remove\") {\n                for (idx = 0; idx < view.length; idx++) {\n                   that.remove(e.index);\n                }\n            } else if (e.action == \"itemchange\") {\n                idx = that.dataSource.view().indexOf(view[0]);\n                if (e.field === options.dataTextField) {\n                    that.tabGroup.children().eq(idx).find(\".k-link\").text(view[0].get(e.field));\n                }\n\n                if (e.field === options.dataUrlField) {\n                    that._contentUrls[idx] = view[0].get(e.field);\n                }\n            } else {\n                that.trigger(\"dataBinding\");\n                that.remove(\"li\");\n                that._contentUrls = [];\n                that.append(tabs);\n                that.trigger(\"dataBound\");\n            }\n        },\n\n        reload: function(element) {\n            element = this.tabGroup.find(element);\n            var that = this;\n            var contentUrls = that._contentUrls;\n\n            element.each(function() {\n                var item = $(this),\n                    contentUrl = item.find(\".\" + LINK).data(CONTENTURL) || contentUrls[item.index()],\n                    content = that.contentHolder(item.index());\n\n                if (contentUrl) {\n                    that.ajaxRequest(item, content, null, contentUrl);\n                }\n            });\n\n            return that;\n        },\n\n        remove: function(elements) {\n            var that = this;\n            var type = typeof elements;\n            var contents;\n\n            if (type === \"string\") {\n                elements = that.tabGroup.find(elements);\n            } else if (type === \"number\") {\n                elements = that.tabGroup.children().eq(elements);\n            }\n\n            contents = elements.map(function() {\n                var idx = $(this).index();\n                var content = that.contentElement(idx);\n\n                kendo.destroy(content);\n                that._removeUrlItem(idx);\n\n                return content;\n            });\n\n            elements.remove();\n            contents.empty();\n            contents.remove();\n\n            that._updateContentElements();\n            that.resize(true);\n\n            return that;\n        },\n\n        select: function(element) {\n            var that = this;\n\n            if (arguments.length === 0) {\n                return that.tabGroup.children(\"li.\" + ACTIVESTATE);\n            }\n\n            if (!isNaN(element)) {\n                element = that.tabGroup.children().get(element);\n            }\n\n            element = that.tabGroup.find(element);\n            $(element).each(function(index, item) {\n                item = $(item);\n                if (!item.hasClass(ACTIVESTATE) && !that.trigger(SELECT, { item: item[0], contentElement: that.contentHolder(item.index())[0] })) {\n                    that.activateTab(item);\n                    that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n                }\n            });\n\n            return that;\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value !== undefined$1) {\n                if (value != that.value()) {\n                   that.tabGroup.children().each(function() {\n                        if (kendo.trim($(this).text()) == value) {\n                            that.select(this);\n                        }\n                   });\n                }\n            } else {\n                return that.select().text();\n            }\n        },\n\n        _active: function() {\n            var that = this;\n            setTimeout(function() {\n                var item = that.tabGroup.children().filter(\".\" + ACTIVESTATE);\n\n                item = item[0] ? item : that._endItem(\"first\");\n                if (item[0]) {\n                    that._current(item);\n                }\n            }, 100);\n        },\n\n        _animations: function(options) {\n            if (options && (\"animation\" in options) && !options.animation) {\n                options.animation = { open: { effects: {} }, close: { effects: {} } }; // No animation\n            }\n        },\n\n        _appendUrlItem: function(url) {\n            this._contentUrls.push(url);\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                options = that.options;\n\n            that.tabGroup\n                .on(CLICK + NS, \".k-disabled .k-link\", false)\n                .on(CLICK + NS, \" > \" + NAVIGATABLEITEMS, that._itemClick.bind(that));\n\n            that.wrapper.on(\"focus\" + NS, function() { that.tabGroup.trigger(\"focus\"); });\n\n            that.tabGroup\n                .on(MOUSEENTER + NS + \" \" + MOUSELEAVE + NS, HOVERABLEITEMS, that._toggleHover)\n                .on(\"focus\" + NS, that._active.bind(that))\n                .on(\"blur\" + NS, function() { that._current(null); });\n\n            that._keyDownProxy = that._keydown.bind(that);\n\n            if (options.navigatable) {\n                that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n            }\n        },\n\n        _click: function(item) {\n            var that = this,\n                link = item.find(\".\" + LINK),\n                href = link.attr(HREF),\n                collapse = that.options.collapsible,\n                index = item.index(),\n                contentHolder = that.contentHolder(index),\n                prevent, isAnchor,\n                neighbours = item.parent().children(),\n                oldFocusedTab = neighbours.filter(\".\" + FOCUSEDSTATE);\n\n            if (item.closest(\".k-tabstrip\")[0] != that.wrapper[0]) {\n                return;\n            }\n\n            if (item.is(\".\" + DISABLEDSTATE + (!collapse ? \",.\" + ACTIVESTATE : \"\"))) {\n                oldFocusedTab.removeClass(FOCUSEDSTATE);\n                that._focused = item;\n\n                item.addClass(FOCUSEDSTATE);\n                that._current(item);\n\n                if (that._scrollableModeActive) {\n                    that._scrollTabsToItem(item);\n                }\n                return true;\n            }\n\n            isAnchor = link.data(CONTENTURL) || that._contentUrls[index] || (href && (href.charAt(href.length - 1) == \"#\" || href.indexOf(\"#\" + that.element[0].id + \"-\") != -1));\n            prevent = !href || isAnchor;\n\n            if (that.tabGroup.children(\"[data-animating]\").length) {\n                return prevent;\n            }\n\n            if (that.trigger(SELECT, { item: item[0], contentElement: contentHolder[0] })) {\n                return true;\n            }\n\n            if (prevent === false) {\n                return;\n            }\n\n            if (collapse && item.is(\".\" + ACTIVESTATE)) {\n                that.deactivateTab(item);\n                return true;\n            }\n\n            if (that.activateTab(item)) {\n                that._current(item);\n                prevent = true;\n            }\n\n            return prevent;\n        },\n\n        _create: function(tab) {\n            var that = this,\n            tabs,\n            contents,\n            content,\n            newTabsCreated = false;\n\n            tab = tab instanceof kendo.data.ObservableArray ? tab.toJSON() : tab;\n\n            if ($.isPlainObject(tab) || Array.isArray(tab)) {\n                tab = Array.isArray(tab) ? tab : [tab];\n                newTabsCreated = true;\n\n                tabs = map(tab, function(value, idx) {\n                            that._appendUrlItem(tab[idx].contentUrl || null);\n\n                            return $(TabStrip.renderItem({\n                                group: that.tabGroup,\n                                item: extend(value, { index: idx })\n                            }));\n                        });\n\n                contents = map( tab, function(value, idx) {\n                            if (typeof value.content == \"string\" || value.contentUrl) {\n                                let tabstripContent = $(TabStrip.renderContent({\n                                    item: extend(value, { index: idx })\n                                }));\n\n                                kendo.applyStylesFromKendoAttributes(tabstripContent, [\"display\"]);\n                                return tabstripContent;\n                            }\n                        });\n            } else {\n                if (typeof tab == \"string\" && tab[0] != \"<\") {\n                    tabs = that.element.find(tab);\n                } else {\n                    tabs = $(tab);\n                }\n                contents = $();\n                tabs.each(function() {\n                    if (/k-tabstrip-items/.test(this.parentNode.className)) {\n                        var element = that.element.find(\"[id='\" + this.getAttribute(ARIA_CONTROLS) + \"']\");\n                        content = element;\n                    } else {\n                        content = $(\"<div class='\" + CONTENT + \"'/>\");\n                    }\n\n                    contents = contents.add(content);\n                });\n\n                updateTabClasses(tabs);\n            }\n\n            return { tabs: tabs, contents: contents, newTabsCreated: newTabsCreated };\n        },\n\n        _current: function(candidate, preventFocus) {\n            var that = this,\n                focused = that._focused;\n\n            if (candidate === undefined$1) {\n                return focused;\n            }\n\n            if (focused && candidate && focused[0] === candidate[0]) {\n                focused = false;\n            }\n\n            if (focused) {\n                focused.removeClass(FOCUSEDSTATE);\n            }\n\n            if (candidate && !preventFocus) {\n                candidate.addClass(FOCUSEDSTATE);\n            }\n\n            that._focused = candidate;\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            that.dataSource = kendo.data.DataSource.create(that.options.dataSource)\n                                .bind(\"change\", that._refreshHandler);\n        },\n\n        _elementId: function(element, idx, tab) {\n            var elementId = element.attr(\"id\"),\n                wrapperId = this.element.attr(\"id\"),\n                guid = kendo.guid();\n\n            if (!elementId || elementId.indexOf(wrapperId + \"-\") > -1) {\n                var tabStripID = (wrapperId || guid) + \"-\";\n\n                if (tab) {\n                    tabStripID += \"tab-\";\n                }\n\n                return tabStripID + (idx + 1);\n            }\n\n            return elementId;\n        },\n\n        _endItem: function(action) {\n            return this.tabGroup.children(NAVIGATABLEITEMS)[action]();\n        },\n\n        _getItem: function(action) {\n            return this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[action]();\n        },\n\n        _initialActivate: function() {\n            var that = this,\n                selectedItems = that.tabGroup.children(\"li.\" + ACTIVESTATE),\n                content = that.contentHolder(selectedItems.index());\n\n            if (selectedItems[0] && content.length > 0 && content[0].childNodes.length === 0) {\n                that.activateTab(selectedItems.eq(0));\n            }\n        },\n\n        _item: function(item, action) {\n            var endItem;\n            if (action === PREV) {\n                endItem = \"last\";\n            } else {\n                endItem = \"first\";\n            }\n\n            if (!item) {\n                return this._endItem(endItem);\n            }\n\n            item = item[action]();\n\n            if (!item[0]) {\n                item = this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[endItem]();\n            }\n\n            if (item.hasClass(DISABLEDSTATE)) {\n                item.addClass(FOCUSEDSTATE);\n            }\n            if (item.hasClass(DISABLEDSTATE) || item.hasClass(ACTIVESTATE)) {\n                this._focused = item;\n            }\n\n            return item;\n        },\n\n        _itemClick: function(e) {\n            var that = this,\n                tabGroup = that.tabGroup[0];\n\n            if (tabGroup !== document.activeElement) {\n                var msie = kendo.support.browser.msie;\n                if (msie) {\n                    try {\n                        // does not scroll to the active element\n                        tabGroup.setActive();\n                    } catch (j) {\n                        tabGroup.focus();\n                    }\n                } else {\n                    tabGroup.focus();\n                }\n            }\n\n            if (that._click($(e.currentTarget))) {\n                e.preventDefault();\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                current = that._current(),\n                rtl = that._isRtl,\n                isHorizontal = /top|bottom/.test(that.options.tabPosition),\n                action;\n\n            if (e.target != e.currentTarget || !current) {\n                return;\n            }\n\n            if (key === keys.DOWN && !isHorizontal) {\n                action = NEXT;\n            } else if (key === keys.UP && !isHorizontal) {\n                action = PREV;\n            } else if (key === keys.RIGHT && isHorizontal) {\n                action = rtl ? PREV : NEXT;\n            } else if (key === keys.LEFT && isHorizontal) {\n                action = rtl ? NEXT : PREV;\n            } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                that._click(current);\n                e.preventDefault();\n            } else if (key == keys.HOME) {\n                that._click(that._getItem(\"first\"));\n                e.preventDefault();\n                return;\n            } else if (key == keys.END) {\n                that._click(that._getItem(\"last\"));\n                e.preventDefault();\n                return;\n            }\n\n            if (action) {\n                that._click(that._item(current, action));\n                e.preventDefault();\n            }\n        },\n\n        _moveUrlItem: function(from, to) {\n            this._contentUrls.splice(to, 0, this._contentUrls.splice(from, 1)[0]);\n        },\n\n        _processContentUrls: function() {\n            var that = this;\n\n            if (that._contentUrls.length) {\n                that.tabGroup.children(\".k-item\")\n                    .each(function(index, item) {\n                        var url = that._contentUrls[index];\n\n                        if (typeof url === 'string') {\n                            $(item).find(\">.\" + LINK).data(CONTENTURL, url);\n                        }\n                    });\n            } else {\n                that._contentUrls.length = that.tabGroup.find(\"li.k-item\").length;\n            }\n        },\n\n        _removeUrlItem: function(index) {\n            this._contentUrls.splice(index, 1);\n        },\n\n        _resize: function() {\n            this._scrollable();\n        },\n\n        _scrollable: function() {\n            var that = this,\n                options = that.options,\n                wrapperOffsetWidth,\n                tabGroupScrollWidth,\n                scrollPrevButton,\n                scrollNextButton;\n\n            if (that._scrollableAllowed()) {\n\n                that.wrapper.addClass(\"k-tabstrip-scrollable\");\n\n                wrapperOffsetWidth = that.wrapper[0].offsetWidth;\n                tabGroupScrollWidth = that.tabGroup[0].scrollWidth;\n\n                if (tabGroupScrollWidth > wrapperOffsetWidth && !that._scrollableModeActive) {\n                    that._nowScrollingTabs = false;\n                    that._isRtl = kendo.support.isRtl(that.element);\n                    var mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                    var mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                    var browser = kendo.support.browser;\n                    var isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n\n                        that.tabWrapper.prepend(scrollButtonHtml(\"prev\", \"caret-alt-left\"));\n                        that.tabWrapper.append(scrollButtonHtml(\"next\", \"caret-alt-right\"));\n\n                    scrollPrevButton = that._scrollPrevButton = that.tabWrapper.children(\".k-tabstrip-prev\");\n                    scrollNextButton = that._scrollNextButton = that.tabWrapper.children(\".k-tabstrip-next\");\n\n                    scrollPrevButton.on(mouseDown + NS, function() {\n                        that._nowScrollingTabs = true;\n                        that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? 1 : -1));\n                    });\n\n                    scrollNextButton.on(mouseDown + NS, function() {\n                        that._nowScrollingTabs = true;\n                        that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? -1 : 1));\n                    });\n\n                    scrollPrevButton.add(scrollNextButton).on(mouseUp + NS, function() {\n                        that._nowScrollingTabs = false;\n                    });\n\n                    that._scrollableModeActive = true;\n\n                    that._toggleScrollButtons();\n                } else if (that._scrollableModeActive && tabGroupScrollWidth <= wrapperOffsetWidth) {\n                    that._scrollableModeActive = false;\n\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n\n                    that._scrollPrevButton.off().remove();\n                    that._scrollNextButton.off().remove();\n                } else if (!that._scrollableModeActive) {\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n                } else {\n                    that._toggleScrollButtons();\n                }\n            }\n        },\n\n        _scrollableAllowed: function() {\n            var options = this.options;\n\n            if (options.scrollable && !options.scrollable.distance) {\n                options.scrollable = { distance: DEFAULTDISTANCE };\n            }\n\n            return options.scrollable && !isNaN(options.scrollable.distance) && (options.tabPosition == \"top\" || options.tabPosition == \"bottom\");\n        },\n\n        _scrollTabsToItem: function(item) {\n            var that = this,\n                tabGroup = that.tabGroup,\n                currentScrollOffset = kendo.scrollLeft(tabGroup),\n                itemWidth = outerWidth(item),\n                itemOffset = that._isRtl ? item.position().left : item.position().left - tabGroup.children().first().position().left,\n                tabGroupWidth = tabGroup[0].offsetWidth,\n                browser = kendo.support.browser,\n                itemPosition;\n\n            if (that._isRtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                currentScrollOffset = currentScrollOffset * -1;\n            }\n\n            if (that._isRtl) {\n                if (itemOffset < 0) {\n                    itemPosition = currentScrollOffset + itemOffset - (tabGroupWidth - currentScrollOffset);\n                } else if (itemOffset + itemWidth > tabGroupWidth) {\n                    itemPosition = currentScrollOffset + itemOffset - itemWidth;\n                }\n            } else {\n                if (currentScrollOffset + tabGroupWidth < itemOffset + itemWidth) {\n                    itemPosition = itemOffset + itemWidth - tabGroupWidth;\n                } else if (currentScrollOffset > itemOffset) {\n                    itemPosition = itemOffset;\n                }\n            }\n\n            tabGroup.finish().animate({ \"scrollLeft\": itemPosition }, \"fast\", \"linear\", function() {\n                that._toggleScrollButtons();\n            });\n        },\n\n        _scrollTabsByDelta: function(delta) {\n            var that = this;\n            var tabGroup = that.tabGroup;\n            var scrLeft = kendo.scrollLeft(tabGroup);\n            var browser = kendo.support.browser;\n\n            if (that._isRtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrLeft = scrLeft * -1;\n            }\n\n            tabGroup.finish().animate({ \"scrollLeft\": scrLeft + delta }, \"fast\", \"linear\", function() {\n                if (that._nowScrollingTabs && !jQuery.fx.off) {\n                    that._scrollTabsByDelta(delta);\n                } else {\n                    that._toggleScrollButtons();\n                }\n            });\n        },\n\n        _sortable: function() {\n            var that = this,\n            options = that.options,\n            position = options.tabPosition,\n            axis = position === 'left' || position === 'right' ? 'y' : 'x';\n\n            if (!that.options.sortable) {\n                return;\n            }\n\n            that.sortable = new kendo.ui.Sortable(that.tabGroup, {\n                filter: \"li.k-item\",\n                axis,\n                container: that.tabWrapper,\n                hint: el => `<div id='hint' class='k-tabstrip k-tabstrip-${position}'>\n                                <div class= 'k-tabstrip-items-wrapper k-hstack'>\n                                    <ul class='k-tabstrip-items k-reset'>\n                                        <li class='k-item k-first k-active'>${el.html()}</li>\n                                    </ul>\n                                </div>\n                            </div>`,\n                change: that._sortChange.bind(that),\n                start: e => that.activateTab(e.item)\n            });\n\n        },\n\n        _sortChange: function(e) {\n            var that = this,\n                reference = that.tabGroup.children().eq(e.newIndex);\n\n            if (e.oldIndex < e.newIndex) {\n                that.insertAfter(e.item, reference);\n            } else {\n                that.insertBefore(e.item, reference);\n            }\n        },\n\n        _tabPosition: function() {\n            var that = this,\n                tabPosition = that.options.tabPosition;\n\n            that.wrapper.addClass(\"k-tabstrip-\" + tabPosition);\n\n            if (tabPosition == \"bottom\") {\n                that.tabWrapper.appendTo(that.wrapper);\n            }\n\n            if (tabPosition === \"left\" || tabPosition === \"right\") {\n                that.tabGroup.attr(ARIA_ORIENTATION, \"vertical\");\n            }\n\n            that.resize(true);\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVERSTATE, e.type == MOUSEENTER);\n        },\n\n        _toggleDisabled: function(element, enable) {\n            element = this.tabGroup.find(element);\n            element.each(function() {\n                $(this)\n                    .toggleClass(DISABLEDSTATE, !enable)\n                    .attr(ARIA_DISABLED, !enable);\n            });\n        },\n\n        _toggleScrollButtons: function() {\n            var that = this,\n                ul = that.tabGroup,\n                scrollLeft = Math.floor(kendo.scrollLeft(ul));\n                const disableNextButton = Math.abs(scrollLeft - (ul[0].scrollWidth - ul[0].offsetWidth)) <= 1;\n\n                that._scrollPrevButton.toggleClass('k-disabled', scrollLeft === 0);\n                that._scrollNextButton.toggleClass('k-disabled', disableNextButton);\n        },\n\n        _updateClasses: function() {\n            var that = this,\n                tabs, activeItem, activeTab;\n            var isHorizontal = /top|bottom/.test(that.options.tabPosition);\n\n            that.wrapper.addClass(\"k-tabstrip\");\n\n            if (!that.tabGroup) {\n                that.tabGroup = that.wrapper.children(\"ul\");\n                that.tabGroup.wrap('<div />');\n                that.tabWrapper = that.tabGroup.parent();\n            }\n\n            if (!that.tabGroup[0]) {\n                that.tabGroup = $(\"<ul />\").prependTo(that.wrapper);\n                that.tabGroup.wrap('<div />');\n                that.tabWrapper = that.tabGroup.parent();\n            }\n\n            that.tabWrapper.addClass('k-tabstrip-items-wrapper');\n            that.tabWrapper.addClass(isHorizontal ? 'k-hstack' : 'k-vstack');\n            that.tabGroup.addClass('k-tabstrip-items k-reset');\n\n            tabs = that.tabGroup.find(\"li\").addClass(\"k-item\");\n\n            if (tabs.length) {\n                activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n                activeTab = activeItem >= 0 ? activeItem : undefined$1;\n\n                that.tabGroup // Remove empty text nodes\n                    .contents()\n                    .filter(function() { return (this.nodeType == 3 && !trim(this.nodeValue)); })\n                    .remove();\n            }\n\n            that.contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n            that.contentElements\n                .addClass(CONTENT)\n                .eq(activeTab)\n                .addClass(ACTIVESTATE)\n                .css({ display: \"block\" });\n\n            if (tabs.length) {\n                updateTabClasses(tabs);\n                activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n\n                that.tabGroup.attr(\"aria-activedescendant\", tabs.eq(activeItem).attr(\"id\"));\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(true);\n            }\n        },\n\n        _updateContentElements: function(isInitialUpdate) {\n            var that = this,\n                contentUrls = that._contentUrls,\n                items = that.tabGroup.children(\".k-item\"),\n                contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"),\n                _elementId = that._elementId.bind(that);\n\n            if (contentElements.length && (items.length > contentElements.length)) {\n                contentElements.each(function(idx) {\n                    // Generate an ID for each content element\n                    var contentId = _elementId($(this), idx),\n                        item = items.filter(\"[aria-controls=\" + (contentId || 0) + \"]\")[0],\n                        tabId;\n\n                    if (!item && isInitialUpdate) {\n                        // On initialization of the widget get the tab by its index\n                        item = items[idx];\n                    }\n\n                    if (item) {\n                        // set the tab aria-controls attribute to the content ID\n                        item.setAttribute(ARIA_CONTROLS, contentId);\n                        tabId = item.id = _elementId($(item), idx, true);\n                        this.setAttribute(ARIA_LABELLEDBY, tabId);\n                    }\n\n                    // set the get (possibly existing) ID on the content element\n                    this.setAttribute(\"id\", contentId);\n                });\n            } else {\n                items.each(function(idx) {\n                    var currentContent = contentElements.eq(idx),\n                        contentId = _elementId(currentContent, idx),\n                        tabId;\n\n                    // set the tab aria-controls attribute to the content ID\n                    this.setAttribute(ARIA_CONTROLS, contentId);\n\n                    tabId = this.id = _elementId($(this), idx, true);\n\n                    if (!currentContent.length && contentUrls[idx]) {\n                        // Append content element in case contentUrl is used\n                        $(\"<div class='\" + CONTENT + \"'/>\").appendTo(that.wrapper).attr(\"id\", contentId);\n                    } else {\n                        // set the ID on the content element\n                        currentContent.attr(\"id\", contentId);\n                    }\n\n                    currentContent.attr(\"role\", \"tabpanel\");\n                    currentContent.attr(\"tabindex\", \"0\");\n                    currentContent.attr(ARIA_LABELLEDBY, tabId);\n                    currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n                });\n            }\n\n            that.contentElements = that.contentAnimators = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"); // refresh the contents\n\n            that.tabsHeight = outerHeight(that.tabGroup) +\n                              parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                              parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n            if (kendo.kineticScrollNeeded && kendo.mobile.ui.Scroller) {\n                kendo.touchScroller(that.contentElements);\n                that.contentElements = that.contentElements.children(\".km-scroll-container\");\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n\n            if (that.element.is(\"ul\")) {\n                that.wrapper = that.element.wrapAll(\"<div />\").parent();\n            } else {\n                that.wrapper = that.element;\n            }\n        }\n    });\n\n    // client-side rendering\n    extend(TabStrip, {\n        renderItem: function(options) {\n            options = extend({ tabStrip: {}, group: {} }, options);\n\n            var empty = templates.empty,\n                item = options.item,\n                templateOptions = extend(options, {\n                    image: item.imageUrl ? templates.image : empty,\n                    sprite: item.spriteCssClass ? templates.sprite : empty,\n                    textWrapper: templates.textWrapper\n                }, rendering);\n\n                if (item.template) {\n                    return templates.itemWrapper(templateOptions, kendo.template(item.template)(item.model));\n                }\n\n            return templates.item(templateOptions);\n        },\n\n        renderContent: function(options) {\n            return templates.content(extend(options, rendering));\n        }\n    });\n\n    kendo.ui.plugin(TabStrip);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}