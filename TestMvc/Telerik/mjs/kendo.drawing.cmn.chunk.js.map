{"version":3,"sources":["raw-mjs/kendo.drawing.cmn.chunk.js"],"names":["parseInlineStyles","__meta__","id","name","category","description","depends","hidden","chunk","deflate$1","Class","Observable","call","this","_events","__proto__","prototype","Object","create","constructor","bind","eventName","handlers","one","arguments$1","arguments","this$1$1","eventNames","getArray","handlersIsFunction","isFunction","length","undefined","field","loop","idx","eventName$1","handler","original","unbind","apply","push","first","unshift","trigger","e","events","sender","_defaultPrevented","preventDefault","isDefaultPrevented","slice","splice","value","animationFrameProxy","callback","wnd","window","animationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","ampRegExp","ltRegExp","quoteRegExp","aposRegExp","gtRegExp","htmlEncode","String","replace","logToConsole","message","console","log","saveAs$1","options","dataURI","fileName","data","Blob","parts","split","contentType","base64","atob","array","Uint8Array","charCodeAt","buffer","type","navigator","msSaveBlob","link","document","createElement","download","href","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","revokeObjectURL","matchUserAgent","userAgent","browserRxs","edge","webkit","safari","opera","msie","mozilla","browser","agent","hasOwnProperty","match","toLowerCase","version","parseInt","documentMode","browser$3","support$1","template","Error","now","Date","getTime","throttle","fn","delay","timeout","lastExecTime","throttled","elapsed","args","exec","clearTimeout","cancel","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","browser$2","matchNamedColor","color","colorNames","keys","regexp","RegExp","join","BaseColor","toHSV","toRGB","toHex","toBytes","toCss","toCssRgba","rgb","parseFloat","Number","a","toFixed","toDisplay","equals","c","parseColor$2","diff","other","NaN","c1","c2","Math","sqrt","pow","r","g","b","clone","Bytes","RGB","h","s","ref","min","max","delta","v","HSV","toHSL","l","d","HSL","round","hex","alpha","n","width","pad","result","toString","i","floor","f","p","q","t","hue2rgb","alphaFromHex","safe","m","ret","DARK_TRESHOLD","Color","formats","resolvedColor","resolveColor","formatRegex","re","processor","process","channels","normalizeByte","padDigit","charAt","substr","isNaN","brightness","percBrightness","isDark","fromBytes","fromRGB","fromHSV","fromHSL","HasObservers","observers","_observers","addObserver","element","removeObserver","index","indexOf","methodName","event","_suspended","observer","optionsChange","geometryChange","suspend","resume","_observerField","append","second","literals","arabicToRoman","values","roman","shift","createPromise","resolveFn","rejectFn","promise","Promise","resolve","reject","_state","state","UNDEFINED","defined","defId","definitionId","DEG_TO_RAD","PI","MAX_NUM","MAX_VALUE","MIN_NUM","deg","radians","fromCharCode","BOM","encodeUTF8","input","output","code","hi","low","encodeUnit","codeUnit","encodeUTF16BE","trail","KEY_STR","encodeBase64","utfInput","chr1","chr2","chr3","enc1","enc2","enc3","enc4","eventCoordinates","x","location","y","pageX","clientX","pageY","clientY","eventElement","touch","initialTouch","target","isTransparent","last","limitValue","mergeSort","cmp","sort","left","right","ai","bi","merge","promiseAll","promises","all","rad","degrees","pow$1","precision","power","valueOrDefault","defaultValue","bindEvents","trim","addEventListener","elementOffset","box","getBoundingClientRect","documentElement","top","pageYOffset","scrollTop","clientTop","pageXOffset","scrollLeft","clientLeft","elementStyles","styles","style","getComputedStyle","stylesArray","Array","isArray","getPixels","elementSize","size","size$1","height","unbindEvents","removeEventListener","elementPadding","paddingLeft","paddingTop","Matrix","multiplyCopy","matrix","invert","det","toArray","separator","translate","unit","rotate","angle","cos","sin","scale","scaleX","scaleY","IDENTITY","matrixRegexp","parseMatrix","matrixString","members","map","Function","concat","transformMatrix","transform","elementScale","parent","parentElement","parentMatrix","LRUCache","_size","_length","_map","put","key","entry","_head","_tail","newer","older","get","REPLACE_REGEX","SPACE$1","normalizeText","text","objectKey","object","hashKey","str","hash","zeroSize","baseline","defaultMeasureBox","DEFAULT_OPTIONS$1","baselineMarkerSize","setProperty","TextMetrics","_cache","assign","measure","cacheKey","cachedResult","measureBox","baselineMarker","_baselineMarker","cloneNode","textStr","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","display","verticalAlign","overflow","measureText","current","util","freeze","OptionsStore","prefix","member","_wrap","set","_set","composite","parentObj","fieldName","obj","_clear","wrapped","setAccessor","getAccessor","defineAccessors","fields","capitalized","toUpperCase","substring","withAccessors","TBase","names","toMatrix","transformation","Point","superclass","staticAccessors","ZERO","configurable","origin","originPoint","translateWith","point","move","scaleCopy","transformCopy","distanceTo","dx","dy","digits","doRound","arg0","arg1","minX","minY","maxX","maxY","minPoint","maxPoint","defineProperties","Size","Rect$1","Rect","cornerRadius","setOrigin","setSize","setCornerRadius","getOrigin","radius","getCornerRadius","getSize","topLeft","bottomRight","topRight","bottomLeft","center","bbox","tl","tr","br","bl","fromPoints","expand","expandCopy","containsPoint","_isOnPath","rectOuter","rectInner","union","intersect","rect1","bottom","rect2","Transformation","_matrix","_optionsChange","multiply","DASH_ARRAYS","dot","dash","longdash","dashdot","longdashdot","longdashdotdot","SOLID","BUTT","PATTERN","Element$1","Element","_initOptions","prototypeAccessors","nodeType","clip","transform$1","parentTransform","currentTransform","combinedMatrix","elementMatrix","visible","opacity","className","clippedBBox","_clippedBBox","transformedPoint","_hasFill","_containsPoint","_hasStroke","fill","stroke","ellipseExtremeAngles","rx","ry","extremeX","extremeY","atan2","PI_DIV_2","Circle$1","Circle","setCenter","setRadius","getCenter","pointAt","_pointAt","extremeAngles","currentPointX","currentPointY","currentPoint","pointDistance","GRADIENT","paintable","anonymous","newFill","IDENTITY_MATRIX_HASH","measurable","matrixHash","_bboxCache","_matrixHash","_bbox","strokeWidth","geometryAccessor","defineGeometryAccessors","withGeometry","DEFAULT_STROKE$1","geometry","rawBBox","_geometry","PRECISION","close","tolerance","abs","closeOrLess","lineIntersection","p0","p1","p2","p3","s1x","s2x","s1y","s2y","nx","ny","MAX_INTERVAL","accessors","Arc$1","Arc","radiusX","radiusY","startAngle","endAngle","anticlockwise","xRotation","radian","curvePoints","dir","interval","_arcInterval","intervalAngle","subIntervalsCount","ceil","subIntervalAngle","currentAngle","nextAngle","points","_intervalCurvePoints","cp1","cp2","endPoint","currentAngleX","bboxStartAngle","currentAngleY","oldStart","p1Derivative","_derivativeAt","p2Derivative","distance","angleRad","pointRadius","startPoint","intersection","calculateAngle","inAngleRange","start","end","largeArc","swipe","rotation","arcParameters","normalizeArcParameters","x1","y1","x2","y2","cx","cy","parameters","cosine","sine","xT","yT","sign","xt2","yt2","rx2","ry2","constT","cxT","cyT","uX","uY","vX","vY","acos","angleCosine","signEndAngle","pop","slice$1","ElementsArray","_splice","elements","_change","_add","_remove","howMany","_clearObserver","_setObserver","GeometryElementsArray","isOutOfEndPoint","controlPoint","calculateCurveAt","t1","toCubicPolynomial","ComplexNumber","real","img","add","cNumber","addConstant","negate","multiplyConstant","nthRoot","nthR","isReal","numberSign$1","solveQuadraticEquation","squareRoot","solveCubicEquation","y3","z1","z2","Q","b3a","hasRootsInRange","rootField","range","polynomial","roots","curveIntersectionsCount","rayIntersection","count","lineIntersectionsCount","intersects","inRange","pointAccessor","definePointAccessors","withPoints","points$1","Segment","anchor","controlIn","controlOut","bboxTo","toSegment","segmentAnchor","toSegmentAnchor","_curveBoundingBox","_lineBoundingBox","extremesX","_curveExtremesFor","extremesY","xLimits","arrayLimits","yLimits","extremes","_curveExtremes","x3","x4","t2","_intersectionsTo","segment","_isOnCurveTo","endSegment","p4","rotatedPoints","_isOnLineTo","_isOnPathTo","arr","WEIGHT","EXTREMUM_ALLOWED_DEVIATION","X","Y","pointsToCurve","pointsIn","closed","segments","removeDuplicates","initialControlPoint","lastControlPoint","tangent","getTangent","firstControlPoint","secondControlPoint","controlPoints","getControlPoints","cp0","controlPoints$1","controlPoints$2","tangent$2","pointsToClosedCurve","invertAxis","calculateFunction","lineFunction","isLine","xField","yField","restrict","switchOrientation","monotonic","isMonotonicByField","numberSign","secondCP","oldXField","firstCP","restrictControlPoint","cp","xValue","yValue","ShapeMap","path","position","isRelative","lineTo","curveTo","toLineParamaters","arcTo","lastControlIn","previousCommand","paths","reflectionPoint","cubicControlPoints","quadraticToCubicControlPoints","isVertical","insertPosition","third","scaledPoint","SEGMENT_REGEX","SPLIT_REGEX","MOVE","CLOSE","parseParameters","number","parsePath","pathInstance","params","closePath","command","moveTo","elementsBoundingBox","applyTransform","boundingBox","elementBoundingBox","elementsClippedBoundingBox","SPACE","printPoints","len","segmentType","segmentStart","segmentEnd","Path","lineJoin","lastSegment","arc","_addArcSegments","currentType","print","previous","intersectionsCount","pathWidth","segmentBox","parse","MultiPath","fromRect","rect","curveFromPoints","fromArc","prototypeAccessors$1","DEFAULT_STROKE","toPath","DEFAULT_FONT","DEFAULT_FILL","Text","content","font","pos","Image$1","Image","src","_rect","traversable","childrenField","traverse","children","child","Group","childrenChange","action","items","_reparent","insert","insertAt","remove","removeAt","clear","newParent","translateToPoint","transofrm","alignStart","align","axis","sizeField","alignStartReverse","DEFAULT_OPTIONS","alignContent","justifyContent","alignItems","spacing","orientation","lineSpacing","wrap","revers","forEach","forEachReverse","Layout","_fieldMap","_initMap","fieldMap","groupsSizeField","groupAxis","groupsAxis","reverse","justifyAlign","reflow","elementStart","group","groupBox","_initGroups","groups","groupsSize","ref$1","groupOrigin","elementOrigin","groupStart","arrangeElements","groupIdx","lineSize","bboxes","scaledStart","newStart","_newGroup","addGroup","_addToGroup","alignElements","alignment","vAlign","stackElements","stackAxis","otherAxis","previousBBox","createStackElements","stack","vStack","getStacks","maxSize","stacks","stackSize","addElementToStack","wrapElements","startElement","elementIdx","vWrap","fit","rectSize","StopsArray","optionsAccessor","defineOptionsAccessors","withOptions","GradientStop","offset","arg","Gradient","stops","_createStops","_userSpace","userSpace","addStop","removeStop","stop","LinearGradient","RadialGradient","_radius","_fallbackFill","fallbackFill","defaultColor","defaultLine","gap","defaultDot","defaultGrid","Pattern","drawBackground","pattern","dotsPattern","background","shapeOptions","yC2","center1","center2","center3","verticalStripesPattern","xStart","xEnd","startLine","endLine","crosshatchPattern","line1","line2","diagonalStripesPattern","lineCap","gridPattern","squareSize","halfGap","swing","linear","easeOutElastic","time","asin","instance$2","instance$1","easingFunctions","AnimationFactory","_items","register","Animation","_options","duration","easing","setup","step","play","finish","abort","_stopped","wallTime","easingPosition","destroy","PathParser","BaseNode","srcElement","childNodes","observe","load","node","removeSelf","invalidate","Surface$3","Surface","_kendoExportVisual","exportVisual","_click","_handler","_mouseenter","_mouseleave","_mousemove","_visual","_enableTracking","draw","eventTarget","domNode","_kendoNode","currentSize","_resize","resize","force","suspendTracking","_suspendedTracking","resumeTracking","originalEvent","_elementOffset","padding","_surfacePoint","coord","inverseTransform","renderAttr","renderAllAttr","attrs","renderStyle","NODE_MAP$1","setStyle","styleString","styleAttr","replaceStyleAttr","html","restoreStyleAttr","container","from","querySelectorAll","getAttribute","removeAttribute","setInnerHTML","innerHTML","SVG_NS","NONE","POINT_DIGITS","renderSVG","svg","testFragment","testContainer","hasParser","DOMParser","firstChild","namespaceURI","chartDoc","parseFromString","importedDoc","adoptNode","renderSVG$1","TRANSFORM","DefinitionMap","isDefinition","baseUrl","base","getElementsByTagName","url","hashIndex","Node$1","Node","definitions","clearDefinitions","childNode","createDefinitions","attachTo","root","domElement","render","insertBefore","setElement","nodes","childElement","renderChildren","css","updateDefinition","attr","removeAttr","accessibilityOptionsChange","setAttribute","allAttr","toggleAttr","allCss","classList","item","mapTransform","renderTransform","transformChange","mapStyle","cursor","renderOpacity","renderId","renderClassName","renderRole","role","renderAriaLabel","ariaLabel","renderAriaRoleDescription","ariaRoleDescription","renderAriaChecked","ariaChecked","hasDefinitions","definition","definitionChange","refUrl","renderDefinitions","mapDefinitions","skipBaseHref","baseHref","GradientStopNode","renderOffset","GradientNode","loadStops","stopNode","mapCoordinates","renderCoordinates","mapSpace","LinearGradientNode","RadialGradientNode","PatternNode","getWidth","getHeight","ClipNode","renderClipRule","DefinitionNode","definitionMap","addDefinitions","removeDefinitions","createDefinition","addDefinition","mapItem","removeDefinition","RootNode$1","RootNode","defs","firstElementChild","ATTRIBUTE_MAP","PathNode$1","PathNode","renderData","mapFill","mapStroke","renderLinecap","dashType","renderDashType","renderStroke","dashArray","renderFill","ArcNode$1","ArcNode","CircleNode$1","CircleNode","GroupNode$1","GroupNode","ImageNode$1","ImageNode","mapPosition","mapSource","renderPosition","encode","renderSource","MultiPathNode$1","MultiPathNode","RectNode$1","RectNode","ENTITY_REGEX","decodeEntities","test","_element","lastIndex","innerText","TextNode$1","TextNode","setY","renderContent","renderTextAnchor","rtl","renderPaintOrder","paintOrder","RTL","alignToScreen","ctm","getScreenCTM","Surface$2","BaseSurface","_root","direction","_template","_rootElement","click","mouseover","mouseout","mousemove","viewBox","_offset","visual","svgStyles","NODE_MAP","initClip","clearClip","setClip","ctx","beginPath","renderPoints","setTransform","loadElements","cors","setOpacity","globalAlpha","opactity","renderTo","save","restore","FRAME_DELAY","canvas","getContext","invalidateHandler","_invalidate","_rescale","_devicePixelRatio","devicePixelRatio","fixedScale","clearRect","QuadRoot","shapes","shape","_quadNode","pointShapes","QuadNode","inBounds","nodeRect","nodeBottomRight","inserted","_initChildren","halfWidth","halfHeight","ROOT_SIZE","LEVEL_STEP","MAX_LEVEL","ShapesQuadTree","initRoots","rootMap","rootElements","pointShape","sectorRoot","assignZindex","zIndexComparer","zIndex","levelWeight","parents","_zIndex","bboxChange","_insertShape","elementsArray","_insert","sectors","getSectors","inRoot","bottomX","bottomY","SurfaceCursor","surface","renderPath","prevOut","bezierCurveTo","addGradientStops","gradient","addColorStop","_resetCursor","_shapeCursor","_current","_defaultCursor","_getCursor","_setCursor","setLineDash","setLineCap","setLineJoin","setFill","setStroke","hasFill","setGradientFill","setPatternFill","fillStyle","createLinearGradient","createRadialGradient","patternCanvas","patternContext","createPattern","strokeStyle","lineWidth","mozDash","webkitLineDash","onLoad","onError","loading","crossOrigin","complete","onload","onerror","drawImage","textAlign","strokeText","fillText","instance","support","Surface$1","_mouseTrackHandler","_trackMouse","_searchTree","_cursor","image","rootElement","loadingStates","resolveDataURL","toDataURL","then","currentShape","_currentShape","hasDocument","supportsCanvas","supportsSVG","implementation","hasFeature","SurfaceFactory","preferred","exportGroup","rootGroup","exportRoot","exportImage","defaults","surfaceOptions","exportSVG","raw","drawing","HAS_TYPED_ARRAYS","BASE64","keyStr","decode","bytes","BinaryStream","ensure","tmp","write","writeString","writeByte","readByte","readShort","writeShort","w","readLong","writeLong","readLong_","writeLong_","read","times","reader","stream","eof","readFixed","writeFixed","readShort_","writeShort_","readFixed_","writeFixed_","readString","skip","nbytes","saveExcursion","writeBase64","ucs2decode","string","extra","counter","ucs2encode","atobUint8Array","createUint8Array","base64ToUint8Array","hasOwnProperty$2","sortedKeys","Directory","scalerType","tableCount","searchRange","entrySelector","rangeShift","tables","tag","checksum","readTable","Ctor","def","table","maxpow2","LN2","out","directoryLength","headOffset","tableData","adjustment","sum","Table","file","rawData","HeadTable","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","LocaTable","format","head","offsets","offsetOf","lengthOf","needsLongFormat","HheaTable","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numOfLongHorMetrics","ids","MaxpTable","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","glyphIds","HmtxTable","hhea","metrics","advance","lsb","lsbCount","maxp","leftSideBearings","forGlyph","GlyfTable","SimpleGlyph","compound","CompoundGlyph","idOffsets","old2new","cache","glyphFor","loca","numberOfContours","glyph","glyphs","oldIds","NameTable","NameEntry","platformID","platformSpecificID","languageID","nameID","stringOffset","nameRecords","strings","rec","postscriptEntry","postscriptName","psName","strCount","strTable","list","j","PostTable","POSTSCRIPT_GLYPHS","numberOfGlyphs","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","glyphNameIndex","limit","mapping","indexes","post","CmapTable","CmapEntry","codeMap","self","language","segCount","endCode","startCode","idDelta","idRangeOffset","glyphId","ngroups","endCharCode","glyphCode","error","ncid2ogid","ogid2ngid","codes","startCodes","endCodes","new_gid","charcode","segCountX2","deltas","rangeOffsets","startGlyph","renderCharmap","OS2Table","averageCharWidth","weightClass","widthClass","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","familyClass","panose","charRange","vendorID","selection","firstCharIndex","lastCharIndex","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContext","subsetTag","nextSubsetTag","Subfont","subset","unicodes","ngid2ogid","next","firstChar","nextGid","use","ch","reduce","old_gid","cmap","encodeText","glyphsFor","glyf","old_gid_ids","lastChar","hmtx","os2","directory","cidToGidMap","cid","TTFFont","contents","numFonts","widthOfGlyph","makeSubset","deflate","supportsDeflate","browser$1","NL","RESOURCE_COUNTER","PAPER_SIZE","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","c0","c3","c4","c5","c6","c7","c8","c9","c10","executive","folio","legal","letter","tabloid","makeOutput","indentLevel","PDFValue","beforeRender","renderArray","isDate","renderDate","num","PDFDictionary","writeData","withIndent","indent","wrapObject","renderValue","renderFull","getPaperOptions","getOption","paperSize","unitsToPoints","margin","FONT_CACHE","Helvetica","Courier","Symbol","ZapfDingbats","loadBinary","cont","req","XMLHttpRequest","open","responseType","status","response","VBArray","responseBody","send","loadFont","IMAGE_CACHE$1","clearImageCache","loadImage","bloburl","blob","xhr","FileReader","_load","XMLSerializer","serializeToString","readAsText","_onerror","_onload","_trycanvas","imgdata","getImageData","ex","hasAlpha","rawbytes","keepPNG","PDFRawImage","jpegQuality","PDFJpegImage","upscale","readAsArrayBuffer","manyLoader","loadOne","urls","loadFonts","loadImages","images","PDFDocument","objcount","objects","defval","attach","pages","FONTS","IMAGES","GRAD_COL_FUNCTIONS","GRAD_OPC_FUNCTIONS","GRAD_COL","GRAD_OPC","catalog","PDFCatalog","pageTree","PDFPageTree","nameTree","JavaScript","Names","PDFString","S","_","JS","props","setPages","info","Producer","Title","Author","Subject","Keywords","Creator","CreationDate","addPage","paperOptions","contentWidth","contentHeight","PDFStream","Contents","Parent","MediaBox","page","PDFPage","_content","xrefOffset","zeropad","Root","Info","hasOwnProperty$1","getFont","PDFStandardFont","PDFFont","getImage","asStream","getOpacityGS","forStroke","_opacityGSCache","gs","Type","CA","ca","_resourceName","dict","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","mm2pt","mm","cm2pt","cm","in2pt","inch","in","utf16be","Boolean","txt","PDFHexString","PDFName","escape","empty","compress","Filter","Length","pagesObj","Pages","Kids","Count","pageObj","SOF_CODES","colorSpace","bitsPerComponent","Subtype","Width","Height","BitsPerComponent","ColorSpace","Decode","pdf","mask","SMask","BaseFont","Encoding","_pdf","_font","_sub","stemV","isSerif","isScript","getTextWidth","fontSize","sub","fontStream","Length1","descriptor","FontName","FontBBox","Flags","StemV","ItalicAngle","Ascent","Descent","CapHeight","XHeight","FontFile2","charWidths","gid","descendant","CIDSystemInfo","Registry","Ordering","Supplement","FontDescriptor","FirstChar","LastChar","DW","W","CIDToGIDMap","_makeCidToGidMap","DescendantFonts","unimap","PDFToUnicodeCmap","unimapStream","ToUnicode","makeHash","cacheColorGradientFunction","r1","g1","r2","g2","func","FunctionType","Domain","Range","N","C0","C1","cacheOpacityGradientFunction","makeGradientFunctions","prev","cur","prevColor","curColor","opacities","colors","assemble","funcs","Functions","Bounds","Encode","cacheColorGradient","isRadial","coords","shading","ShadingType","Coords","Extend","cacheOpacityGradient","AIS","G","FormType","BBox","CS","I","Resources","ExtGState","Shading","s0","cacheGradient","_rcount","_textMode","_fontResources","_gsResources","_xResources","_patResources","_shResources","_opacity","_annotations","_fontSize","_contextStack","ProcSet","Font","XObject","Annots","_out","isIdentityMatrix","mmul$1","sx","sy","beginText","endText","_requireTextMode","_requireFont","setFont","setTextLeading","setTextRenderingMode","mode","showText","requestedWidth","showTextNL","addLink","uri","ll","_toPage","ur","Border","A","URI","setStrokeColor","setFillOpacity","setStrokeOpacity","setFillColor","gradient$1","oname","sname","setDashPattern","dashPhase","setLineWidth","setMitterLimit","mitterLimit","_context","bezier","bezier1","bezier2","ellipse","_X","_Y","k","circle","nop","clipStroke","closeStroke","fillStroke","comment","line","val","unquote","parseFontDef","fontdef","fontFamily","italic","variant","bold","lineHeight","getFontURL$1","mkFamily","FONT_MAPPINGS","serif","monospace","zapfdingbats","fontAlias","alias","defineFont","d1","e1","f1","d2","TEXT_RENDERING_MODE$1","fillAndStroke","invisible","fillAndClip","strokeAndClip","fillStrokeClip","DEFAULT_IMAGE_DPI","TEXT_RENDERING_MODE","DASH_PATTERNS","dashDot","longDash","longDashDot","longDashDotDot","solid","LINE_CAP","butt","square","LINE_JOIN","miter","bevel","fonts","multiPage","imgDPI","doIt","producer","title","author","subject","keywords","creator","autoPrint","drawPage","optimize","addMargin","drawElement","landscape","dispatch","toBlob","saveAs","filename","proxy","dataURL","proxyURL","_pdfDebug","setStrokeOptions","setFillOptions","setClipping$1","drawPath","drawMultiPath","drawCircle","drawArc","drawText$1","drawGroup","drawRect","parseColor$1","_drawPath","shouldDraw","thing","maybeGradient","maybeFillStroke","maybeDrawRect","seg","_position","renderMode","_pdfRect","_pdfLink","sz","changed","clipbox","currentBox","opt","change","newShape","optArray","el","saveclipbox","savematrix","withClipping","inClipbox","exportPDF","_ignoreMargin","exportPDFToBlob","Document","getFontURL","KENDO_PSEUDO_ELEMENT","KENDO_BULLET_TYPE","IMAGE_CACHE","nodeInfo","inBrowser","microsoft","TextRect","addClass","cls","removeClass","word","setCSS","matches","selector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","closest","cloneNodes","$","$el","$clone","tagName","checked","selected","nextSibling","dive","canvases","orig","kendo","jQuery","getXY","drawDOM","getFontFaces","ownerDocument","doOne","_clipbox","_stackingContext","avoidLinks","_avoidLinks","renderElement","makeTemplate","template$1","div","cacheImages","forceBreak","forcePageBreak","hasPaperSize","pageWidth","pageHeight","hasMargin","doc","copy","_destructive","adjust","tfoot","ol","li","boxSizing","paddingRight","beforePageBreak","whenImagesAreActuallyLoaded","doPageBreak","splitElement","makePage","pageNum","totalPages","keepTogether","tableLayout","getComputedStyle$1","bottomPadding","getPropertyValue","bottomBorder","saveAdjust","isFirst","breakAtElement","fall","fallsOnMargin","splitText","firstInParent","colgroup","thead","grid","gridHead","querySelector","repeatHeaders","createRange","setStartBefore","setEndBefore","extractContents","preventBulletOnListItem","pageClassName","available","selectNodeContents","nextnode","findEOP","setEnd","endOffset","handlePageBreaks","progress","canceled","drawText","pushNodeInfo","renderText","_renderElement","popNodeInfo","parseBackgroundImage","tok_linear_gradient","tok_percent","tok_length","tok_keyword","tok_angle","tok_whitespace","tok_popen","tok_pclose","tok_comma","tok_url","tok_content","cache1","cache2","tok","token","skip_ws","read_stop","percent","propName","to1","to2","parseAngle","to","read_linear_gradient","read_url","splitProperty","in_paren","in_string","looking_at","getFontHeight","styleSheets","doStylesheet","ss","rules","cssRules","styleSheet","family","findFonts","addRule","addRules","rule","cssText","getCounter","getAllCounters","getPrototypeOf","incCounter","inc","resetCounter","doCounters","updateCounters","counterReset","counterIncrement","parseColor","pending","done","bg","alphaNumeral","decoration","createsStackingContext","updateClipbox","emptyClipbox","cb","prop","pseudoElt","defa","pleaseSetPropertyValue","important","getBorder","side","saveStyle","getBorderRadius","sanitizeRadius","getContentBox","innerBox","wt","wr","wb","wl","getTransform","radiansToDegrees","setClipping","clipPath","addArcToPath","adjustBorderRadiusForBox","rTL","rTR","rBR","rBL","tl_x","tl_y","tr_x","tr_y","br_x","br_y","bl_x","bl_y","elementRoundBox","bt","bb","pt","pr","pb","pl","roundBox","rTL0","rTR0","rBR0","rBL0","formatCounter","evalPseudoElementContent","displayCounter","getCssText","_renderWithPseudoElements","fake","pseudo","saveClass","kind","place","psel","backgroundColor","textOverflow","saveTextOverflow","backgroundImage","backgroundRepeat","backgroundPosition","backgroundOrigin","backgroundSize","currentStyle","boxes","cells","innerbox","getClientRects","tableBorderLeft","tableBorderTop","tableBox","firstCellBox","rows","adjustBoxes","drawOneBox","listStyleType","listStylePosition","_drawBullet","bullet","elementIndex","drawBullet","clipit","isFormField","maybeRenderWidget","maybeRenderBullet","renderContents","drawEdge","Wtop","Wleft","Wright","rl","rr","drawRoundCorner","ri","drawOneBackground","drawBackgroundImage","gradientRenderer","img_width","img_height","renderBG","aspect_ratio","orgBox","rewX","rewY","repeatX","isLast","shouldDrawLeft","shouldDrawRight","inv","pxlen","scaledAngle","atan","implicit","widget","widgetInstance","exportDOMVisual","bulletType","renderImage","zIndexSort","sa","sb","za","zb","pa","getSelectedOption","selectedOptions","selectedIndex","renderCheckbox","renderFormField","option","whiteSpace","multiple","serializeSVG","serializer","xml","floats","positioned","floating","search","isJustified","columnCount","textTransform","estimateLineLength","prevLineBottom","underline","lineThrough","overline","underlineOffset","forEachRect","underlinePos","drawTextLine","doChunk","selectNode","clientRects","actuallyGetRangeBoundingRect","chrome","rectangles","Infinity","origStart","setStart","found","findEOL","eol","startOffset","cc","textBox","ypos","groupInStackingContext","main","_dom_zIndex","visibility","mmul"],"mappings":"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","file":"kendo.drawing.cmn.chunk.js","sourcesContent":["import { p as parseInlineStyles } from './kendo.common.cmn.chunk.js';\n\nconst __meta__ = {\n    id: \"drawing.cmn.chunk\",\n    name: \"DrawingCmnChunk\",\n    category: \"web\",\n    description: \"A reusable outputed chunk of code\",\n    depends: ['common.cmn.chunk', 'pako-esm.cmn.chunk'],\n    hidden: true,\n    chunk: true\n};\n\n\nimport { d as deflate$1 } from './kendo.pako-esm.cmn.chunk.js';\n\nvar Class = function Class () {};\n\nvar Observable = (function (Class) {\n    function Observable() {\n        Class.call(this);\n\n        this._events = {};\n    }\n\n    if ( Class ) Observable.__proto__ = Class;\n    Observable.prototype = Object.create( Class && Class.prototype );\n    Observable.prototype.constructor = Observable;\n\n    Observable.prototype.bind = function bind (eventName, handlers, one) {\n        var arguments$1 = arguments;\n        var this$1$1 = this;\n\n        var eventNames = getArray(eventName);\n        var handlersIsFunction = isFunction(handlers);\n        var length = eventNames.length;\n\n        if (handlers === undefined) {\n            for (var field in eventName) {\n                this$1$1.bind(field, eventName[field]);\n            }\n            return this;\n        }\n\n        var loop = function ( idx ) {\n            var eventName$1 = eventNames[idx];\n\n            var handler = handlersIsFunction ? handlers : handlers[eventName$1];\n\n            if (handler) {\n                if (one) {\n                    var original = handler;\n                    handler = function () { // eslint-disable-line no-loop-func\n                        this$1$1.unbind(eventName$1, handler);\n                        original.apply(this$1$1, arguments$1);\n                    };\n                    handler.original = original;\n                }\n                var events = this$1$1._events[eventName$1] = this$1$1._events[eventName$1] || [];\n                events.push(handler);\n            }\n        };\n\n        for (var idx = 0; idx < length; idx++) loop( idx );\n\n        return this;\n    };\n\n    Observable.prototype.one = function one (eventNames, handlers) {\n        return this.bind(eventNames, handlers, true);\n    };\n\n    Observable.prototype.first = function first (eventName, handlers) {\n        var this$1$1 = this;\n\n        var eventNames = getArray(eventName);\n        var handlersIsFunction = isFunction(handlers);\n\n        for (var idx = 0, length = eventNames.length; idx < length; idx++) {\n            var eventName$1 = eventNames[idx];\n\n            var handler = handlersIsFunction ? handlers : handlers[eventName$1];\n\n            if (handler) {\n                var events = this$1$1._events[eventName$1] = this$1$1._events[eventName$1] || [];\n                events.unshift(handler);\n            }\n        }\n\n        return this;\n    };\n\n    Observable.prototype.trigger = function trigger (eventName, e) {\n        var this$1$1 = this;\n        if ( e === void 0 ) e = {};\n\n        var events = this._events[eventName];\n\n        if (events) {\n            var length = events.length;\n\n            e.sender = this;\n            e._defaultPrevented = false;\n            e.preventDefault = preventDefault;\n            e.isDefaultPrevented = isDefaultPrevented;\n\n            events = events.slice();\n\n            for (var idx = 0; idx < length; idx++) {\n                events[idx].call(this$1$1, e);\n            }\n\n            return e._defaultPrevented === true;\n        }\n\n        return false;\n    };\n\n    Observable.prototype.unbind = function unbind (eventName, handler) {\n        var events = this._events[eventName];\n\n        if (eventName === undefined) {\n            this._events = {};\n        } else if (events) {\n            if (handler) {\n                for (var idx = events.length - 1; idx >= 0; idx--) {\n                    if (events[idx] === handler || events[idx].original === handler) {\n                        events.splice(idx, 1);\n                    }\n                }\n            } else {\n                this._events[eventName] = [];\n            }\n        }\n\n        return this;\n    };\n\n    return Observable;\n}(Class));\n\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\n\nfunction getArray(value) {\n    return typeof value === \"string\" ? [ value ] : value;\n}\n\nfunction preventDefault() {\n    this._defaultPrevented = true;\n}\n\nfunction isDefaultPrevented() {\n    return this._defaultPrevented === true;\n}\n\nvar animationFrameProxy = function (callback) {\n    var wnd = typeof window !== \"undefined\" ? window : {};\n    var animationFrame = wnd.requestAnimationFrame ||\n                        wnd.webkitRequestAnimationFrame ||\n                        wnd.mozRequestAnimationFrame ||\n                        wnd.oRequestAnimationFrame ||\n                        wnd.msRequestAnimationFrame ||\n                        function(callback) { setTimeout(callback, 1000 / 60); };\n\n    animationFrameProxy = function (callback) { return animationFrame.call(wnd, callback); };\n    animationFrameProxy(callback);\n};\n\nvar animationFrame = animationFrameProxy;\n\nvar ampRegExp = /&/g;\nvar ltRegExp = /</g;\nvar quoteRegExp = /\"/g;\nvar aposRegExp = /'/g;\nvar gtRegExp = />/g;\n\nfunction htmlEncode(value) {\n    return String(value).replace(ampRegExp, \"&amp;\").replace(ltRegExp, \"&lt;\").replace(gtRegExp, \"&gt;\").replace(quoteRegExp, \"&quot;\").replace(aposRegExp, \"&#39;\");\n}\n\n/* eslint-disable no-console */\n\nfunction logToConsole(message) {\n    var console = window.console;\n\n    if (typeof(console) != \"undefined\" && console.log) {\n        console.log(message);\n    }\n}\n\n// XXX: the following will not work with IE9 (requires server proxy).\nfunction saveAs$1(options) {\n    var dataURI = options.dataURI;\n    var fileName = options.fileName;\n    var data = dataURI;\n\n    if (typeof data == \"string\" && window.Blob) {\n        var parts = data.split(\";base64,\");\n        var contentType = parts[0];\n        var base64 = atob(parts[1]);\n        var array = new Uint8Array(base64.length);\n        for (var idx = 0; idx < base64.length; idx++) {\n            array[idx] = base64.charCodeAt(idx);\n        }\n        data = new Blob([ array.buffer ], { type: contentType });\n    }\n    if (navigator.msSaveBlob) {\n        navigator.msSaveBlob(data, fileName);\n    } else {\n        var link = document.createElement(\"a\");\n        link.download = fileName;\n        data = link.href = URL.createObjectURL(data);\n        var e = document.createEvent(\"MouseEvents\");\n        e.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        link.dispatchEvent(e);\n        setTimeout(function() {\n            URL.revokeObjectURL(data);\n        });\n    }\n}\n\nfunction matchUserAgent(userAgent) {\n    var browserRxs = {\n        edge: /(edge)[ \\/]([\\w.]+)/i,\n        webkit: /(chrome)[ \\/]([\\w.]+)/i,\n        safari: /(webkit)[ \\/]([\\w.]+)/i,\n        opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n        msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n        mozilla: /(mozilla)(?:.*? rv:([\\w.]+))/i\n    };\n\n    var browser = {};\n\n    for (var agent in browserRxs) {\n        if (browserRxs.hasOwnProperty(agent)) {\n            var match = userAgent.match(browserRxs[agent]);\n            if (match) {\n                browser[agent] = true;\n                browser[match[1].toLowerCase().split(\" \")[0].split(\"/\")[0]] = true;\n                browser.version = parseInt(document.documentMode || match[2], 10);\n\n                break;\n            }\n        }\n    }\n\n    return browser;\n}\n\nvar browser$3 = null;\n\nvar support$1 = {\n    get browser() {\n        if (typeof window === 'undefined' || browser$3) {\n            return browser$3;\n        }\n\n        browser$3 = matchUserAgent(window.navigator.userAgent);\n        return browser$3;\n    }\n};\n\nfunction template() {\n    throw new Error(\"Template implementation missing.\");\n}\n\nvar now = Date.now || function() {\n    return new Date().getTime();\n};\n\nfunction throttle(fn, delay) {\n    var lastExecTime = 0;\n    var timeout;\n\n    if (!delay || delay <= 0) {\n        return fn;\n    }\n\n    var throttled = function() {\n        var elapsed = now() - lastExecTime;\n        var args = arguments;\n\n        var exec = function() {\n            fn.apply(null, args);\n            lastExecTime = now();\n        };\n\n        // first execution\n        if (!lastExecTime) {\n            return exec();\n        }\n\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        if (elapsed > delay) {\n            exec();\n        } else {\n            timeout = setTimeout(exec, delay - elapsed);\n        }\n    };\n\n    throttled.cancel = function() {\n        clearTimeout(timeout);\n    };\n\n    return throttled;\n}\n\nvar namedColors = {\n    aliceblue: \"f0f8ff\", antiquewhite: \"faebd7\", aqua: \"00ffff\",\n    aquamarine: \"7fffd4\", azure: \"f0ffff\", beige: \"f5f5dc\",\n    bisque: \"ffe4c4\", black: \"000000\", blanchedalmond: \"ffebcd\",\n    blue: \"0000ff\", blueviolet: \"8a2be2\", brown: \"a52a2a\",\n    burlywood: \"deb887\", cadetblue: \"5f9ea0\", chartreuse: \"7fff00\",\n    chocolate: \"d2691e\", coral: \"ff7f50\", cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\", crimson: \"dc143c\", cyan: \"00ffff\",\n    darkblue: \"00008b\", darkcyan: \"008b8b\", darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\", darkgrey: \"a9a9a9\", darkgreen: \"006400\",\n    darkkhaki: \"bdb76b\", darkmagenta: \"8b008b\", darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\", darkorchid: \"9932cc\", darkred: \"8b0000\",\n    darksalmon: \"e9967a\", darkseagreen: \"8fbc8f\", darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\", darkslategrey: \"2f4f4f\", darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\", deeppink: \"ff1493\", deepskyblue: \"00bfff\",\n    dimgray: \"696969\", dimgrey: \"696969\", dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\", floralwhite: \"fffaf0\", forestgreen: \"228b22\",\n    fuchsia: \"ff00ff\", gainsboro: \"dcdcdc\", ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\", goldenrod: \"daa520\", gray: \"808080\",\n    grey: \"808080\", green: \"008000\", greenyellow: \"adff2f\",\n    honeydew: \"f0fff0\", hotpink: \"ff69b4\", indianred: \"cd5c5c\",\n    indigo: \"4b0082\", ivory: \"fffff0\", khaki: \"f0e68c\",\n    lavender: \"e6e6fa\", lavenderblush: \"fff0f5\", lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\", lightblue: \"add8e6\", lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\", lightgoldenrodyellow: \"fafad2\", lightgray: \"d3d3d3\",\n    lightgrey: \"d3d3d3\", lightgreen: \"90ee90\", lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\", lightseagreen: \"20b2aa\", lightskyblue: \"87cefa\",\n    lightslategray: \"778899\", lightslategrey: \"778899\", lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\", lime: \"00ff00\", limegreen: \"32cd32\",\n    linen: \"faf0e6\", magenta: \"ff00ff\", maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\", mediumblue: \"0000cd\", mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370d8\", mediumseagreen: \"3cb371\", mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\", mediumturquoise: \"48d1cc\", mediumvioletred: \"c71585\",\n    midnightblue: \"191970\", mintcream: \"f5fffa\", mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\", navajowhite: \"ffdead\", navy: \"000080\",\n    oldlace: \"fdf5e6\", olive: \"808000\", olivedrab: \"6b8e23\",\n    orange: \"ffa500\", orangered: \"ff4500\", orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\", palegreen: \"98fb98\", paleturquoise: \"afeeee\",\n    palevioletred: \"d87093\", papayawhip: \"ffefd5\", peachpuff: \"ffdab9\",\n    peru: \"cd853f\", pink: \"ffc0cb\", plum: \"dda0dd\",\n    powderblue: \"b0e0e6\", purple: \"800080\", red: \"ff0000\",\n    rosybrown: \"bc8f8f\", royalblue: \"4169e1\", saddlebrown: \"8b4513\",\n    salmon: \"fa8072\", sandybrown: \"f4a460\", seagreen: \"2e8b57\",\n    seashell: \"fff5ee\", sienna: \"a0522d\", silver: \"c0c0c0\",\n    skyblue: \"87ceeb\", slateblue: \"6a5acd\", slategray: \"708090\",\n    slategrey: \"708090\", snow: \"fffafa\", springgreen: \"00ff7f\",\n    steelblue: \"4682b4\", tan: \"d2b48c\", teal: \"008080\",\n    thistle: \"d8bfd8\", tomato: \"ff6347\", turquoise: \"40e0d0\",\n    violet: \"ee82ee\", wheat: \"f5deb3\", white: \"ffffff\",\n    whitesmoke: \"f5f5f5\", yellow: \"ffff00\", yellowgreen: \"9acd32\"\n};\n\nvar browser$2 = support$1.browser;\n\nvar matchNamedColor = function (color) {\n    var colorNames = Object.keys(namedColors);\n    colorNames.push(\"transparent\");\n\n    var regexp = new RegExp(\"^(\" + colorNames.join(\"|\") + \")(\\\\W|$)\", \"i\");\n    matchNamedColor = function (color) { return regexp.exec(color); };\n\n    return regexp.exec(color);\n};\n\nvar BaseColor = (function (Class) {\n    function BaseColor() { Class.call(this); }\n\n    if ( Class ) BaseColor.__proto__ = Class;\n    BaseColor.prototype = Object.create( Class && Class.prototype );\n    BaseColor.prototype.constructor = BaseColor;\n    BaseColor.prototype.toHSV = function toHSV () { return this; };\n\n    BaseColor.prototype.toRGB = function toRGB () { return this; };\n\n    BaseColor.prototype.toHex = function toHex (options) { return this.toBytes().toHex(options); };\n\n    BaseColor.prototype.toBytes = function toBytes () { return this; };\n\n    BaseColor.prototype.toCss = function toCss (options) { return \"#\" + this.toHex(options); };\n\n    BaseColor.prototype.toCssRgba = function toCssRgba () {\n        var rgb = this.toBytes();\n        return (\"rgba(\" + (rgb.r) + \", \" + (rgb.g) + \", \" + (rgb.b) + \", \" + (parseFloat((Number(this.a)).toFixed(3))) + \")\");\n    };\n\n    BaseColor.prototype.toDisplay = function toDisplay () {\n        if (browser$2.msie && browser$2.version < 9) {\n            return this.toCss(); // no RGBA support; does it support any opacity in colors?\n        }\n        return this.toCssRgba();\n    };\n\n    BaseColor.prototype.equals = function equals (c) {\n        return c === this || ((c !== null && c !== undefined) && this.toCssRgba() === parseColor$2(c).toCssRgba());\n    };\n\n    BaseColor.prototype.diff = function diff (other) {\n        if (other === null) {\n            return NaN;\n        }\n\n        var c1 = this.toBytes();\n        var c2 = other.toBytes();\n\n        return Math.sqrt(Math.pow((c1.r - c2.r) * 0.30, 2) +\n                         Math.pow((c1.g - c2.g) * 0.59, 2) +\n                         Math.pow((c1.b - c2.b) * 0.11, 2));\n    };\n\n    BaseColor.prototype.clone = function clone () {\n        var c = this.toBytes();\n        if (c === this) {\n            c = new Bytes(c.r, c.g, c.b, c.a);\n        }\n\n        return c;\n    };\n\n    return BaseColor;\n}(Class));\n\nvar RGB = (function (BaseColor) {\n    function RGB(r, g, b, a) {\n        BaseColor.call(this);\n\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    if ( BaseColor ) RGB.__proto__ = BaseColor;\n    RGB.prototype = Object.create( BaseColor && BaseColor.prototype );\n    RGB.prototype.constructor = RGB;\n\n    RGB.prototype.toHSV = function toHSV () {\n        var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var v = max;\n        var h, s;\n\n        if (delta === 0) {\n            return new HSV(0, 0, v, this.a);\n        }\n\n        if (max !== 0) {\n            s = delta / max;\n            if (r === max) {\n                h = (g - b) / delta;\n            } else if (g === max) {\n                h = 2 + (b - r) / delta;\n            } else {\n                h = 4 + (r - g) / delta;\n            }\n\n            h *= 60;\n            if (h < 0) {\n                h += 360;\n            }\n        } else {\n            s = 0;\n            h = -1;\n        }\n\n        return new HSV(h, s, v, this.a);\n    };\n\n    RGB.prototype.toHSL = function toHSL () {\n        var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var h, s, l = (max + min) / 2;\n\n        if (max === min) {\n            h = s = 0;\n        } else {\n            var d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n            default: break;\n            }\n        }\n\n        return new HSL(h * 60, s * 100, l * 100, this.a);\n    };\n\n    RGB.prototype.toBytes = function toBytes () {\n        return new Bytes(this.r * 255, this.g * 255, this.b * 255, this.a);\n    };\n\n    return RGB;\n}(BaseColor));\n\nvar Bytes = (function (RGB) {\n    function Bytes(r, g, b, a) {\n        RGB.call(this, Math.round(r), Math.round(g), Math.round(b), a);\n    }\n\n    if ( RGB ) Bytes.__proto__ = RGB;\n    Bytes.prototype = Object.create( RGB && RGB.prototype );\n    Bytes.prototype.constructor = Bytes;\n\n    Bytes.prototype.toRGB = function toRGB () {\n        return new RGB(this.r / 255, this.g / 255, this.b / 255, this.a);\n    };\n\n    Bytes.prototype.toHSV = function toHSV () {\n        return this.toRGB().toHSV();\n    };\n\n    Bytes.prototype.toHSL = function toHSL () {\n        return this.toRGB().toHSL();\n    };\n\n    Bytes.prototype.toHex = function toHex (options) {\n        var value = hex(this.r, 2) + hex(this.g, 2) + hex(this.b, 2);\n\n        if (options && options.alpha) {\n            value += hex(Math.round(this.a * 255), 2);\n        }\n\n        return value;\n    };\n\n    Bytes.prototype.toBytes = function toBytes () {\n        return this;\n    };\n\n    return Bytes;\n}(RGB));\n\nfunction hex(n, width, pad) {\n    if ( pad === void 0 ) pad = \"0\";\n\n    var result = n.toString(16);\n    while (width > result.length) {\n        result = pad + result;\n    }\n\n    return result;\n}\n\nvar HSV = (function (BaseColor) {\n    function HSV(h, s, v, a) {\n        BaseColor.call(this);\n\n        this.h = h;\n        this.s = s;\n        this.v = v;\n        this.a = a;\n    }\n\n    if ( BaseColor ) HSV.__proto__ = BaseColor;\n    HSV.prototype = Object.create( BaseColor && BaseColor.prototype );\n    HSV.prototype.constructor = HSV;\n\n    HSV.prototype.toRGB = function toRGB () {\n        var ref = this;\n        var h = ref.h;\n        var s = ref.s;\n        var v = ref.v;\n        var r, g, b;\n\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            h /= 60;\n\n            var i = Math.floor(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n            case 0: r = v; g = t; b = p; break;\n            case 1: r = q; g = v; b = p; break;\n            case 2: r = p; g = v; b = t; break;\n            case 3: r = p; g = q; b = v; break;\n            case 4: r = t; g = p; b = v; break;\n            default: r = v; g = p; b = q; break;\n            }\n        }\n\n        return new RGB(r, g, b, this.a);\n    };\n\n    HSV.prototype.toHSL = function toHSL () {\n        return this.toRGB().toHSL();\n    };\n\n    HSV.prototype.toBytes = function toBytes () {\n        return this.toRGB().toBytes();\n    };\n\n    return HSV;\n}(BaseColor));\n\nvar HSL = (function (BaseColor) {\n    function HSL(h, s, l, a) {\n        BaseColor.call(this);\n\n        this.h = h;\n        this.s = s;\n        this.l = l;\n        this.a = a;\n    }\n\n    if ( BaseColor ) HSL.__proto__ = BaseColor;\n    HSL.prototype = Object.create( BaseColor && BaseColor.prototype );\n    HSL.prototype.constructor = HSL;\n\n    HSL.prototype.toRGB = function toRGB () {\n        var h = this.h / 360;\n        var s = this.s / 100;\n        var l = this.l / 100;\n        var r, g, b;\n\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        } else {\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1 / 3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1 / 3);\n        }\n\n        return new RGB(r, g, b, this.a);\n    };\n\n    HSL.prototype.toHSV = function toHSV () {\n        return this.toRGB().toHSV();\n    };\n\n    HSL.prototype.toBytes = function toBytes () {\n        return this.toRGB().toBytes();\n    };\n\n    return HSL;\n}(BaseColor));\n\nfunction hue2rgb(p, q, s) {\n    var t = s;\n\n    if (t < 0) {\n        t += 1;\n    }\n\n    if (t > 1) {\n        t -= 1;\n    }\n\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n        return q;\n    }\n\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n}\n\nfunction alphaFromHex(a) {\n    return parseFloat(parseFloat(parseInt(a, 16) / 255 ).toFixed(3));\n}\n\nfunction parseColor$2(value, safe) {\n    var m, ret;\n\n    if (!value || value === \"none\") {\n        return null;\n    }\n\n    if (value instanceof BaseColor) {\n        return value;\n    }\n\n    var color = value.toLowerCase();\n    if ((m = matchNamedColor(color))) {\n        if (m[1] === \"transparent\") {\n            color = new RGB(1, 1, 1, 0);\n        } else {\n            color = parseColor$2(namedColors[m[1]], safe);\n        }\n        color.match = [ m[1] ];\n        return color;\n    }\n    if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) {\n        ret = new Bytes(parseInt(m[1], 16),\n            parseInt(m[2], 16),\n            parseInt(m[3], 16), 1);\n    } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) {\n        ret = new Bytes(parseInt(m[1] + m[1], 16),\n            parseInt(m[2] + m[2], 16),\n            parseInt(m[3] + m[3], 16), 1);\n    } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) { // Parse 4 digit hex color\n        ret = new Bytes(parseInt(m[1] + m[1], 16),\n            parseInt(m[2] + m[2], 16),\n            parseInt(m[3] + m[3], 16),\n            alphaFromHex(m[4] + m[4]));\n    } else if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) { // Parse 8 digit hex color\n        ret = new Bytes(parseInt(m[1], 16),\n            parseInt(m[2], 16),\n            parseInt(m[3], 16),\n            alphaFromHex(m[4]));\n    } else if ((m = /^rgb\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*\\)/.exec(color))) {\n        ret = new Bytes(parseInt(m[1], 10),\n            parseInt(m[2], 10),\n            parseInt(m[3], 10), 1);\n    } else if ((m = /^rgba\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n        ret = new Bytes(parseInt(m[1], 10),\n            parseInt(m[2], 10),\n            parseInt(m[3], 10), parseFloat(m[4]));\n    } else if ((m = /^rgb\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*\\)/.exec(color))) {\n        ret = new RGB(parseFloat(m[1]) / 100,\n            parseFloat(m[2]) / 100,\n            parseFloat(m[3]) / 100, 1);\n    } else if ((m = /^rgba\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n        ret = new RGB(parseFloat(m[1]) / 100,\n            parseFloat(m[2]) / 100,\n            parseFloat(m[3]) / 100, parseFloat(m[4]));\n    } else if ((m = /^color\\(\\s*srgb\\s*([0-9]*\\.?[0-9]+)\\s+([0-9]*\\.?[0-9]+)\\s+([0-9]*\\.?[0-9]+)\\s*(\\/\\s+([0-9]*\\.?[0-9]+))?\\)/.exec(color))) {\n        ret = new RGB(\n            parseFloat(m[1]),\n            parseFloat(m[2]),\n            parseFloat(m[3]),\n            parseFloat(m[5] || '1'));\n    }\n\n    if (ret) {\n        ret.match = m;\n    } else if (!safe) {\n        throw new Error(\"Cannot parse color: \" + color);\n    }\n\n    return ret;\n}\n\nvar DARK_TRESHOLD = 180;\n\nvar Color = (function (Class) {\n    function Color(value) {\n        var this$1$1 = this;\n\n        Class.call(this);\n\n        if (arguments.length === 1) {\n            var formats = Color.formats;\n            var resolvedColor = this.resolveColor(value);\n\n            for (var idx = 0; idx < formats.length; idx++) {\n                var formatRegex = formats[idx].re;\n                var processor = formats[idx].process;\n                var parts = formatRegex.exec(resolvedColor);\n\n                if (parts) {\n                    var channels = processor(parts);\n                    this$1$1.r = channels[0];\n                    this$1$1.g = channels[1];\n                    this$1$1.b = channels[2];\n                }\n            }\n        } else {\n            this.r = arguments[0];\n            this.g = arguments[1];\n            this.b = arguments[2];\n        }\n\n        this.r = this.normalizeByte(this.r);\n        this.g = this.normalizeByte(this.g);\n        this.b = this.normalizeByte(this.b);\n    }\n\n    if ( Class ) Color.__proto__ = Class;\n    Color.prototype = Object.create( Class && Class.prototype );\n    Color.prototype.constructor = Color;\n\n    Color.prototype.toHex = function toHex () {\n        var pad = this.padDigit;\n        var r = this.r.toString(16);\n        var g = this.g.toString(16);\n        var b = this.b.toString(16);\n\n        return \"#\" + pad(r) + pad(g) + pad(b);\n    };\n\n    Color.prototype.resolveColor = function resolveColor (value) {\n        var color = value || \"black\";\n\n        if (color.charAt(0) === \"#\") {\n            color = color.substr(1, 6);\n        }\n\n        color = color.replace(/ /g, \"\");\n        color = color.toLowerCase();\n        color = Color.namedColors[color] || color;\n\n        return color;\n    };\n\n    Color.prototype.normalizeByte = function normalizeByte (value) {\n        if (value < 0 || isNaN(value)) {\n            return 0;\n        }\n\n        return value > 255 ? 255 : value;\n    };\n\n    Color.prototype.padDigit = function padDigit (value) {\n        return (value.length === 1) ? \"0\" + value : value;\n    };\n\n    Color.prototype.brightness = function brightness (value) {\n        var round = Math.round;\n\n        this.r = round(this.normalizeByte(this.r * value));\n        this.g = round(this.normalizeByte(this.g * value));\n        this.b = round(this.normalizeByte(this.b * value));\n\n        return this;\n    };\n\n    Color.prototype.percBrightness = function percBrightness () {\n        return Math.sqrt(0.241 * this.r * this.r + 0.691 * this.g * this.g + 0.068 * this.b * this.b);\n    };\n\n    Color.prototype.isDark = function isDark () {\n        return this.percBrightness() < DARK_TRESHOLD;\n    };\n\n    Color.fromBytes = function fromBytes (r, g, b, a) {\n        return new Bytes(r, g, b, a != null ? a : 1);\n    };\n\n    Color.fromRGB = function fromRGB (r, g, b, a) {\n        return new RGB(r, g, b, a != null ? a : 1);\n    };\n\n    Color.fromHSV = function fromHSV (h, s, v, a) {\n        return new HSV(h, s, v, a != null ? a : 1);\n    };\n\n    Color.fromHSL = function fromHSL (h, s, l, a) {\n        return new HSL(h, s, l, a != null ? a : 1);\n    };\n\n    return Color;\n}(Class));\n\nColor.formats = [ {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n        ];\n    }\n}, {\n    re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n        ];\n    }\n}, {\n    re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1] + parts[1], 16),\n            parseInt(parts[2] + parts[2], 16),\n            parseInt(parts[3] + parts[3], 16)\n        ];\n    }\n} ];\n\nColor.namedColors = namedColors;\n\nvar HasObservers = (function (Class) {\n    function HasObservers () {\n        Class.apply(this, arguments);\n    }\n\n    if ( Class ) HasObservers.__proto__ = Class;\n    HasObservers.prototype = Object.create( Class && Class.prototype );\n    HasObservers.prototype.constructor = HasObservers;\n\n    HasObservers.prototype.observers = function observers () {\n        this._observers = this._observers || [];\n        return this._observers;\n    };\n\n    HasObservers.prototype.addObserver = function addObserver (element) {\n        if (!this._observers) {\n            this._observers = [ element ];\n        } else {\n            this._observers.push(element);\n        }\n        return this;\n    };\n\n    HasObservers.prototype.removeObserver = function removeObserver (element) {\n        var observers = this.observers();\n        var index = observers.indexOf(element);\n        if (index !== -1) {\n            observers.splice(index, 1);\n        }\n        return this;\n    };\n\n    HasObservers.prototype.trigger = function trigger (methodName, event) {\n        var observers = this._observers;\n\n        if (observers && !this._suspended) {\n            for (var idx = 0; idx < observers.length; idx++) {\n                var observer = observers[idx];\n                if (observer[methodName]) {\n                    observer[methodName](event);\n                }\n            }\n        }\n        return this;\n    };\n\n    HasObservers.prototype.optionsChange = function optionsChange (e) {\n        if ( e === void 0 ) e = {};\n\n        e.element = this;\n        this.trigger(\"optionsChange\", e);\n    };\n\n    HasObservers.prototype.geometryChange = function geometryChange () {\n        this.trigger(\"geometryChange\", {\n            element: this\n        });\n    };\n\n    HasObservers.prototype.suspend = function suspend () {\n        this._suspended = (this._suspended || 0) + 1;\n        return this;\n    };\n\n    HasObservers.prototype.resume = function resume () {\n        this._suspended = Math.max((this._suspended || 0) - 1, 0);\n        return this;\n    };\n\n    HasObservers.prototype._observerField = function _observerField (field, value) {\n        if (this[field]) {\n            this[field].removeObserver(this);\n        }\n        this[field] = value;\n        value.addObserver(this);\n    };\n\n    return HasObservers;\n}(Class));\n\nfunction append(first, second) {\n    first.push.apply(first, second);\n    return first;\n}\n\n/* eslint-disable key-spacing,no-multi-spaces,no-param-reassign */\n\nvar literals = {\n    1    : \"i\",       10   : \"x\",       100  : \"c\",\n    2    : \"ii\",      20   : \"xx\",      200  : \"cc\",\n    3    : \"iii\",     30   : \"xxx\",     300  : \"ccc\",\n    4    : \"iv\",      40   : \"xl\",      400  : \"cd\",\n    5    : \"v\",       50   : \"l\",       500  : \"d\",\n    6    : \"vi\",      60   : \"lx\",      600  : \"dc\",\n    7    : \"vii\",     70   : \"lxx\",     700  : \"dcc\",\n    8    : \"viii\",    80   : \"lxxx\",    800  : \"dccc\",\n    9    : \"ix\",      90   : \"xc\",      900  : \"cm\",\n    1000 : \"m\"\n};\n\nfunction arabicToRoman(n) {\n    var values = [ 1000,\n        900 , 800, 700, 600, 500, 400, 300, 200, 100,\n        90  , 80 , 70 , 60 , 50 , 40 , 30 , 20 , 10 ,\n        9   , 8  , 7  , 6  , 5  , 4  , 3  , 2  , 1 ];\n\n    var roman = \"\";\n    while (n > 0) {\n        if (n < values[0]) {\n            values.shift();\n        } else {\n            roman += literals[values[0]];\n            n -= values[0];\n        }\n    }\n    return roman;\n}\n\nfunction createPromise() {\n    var resolveFn, rejectFn;\n    var promise = new Promise(function (resolve, reject) {\n        resolveFn = function (data) {\n            promise._state = \"resolved\";\n            resolve(data);\n            return promise;\n        };\n        rejectFn = function (data) {\n            promise._state = \"rejected\";\n            reject(data);\n\n            return promise;\n        };\n    });\n    promise._state = \"pending\";\n    promise.resolve = resolveFn;\n    promise.reject = rejectFn;\n    promise.state = function () { return promise._state; };\n\n    return promise;\n}\n\nvar UNDEFINED = \"undefined\";\n\nfunction defined(value) {\n    return typeof value !== UNDEFINED;\n}\n\nvar defId = 1;\n\nfunction definitionId() {\n    return \"kdef\" + defId++;\n}\n\nvar DEG_TO_RAD = Math.PI / 180;\nvar MAX_NUM = Number.MAX_VALUE;\nvar MIN_NUM = -Number.MAX_VALUE;\n\nfunction deg(radians) {\n    return radians / DEG_TO_RAD;\n}\n\nvar fromCharCode = String.fromCharCode;\n\nvar BOM = '\\xfe\\xff';\n\n// Encodes a string as UTF-8\nfunction encodeUTF8(input) {\n    var output = \"\";\n\n    for (var i = 0; i < input.length; i++) {\n        var code = input.charCodeAt(i);\n\n        if (0xD800 <= code && code <= 0xDBFF) {\n            var hi = code;\n            var low = input.charCodeAt(++i);\n\n            if (!isNaN(low)) {\n                // Combine high and low surrogate\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n                code = (hi - 0xD800) * 0x400 +\n                       (low - 0xDC00) + 0x10000;\n            }\n        }\n\n        if (code < 0x80) {\n            // One byte\n            output += fromCharCode(code);\n        } else if (code < 0x800) {\n            // Two bytes\n            output += fromCharCode(0xC0 | (code >>> 6));\n            output += fromCharCode(0x80 | (code & 0x3f));\n        } else if (code < 0x10000) {\n            // Three bytes\n            output += fromCharCode(0xE0 | (code >>> 12));\n            output += fromCharCode(0x80 | (code >>> 6 & 0x3f));\n            output += fromCharCode(0x80 | (code & 0x3f));\n        } else if (code < 0x10FFFF) {\n            // Four bytes\n            output += fromCharCode(0xF0 | (code >>> 18));\n            output += fromCharCode(0x80 | (code >>> 12 & 0x3f));\n            output += fromCharCode(0x80 | (code >>> 6 & 0x3f));\n            output += fromCharCode(0x80 | (code & 0x3f));\n        }\n    }\n\n    return output;\n}\n\nfunction encodeUnit(codeUnit) {\n    return fromCharCode(codeUnit >> 8) + fromCharCode(codeUnit & 0x00ff);\n}\n\n// Encodes a string as UTF-16 big-endian\nfunction encodeUTF16BE(input) {\n    var output = '';\n\n    for (var i = 0; i < input.length; i++) {\n        var c = input.charCodeAt(i);\n\n        if (c < 0xFFFF) {\n            output += encodeUnit(c);\n        } else {\n            var lead = ((c - 0x10000) >> 10) + 0xD800;\n            var trail = ((c - 0x10000) & 0x3FF) + 0xDC00;\n            output += encodeUnit(lead);\n            output += encodeUnit(trail);\n        }\n    }\n\n    return output;\n}\n\nvar KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction encodeBase64(input) {\n    var output = \"\";\n    var i = 0;\n\n    var utfInput = encodeUTF8(input);\n\n    while (i < utfInput.length) {\n        var chr1 = utfInput.charCodeAt(i++);\n        var chr2 = utfInput.charCodeAt(i++);\n        var chr3 = utfInput.charCodeAt(i++);\n\n        var enc1 = chr1 >> 2;\n        var enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        var enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        var enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n            enc4 = 64;\n        }\n\n        output = output +\n            KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) +\n            KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n    }\n\n    return output;\n}\n\nfunction eventCoordinates(e) {\n    if (defined((e.x || {}).location)) {\n        return {\n            x: e.x.location,\n            y: e.y.location\n        };\n    }\n\n    return {\n        x: e.pageX || e.clientX || 0,\n        y: e.pageY || e.clientY || 0\n    };\n}\n\nfunction eventElement(e) {\n    if ( e === void 0 ) e = {};\n\n    return e.touch ? e.touch.initialTouch : e.target;\n}\n\nfunction isTransparent(color) {\n    return color === \"\" || color === null || color === \"none\" || color === \"transparent\" || !defined(color);\n}\n\nfunction last(array) {\n    if (array) {\n        return array[array.length - 1];\n    }\n}\n\nfunction limitValue(value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n\n/* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n/* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n/* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n/* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n// mergeSort is stable.\nfunction mergeSort(a, cmp) {\n    if (a.length < 2) {\n        return a.slice();\n    }\n    function merge(a, b) {\n        var r = [], ai = 0, bi = 0, i = 0;\n        while (ai < a.length && bi < b.length) {\n            if (cmp(a[ai], b[bi]) <= 0) {\n                r[i++] = a[ai++];\n            } else {\n                r[i++] = b[bi++];\n            }\n        }\n        if (ai < a.length) {\n            r.push.apply(r, a.slice(ai));\n        }\n        if (bi < b.length) {\n            r.push.apply(r, b.slice(bi));\n        }\n        return r;\n    }\n    return (function sort(a) {\n        if (a.length <= 1) {\n            return a;\n        }\n        var m = Math.floor(a.length / 2);\n        var left = a.slice(0, m);\n        var right = a.slice(m);\n        left = sort(left);\n        right = sort(right);\n        return merge(left, right);\n    })(a);\n}\n\nfunction promiseAll(promises) {\n    return Promise.all(promises);\n}\n\nfunction rad(degrees) {\n    return degrees * DEG_TO_RAD;\n}\n\nfunction pow$1(p) {\n    if (p) {\n        return Math.pow(10, p);\n    }\n\n    return 1;\n}\n\nfunction round(value, precision) {\n    var power = pow$1(precision);\n    return Math.round(value * power) / power;\n}\n\nfunction valueOrDefault(value, defaultValue) {\n    return defined(value) ? value : defaultValue;\n}\n\nfunction bindEvents(element, events) {\n    for (var eventName in events) {\n        var eventNames = eventName.trim().split(\" \");\n        for (var idx = 0; idx < eventNames.length; idx++) {\n            element.addEventListener(eventNames[idx], events[eventName], false);\n        }\n    }\n}\n\nfunction elementOffset(element) {\n    var box = element.getBoundingClientRect();\n\n    var documentElement = document.documentElement;\n\n    return {\n        top: box.top + (window.pageYOffset || documentElement.scrollTop) - (documentElement.clientTop || 0),\n        left: box.left + (window.pageXOffset || documentElement.scrollLeft) - (documentElement.clientLeft || 0)\n    };\n}\n\nfunction elementStyles(element, styles) {\n    var result = {};\n    var style = window.getComputedStyle(element) || {};\n    var stylesArray = Array.isArray(styles) ? styles : [ styles ];\n\n    for (var idx = 0; idx < stylesArray.length; idx++) {\n        var field = stylesArray[idx];\n        result[field] = style[field];\n    }\n\n    return result;\n}\n\nfunction getPixels(value) {\n    if (isNaN(value)) {\n        return value;\n    }\n    return value + \"px\";\n}\n\nfunction elementSize(element, size) {\n    if (size) {\n        var width = size.width;\n        var height = size.height;\n\n        if (defined(width)) {\n            element.style.width = getPixels(width);\n        }\n\n        if (defined(height)) {\n            element.style.height = getPixels(height);\n        }\n\n    } else {\n        var size$1 = elementStyles(element, [ 'width', 'height' ]);\n\n        return {\n            width: parseInt(size$1.width, 10),\n            height: parseInt(size$1.height, 10)\n        };\n    }\n}\n\nfunction unbindEvents(element, events) {\n    if ( events === void 0 ) events = {};\n\n    for (var name in events) {\n        var eventNames = name.trim().split(\" \");\n        for (var idx = 0; idx < eventNames.length; idx++) {\n            element.removeEventListener(eventNames[idx], events[name], false);\n        }\n    }\n}\n\nfunction elementPadding(element) {\n    var ref = elementStyles(element, [ \"paddingLeft\", \"paddingTop\" ]);\n    var paddingLeft = ref.paddingLeft;\n    var paddingTop = ref.paddingTop;\n    return {\n        top: parseFloat(paddingTop),\n        left: parseFloat(paddingLeft)\n    };\n}\n\nvar Matrix = (function (Class) {\n    function Matrix(a, b, c, d, e, f) {\n        if ( a === void 0 ) a = 0;\n        if ( b === void 0 ) b = 0;\n        if ( c === void 0 ) c = 0;\n        if ( d === void 0 ) d = 0;\n        if ( e === void 0 ) e = 0;\n        if ( f === void 0 ) f = 0;\n\n        Class.call(this);\n\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.e = e;\n        this.f = f;\n    }\n\n    if ( Class ) Matrix.__proto__ = Class;\n    Matrix.prototype = Object.create( Class && Class.prototype );\n    Matrix.prototype.constructor = Matrix;\n\n    Matrix.prototype.multiplyCopy = function multiplyCopy (matrix) {\n        return new Matrix(\n            this.a * matrix.a + this.c * matrix.b,\n            this.b * matrix.a + this.d * matrix.b,\n            this.a * matrix.c + this.c * matrix.d,\n            this.b * matrix.c + this.d * matrix.d,\n            this.a * matrix.e + this.c * matrix.f + this.e,\n            this.b * matrix.e + this.d * matrix.f + this.f\n        );\n    };\n\n    Matrix.prototype.invert = function invert () {\n        var ref = this;\n        var a = ref.a;\n        var b = ref.b;\n        var d = ref.c;\n        var e = ref.d;\n        var g = ref.e;\n        var h = ref.f;\n        var det = a * e - b * d;\n\n        if (det === 0) {\n            return null;\n        }\n\n        return new Matrix(e / det, -b / det, -d / det, a / det,\n            (d * h - e * g) / det, (b * g - a * h) / det);\n    };\n\n    Matrix.prototype.clone = function clone () {\n        return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n    };\n\n    Matrix.prototype.equals = function equals (other) {\n        if (!other) {\n            return false;\n        }\n\n        return this.a === other.a && this.b === other.b &&\n            this.c === other.c && this.d === other.d &&\n            this.e === other.e && this.f === other.f;\n    };\n\n    Matrix.prototype.round = function round$1 (precision) {\n        this.a = round(this.a, precision);\n        this.b = round(this.b, precision);\n        this.c = round(this.c, precision);\n        this.d = round(this.d, precision);\n        this.e = round(this.e, precision);\n        this.f = round(this.f, precision);\n\n        return this;\n    };\n\n    Matrix.prototype.toArray = function toArray (precision) {\n        var result = [ this.a, this.b, this.c, this.d, this.e, this.f ];\n\n        if (defined(precision)) {\n            for (var i = 0; i < result.length; i++) {\n                result[i] = round(result[i], precision);\n            }\n        }\n\n        return result;\n    };\n\n    Matrix.prototype.toString = function toString (precision, separator) {\n        if ( separator === void 0 ) separator = \",\";\n\n        return this.toArray(precision).join(separator);\n    };\n\n    Matrix.translate = function translate (x, y) {\n        return new Matrix(1, 0, 0, 1, x, y);\n    };\n\n    Matrix.unit = function unit () {\n        return new Matrix(1, 0, 0, 1, 0, 0);\n    };\n\n    Matrix.rotate = function rotate (angle, x, y) {\n        var matrix = new Matrix();\n        matrix.a = Math.cos(rad(angle));\n        matrix.b = Math.sin(rad(angle));\n        matrix.c = -matrix.b;\n        matrix.d = matrix.a;\n        matrix.e = (x - x * matrix.a + y * matrix.b) || 0;\n        matrix.f = (y - y * matrix.a - x * matrix.b) || 0;\n\n        return matrix;\n    };\n\n    Matrix.scale = function scale (scaleX, scaleY) {\n        return new Matrix(scaleX, 0, 0, scaleY, 0, 0);\n    };\n\n    return Matrix;\n}(Class));\n\nMatrix.IDENTITY = Matrix.unit();\n\nvar matrixRegexp = /matrix\\((.*)\\)/;\n\nfunction parseMatrix(matrixString) {\n    var match = matrixString.match(matrixRegexp);\n    if (match === null || match.length !== 2) {\n        return Matrix.unit();\n    }\n\n    var members = match[1].split(',').map(function (x) { return parseFloat(x); });\n    return new (Function.prototype.bind.apply( Matrix, [ null ].concat( members) ));\n}\n\nfunction transformMatrix(element) {\n    var transform = getComputedStyle(element).transform;\n\n    if (transform === 'none') {\n        return Matrix.unit();\n    }\n\n    return parseMatrix(transform);\n}\n\nfunction elementScale(element) {\n    if (!element) {\n        return Matrix.unit();\n    }\n\n    var matrix = transformMatrix(element);\n    var parent = element.parentElement;\n    while (parent) {\n        var parentMatrix = transformMatrix(parent);\n        matrix = matrix.multiplyCopy(parentMatrix);\n        parent = parent.parentElement;\n    }\n\n    matrix.b = matrix.c = matrix.e = matrix.f = 0;\n    return matrix;\n}\n\nvar LRUCache = (function (Class) {\n    function LRUCache(size) {\n        Class.call(this);\n\n        this._size = size;\n        this._length = 0;\n        this._map = {};\n    }\n\n    if ( Class ) LRUCache.__proto__ = Class;\n    LRUCache.prototype = Object.create( Class && Class.prototype );\n    LRUCache.prototype.constructor = LRUCache;\n\n    LRUCache.prototype.put = function put (key, value) {\n        var map = this._map;\n        var entry = { key: key, value: value };\n\n        map[key] = entry;\n\n        if (!this._head) {\n            this._head = this._tail = entry;\n        } else {\n            this._tail.newer = entry;\n            entry.older = this._tail;\n            this._tail = entry;\n        }\n\n        if (this._length >= this._size) {\n            map[this._head.key] = null;\n            this._head = this._head.newer;\n            this._head.older = null;\n        } else {\n            this._length++;\n        }\n    };\n\n    LRUCache.prototype.get = function get (key) {\n        var entry = this._map[key];\n\n        if (entry) {\n            if (entry === this._head && entry !== this._tail) {\n                this._head = entry.newer;\n                this._head.older = null;\n            }\n\n            if (entry !== this._tail) {\n                if (entry.older) {\n                    entry.older.newer = entry.newer;\n                    entry.newer.older = entry.older;\n                }\n\n                entry.older = this._tail;\n                entry.newer = null;\n\n                this._tail.newer = entry;\n                this._tail = entry;\n            }\n\n            return entry.value;\n        }\n    };\n\n    return LRUCache;\n}(Class));\n\nvar REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\nvar SPACE$1 = ' ';\n\nfunction normalizeText(text) {\n    return String(text).replace(REPLACE_REGEX, SPACE$1);\n}\n\nfunction objectKey(object) {\n    var parts = [];\n    for (var key in object) {\n        parts.push(key + object[key]);\n    }\n\n    return parts.sort().join(\"\");\n}\n\n// Computes FNV-1 hash\n// See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\nfunction hashKey(str) {\n    // 32-bit FNV-1 offset basis\n    // See http://isthe.com/chongo/tech/comp/fnv/#FNV-param\n    var hash = 0x811C9DC5;\n\n    for (var i = 0; i < str.length; ++i) {\n        hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n        hash ^= str.charCodeAt(i);\n    }\n\n    return hash >>> 0;\n}\n\nfunction zeroSize() {\n    return { width: 0, height: 0, baseline: 0 };\n}\n\nvar DEFAULT_OPTIONS$1 = {\n    baselineMarkerSize: 1\n};\n\nvar defaultMeasureBox;\n\nif (typeof document !== \"undefined\") {\n    defaultMeasureBox = document.createElement(\"div\");\n    defaultMeasureBox.style.setProperty(\"position\", \"absolute\", \"important\");\n    defaultMeasureBox.style.setProperty(\"top\", \"-4000px\", \"important\");\n    defaultMeasureBox.style.setProperty(\"width\", \"auto\", \"important\");\n    defaultMeasureBox.style.setProperty(\"height\", \"auto\", \"important\");\n    defaultMeasureBox.style.setProperty(\"padding\", \"0\", \"important\");\n    defaultMeasureBox.style.setProperty(\"margin\", \"0\", \"important\");\n    defaultMeasureBox.style.setProperty(\"border\", \"0\", \"important\");\n    defaultMeasureBox.style.setProperty(\"line-height\", \"normal\", \"important\");\n    defaultMeasureBox.style.setProperty(\"visibility\", \"hidden\", \"important\");\n    defaultMeasureBox.style.setProperty(\"white-space\", \"pre\", \"important\");\n}\n\nvar TextMetrics = (function (Class) {\n    function TextMetrics(options) {\n        Class.call(this);\n\n        this._cache = new LRUCache(1000);\n        this.options = Object.assign({}, DEFAULT_OPTIONS$1, options);\n    }\n\n    if ( Class ) TextMetrics.__proto__ = Class;\n    TextMetrics.prototype = Object.create( Class && Class.prototype );\n    TextMetrics.prototype.constructor = TextMetrics;\n\n    TextMetrics.prototype.measure = function measure (text, style, options) {\n        if ( options === void 0 ) options = {};\n\n        if (typeof text === 'undefined' || text === null) {\n            return zeroSize();\n        }\n\n        var styleKey = objectKey(style);\n        var cacheKey = hashKey(text + styleKey);\n        var cachedResult = this._cache.get(cacheKey);\n\n        if (cachedResult) {\n            return cachedResult;\n        }\n\n        var size = zeroSize();\n        var measureBox = options.box || defaultMeasureBox;\n        var baselineMarker = this._baselineMarker().cloneNode(false);\n\n        for (var key in style) {\n            var value = style[key];\n            if (typeof value !== \"undefined\") {\n                measureBox.style[key] = value;\n            }\n        }\n\n        var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n\n        measureBox.textContent = textStr;\n        measureBox.appendChild(baselineMarker);\n        document.body.appendChild(measureBox);\n\n        if (textStr.length) {\n            size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n            size.height = measureBox.offsetHeight;\n            size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n        }\n\n        if (size.width > 0 && size.height > 0) {\n            this._cache.put(cacheKey, size);\n        }\n\n        measureBox.parentNode.removeChild(measureBox);\n\n        return size;\n    };\n\n    TextMetrics.prototype._baselineMarker = function _baselineMarker () {\n        var marker = document.createElement(\"div\");\n        marker.style.display = \"inline-block\";\n        marker.style.verticalAlign = \"baseline\";\n        marker.style.width = this.options.baselineMarkerSize + \"px\";\n        marker.style.height = this.options.baselineMarkerSize + \"px\";\n        marker.style.overflow = \"hidden\";\n\n        return marker;\n    };\n\n    return TextMetrics;\n}(Class));\n\nTextMetrics.current = new TextMetrics();\n\nfunction measureText(text, style, measureBox) {\n    return TextMetrics.current.measure(text, style, measureBox);\n}\n\nvar util = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    DEG_TO_RAD: DEG_TO_RAD,\n    LRUCache: LRUCache,\n    MAX_NUM: MAX_NUM,\n    MIN_NUM: MIN_NUM,\n    TextMetrics: TextMetrics,\n    append: append,\n    arabicToRoman: arabicToRoman,\n    bindEvents: bindEvents,\n    createPromise: createPromise,\n    defined: defined,\n    definitionId: definitionId,\n    deg: deg,\n    elementOffset: elementOffset,\n    elementPadding: elementPadding,\n    elementScale: elementScale,\n    elementSize: elementSize,\n    elementStyles: elementStyles,\n    encodeBase64: encodeBase64,\n    eventCoordinates: eventCoordinates,\n    eventElement: eventElement,\n    hashKey: hashKey,\n    isTransparent: isTransparent,\n    last: last,\n    limitValue: limitValue,\n    measureText: measureText,\n    mergeSort: mergeSort,\n    normalizeText: normalizeText,\n    now: now,\n    objectKey: objectKey,\n    promiseAll: promiseAll,\n    rad: rad,\n    round: round,\n    unbindEvents: unbindEvents,\n    valueOrDefault: valueOrDefault\n});\n\nvar toString = {}.toString;\n\nvar OptionsStore = (function (HasObservers) {\n    function OptionsStore(options, prefix) {\n        var this$1$1 = this;\n        if ( prefix === void 0 ) prefix = \"\";\n\n        HasObservers.call(this);\n\n        this.prefix = prefix;\n\n        for (var field in options) {\n            var member = options[field];\n            member = this$1$1._wrap(member, field);\n            this$1$1[field] = member;\n        }\n    }\n\n    if ( HasObservers ) OptionsStore.__proto__ = HasObservers;\n    OptionsStore.prototype = Object.create( HasObservers && HasObservers.prototype );\n    OptionsStore.prototype.constructor = OptionsStore;\n\n    OptionsStore.prototype.get = function get (field) {\n        var parts = field.split(\".\");\n        var result = this;\n\n        while (parts.length && result) {\n            var part = parts.shift();\n            result = result[part];\n        }\n\n        return result;\n    };\n\n    OptionsStore.prototype.set = function set (field, value) {\n        var current = this.get(field);\n\n        if (current !== value) {\n            this._set(field, this._wrap(value, field));\n            this.optionsChange({\n                field: this.prefix + field,\n                value: value\n            });\n        }\n    };\n\n    OptionsStore.prototype._set = function _set (field, value) {\n        var this$1$1 = this;\n\n        var composite = field.indexOf(\".\") >= 0;\n        var parentObj = this;\n        var fieldName = field;\n\n        if (composite) {\n            var parts = fieldName.split(\".\");\n            var prefix = this.prefix;\n\n            while (parts.length > 1) {\n                fieldName = parts.shift();\n                prefix += fieldName + \".\";\n\n                var obj = parentObj[fieldName];\n\n                if (!obj) {\n                    obj = new OptionsStore({}, prefix);\n                    obj.addObserver(this$1$1);\n                    parentObj[fieldName] = obj;\n                }\n                parentObj = obj;\n            }\n            fieldName = parts[0];\n        }\n\n        parentObj._clear(fieldName);\n        parentObj[fieldName] = value;\n    };\n\n    OptionsStore.prototype._clear = function _clear (field) {\n        var current = this[field];\n        if (current && current.removeObserver) {\n            current.removeObserver(this);\n        }\n    };\n\n    OptionsStore.prototype._wrap = function _wrap (object, field) {\n        var type = toString.call(object);\n        var wrapped = object;\n\n        if (wrapped !== null && defined(wrapped) && type === \"[object Object]\") {\n            if (!(object instanceof OptionsStore) && !(object instanceof Class)) {\n                wrapped = new OptionsStore(wrapped, this.prefix + field + \".\");\n            }\n\n            wrapped.addObserver(this);\n        }\n\n        return wrapped;\n    };\n\n    return OptionsStore;\n}(HasObservers));\n\nfunction setAccessor(field) {\n    return function(value) {\n        if (this[field] !== value) {\n            this[field] = value;\n            this.geometryChange();\n        }\n\n        return this;\n    };\n}\n\nfunction getAccessor(field) {\n    return function() {\n        return this[field];\n    };\n}\n\nfunction defineAccessors(fn, fields) {\n    for (var i = 0; i < fields.length; i++) {\n        var name = fields[i];\n        var capitalized = name.charAt(0).toUpperCase() +\n                          name.substring(1, name.length);\n\n        fn[\"set\" + capitalized] = setAccessor(name);\n        fn[\"get\" + capitalized] = getAccessor(name);\n    }\n}\n\nvar withAccessors = function (TBase, names) {\n    var result = (function (TBase) {\n        function result () {\n            TBase.apply(this, arguments);\n        }if ( TBase ) result.__proto__ = TBase;\n        result.prototype = Object.create( TBase && TBase.prototype );\n        result.prototype.constructor = result;\n\n        \n\n        return result;\n    }(TBase));\n    defineAccessors(result.prototype, names);\n\n    return result;\n};\n\nfunction toMatrix(transformation) {\n    if (transformation && typeof transformation.matrix === \"function\") {\n        return transformation.matrix();\n    }\n\n    return transformation;\n}\n\nvar Point = (function (superclass) {\n    function Point(x, y) {\n        superclass.call(this);\n\n        this.x = x || 0;\n        this.y = y || 0;\n    }\n\n    if ( superclass ) Point.__proto__ = superclass;\n    Point.prototype = Object.create( superclass && superclass.prototype );\n    Point.prototype.constructor = Point;\n\n    var staticAccessors = { ZERO: { configurable: true } };\n\n    Point.prototype.equals = function equals (other) {\n        return other && other.x === this.x && other.y === this.y;\n    };\n\n    Point.prototype.clone = function clone () {\n        return new Point(this.x, this.y);\n    };\n\n    Point.prototype.rotate = function rotate (angle, origin) {\n        var originPoint = Point.create(origin) || Point.ZERO;\n\n        return this.transform(Matrix.rotate(angle, originPoint.x, originPoint.y));\n    };\n\n    Point.prototype.translate = function translate (x, y) {\n        this.x += x;\n        this.y += y;\n\n        this.geometryChange();\n\n        return this;\n    };\n\n    Point.prototype.translateWith = function translateWith (point) {\n        return this.translate(point.x, point.y);\n    };\n\n    Point.prototype.move = function move (x, y) {\n        this.x = this.y = 0;\n        return this.translate(x, y);\n    };\n\n    Point.prototype.scale = function scale (scaleX, scaleY) {\n        if ( scaleY === void 0 ) scaleY = scaleX;\n\n        this.x *= scaleX;\n        this.y *= scaleY;\n\n        this.geometryChange();\n\n        return this;\n    };\n\n    Point.prototype.scaleCopy = function scaleCopy (scaleX, scaleY) {\n        return this.clone().scale(scaleX, scaleY);\n    };\n\n    Point.prototype.transform = function transform (transformation) {\n        var matrix = toMatrix(transformation);\n        var ref = this;\n        var x = ref.x;\n        var y = ref.y;\n\n        this.x = matrix.a * x + matrix.c * y + matrix.e;\n        this.y = matrix.b * x + matrix.d * y + matrix.f;\n\n        this.geometryChange();\n\n        return this;\n    };\n\n    Point.prototype.transformCopy = function transformCopy (transformation) {\n        var point = this.clone();\n\n        if (transformation) {\n            point.transform(transformation);\n        }\n\n        return point;\n    };\n\n    Point.prototype.distanceTo = function distanceTo (point) {\n        var dx = this.x - point.x;\n        var dy = this.y - point.y;\n\n        return Math.sqrt(dx * dx + dy * dy);\n    };\n\n    Point.prototype.round = function round$1 (digits) {\n        this.x = round(this.x, digits);\n        this.y = round(this.y, digits);\n\n        this.geometryChange();\n\n        return this;\n    };\n\n    Point.prototype.toArray = function toArray (digits) {\n        var doRound = defined(digits);\n        var x = doRound ? round(this.x, digits) : this.x;\n        var y = doRound ? round(this.y, digits) : this.y;\n\n        return [ x, y ];\n    };\n\n    Point.prototype.toString = function toString (digits, separator) {\n        if ( separator === void 0 ) separator = \" \";\n\n        var ref = this;\n        var x = ref.x;\n        var y = ref.y;\n\n        if (defined(digits)) {\n            x = round(x, digits);\n            y = round(y, digits);\n        }\n\n        return x + separator + y;\n    };\n\n    Point.create = function create (arg0, arg1) {\n        if (defined(arg0)) {\n            if (arg0 instanceof Point) {\n                return arg0;\n            } else if (arguments.length === 1 && arg0.length === 2) {\n                return new Point(arg0[0], arg0[1]);\n            }\n\n            return new Point(arg0, arg1);\n        }\n    };\n\n    Point.min = function min () {\n        var arguments$1 = arguments;\n\n        var minX = MAX_NUM;\n        var minY = MAX_NUM;\n\n        for (var i = 0; i < arguments.length; i++) {\n            var point = arguments$1[i];\n            minX = Math.min(point.x, minX);\n            minY = Math.min(point.y, minY);\n        }\n\n        return new Point(minX, minY);\n    };\n\n    Point.max = function max () {\n        var arguments$1 = arguments;\n\n        var maxX = MIN_NUM;\n        var maxY = MIN_NUM;\n\n        for (var i = 0; i < arguments.length; i++) {\n            var point = arguments$1[i];\n            maxX = Math.max(point.x, maxX);\n            maxY = Math.max(point.y, maxY);\n        }\n\n        return new Point(maxX, maxY);\n    };\n\n    Point.minPoint = function minPoint () {\n        return new Point(MIN_NUM, MIN_NUM);\n    };\n\n    Point.maxPoint = function maxPoint () {\n        return new Point(MAX_NUM, MAX_NUM);\n    };\n\n    staticAccessors.ZERO.get = function () {\n        return new Point(0, 0);\n    };\n\n    Object.defineProperties( Point, staticAccessors );\n\n    return Point;\n}(withAccessors(HasObservers, [ \"x\", \"y\" ])));\n\nvar Size = (function (superclass) {\n    function Size(width, height) {\n        superclass.call(this);\n\n        this.width = width || 0;\n        this.height = height || 0;\n    }\n\n    if ( superclass ) Size.__proto__ = superclass;\n    Size.prototype = Object.create( superclass && superclass.prototype );\n    Size.prototype.constructor = Size;\n\n    var staticAccessors = { ZERO: { configurable: true } };\n\n    Size.prototype.equals = function equals (other) {\n        return other && other.width === this.width && other.height === this.height;\n    };\n\n    Size.prototype.clone = function clone () {\n        return new Size(this.width, this.height);\n    };\n\n    Size.prototype.toArray = function toArray (digits) {\n        var doRound = defined(digits);\n        var width = doRound ? round(this.width, digits) : this.width;\n        var height = doRound ? round(this.height, digits) : this.height;\n\n        return [ width, height ];\n    };\n\n    Size.create = function create (arg0, arg1) {\n        if (defined(arg0)) {\n            if (arg0 instanceof Size) {\n                return arg0;\n            } else if (arguments.length === 1 && arg0.length === 2) {\n                return new Size(arg0[0], arg0[1]);\n            }\n\n            return new Size(arg0, arg1);\n        }\n    };\n\n    staticAccessors.ZERO.get = function () {\n        return new Size(0, 0);\n    };\n\n    Object.defineProperties( Size, staticAccessors );\n\n    return Size;\n}(withAccessors(HasObservers, [ \"width\", \"height\" ])));\n\nvar Rect$1 = (function (HasObservers) {\n    function Rect(origin, size, cornerRadius) {\n        if ( origin === void 0 ) origin = new Point();\n        if ( size === void 0 ) size = new Size();\n        if ( cornerRadius === void 0 ) cornerRadius = 0;\n\n        HasObservers.call(this);\n\n        this.setOrigin(origin);\n        this.setSize(size);\n        this.setCornerRadius(cornerRadius);\n    }\n\n    if ( HasObservers ) Rect.__proto__ = HasObservers;\n    Rect.prototype = Object.create( HasObservers && HasObservers.prototype );\n    Rect.prototype.constructor = Rect;\n\n    Rect.prototype.clone = function clone () {\n        return new Rect(\n            this.origin.clone(),\n            this.size.clone()\n        );\n    };\n\n    Rect.prototype.equals = function equals (other) {\n        return other &&\n               other.origin.equals(this.origin) &&\n               other.size.equals(this.size);\n    };\n\n    Rect.prototype.setOrigin = function setOrigin (value) {\n        this._observerField(\"origin\", Point.create(value));\n        this.geometryChange();\n        return this;\n    };\n\n    Rect.prototype.getOrigin = function getOrigin () {\n        return this.origin;\n    };\n\n    Rect.prototype.setCornerRadius = function setCornerRadius (radius) {\n        this.cornerRadius = Array.isArray(radius) ? radius : [ radius, radius ];\n\n        this.geometryChange();\n        return this;\n    };\n\n    Rect.prototype.getCornerRadius = function getCornerRadius () {\n        return this.cornerRadius;\n    };\n\n    Rect.prototype.setSize = function setSize (value) {\n        this._observerField(\"size\", Size.create(value));\n        this.geometryChange();\n        return this;\n    };\n\n    Rect.prototype.getSize = function getSize () {\n        return this.size;\n    };\n\n    Rect.prototype.width = function width () {\n        return this.size.width;\n    };\n\n    Rect.prototype.height = function height () {\n        return this.size.height;\n    };\n\n    Rect.prototype.topLeft = function topLeft () {\n        return this.origin.clone();\n    };\n\n    Rect.prototype.bottomRight = function bottomRight () {\n        return this.origin.clone().translate(this.width(), this.height());\n    };\n\n    Rect.prototype.topRight = function topRight () {\n        return this.origin.clone().translate(this.width(), 0);\n    };\n\n    Rect.prototype.bottomLeft = function bottomLeft () {\n        return this.origin.clone().translate(0, this.height());\n    };\n\n    Rect.prototype.center = function center () {\n        return this.origin.clone().translate(this.width() / 2, this.height() / 2);\n    };\n\n    Rect.prototype.bbox = function bbox (matrix) {\n        var tl = this.topLeft().transformCopy(matrix);\n        var tr = this.topRight().transformCopy(matrix);\n        var br = this.bottomRight().transformCopy(matrix);\n        var bl = this.bottomLeft().transformCopy(matrix);\n\n        return Rect.fromPoints(tl, tr, br, bl);\n    };\n\n    Rect.prototype.transformCopy = function transformCopy (m) {\n        return Rect.fromPoints(\n            this.topLeft().transform(m),\n            this.bottomRight().transform(m)\n        );\n    };\n\n    Rect.prototype.expand = function expand (x, y) {\n        if ( y === void 0 ) y = x;\n\n\n        this.size.width += 2 * x;\n        this.size.height += 2 * y;\n\n        this.origin.translate(-x, -y);\n\n        return this;\n    };\n\n    Rect.prototype.expandCopy = function expandCopy (x, y) {\n        return this.clone().expand(x, y);\n    };\n\n    Rect.prototype.containsPoint = function containsPoint (point) {\n        var origin = this.origin;\n        var bottomRight = this.bottomRight();\n        return !(point.x < origin.x || point.y < origin.y || bottomRight.x < point.x || bottomRight.y < point.y);\n    };\n\n    Rect.prototype._isOnPath = function _isOnPath (point, width) {\n        var rectOuter = this.expandCopy(width, width);\n        var rectInner = this.expandCopy(-width, -width);\n\n        return rectOuter.containsPoint(point) && !rectInner.containsPoint(point);\n    };\n\n    Rect.fromPoints = function fromPoints () {\n        var topLeft = Point.min.apply(null, arguments);\n        var bottomRight = Point.max.apply(null, arguments);\n        var size = new Size(\n            bottomRight.x - topLeft.x,\n            bottomRight.y - topLeft.y\n        );\n\n        return new Rect(topLeft, size);\n    };\n\n    Rect.union = function union (a, b) {\n        return Rect.fromPoints(\n            Point.min(a.topLeft(), b.topLeft()),\n            Point.max(a.bottomRight(), b.bottomRight())\n        );\n    };\n\n    Rect.intersect = function intersect (a, b) {\n        var rect1 = {\n            left: a.topLeft().x,\n            top: a.topLeft().y,\n            right: a.bottomRight().x,\n            bottom: a.bottomRight().y\n        };\n\n        var rect2 = {\n            left: b.topLeft().x,\n            top: b.topLeft().y,\n            right: b.bottomRight().x,\n            bottom: b.bottomRight().y\n        };\n\n        if (rect1.left <= rect2.right &&\n            rect2.left <= rect1.right &&\n            rect1.top <= rect2.bottom &&\n            rect2.top <= rect1.bottom) {\n            return Rect.fromPoints(\n                new Point(Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)),\n                new Point(Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom))\n            );\n        }\n    };\n\n    return Rect;\n}(HasObservers));\n\nvar Transformation = (function (HasObservers) {\n    function Transformation(matrix) {\n        if ( matrix === void 0 ) matrix = Matrix.unit();\n\n        HasObservers.call(this);\n\n        this._matrix = matrix;\n    }\n\n    if ( HasObservers ) Transformation.__proto__ = HasObservers;\n    Transformation.prototype = Object.create( HasObservers && HasObservers.prototype );\n    Transformation.prototype.constructor = Transformation;\n\n    Transformation.prototype.clone = function clone () {\n        return new Transformation(\n            this._matrix.clone()\n        );\n    };\n\n    Transformation.prototype.equals = function equals (other) {\n        return other &&\n               other._matrix.equals(this._matrix);\n    };\n\n    Transformation.prototype.translate = function translate (x, y) {\n        this._matrix = this._matrix.multiplyCopy(Matrix.translate(x, y));\n\n        this._optionsChange();\n        return this;\n    };\n\n    Transformation.prototype.scale = function scale (scaleX, scaleY, origin) {\n        if ( scaleY === void 0 ) scaleY = scaleX;\n        if ( origin === void 0 ) origin = null;\n\n        var originPoint = origin;\n\n        if (originPoint) {\n            originPoint = Point.create(originPoint);\n            this._matrix = this._matrix.multiplyCopy(Matrix.translate(originPoint.x, originPoint.y));\n        }\n\n        this._matrix = this._matrix.multiplyCopy(Matrix.scale(scaleX, scaleY));\n\n        if (originPoint) {\n            this._matrix = this._matrix.multiplyCopy(Matrix.translate(-originPoint.x, -originPoint.y));\n        }\n\n        this._optionsChange();\n        return this;\n    };\n\n    Transformation.prototype.rotate = function rotate (angle, origin) {\n        var originPoint = Point.create(origin) || Point.ZERO;\n\n        this._matrix = this._matrix.multiplyCopy(Matrix.rotate(angle, originPoint.x, originPoint.y));\n\n        this._optionsChange();\n        return this;\n    };\n\n    Transformation.prototype.multiply = function multiply (transformation) {\n        var matrix = toMatrix(transformation);\n\n        this._matrix = this._matrix.multiplyCopy(matrix);\n\n        this._optionsChange();\n        return this;\n    };\n\n    Transformation.prototype.matrix = function matrix (value) {\n        if (value) {\n            this._matrix = value;\n            this._optionsChange();\n            return this;\n        }\n\n        return this._matrix;\n    };\n\n    Transformation.prototype._optionsChange = function _optionsChange () {\n        this.optionsChange({\n            field: \"transform\",\n            value: this\n        });\n    };\n\n    return Transformation;\n}(HasObservers));\n\nfunction transform(matrix) {\n    if (matrix === null) {\n        return null;\n    }\n\n    if (matrix instanceof Transformation) {\n        return matrix;\n    }\n\n    return new Transformation(matrix);\n}\n\nvar DASH_ARRAYS = {\n    dot: [ 1.5, 3.5 ],\n    dash: [ 4, 3.5 ],\n    longdash: [ 8, 3.5 ],\n    dashdot: [ 3.5, 3.5, 1.5, 3.5 ],\n    longdashdot: [ 8, 3.5, 1.5, 3.5 ],\n    longdashdotdot: [ 8, 3.5, 1.5, 3.5, 1.5, 3.5 ]\n};\n\nvar SOLID = \"solid\";\nvar BUTT = \"butt\";\nvar PATTERN = \"Pattern\";\n\nvar Element$1 = (function (HasObservers) {\n    function Element(options) {\n        HasObservers.call(this);\n\n        this._initOptions(options);\n    }\n\n    if ( HasObservers ) Element.__proto__ = HasObservers;\n    Element.prototype = Object.create( HasObservers && HasObservers.prototype );\n    Element.prototype.constructor = Element;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Rect\";\n    };\n\n    Element.prototype._initOptions = function _initOptions (options) {\n        if ( options === void 0 ) options = {};\n\n        var clip = options.clip;\n        var transform$1 = options.transform;\n\n        if (transform$1) {\n            options.transform = transform(transform$1);\n        }\n\n        if (clip && !clip.id) {\n            clip.id = definitionId();\n        }\n\n        this.options = new OptionsStore(options);\n        this.options.addObserver(this);\n    };\n\n    Element.prototype.transform = function transform$1 (value) {\n        if (defined(value)) {\n            this.options.set(\"transform\", transform(value));\n        } else {\n            return this.options.get(\"transform\");\n        }\n    };\n\n    Element.prototype.parentTransform = function parentTransform () {\n        var element = this;\n        var parentMatrix;\n\n        while (element.parent) {\n            element = element.parent;\n            var transformation = element.transform();\n            if (transformation) {\n                parentMatrix = transformation.matrix().multiplyCopy(parentMatrix || Matrix.unit());\n            }\n        }\n\n        if (parentMatrix) {\n            return transform(parentMatrix);\n        }\n    };\n\n    Element.prototype.currentTransform = function currentTransform (parentTransform) {\n        if ( parentTransform === void 0 ) parentTransform = this.parentTransform();\n\n        var elementTransform = this.transform();\n        var elementMatrix = toMatrix(elementTransform);\n\n        var parentMatrix = toMatrix(parentTransform);\n        var combinedMatrix;\n\n        if (elementMatrix && parentMatrix) {\n            combinedMatrix = parentMatrix.multiplyCopy(elementMatrix);\n        } else {\n            combinedMatrix = elementMatrix || parentMatrix;\n        }\n\n        if (combinedMatrix) {\n            return transform(combinedMatrix);\n        }\n    };\n\n    Element.prototype.visible = function visible (value) {\n        if (defined(value)) {\n            this.options.set(\"visible\", value);\n            return this;\n        }\n\n        return this.options.get(\"visible\") !== false;\n    };\n\n    Element.prototype.clip = function clip (value) {\n        var options = this.options;\n        if (defined(value)) {\n            if (value && !value.id) {\n                value.id = definitionId();\n            }\n            options.set(\"clip\", value);\n            return this;\n        }\n\n        return options.get(\"clip\");\n    };\n\n    Element.prototype.opacity = function opacity (value) {\n        if (defined(value)) {\n            this.options.set(\"opacity\", value);\n            return this;\n        }\n\n        return valueOrDefault(this.options.get(\"opacity\"), 1);\n    };\n\n    Element.prototype.className = function className (value) {\n        if (defined(value)) {\n            this.options.set(\"className\", value);\n            return this;\n        }\n\n        return this.options.get(\"className\");\n    };\n\n    Element.prototype.clippedBBox = function clippedBBox (transformation) {\n        var bbox = this._clippedBBox(transformation);\n        if (bbox) {\n            var clip = this.clip();\n            return clip ? Rect$1.intersect(bbox, clip.bbox(transformation)) : bbox;\n        }\n    };\n\n    Element.prototype.containsPoint = function containsPoint (point, parentTransform) {\n        if (this.visible()) {\n            var transform = this.currentTransform(parentTransform);\n            var transformedPoint = point;\n            if (transform) {\n                transformedPoint = point.transformCopy(transform.matrix().invert());\n            }\n            return (this._hasFill() && this._containsPoint(transformedPoint)) || (this._isOnPath && this._hasStroke() && this._isOnPath(transformedPoint));\n        }\n        return false;\n    };\n\n    Element.prototype._hasFill = function _hasFill () {\n        var fill = this.options.fill;\n        return fill && (fill.nodeType === PATTERN || !isTransparent(fill.color));\n    };\n\n    Element.prototype._hasStroke = function _hasStroke () {\n        var stroke = this.options.stroke;\n        return stroke && stroke.width > 0 && !isTransparent(stroke.color);\n    };\n\n    Element.prototype._clippedBBox = function _clippedBBox (transformation) {\n        return this.bbox(transformation);\n    };\n\n    Object.defineProperties( Element.prototype, prototypeAccessors );\n\n    return Element;\n}(HasObservers));\n\nfunction ellipseExtremeAngles(center, rx, ry, matrix) {\n    var extremeX = 0;\n    var extremeY = 0;\n\n    if (matrix) {\n        extremeX = Math.atan2(matrix.c * ry, matrix.a * rx);\n        if (matrix.b !== 0) {\n            extremeY = Math.atan2(matrix.d * ry, matrix.b * rx);\n        }\n    }\n\n    return {\n        x: extremeX,\n        y: extremeY\n    };\n}\n\nvar PI_DIV_2 = Math.PI / 2;\n\nvar Circle$1 = (function (superclass) {\n    function Circle(center, radius) {\n        if ( center === void 0 ) center = new Point();\n        if ( radius === void 0 ) radius = 0;\n\n        superclass.call(this);\n\n        this.setCenter(center);\n        this.setRadius(radius);\n    }\n\n    if ( superclass ) Circle.__proto__ = superclass;\n    Circle.prototype = Object.create( superclass && superclass.prototype );\n    Circle.prototype.constructor = Circle;\n\n    Circle.prototype.setCenter = function setCenter (value) {\n        this._observerField(\"center\", Point.create(value));\n        this.geometryChange();\n        return this;\n    };\n\n    Circle.prototype.getCenter = function getCenter () {\n        return this.center;\n    };\n\n    Circle.prototype.equals = function equals (other) {\n        return other &&\n               other.center.equals(this.center) &&\n               other.radius === this.radius;\n    };\n\n    Circle.prototype.clone = function clone () {\n        return new Circle(this.center.clone(), this.radius);\n    };\n\n    Circle.prototype.pointAt = function pointAt (angle) {\n        return this._pointAt(rad(angle));\n    };\n\n    Circle.prototype.bbox = function bbox (matrix) {\n        var this$1$1 = this;\n\n        var extremeAngles = ellipseExtremeAngles(this.center, this.radius, this.radius, matrix);\n        var minPoint = Point.maxPoint();\n        var maxPoint = Point.minPoint();\n\n        for (var i = 0; i < 4; i++) {\n            var currentPointX = this$1$1._pointAt(extremeAngles.x + i * PI_DIV_2).transformCopy(matrix);\n            var currentPointY = this$1$1._pointAt(extremeAngles.y + i * PI_DIV_2).transformCopy(matrix);\n            var currentPoint = new Point(currentPointX.x, currentPointY.y);\n\n            minPoint = Point.min(minPoint, currentPoint);\n            maxPoint = Point.max(maxPoint, currentPoint);\n        }\n\n        return Rect$1.fromPoints(minPoint, maxPoint);\n    };\n\n    Circle.prototype._pointAt = function _pointAt (angle) {\n        var ref = this;\n        var center = ref.center;\n        var radius = ref.radius;\n\n        return new Point(\n            center.x + radius * Math.cos(angle),\n            center.y + radius * Math.sin(angle)\n        );\n    };\n\n    Circle.prototype.containsPoint = function containsPoint (point) {\n        var ref = this;\n        var center = ref.center;\n        var radius = ref.radius;\n        var inCircle = Math.pow(point.x - center.x, 2) +\n            Math.pow(point.y - center.y, 2) <= Math.pow(radius, 2);\n        return inCircle;\n    };\n\n    Circle.prototype._isOnPath = function _isOnPath (point, width) {\n        var ref = this;\n        var center = ref.center;\n        var radius = ref.radius;\n        var pointDistance = center.distanceTo(point);\n\n        return radius - width <= pointDistance && pointDistance <= radius + width;\n    };\n\n    return Circle;\n}(withAccessors(HasObservers, [ \"radius\" ])));\n\nvar GRADIENT = \"Gradient\";\n\nvar paintable = function (TBase) { return (\n    (function (TBase) {\n        function anonymous () {\n            TBase.apply(this, arguments);\n        }\n\n        if ( TBase ) anonymous.__proto__ = TBase;\n        anonymous.prototype = Object.create( TBase && TBase.prototype );\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.fill = function fill (color, opacity) {\n            var options = this.options;\n\n            if (defined(color)) {\n                if (color && color.nodeType !== GRADIENT) {\n                    var newFill = {\n                        color: color\n                    };\n                    if (defined(opacity)) {\n                        newFill.opacity = opacity;\n                    }\n                    options.set(\"fill\", newFill);\n                } else {\n                    options.set(\"fill\", color);\n                }\n\n                return this;\n            }\n\n            return options.get(\"fill\");\n        };\n\n        anonymous.prototype.stroke = function stroke (color, width, opacity) {\n            if (defined(color)) {\n                this.options.set(\"stroke.color\", color);\n\n                if (defined(width)) {\n                    this.options.set(\"stroke.width\", width);\n                }\n\n                if (defined(opacity)) {\n                    this.options.set(\"stroke.opacity\", opacity);\n                }\n\n                return this;\n            }\n\n            return this.options.get(\"stroke\");\n        };\n\n        return anonymous;\n    }(TBase))\n); };\n\nvar IDENTITY_MATRIX_HASH = Matrix.IDENTITY.toString();\n\nvar measurable = function (TBase) { return (\n    (function (TBase) {\n        function anonymous () {\n            TBase.apply(this, arguments);\n        }\n\n        if ( TBase ) anonymous.__proto__ = TBase;\n        anonymous.prototype = Object.create( TBase && TBase.prototype );\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.bbox = function bbox (transformation) {\n            var combinedMatrix = toMatrix(this.currentTransform(transformation));\n            var matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;\n            var bbox;\n\n            if (this._bboxCache && this._matrixHash === matrixHash) {\n                bbox = this._bboxCache.clone();\n            } else {\n                bbox = this._bbox(combinedMatrix);\n                this._bboxCache = bbox ? bbox.clone() : null;\n                this._matrixHash = matrixHash;\n            }\n\n            var strokeWidth = this.options.get(\"stroke.width\");\n            if (strokeWidth && bbox) {\n                bbox.expand(strokeWidth / 2);\n            }\n\n            return bbox;\n        };\n\n        anonymous.prototype.geometryChange = function geometryChange () {\n            delete this._bboxCache;\n            this.trigger(\"geometryChange\", {\n                element: this\n            });\n        };\n\n        return anonymous;\n    }(TBase))\n); };\n\nfunction geometryAccessor(name) {\n    var fieldName = \"_\" + name;\n    return function(value) {\n        if (defined(value)) {\n            this._observerField(fieldName, value);\n            this.geometryChange();\n            return this;\n        }\n\n        return this[fieldName];\n    };\n}\n\nfunction defineGeometryAccessors(fn, names) {\n    for (var i = 0; i < names.length; i++) {\n        fn[names[i]] = geometryAccessor(names[i]);\n    }\n}\n\nvar withGeometry = function (TBase, names) {\n    if ( names === void 0 ) names = [ \"geometry\" ];\n\n    var result = (function (TBase) {\n        function result () {\n            TBase.apply(this, arguments);\n        }if ( TBase ) result.__proto__ = TBase;\n        result.prototype = Object.create( TBase && TBase.prototype );\n        result.prototype.constructor = result;\n\n        \n\n        return result;\n    }(TBase));\n    defineGeometryAccessors(result.prototype, names);\n\n    return result;\n};\n\nvar DEFAULT_STROKE$1 = \"#000\";\n\nvar Circle = (function (superclass) {\n    function Circle(geometry, options) {\n        if ( geometry === void 0 ) geometry = new Circle$1();\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(DEFAULT_STROKE$1);\n        }\n    }\n\n    if ( superclass ) Circle.__proto__ = superclass;\n    Circle.prototype = Object.create( superclass && superclass.prototype );\n    Circle.prototype.constructor = Circle;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Circle\";\n    };\n\n    Circle.prototype.rawBBox = function rawBBox () {\n        return this._geometry.bbox();\n    };\n\n    Circle.prototype._bbox = function _bbox (matrix) {\n        return this._geometry.bbox(matrix);\n    };\n\n    Circle.prototype._containsPoint = function _containsPoint (point) {\n        return this.geometry().containsPoint(point);\n    };\n\n    Circle.prototype._isOnPath = function _isOnPath (point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    };\n\n    Object.defineProperties( Circle.prototype, prototypeAccessors );\n\n    return Circle;\n}(paintable(measurable(withGeometry(Element$1)))));\n\nvar PRECISION = 10;\n\nfunction close(a, b, tolerance) {\n    if ( tolerance === void 0 ) tolerance = PRECISION;\n\n    return round(Math.abs(a - b), tolerance) === 0;\n}\n\nfunction closeOrLess(a, b, tolerance) {\n    return a < b || close(a, b, tolerance);\n}\n\nfunction lineIntersection(p0, p1, p2, p3) {\n    var s1x = p1.x - p0.x;\n    var s2x = p3.x - p2.x;\n    var s1y = p1.y - p0.y;\n    var s2y = p3.y - p2.y;\n    var nx = p0.x - p2.x;\n    var ny = p0.y - p2.y;\n    var d = s1x * s2y - s2x * s1y;\n    var s = (s1x * ny - s1y * nx) / d;\n    var t = (s2x * ny - s2y * nx) / d;\n\n    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n        return new Point(p0.x + t * s1x, p0.y + t * s1y);\n    }\n}\n\nvar MAX_INTERVAL = 45;\nvar pow = Math.pow;\nvar accessors = [ \"radiusX\", \"radiusY\", \"startAngle\", \"endAngle\", \"anticlockwise\" ];\n\nvar Arc$1 = (function (superclass) {\n    function Arc(center, options) {\n        if ( center === void 0 ) center = new Point();\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this);\n\n        this.setCenter(center);\n\n        this.radiusX = options.radiusX;\n        this.radiusY = options.radiusY || options.radiusX;\n        this.startAngle = options.startAngle;\n        this.endAngle = options.endAngle;\n        this.anticlockwise = options.anticlockwise || false;\n        this.xRotation = options.xRotation;\n    }\n\n    if ( superclass ) Arc.__proto__ = superclass;\n    Arc.prototype = Object.create( superclass && superclass.prototype );\n    Arc.prototype.constructor = Arc;\n\n    Arc.prototype.clone = function clone () {\n        return new Arc(this.center, {\n            radiusX: this.radiusX,\n            radiusY: this.radiusY,\n            startAngle: this.startAngle,\n            endAngle: this.endAngle,\n            anticlockwise: this.anticlockwise\n        });\n    };\n\n    Arc.prototype.setCenter = function setCenter (value) {\n        this._observerField(\"center\", Point.create(value));\n        this.geometryChange();\n        return this;\n    };\n\n    Arc.prototype.getCenter = function getCenter () {\n        return this.center;\n    };\n\n    Arc.prototype.pointAt = function pointAt (angle) {\n        var center = this.center;\n        var radian = rad(angle);\n\n        return new Point(\n            center.x + this.radiusX * Math.cos(radian),\n            center.y + this.radiusY * Math.sin(radian)\n        );\n    };\n\n    Arc.prototype.curvePoints = function curvePoints () {\n        var this$1$1 = this;\n\n        var startAngle = this.startAngle;\n        var dir = this.anticlockwise ? -1 : 1;\n        var curvePoints = [ this.pointAt(startAngle) ];\n        var interval = this._arcInterval();\n        var intervalAngle = interval.endAngle - interval.startAngle;\n        var subIntervalsCount = Math.ceil(intervalAngle / MAX_INTERVAL);\n        var subIntervalAngle = intervalAngle / subIntervalsCount;\n        var currentAngle = startAngle;\n        var transformation;\n        if (this.xRotation) {\n            transformation = transform().rotate(this.xRotation, this.center);\n        }\n\n        for (var i = 1; i <= subIntervalsCount; i++) {\n            var nextAngle = currentAngle + dir * subIntervalAngle;\n            var points = this$1$1._intervalCurvePoints(currentAngle, nextAngle, transformation);\n\n            curvePoints.push(points.cp1, points.cp2, points.p2);\n            currentAngle = nextAngle;\n        }\n\n        return curvePoints;\n    };\n\n    Arc.prototype.bbox = function bbox (matrix) {\n        var this$1$1 = this;\n\n        var interval = this._arcInterval();\n        var startAngle = interval.startAngle;\n        var endAngle = interval.endAngle;\n        var extremeAngles = ellipseExtremeAngles(this.center, this.radiusX, this.radiusY, matrix);\n        var extremeX = deg(extremeAngles.x);\n        var extremeY = deg(extremeAngles.y);\n        var endPoint = this.pointAt(endAngle).transformCopy(matrix);\n        var currentAngleX = bboxStartAngle(extremeX, startAngle);\n        var currentAngleY = bboxStartAngle(extremeY, startAngle);\n        var currentPoint = this.pointAt(startAngle).transformCopy(matrix);\n        var minPoint = Point.min(currentPoint, endPoint);\n        var maxPoint = Point.max(currentPoint, endPoint);\n\n        while (currentAngleX < endAngle || currentAngleY < endAngle) {\n            var currentPointX = (void 0);\n            if (currentAngleX < endAngle) {\n                currentPointX = this$1$1.pointAt(currentAngleX).transformCopy(matrix);\n                currentAngleX += 90;\n            }\n\n            var currentPointY = (void 0);\n            if (currentAngleY < endAngle) {\n                currentPointY = this$1$1.pointAt(currentAngleY).transformCopy(matrix);\n                currentAngleY += 90;\n            }\n\n            currentPoint = new Point(currentPointX.x, currentPointY.y);\n            minPoint = Point.min(minPoint, currentPoint);\n            maxPoint = Point.max(maxPoint, currentPoint);\n        }\n\n        return Rect$1.fromPoints(minPoint, maxPoint);\n    };\n\n    Arc.prototype._arcInterval = function _arcInterval () {\n        var ref = this;\n        var startAngle = ref.startAngle;\n        var endAngle = ref.endAngle;\n        var anticlockwise = ref.anticlockwise;\n\n        if (anticlockwise) {\n            var oldStart = startAngle;\n            startAngle = endAngle;\n            endAngle = oldStart;\n        }\n\n        if (startAngle > endAngle || (anticlockwise && startAngle === endAngle)) {\n            endAngle += 360;\n        }\n\n        return {\n            startAngle: startAngle,\n            endAngle: endAngle\n        };\n    };\n\n    Arc.prototype._intervalCurvePoints = function _intervalCurvePoints (startAngle, endAngle, transformation) {\n        var p1 = this.pointAt(startAngle);\n        var p2 = this.pointAt(endAngle);\n        var p1Derivative = this._derivativeAt(startAngle);\n        var p2Derivative = this._derivativeAt(endAngle);\n        var t = (rad(endAngle) - rad(startAngle)) / 3;\n        var cp1 = new Point(p1.x + t * p1Derivative.x, p1.y + t * p1Derivative.y);\n        var cp2 = new Point(p2.x - t * p2Derivative.x, p2.y - t * p2Derivative.y);\n        if (transformation) {\n            p1.transform(transformation);\n            p2.transform(transformation);\n            cp1.transform(transformation);\n            cp2.transform(transformation);\n        }\n\n        return {\n            p1: p1,\n            cp1: cp1,\n            cp2: cp2,\n            p2: p2\n        };\n    };\n\n    Arc.prototype._derivativeAt = function _derivativeAt (angle) {\n        var radian = rad(angle);\n\n        return new Point(-this.radiusX * Math.sin(radian), this.radiusY * Math.cos(radian));\n    };\n\n    Arc.prototype.containsPoint = function containsPoint (point) {\n        var interval = this._arcInterval();\n        var intervalAngle = interval.endAngle - interval.startAngle;\n        var ref = this;\n        var center = ref.center;\n        var radiusX = ref.radiusX;\n        var radiusY = ref.radiusY;\n        var distance = center.distanceTo(point);\n        var angleRad = Math.atan2(point.y - center.y, point.x - center.x);\n        var pointRadius = (radiusX * radiusY) /\n            Math.sqrt(pow(radiusX, 2) * pow(Math.sin(angleRad), 2) + pow(radiusY, 2) * pow(Math.cos(angleRad), 2));\n        var startPoint = this.pointAt(this.startAngle).round(PRECISION);\n        var endPoint = this.pointAt(this.endAngle).round(PRECISION);\n        var intersection = lineIntersection(center, point.round(PRECISION), startPoint, endPoint);\n        var containsPoint;\n\n        if (intervalAngle < 180) {\n            containsPoint = intersection && closeOrLess(center.distanceTo(intersection), distance) && closeOrLess(distance, pointRadius);\n        } else {\n            var angle = calculateAngle(center.x, center.y, radiusX, radiusY, point.x, point.y);\n            if (angle !== 360) {\n                angle = (360 + angle) % 360;\n            }\n\n            var inAngleRange = interval.startAngle <= angle && angle <= interval.endAngle;\n            containsPoint = (inAngleRange && closeOrLess(distance, pointRadius)) || (!inAngleRange && (!intersection || intersection.equals(point)));\n        }\n        return containsPoint;\n    };\n\n    Arc.prototype._isOnPath = function _isOnPath (point, width) {\n        var interval = this._arcInterval();\n        var center = this.center;\n        var angle = calculateAngle(center.x, center.y, this.radiusX, this.radiusY, point.x, point.y);\n        if (angle !== 360) {\n            angle = (360 + angle) % 360;\n        }\n\n        var inAngleRange = interval.startAngle <= angle && angle <= interval.endAngle;\n\n        return inAngleRange && this.pointAt(angle).distanceTo(point) <= width;\n    };\n\n    Arc.fromPoints = function fromPoints (start, end, rx, ry, largeArc, swipe, rotation) {// eslint-disable-line max-params\n        var arcParameters = normalizeArcParameters({\n            x1: start.x,\n            y1: start.y,\n            x2: end.x,\n            y2: end.y,\n            rx: rx,\n            ry: ry,\n            largeArc: largeArc,\n            swipe: swipe,\n            rotation: rotation\n        });\n\n        return new Arc(arcParameters.center, {\n            startAngle: arcParameters.startAngle,\n            endAngle: arcParameters.endAngle,\n            radiusX: arcParameters.radiusX,\n            radiusY: arcParameters.radiusY,\n            xRotation: arcParameters.xRotation,\n            anticlockwise: swipe === 0\n        });\n    };\n\n    return Arc;\n}(withAccessors(HasObservers, accessors)));\n\nfunction calculateAngle(cx, cy, rx, ry, x, y) {\n    var cos = round((x - cx) / rx, 3);\n    var sin = round((y - cy) / ry, 3);\n\n    return round(deg(Math.atan2(sin, cos)));\n}\n\nfunction normalizeArcParameters(parameters) {\n    var x1 = parameters.x1;\n    var y1 = parameters.y1;\n    var x2 = parameters.x2;\n    var y2 = parameters.y2;\n    var rx = parameters.rx;\n    var ry = parameters.ry;\n    var largeArc = parameters.largeArc;\n    var swipe = parameters.swipe;\n    var rotation = parameters.rotation; if ( rotation === void 0 ) rotation = 0;\n\n    var radians = rad(rotation);\n    var cosine = Math.cos(radians);\n    var sine = Math.sin(radians);\n\n    var xT = cosine * (x1 - x2) / 2 + sine * (y1 - y2) / 2;\n    var yT = -sine * (x1 - x2) / 2 + cosine * (y1 - y2) / 2;\n\n    var sign = largeArc !== swipe ? 1 : -1;\n\n    var xt2 = Math.pow(xT, 2);\n    var yt2 = Math.pow(yT, 2);\n    var rx2 = Math.pow(rx, 2);\n    var ry2 = Math.pow(ry, 2);\n\n    var delta = xt2 / rx2 + yt2 / ry2;\n\n    if (delta > 1) {\n        delta = Math.sqrt(xt2 / rx2 + yt2 / ry2);\n        rx = delta * rx;\n        rx2 = Math.pow(rx, 2);\n\n        ry = delta * ry;\n        ry2 = Math.pow(ry, 2);\n    }\n\n    var constT = sign * Math.sqrt((rx2 * ry2 - rx2 * yt2 - ry2 * xt2) / (rx2 * yt2 + ry2 * xt2));\n    // due to rounding errors the value could become NaN even after radii correction\n    if (isNaN(constT)) {\n        constT = 0;\n    }\n\n    var cxT = constT * (rx * yT) / ry;\n    var cyT = - constT * (ry * xT) / rx;\n\n    var cx = cosine * cxT - sine * cyT + (x1 + x2) / 2;\n    var cy = sine * cxT + cosine * cyT + (y1 + y2) / 2;\n\n\n    var uX = (xT - cxT) / rx;\n    var uY = (yT - cyT) / ry;\n    var vX = -(xT + cxT) / rx;\n    var vY = -(yT + cyT) / ry;\n\n    var startAngle = (uY >= 0 ? 1 : -1) * deg(Math.acos(uX / Math.sqrt(uX * uX + uY * uY)));\n\n    var angleCosine = round((uX * vX + uY * vY) / (Math.sqrt(uX * uX + uY * uY) * Math.sqrt(vX * vX + vY * vY)), 10);\n    var angle = (uX * vY - uY * vX >= 0 ? 1 : -1) * deg(Math.acos(angleCosine));\n\n    if (!swipe && angle > 0) {\n        angle -= 360;\n    }\n\n    if (swipe && angle < 0) {\n        angle += 360;\n    }\n    var endAngle = startAngle + angle;\n    var signEndAngle = endAngle >= 0 ? 1 : -1;\n    endAngle = (Math.abs(endAngle) % 360) * signEndAngle;\n\n    return {\n        center: new Point(cx, cy),\n        startAngle: startAngle,\n        endAngle: endAngle,\n        radiusX: rx,\n        radiusY: ry,\n        xRotation: rotation\n    };\n}\n\nfunction bboxStartAngle(angle, start) {\n    var startAngle = angle;\n\n    while (startAngle < start) {\n        startAngle += 90;\n    }\n\n    return startAngle;\n}\n\nvar push = [].push;\nvar pop = [].pop;\nvar splice = [].splice;\nvar shift = [].shift;\nvar slice$1 = [].slice;\nvar unshift = [].unshift;\n\nvar ElementsArray = (function (HasObservers) {\n    function ElementsArray(array) {\n        if ( array === void 0 ) array = [];\n\n        HasObservers.call(this);\n\n        this.length = 0;\n        this._splice(0, array.length, array);\n    }\n\n    if ( HasObservers ) ElementsArray.__proto__ = HasObservers;\n    ElementsArray.prototype = Object.create( HasObservers && HasObservers.prototype );\n    ElementsArray.prototype.constructor = ElementsArray;\n\n    ElementsArray.prototype.elements = function elements (value) {\n        if (value) {\n            this._splice(0, this.length, value);\n\n            this._change();\n            return this;\n        }\n\n        return this.slice(0);\n    };\n\n    ElementsArray.prototype.push = function push$1 () {\n        var elements = arguments;\n        var result = push.apply(this, elements);\n\n        this._add(elements);\n\n        return result;\n    };\n\n    ElementsArray.prototype.slice = function slice$1$1 () {\n        return slice$1.call(this);\n    };\n\n    ElementsArray.prototype.pop = function pop$1 () {\n        var length = this.length;\n        var result = pop.apply(this);\n\n        if (length) {\n            this._remove([ result ]);\n        }\n\n        return result;\n    };\n\n    ElementsArray.prototype.splice = function splice (index, howMany) {\n        var elements = slice$1.call(arguments, 2);\n        var result = this._splice(index, howMany, elements);\n\n        this._change();\n\n        return result;\n    };\n\n    ElementsArray.prototype.shift = function shift$1 () {\n        var length = this.length;\n        var result = shift.apply(this);\n\n        if (length) {\n            this._remove([ result ]);\n        }\n\n        return result;\n    };\n\n    ElementsArray.prototype.unshift = function unshift$1 () {\n        var elements = arguments;\n        var result = unshift.apply(this, elements);\n\n        this._add(elements);\n\n        return result;\n    };\n\n    ElementsArray.prototype.indexOf = function indexOf (element) {\n        var this$1$1 = this;\n\n        var length = this.length;\n\n        for (var idx = 0; idx < length; idx++) {\n            if (this$1$1[idx] === element) {\n                return idx;\n            }\n        }\n        return -1;\n    };\n\n    ElementsArray.prototype._splice = function _splice (index, howMany, elements) {\n        var result = splice.apply(this, [ index, howMany ].concat(elements));\n\n        this._clearObserver(result);\n        this._setObserver(elements);\n\n        return result;\n    };\n\n    ElementsArray.prototype._add = function _add (elements) {\n        this._setObserver(elements);\n        this._change();\n    };\n\n    ElementsArray.prototype._remove = function _remove (elements) {\n        this._clearObserver(elements);\n        this._change();\n    };\n\n    ElementsArray.prototype._setObserver = function _setObserver (elements) {\n        var this$1$1 = this;\n\n        for (var idx = 0; idx < elements.length; idx++) {\n            elements[idx].addObserver(this$1$1);\n        }\n    };\n\n    ElementsArray.prototype._clearObserver = function _clearObserver (elements) {\n        var this$1$1 = this;\n\n        for (var idx = 0; idx < elements.length; idx++) {\n            elements[idx].removeObserver(this$1$1);\n        }\n    };\n\n    ElementsArray.prototype._change = function _change () {};\n\n    return ElementsArray;\n}(HasObservers));\n\nvar GeometryElementsArray = (function (ElementsArray) {\n    function GeometryElementsArray () {\n        ElementsArray.apply(this, arguments);\n    }\n\n    if ( ElementsArray ) GeometryElementsArray.__proto__ = ElementsArray;\n    GeometryElementsArray.prototype = Object.create( ElementsArray && ElementsArray.prototype );\n    GeometryElementsArray.prototype.constructor = GeometryElementsArray;\n\n    GeometryElementsArray.prototype._change = function _change () {\n        this.geometryChange();\n    };\n\n    return GeometryElementsArray;\n}(ElementsArray));\n\nfunction isOutOfEndPoint(endPoint, controlPoint, point) {\n    var angle = deg(Math.atan2(controlPoint.y - endPoint.y, controlPoint.x - endPoint.x));\n    var rotatedPoint = point.transformCopy(transform().rotate(-angle, endPoint));\n\n    return rotatedPoint.x < endPoint.x;\n}\n\nfunction calculateCurveAt(t, field, points) {\n    var t1 = 1 - t;\n    return Math.pow(t1, 3) * points[0][field] +\n        3 * Math.pow(t1, 2) * t * points[1][field] +\n        3 * Math.pow(t, 2) * t1 * points[2][field] +\n        Math.pow(t, 3) * points[3][field];\n}\n\nfunction toCubicPolynomial(points, field) {\n    return [ -points[0][field] + 3 * points[1][field] - 3 * points[2][field] + points[3][field],\n        3 * (points[0][field] - 2 * points[1][field] + points[2][field]),\n        3 * (-points[0][field] + points[1][field]),\n        points[0][field]\n    ];\n}\n\nvar ComplexNumber = (function (Class) {\n    function ComplexNumber(real, img) {\n        if ( real === void 0 ) real = 0;\n        if ( img === void 0 ) img = 0;\n\n        Class.call(this);\n\n        this.real = real;\n        this.img = img;\n    }\n\n    if ( Class ) ComplexNumber.__proto__ = Class;\n    ComplexNumber.prototype = Object.create( Class && Class.prototype );\n    ComplexNumber.prototype.constructor = ComplexNumber;\n\n    ComplexNumber.prototype.add = function add (cNumber) {\n        return new ComplexNumber(round(this.real + cNumber.real, PRECISION), round(this.img + cNumber.img, PRECISION));\n    };\n\n    ComplexNumber.prototype.addConstant = function addConstant (value) {\n        return new ComplexNumber(this.real + value, this.img);\n    };\n\n    ComplexNumber.prototype.negate = function negate () {\n        return new ComplexNumber(-this.real, -this.img);\n    };\n\n    ComplexNumber.prototype.multiply = function multiply (cNumber) {\n        return new ComplexNumber(this.real * cNumber.real - this.img * cNumber.img,\n            this.real * cNumber.img + this.img * cNumber.real);\n    };\n\n    ComplexNumber.prototype.multiplyConstant = function multiplyConstant (value) {\n        return new ComplexNumber(this.real * value, this.img * value);\n    };\n\n    ComplexNumber.prototype.nthRoot = function nthRoot (n) {\n        var rad = Math.atan2(this.img, this.real);\n        var r = Math.sqrt(Math.pow(this.img, 2) + Math.pow(this.real, 2));\n        var nthR = Math.pow(r, 1 / n);\n\n        return new ComplexNumber(nthR * Math.cos(rad / n), nthR * Math.sin(rad / n)); //Moivre's formula\n    };\n\n    ComplexNumber.prototype.equals = function equals (cNumber) {\n        return this.real === cNumber.real && this.img === cNumber.img;\n    };\n\n    ComplexNumber.prototype.isReal = function isReal () {\n        return this.img === 0;\n    };\n\n    return ComplexNumber;\n}(Class));\n\nfunction numberSign$1(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction solveQuadraticEquation(a, b, c) {\n    var squareRoot = Math.sqrt(Math.pow(b, 2) - 4 * a * c);\n    return [\n        (-b + squareRoot) / (2 * a),\n        (-b - squareRoot) / (2 * a)\n    ];\n}\n\n//Cardano's formula\nfunction solveCubicEquation(a, b, c, d) {\n    if (a === 0) {\n        return solveQuadraticEquation(b, c, d);\n    }\n\n    var p = (3 * a * c - Math.pow(b, 2)) / (3 * Math.pow(a, 2));\n    var q = (2 * Math.pow(b, 3) - 9 * a * b * c + 27 * Math.pow(a, 2) * d) / (27 * Math.pow(a, 3));\n    var Q = Math.pow(p / 3, 3) + Math.pow(q / 2, 2);\n    var i = new ComplexNumber(0,1);\n    var b3a = -b / (3 * a);\n    var x1, x2, y1, y2, y3, z1, z2;\n\n    if (Q < 0) {\n        x1 = new ComplexNumber(-q / 2, Math.sqrt(-Q)).nthRoot(3);\n        x2 = new ComplexNumber(-q / 2, - Math.sqrt(-Q)).nthRoot(3);\n    } else {\n        x1 = -q / 2 + Math.sqrt(Q);\n        x1 = new ComplexNumber(numberSign$1(x1) * Math.pow(Math.abs(x1), 1 / 3));\n        x2 = -q / 2 - Math.sqrt(Q);\n        x2 = new ComplexNumber(numberSign$1(x2) * Math.pow(Math.abs(x2), 1 / 3));\n    }\n\n    y1 = x1.add(x2);\n\n    z1 = x1.add(x2).multiplyConstant(-1 / 2);\n    z2 = x1.add(x2.negate()).multiplyConstant(Math.sqrt(3) / 2);\n\n    y2 = z1.add(i.multiply(z2));\n    y3 = z1.add(i.negate().multiply(z2));\n\n    var result = [];\n\n    if (y1.isReal()) {\n        result.push(round(y1.real + b3a, PRECISION));\n    }\n    if (y2.isReal()) {\n        result.push(round(y2.real + b3a, PRECISION));\n    }\n    if (y3.isReal()) {\n        result.push(round(y3.real + b3a, PRECISION));\n    }\n\n    return result;\n}\n\nfunction hasRootsInRange(points, point, field, rootField, range) {\n    var polynomial = toCubicPolynomial(points, rootField);\n    var roots = solveCubicEquation(polynomial[0], polynomial[1], polynomial[2], polynomial[3] - point[rootField]);\n    var intersection;\n\n    for (var idx = 0; idx < roots.length; idx++) {\n        if (0 <= roots[idx] && roots[idx] <= 1) {\n            intersection = calculateCurveAt(roots[idx], field, points);\n            if (Math.abs(intersection - point[field]) <= range) {\n                return true;\n            }\n        }\n    }\n}\n\nfunction curveIntersectionsCount(points, point, bbox) {\n    var polynomial = toCubicPolynomial(points, \"x\");\n    var roots = solveCubicEquation(polynomial[0], polynomial[1], polynomial[2], polynomial[3] - point.x);\n    var rayIntersection, intersectsRay;\n    var count = 0;\n    for (var i = 0; i < roots.length; i++) {\n        rayIntersection = calculateCurveAt(roots[i], \"y\", points);\n        intersectsRay = close(rayIntersection, point.y) || rayIntersection > point.y;\n        if (intersectsRay && (((roots[i] === 0 || roots[i] === 1) && bbox.bottomRight().x > point.x) || (0 < roots[i] && roots[i] < 1))) {\n            count++;\n        }\n    }\n\n    return count;\n}\n\nfunction lineIntersectionsCount(a, b, point) {\n    var intersects;\n    if (a.x !== b.x) {\n        var minX = Math.min(a.x, b.x);\n        var maxX = Math.max(a.x, b.x);\n        var minY = Math.min(a.y, b.y);\n        var maxY = Math.max(a.y, b.y);\n        var inRange = minX <= point.x && point.x < maxX;\n\n        if (minY === maxY) {\n            intersects = point.y <= minY && inRange;\n        } else {\n            intersects = inRange && (((maxY - minY) * ((a.x - b.x) * (a.y - b.y) > 0 ? point.x - minX : maxX - point.x)) / (maxX - minX) + minY - point.y) >= 0;\n        }\n    }\n\n    return intersects ? 1 : 0;\n}\n\nfunction pointAccessor(name) {\n    var fieldName = \"_\" + name;\n    return function(value) {\n        if (defined(value)) {\n            this._observerField(fieldName, Point.create(value));\n            this.geometryChange();\n            return this;\n        }\n\n        return this[fieldName];\n    };\n}\n\nfunction definePointAccessors(fn, names) {\n    for (var i = 0; i < names.length; i++) {\n        fn[names[i]] = pointAccessor(names[i]);\n    }\n}\n\nvar withPoints = function (TBase, names) {\n    var result = (function (TBase) {\n        function result () {\n            TBase.apply(this, arguments);\n        }if ( TBase ) result.__proto__ = TBase;\n        result.prototype = Object.create( TBase && TBase.prototype );\n        result.prototype.constructor = result;\n\n        \n\n        return result;\n    }(TBase));\n    definePointAccessors(result.prototype, names);\n\n    return result;\n};\n\nvar points$1 = [ \"anchor\", \"controlIn\", \"controlOut\" ];\n\nvar Segment = (function (superclass) {\n    function Segment(anchor, controlIn, controlOut) {\n        superclass.call(this);\n\n        this.anchor(anchor || new Point());\n        this.controlIn(controlIn);\n        this.controlOut(controlOut);\n    }\n\n    if ( superclass ) Segment.__proto__ = superclass;\n    Segment.prototype = Object.create( superclass && superclass.prototype );\n    Segment.prototype.constructor = Segment;\n\n    Segment.prototype.bboxTo = function bboxTo (toSegment, matrix) {\n        var segmentAnchor = this.anchor().transformCopy(matrix);\n        var toSegmentAnchor = toSegment.anchor().transformCopy(matrix);\n        var rect;\n\n        if (this.controlOut() && toSegment.controlIn()) {\n            rect = this._curveBoundingBox(\n                segmentAnchor, this.controlOut().transformCopy(matrix),\n                toSegment.controlIn().transformCopy(matrix), toSegmentAnchor\n            );\n        } else {\n            rect = this._lineBoundingBox(segmentAnchor, toSegmentAnchor);\n        }\n\n        return rect;\n    };\n\n    Segment.prototype._lineBoundingBox = function _lineBoundingBox (p1, p2) {\n        return Rect$1.fromPoints(p1, p2);\n    };\n\n    Segment.prototype._curveBoundingBox = function _curveBoundingBox (p1, cp1, cp2, p2) {\n        var points = [ p1, cp1, cp2, p2 ];\n        var extremesX = this._curveExtremesFor(points, \"x\");\n        var extremesY = this._curveExtremesFor(points, \"y\");\n        var xLimits = arrayLimits([ extremesX.min, extremesX.max, p1.x, p2.x ]);\n        var yLimits = arrayLimits([ extremesY.min, extremesY.max, p1.y, p2.y ]);\n\n        return Rect$1.fromPoints(new Point(xLimits.min, yLimits.min), new Point(xLimits.max, yLimits.max));\n    };\n\n    Segment.prototype._curveExtremesFor = function _curveExtremesFor (points, field) {\n        var extremes = this._curveExtremes(\n            points[0][field], points[1][field],\n            points[2][field], points[3][field]\n        );\n\n        return {\n            min: calculateCurveAt(extremes.min, field, points),\n            max: calculateCurveAt(extremes.max, field, points)\n        };\n    };\n\n    Segment.prototype._curveExtremes = function _curveExtremes (x1, x2, x3, x4) {\n        var a = x1 - 3 * x2 + 3 * x3 - x4;\n        var b = - 2 * (x1 - 2 * x2 + x3);\n        var c = x1 - x2;\n        var sqrt = Math.sqrt(b * b - 4 * a * c);\n        var t1 = 0;\n        var t2 = 1;\n\n        if (a === 0) {\n            if (b !== 0) {\n                t1 = t2 = -c / b;\n            }\n        } else if (!isNaN(sqrt)) {\n            t1 = (- b + sqrt) / (2 * a);\n            t2 = (- b - sqrt) / (2 * a);\n        }\n\n        var min = Math.max(Math.min(t1, t2), 0);\n        if (min < 0 || min > 1) {\n            min = 0;\n        }\n\n        var max = Math.min(Math.max(t1, t2), 1);\n        if (max > 1 || max < 0) {\n            max = 1;\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    };\n\n    Segment.prototype._intersectionsTo = function _intersectionsTo (segment, point) {\n        var intersectionsCount;\n        if (this.controlOut() && segment.controlIn()) {\n            intersectionsCount = curveIntersectionsCount([ this.anchor(), this.controlOut(), segment.controlIn(), segment.anchor() ], point, this.bboxTo(segment));\n        } else {\n            intersectionsCount = lineIntersectionsCount(this.anchor(), segment.anchor(), point);\n        }\n        return intersectionsCount;\n    };\n\n    Segment.prototype._isOnCurveTo = function _isOnCurveTo (segment, point, width, endSegment) {\n        var bbox = this.bboxTo(segment).expand(width, width);\n        if (bbox.containsPoint(point)) {\n            var p1 = this.anchor();\n            var p2 = this.controlOut();\n            var p3 = segment.controlIn();\n            var p4 = segment.anchor();\n\n            if (endSegment === \"start\" && p1.distanceTo(point) <= width) {\n                return !isOutOfEndPoint(p1, p2, point);\n            } else if (endSegment === \"end\" && p4.distanceTo(point) <= width) {\n                return !isOutOfEndPoint(p4, p3, point);\n            }\n\n            //the approach is not entirely correct but is close and the alternatives are solving a 6th degree polynomial or testing the segment points\n            var points = [ p1, p2, p3, p4 ];\n            if (hasRootsInRange(points, point, \"x\", \"y\", width) || hasRootsInRange(points, point, \"y\", \"x\", width)) {\n                return true;\n            }\n            var rotation = transform().rotate(45, point);\n            var rotatedPoints = [ p1.transformCopy(rotation), p2.transformCopy(rotation), p3.transformCopy(rotation), p4.transformCopy(rotation) ];\n            return hasRootsInRange(rotatedPoints, point, \"x\", \"y\", width) || hasRootsInRange(rotatedPoints, point, \"y\", \"x\", width);\n        }\n    };\n\n    Segment.prototype._isOnLineTo = function _isOnLineTo (segment, point, width) {\n        var p1 = this.anchor();\n        var p2 = segment.anchor();\n        var angle = deg(Math.atan2(p2.y - p1.y, p2.x - p1.x));\n        var rect = new Rect$1([ p1.x, p1.y - width / 2 ], [ p1.distanceTo(p2), width ]);\n        return rect.containsPoint(point.transformCopy(transform().rotate(-angle, p1)));\n    };\n\n    Segment.prototype._isOnPathTo = function _isOnPathTo (segment, point, width, endSegment) {\n        var isOnPath;\n        if (this.controlOut() && segment.controlIn()) {\n            isOnPath = this._isOnCurveTo(segment, point, width / 2, endSegment);\n        } else {\n            isOnPath = this._isOnLineTo(segment, point, width);\n        }\n        return isOnPath;\n    };\n\n    return Segment;\n}(withPoints(HasObservers, points$1)));\n\nfunction arrayLimits(arr) {\n    var length = arr.length;\n    var min = MAX_NUM;\n    var max = MIN_NUM;\n\n    for (var i = 0; i < length; i ++) {\n        max = Math.max(max, arr[i]);\n        min = Math.min(min, arr[i]);\n    }\n\n    return {\n        min: min,\n        max: max\n    };\n}\n\nvar geometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Arc: Arc$1,\n    Circle: Circle$1,\n    Matrix: Matrix,\n    Point: Point,\n    Rect: Rect$1,\n    Segment: Segment,\n    Size: Size,\n    Transformation: Transformation,\n    toMatrix: toMatrix,\n    transform: transform\n});\n\nvar WEIGHT = 0.333;\nvar EXTREMUM_ALLOWED_DEVIATION = 0.01;\nvar X = \"x\";\nvar Y = \"y\";\n\nfunction pointsToCurve(pointsIn, closed) {\n    var points = pointsIn.slice(0);\n    var segments = [];\n    var length = points.length;\n\n    if (length > 2) {\n        removeDuplicates(0, points);\n        length = points.length;\n    }\n\n    if (length < 2 || (length === 2 && points[0].equals(points[1]))) {\n        return segments;\n    }\n\n    var p0 = points[0];\n    var p1 = points[1];\n    var p2 = points[2];\n\n    segments.push(new Segment(p0));\n\n    while (p0.equals(points[length - 1])) {\n        closed = true;\n        points.pop();\n        length--;\n    }\n\n    if (length === 2) {\n        var tangent = getTangent(p0,p1, X, Y);\n\n        last(segments).controlOut(\n            firstControlPoint(tangent, p0, p1, X, Y)\n        );\n\n        segments.push(new Segment(\n            p1,\n            secondControlPoint(tangent, p0, p1, X, Y)\n        ));\n\n        return segments;\n    }\n\n    var initialControlPoint, lastControlPoint;\n\n    if (closed) {\n        p0 = points[length - 1]; p1 = points[0]; p2 = points[1];\n        var controlPoints = getControlPoints(p0, p1, p2);\n        initialControlPoint = controlPoints[1];\n        lastControlPoint = controlPoints[0];\n    } else {\n        var tangent$1 = getTangent(p0, p1, X,Y);\n        initialControlPoint = firstControlPoint(tangent$1, p0, p1, X, Y);\n    }\n\n    var cp0 = initialControlPoint;\n    for (var idx = 0; idx <= length - 3; idx++) {\n        removeDuplicates(idx, points);\n        length = points.length;\n        if (idx + 3 <= length) {\n            p0 = points[idx]; p1 = points[idx + 1]; p2 = points[idx + 2];\n            var controlPoints$1 = getControlPoints(p0,p1,p2);\n\n            last(segments).controlOut(cp0);\n            cp0 = controlPoints$1[1];\n\n            var cp1 = controlPoints$1[0];\n            segments.push(new Segment(p1, cp1));\n        }\n    }\n\n    if (closed) {\n        p0 = points[length - 2]; p1 = points[length - 1]; p2 = points[0];\n        var controlPoints$2 = getControlPoints(p0, p1, p2);\n\n        last(segments).controlOut(cp0);\n        segments.push(new Segment(\n            p1,\n            controlPoints$2[0]\n        ));\n\n        last(segments).controlOut(controlPoints$2[1]);\n        segments.push(new Segment(\n            p2,\n            lastControlPoint\n        ));\n    } else {\n        var tangent$2 = getTangent(p1, p2, X, Y);\n\n        last(segments).controlOut(cp0);\n        segments.push(new Segment(\n            p2,\n            secondControlPoint(tangent$2, p1, p2, X, Y)\n        ));\n    }\n\n    return segments;\n}\n\nfunction pointsToClosedCurve(pointsIn) {\n    return pointsToCurve(pointsIn, true);\n}\n\nfunction removeDuplicates(idx, points) {\n    while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n        points.splice(idx + 1, 1);\n    }\n}\n\nfunction invertAxis(p0, p1, p2) {\n    var invertAxis = false;\n\n    if (p0.x === p1.x) {\n        invertAxis = true;\n    } else if (p1.x === p2.x) {\n        if ((p1.y < p2.y && p0.y <= p1.y) || (p2.y < p1.y && p1.y <= p0.y)) {\n            invertAxis = true;\n        }\n    } else {\n        var fn = lineFunction(p0,p1);\n        var y2 = calculateFunction(fn, p2.x);\n        if (!(p0.y <= p1.y && p2.y <= y2) &&\n            !(p1.y <= p0.y && p2.y >= y2)) {\n            invertAxis = true;\n        }\n    }\n\n    return invertAxis;\n}\n\nfunction isLine(p0, p1, p2) {\n    var fn = lineFunction(p0, p1);\n    var y2 = calculateFunction(fn, p2.x);\n\n    return (p0.x === p1.x && p1.x === p2.x) || round(y2, 1) === round(p2.y, 1);\n}\n\nfunction lineFunction(p1, p2) {\n    var a = (p2.y - p1.y) / (p2.x - p1.x);\n    var b = p1.y - a * p1.x;\n\n    return [ b, a ];\n}\n\nfunction getControlPoints(p0, p1, p2) {\n    var xField = X;\n    var yField = Y;\n    var restrict = false;\n    var switchOrientation = false;\n    var tangent;\n\n    if (isLine(p0, p1, p2)) {\n        tangent = getTangent(p0, p1, X, Y);\n    } else {\n        var monotonic = {\n            x: isMonotonicByField(p0, p1, p2, X),\n            y: isMonotonicByField(p0, p1, p2, Y)\n        };\n\n        if (monotonic.x && monotonic.y) {\n            tangent = getTangent(p0, p2, X, Y);\n            restrict = true;\n        } else {\n            if (invertAxis(p0, p1, p2)) {\n                xField = Y;\n                yField = X;\n            }\n\n            if (monotonic[xField]) {\n                tangent = 0;\n            } else {\n                var sign;\n                if ((p2[yField] < p0[yField] && p0[yField] <= p1[yField]) ||\n                    (p0[yField] < p2[yField] && p1[yField] <= p0[yField])) {\n                    sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                } else {\n                    sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                }\n\n                tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                switchOrientation = true;\n            }\n        }\n    }\n\n    var secondCP = secondControlPoint(tangent, p0, p1, xField, yField);\n\n    if (switchOrientation) {\n        var oldXField = xField;\n        xField = yField;\n        yField = oldXField;\n    }\n\n    var firstCP = firstControlPoint(tangent, p1, p2, xField, yField);\n\n    if (restrict) {\n        restrictControlPoint(p0, p1, secondCP, tangent);\n        restrictControlPoint(p1, p2, firstCP, tangent);\n    }\n\n    return [ secondCP, firstCP ];\n}\n\nfunction restrictControlPoint(p1, p2, cp, tangent) {\n    if (p1.y < p2.y) {\n        if (p2.y < cp.y) {\n            cp.x = p1.x + (p2.y - p1.y) / tangent;\n            cp.y = p2.y;\n        } else if (cp.y < p1.y) {\n            cp.x = p2.x - (p2.y - p1.y) / tangent;\n            cp.y = p1.y;\n        }\n    } else {\n        if (cp.y < p2.y) {\n            cp.x = p1.x - (p1.y - p2.y) / tangent;\n            cp.y = p2.y;\n        } else if (p1.y < cp.y) {\n            cp.x = p2.x + (p1.y - p2.y) / tangent;\n            cp.y = p1.y;\n        }\n    }\n}\n\nfunction getTangent(p0, p1, xField, yField) {\n    var x = p1[xField] - p0[xField];\n    var y = p1[yField] - p0[yField];\n    var tangent;\n\n    if (x === 0) {\n        tangent = 0;\n    } else {\n        tangent = y / x;\n    }\n\n    return tangent;\n}\n\nfunction isMonotonicByField(p0, p1, p2, field) {\n    return (p2[field] > p1[field] && p1[field] > p0[field]) ||\n                (p2[field] < p1[field] && p1[field] < p0[field]);\n}\n\nfunction firstControlPoint(tangent, p0, p3, xField, yField) {\n    var t1 = p0[xField];\n    var t2 = p3[xField];\n    var distance = (t2 - t1) * WEIGHT;\n\n    return point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n}\n\nfunction secondControlPoint(tangent, p0, p3, xField, yField) {\n    var t1 = p0[xField];\n    var t2 = p3[xField];\n    var distance = (t2 - t1) * WEIGHT;\n\n    return point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n}\n\nfunction point(xValue, yValue, xField, yField) {\n    var controlPoint = new Point();\n    controlPoint[xField] = xValue;\n    controlPoint[yField] = yValue;\n\n    return controlPoint;\n}\n\nfunction calculateFunction(fn, x) {\n    var length = fn.length;\n    var result = 0;\n\n    for (var i = 0; i < length; i++) {\n        result += Math.pow(x,i) * fn[i];\n    }\n    return result;\n}\n\nfunction numberSign(value) {\n    return value <= 0 ? -1 : 1;\n}\n\nvar ShapeMap = {\n    l: function(path, options) {\n        var parameters = options.parameters;\n        var position = options.position;\n\n        for (var i = 0; i < parameters.length; i += 2) {\n            var point = new Point(parameters[i], parameters[i + 1]);\n\n            if (options.isRelative) {\n                point.translateWith(position);\n            }\n\n            path.lineTo(point.x, point.y);\n\n            position.x = point.x;\n            position.y = point.y;\n        }\n    },\n\n    c: function(path, options) {\n        var parameters = options.parameters;\n        var position = options.position;\n\n        for (var i = 0; i < parameters.length; i += 6) {\n            var controlOut = new Point(parameters[i], parameters[i + 1]);\n            var controlIn = new Point(parameters[i + 2], parameters[i + 3]);\n            var point = new Point(parameters[i + 4], parameters[i + 5]);\n            if (options.isRelative) {\n                controlIn.translateWith(position);\n                controlOut.translateWith(position);\n                point.translateWith(position);\n            }\n\n            path.curveTo(controlOut, controlIn, point);\n\n            position.x = point.x;\n            position.y = point.y;\n        }\n    },\n\n    v: function(path, options) {\n        var value = options.isRelative ? 0 : options.position.x;\n\n        toLineParamaters(options.parameters, true, value);\n        this.l(path, options);\n    },\n\n    h: function(path, options) {\n        var value = options.isRelative ? 0 : options.position.y;\n\n        toLineParamaters(options.parameters, false, value);\n        this.l(path, options);\n    },\n\n    a: function(path, options) {\n        var parameters = options.parameters;\n        var position = options.position;\n\n        for (var i = 0; i < parameters.length; i += 7) {\n            var radiusX = parameters[i];\n            var radiusY = parameters[i + 1];\n            var rotation = parameters[i + 2];\n            var largeArc = parameters[i + 3];\n            var swipe = parameters[i + 4];\n            var endPoint = new Point(parameters[i + 5], parameters[i + 6]);\n\n            if (options.isRelative) {\n                endPoint.translateWith(position);\n            }\n            if (position.x !== endPoint.x || position.y !== endPoint.y) {\n                path.arcTo(endPoint, radiusX, radiusY, largeArc, swipe, rotation);\n\n                position.x = endPoint.x;\n                position.y = endPoint.y;\n            }\n        }\n    },\n\n    s: function(path, options) {\n        var parameters = options.parameters;\n        var position = options.position;\n        var previousCommand = options.previousCommand;\n        var lastControlIn;\n\n        if (previousCommand === \"s\" || previousCommand === \"c\") {\n            lastControlIn = last(last(path.paths).segments).controlIn();\n        }\n\n        for (var i = 0; i < parameters.length; i += 4) {\n            var controlIn = new Point(parameters[i], parameters[i + 1]);\n            var endPoint = new Point(parameters[i + 2], parameters[i + 3]);\n            var controlOut = (void 0);\n\n            if (options.isRelative) {\n                controlIn.translateWith(position);\n                endPoint.translateWith(position);\n            }\n\n            if (lastControlIn) {\n                controlOut = reflectionPoint(lastControlIn, position);\n            } else {\n                controlOut = position.clone();\n            }\n\n            lastControlIn = controlIn;\n\n            path.curveTo(controlOut, controlIn, endPoint);\n\n            position.x = endPoint.x;\n            position.y = endPoint.y;\n        }\n    },\n\n    q: function(path, options) {\n        var parameters = options.parameters;\n        var position = options.position;\n\n        for (var i = 0; i < parameters.length; i += 4) {\n            var controlPoint = new Point(parameters[i], parameters[i + 1]);\n            var endPoint = new Point(parameters[i + 2], parameters[i + 3]);\n\n            if (options.isRelative) {\n                controlPoint.translateWith(position);\n                endPoint.translateWith(position);\n            }\n\n            var cubicControlPoints = quadraticToCubicControlPoints(position, controlPoint, endPoint);\n\n            path.curveTo(cubicControlPoints.controlOut, cubicControlPoints.controlIn, endPoint);\n\n            position.x = endPoint.x;\n            position.y = endPoint.y;\n        }\n    },\n\n    t: function(path, options) {\n        var parameters = options.parameters;\n        var position = options.position;\n        var previousCommand = options.previousCommand;\n        var controlPoint;\n\n        if (previousCommand === \"q\" || previousCommand === \"t\") {\n            var lastSegment = last(last(path.paths).segments);\n            controlPoint = lastSegment.controlIn().clone()\n                .translateWith(position.scaleCopy(-1 / 3))\n                .scale(3 / 2);\n        }\n\n        for (var i = 0; i < parameters.length; i += 2) {\n            var endPoint = new Point(parameters[i], parameters[i + 1]);\n            if (options.isRelative) {\n                endPoint.translateWith(position);\n            }\n\n            if (controlPoint) {\n                controlPoint = reflectionPoint(controlPoint, position);\n            } else {\n                controlPoint = position.clone();\n            }\n\n            var cubicControlPoints = quadraticToCubicControlPoints(position, controlPoint, endPoint);\n\n            path.curveTo(cubicControlPoints.controlOut, cubicControlPoints.controlIn, endPoint);\n\n            position.x = endPoint.x;\n            position.y = endPoint.y;\n        }\n    }\n};\n\nfunction toLineParamaters(parameters, isVertical, value) {\n    var insertPosition = isVertical ? 0 : 1;\n\n    for (var i = 0; i < parameters.length; i += 2) {\n        parameters.splice(i + insertPosition, 0, value);\n    }\n}\n\nfunction reflectionPoint(point, center) {\n    if (point && center) {\n        return center.scaleCopy(2).translate(-point.x, -point.y);\n    }\n}\n\nvar third = 1 / 3;\n\nfunction quadraticToCubicControlPoints(position, controlPoint, endPoint) {\n    var scaledPoint = controlPoint.clone().scale(2 / 3);\n    return {\n        controlOut: scaledPoint.clone().translateWith(position.scaleCopy(third)),\n        controlIn: scaledPoint.translateWith(endPoint.scaleCopy(third))\n    };\n}\n\nvar SEGMENT_REGEX = /([a-df-z]{1})([^a-df-z]*)(z)?/gi;\nvar SPLIT_REGEX = /[,\\s]?([+\\-]?(?:\\d*\\.\\d+|\\d+)(?:[eE][+\\-]?\\d+)?)/g;\nvar MOVE = \"m\";\nvar CLOSE = \"z\";\n\nfunction parseParameters(str) {\n    var parameters = [];\n    str.replace(SPLIT_REGEX, function(match, number) {\n        parameters.push(parseFloat(number));\n    });\n    return parameters;\n}\n\nfunction parsePath(pathInstance, str) {\n    var position = new Point();\n    var previousCommand;\n\n    str.replace(SEGMENT_REGEX, function (match, element, params, closePath) {\n        var command = element.toLowerCase();\n        var isRelative = command === element;\n        var parameters = parseParameters(params.trim());\n\n        if (command === MOVE) {\n            if (isRelative) {\n                position.x += parameters[0];\n                position.y += parameters[1];\n            } else {\n                position.x = parameters[0];\n                position.y = parameters[1];\n            }\n\n            pathInstance.moveTo(position.x, position.y);\n\n            if (parameters.length > 2) {\n                command = \"l\";\n                parameters.splice(0, 2);\n            }\n        }\n\n        if (ShapeMap[command]) {\n            ShapeMap[command](\n                pathInstance, {\n                    parameters: parameters,\n                    position: position,\n                    isRelative: isRelative,\n                    previousCommand: previousCommand\n                }\n            );\n\n            if (closePath && closePath.toLowerCase() === CLOSE) {\n                pathInstance.close();\n            }\n        } else if (command !== MOVE) {\n            throw new Error(\"Error while parsing SVG path. Unsupported command: \" + command);\n        }\n\n        previousCommand = command;\n    });\n\n    return pathInstance;\n}\n\nfunction elementsBoundingBox(elements, applyTransform, transformation) {\n    var boundingBox;\n\n    for (var i = 0; i < elements.length; i++) {\n        var element = elements[i];\n        if (element.visible()) {\n            var elementBoundingBox = applyTransform ? element.bbox(transformation) : element.rawBBox();\n            if (elementBoundingBox) {\n                if (boundingBox) {\n                    boundingBox = Rect$1.union(boundingBox, elementBoundingBox);\n                } else {\n                    boundingBox = elementBoundingBox;\n                }\n            }\n        }\n    }\n\n    return boundingBox;\n}\n\nfunction elementsClippedBoundingBox(elements, transformation) {\n    var boundingBox;\n\n    for (var i = 0; i < elements.length; i++) {\n        var element = elements[i];\n        if (element.visible()) {\n            var elementBoundingBox = element.clippedBBox(transformation);\n            if (elementBoundingBox) {\n                if (boundingBox) {\n                    boundingBox = Rect$1.union(boundingBox, elementBoundingBox);\n                } else {\n                    boundingBox = elementBoundingBox;\n                }\n            }\n        }\n    }\n\n    return boundingBox;\n}\n\nvar SPACE = ' ';\nvar printPoints = function (precision) { return function () {\n    var points = [], len = arguments.length;\n    while ( len-- ) points[ len ] = arguments[ len ];\n\n    return points.map(function (p) { return p.toString(precision); }).join(SPACE);\n; }    };\nvar segmentType = function (segmentStart, segmentEnd) { return segmentStart.controlOut() && segmentEnd.controlIn() ? 'C' : 'L'; };\n\nvar Path = (function (superclass) {\n    function Path(options) {\n        superclass.call(this, options);\n        this.segments = new GeometryElementsArray();\n        this.segments.addObserver(this);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke('#000');\n\n            if (!defined(this.options.stroke.lineJoin)) {\n                this.options.set('stroke.lineJoin', 'miter');\n            }\n        }\n    }\n\n    if ( superclass ) Path.__proto__ = superclass;\n    Path.prototype = Object.create( superclass && superclass.prototype );\n    Path.prototype.constructor = Path;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return 'Path';\n    };\n\n    Path.prototype.moveTo = function moveTo (x, y) {\n        this.suspend();\n        this.segments.elements([]);\n        this.resume();\n\n        this.lineTo(x, y);\n\n        return this;\n    };\n\n    Path.prototype.lineTo = function lineTo (x, y) {\n        var point = defined(y) ? new Point(x, y) : x;\n        var segment = new Segment(point);\n\n        this.segments.push(segment);\n\n        return this;\n    };\n\n    Path.prototype.curveTo = function curveTo (controlOut, controlIn, point) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var segment = new Segment(point, controlIn);\n            this.suspend();\n            lastSegment.controlOut(controlOut);\n            this.resume();\n\n            this.segments.push(segment);\n        }\n\n        return this;\n    };\n\n    Path.prototype.arc = function arc (startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var anchor = lastSegment.anchor();\n            var start = rad(startAngle);\n            var center = new Point(anchor.x - radiusX * Math.cos(start),\n                anchor.y - radiusY * Math.sin(start));\n            var arc = new Arc$1(center, {\n                startAngle: startAngle,\n                endAngle: endAngle,\n                radiusX: radiusX,\n                radiusY: radiusY,\n                anticlockwise: anticlockwise\n            });\n\n            this._addArcSegments(arc);\n        }\n\n        return this;\n    };\n\n    Path.prototype.arcTo = function arcTo (end, rx, ry, largeArc, swipe, rotation) {\n        if (this.segments.length > 0) {\n            var lastSegment = last(this.segments);\n            var anchor = lastSegment.anchor();\n            var arc = Arc$1.fromPoints(anchor, Point.create(end), rx, ry, largeArc, swipe, rotation);\n\n            this._addArcSegments(arc);\n        }\n        return this;\n    };\n\n    Path.prototype._addArcSegments = function _addArcSegments (arc) {\n        var this$1$1 = this;\n\n        this.suspend();\n\n        var curvePoints = arc.curvePoints();\n\n        for (var i = 1; i < curvePoints.length; i += 3) {\n            this$1$1.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n        }\n\n        this.resume();\n        this.geometryChange();\n    };\n\n    Path.prototype.close = function close () {\n        this.options.closed = true;\n        this.geometryChange();\n\n        return this;\n    };\n\n    Path.prototype.rawBBox = function rawBBox () {\n        return this._bbox();\n    };\n\n    Path.prototype.toString = function toString (digits) {\n        var output = '';\n\n        var segments = this.segments;\n        var length = segments.length;\n        if (length > 0) {\n            var parts = [];\n            var print = printPoints(digits);\n            var currentType;\n\n            for (var i = 1; i < length; i++) {\n                var type = segmentType(segments[i - 1], segments[i]);\n                if (type !== currentType) {\n                    currentType = type;\n                    parts.push(type);\n                }\n\n                if (type === 'L') {\n                    parts.push(print(segments[i].anchor()));\n                } else {\n                    parts.push(print(\n                        segments[i - 1].controlOut(), segments[i].controlIn(), segments[i].anchor()\n                    ));\n                }\n            }\n\n            output = 'M' + print(segments[0].anchor()) + SPACE + parts.join(SPACE);\n            if (this.options.closed) {\n                output += 'Z';\n            }\n        }\n\n        return output;\n    };\n\n    Path.prototype._containsPoint = function _containsPoint (point) {\n        var segments = this.segments;\n        var length = segments.length;\n        var intersectionsCount = 0;\n        var previous, current;\n\n        for (var idx = 1; idx < length; idx++) {\n            previous = segments[idx - 1];\n            current = segments[idx];\n            intersectionsCount += previous._intersectionsTo(current, point);\n        }\n\n        if (this.options.closed || !segments[0].anchor().equals(segments[length - 1].anchor())) {\n            intersectionsCount += lineIntersectionsCount(segments[0].anchor(), segments[length - 1].anchor(), point);\n        }\n\n        return intersectionsCount % 2 !== 0;\n    };\n\n    Path.prototype._isOnPath = function _isOnPath (point, width) {\n        var segments = this.segments;\n        var length = segments.length;\n        var pathWidth = width || this.options.stroke.width;\n\n        if (length > 1) {\n            if (segments[0]._isOnPathTo(segments[1], point, pathWidth, 'start')) {\n                return true;\n            }\n\n            for (var idx = 2; idx <= length - 2; idx++) {\n                if (segments[idx - 1]._isOnPathTo(segments[idx], point, pathWidth)) {\n                    return true;\n                }\n            }\n\n            if (segments[length - 2]._isOnPathTo(segments[length - 1], point, pathWidth, 'end')) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    Path.prototype._bbox = function _bbox (matrix) {\n        var segments = this.segments;\n        var length = segments.length;\n        var boundingBox;\n\n        if (length === 1) {\n            var anchor = segments[0].anchor().transformCopy(matrix);\n            boundingBox = new Rect$1(anchor, Size.ZERO);\n        } else if (length > 0) {\n            for (var i = 1; i < length; i++) {\n                var segmentBox = segments[i - 1].bboxTo(segments[i], matrix);\n                if (boundingBox) {\n                    boundingBox = Rect$1.union(boundingBox, segmentBox);\n                } else {\n                    boundingBox = segmentBox;\n                }\n            }\n        }\n\n        return boundingBox;\n    };\n\n    Path.parse = function parse (str, options) {\n        return MultiPath.parse(str, options);\n    };\n\n    Path.fromRect = function fromRect (rect, options) {\n        var path = new Path(options);\n        var ref = rect.cornerRadius;\n        var rx = ref[0];\n        var ry = ref[1];\n\n        if (rx === 0 && ry === 0) {\n            path.moveTo(rect.topLeft())\n                .lineTo(rect.topRight())\n                .lineTo(rect.bottomRight())\n                .lineTo(rect.bottomLeft())\n                .close();\n        } else {\n            var origin = rect.origin;\n            var x = origin.x;\n            var y = origin.y;\n            var width = rect.width();\n            var height = rect.height();\n            rx = limitValue(rx, 0, width / 2);\n            ry = limitValue(ry, 0, height / 2);\n\n            path.moveTo(x + rx, y)\n                .lineTo(x + width - rx, y)\n                .arcTo([ x + width, y + ry ], rx, ry, false)\n                .lineTo(x + width, y + height - ry)\n                .arcTo([ x + width - rx, y + height ], rx, ry, false)\n                .lineTo(x + rx, y + height)\n                .arcTo([ x, y + height - ry ], rx, ry, false)\n                .lineTo(x, y + ry)\n                .arcTo([ x + rx, y ], rx, ry, false);\n        }\n\n        return path;\n    };\n\n    Path.fromPoints = function fromPoints (points, options) {\n        if (points) {\n            var path = new Path(options);\n\n            for (var i = 0; i < points.length; i++) {\n                var point = Point.create(points[i]);\n                if (point) {\n                    if (i === 0) {\n                        path.moveTo(point);\n                    } else {\n                        path.lineTo(point);\n                    }\n                }\n            }\n\n            return path;\n        }\n    };\n\n    Path.curveFromPoints = function curveFromPoints (points, options) {\n        if (points) {\n            var segments = pointsToCurve(points);\n            var path = new Path(options);\n            path.segments.push.apply(path.segments, segments);\n\n            return path;\n        }\n    };\n\n    Path.fromArc = function fromArc (arc, options) {\n        var path = new Path(options);\n        var startAngle = arc.startAngle;\n        var start = arc.pointAt(startAngle);\n        path.moveTo(start.x, start.y);\n        path.arc(startAngle, arc.endAngle, arc.radiusX, arc.radiusY, arc.anticlockwise);\n        return path;\n    };\n\n    Object.defineProperties( Path.prototype, prototypeAccessors );\n\n    return Path;\n}(paintable(measurable(Element$1))));\n\nvar MultiPath = (function (superclass) {\n    function MultiPath(options) {\n        superclass.call(this, options);\n        this.paths = new GeometryElementsArray();\n        this.paths.addObserver(this);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke('#000');\n        }\n    }\n\n    if ( superclass ) MultiPath.__proto__ = superclass;\n    MultiPath.prototype = Object.create( superclass && superclass.prototype );\n    MultiPath.prototype.constructor = MultiPath;\n\n    var prototypeAccessors$1 = { nodeType: { configurable: true } };\n\n    MultiPath.parse = function parse (str, options) {\n        var instance = new MultiPath(options);\n        return parsePath(instance, str);\n    };\n\n    MultiPath.prototype.toString = function toString (digits) {\n        var paths = this.paths;\n        var output = '';\n\n        if (paths.length > 0) {\n            var result = [];\n\n            for (var i = 0; i < paths.length; i++) {\n                result.push(paths[i].toString(digits));\n            }\n\n            output = result.join(SPACE);\n        }\n\n        return output;\n    };\n\n    prototypeAccessors$1.nodeType.get = function () {\n        return 'MultiPath';\n    };\n\n    MultiPath.prototype.moveTo = function moveTo (x, y) {\n        var path = new Path();\n        path.moveTo(x, y);\n\n        this.paths.push(path);\n\n        return this;\n    };\n\n    MultiPath.prototype.lineTo = function lineTo (x, y) {\n        if (this.paths.length > 0) {\n            last(this.paths).lineTo(x, y);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.curveTo = function curveTo (controlOut, controlIn, point) {\n        if (this.paths.length > 0) {\n            last(this.paths).curveTo(controlOut, controlIn, point);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.arc = function arc (startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n        if (this.paths.length > 0) {\n            last(this.paths).arc(startAngle, endAngle, radiusX, radiusY, anticlockwise);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.arcTo = function arcTo (end, rx, ry, largeArc, swipe, rotation) {\n        if (this.paths.length > 0) {\n            last(this.paths).arcTo(end, rx, ry, largeArc, swipe, rotation);\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype.close = function close () {\n        if (this.paths.length > 0) {\n            last(this.paths).close();\n        }\n\n        return this;\n    };\n\n    MultiPath.prototype._bbox = function _bbox (matrix) {\n        return elementsBoundingBox(this.paths, true, matrix);\n    };\n\n    MultiPath.prototype.rawBBox = function rawBBox () {\n        return elementsBoundingBox(this.paths, false);\n    };\n\n    MultiPath.prototype._containsPoint = function _containsPoint (point) {\n        var paths = this.paths;\n\n        for (var idx = 0; idx < paths.length; idx++) {\n            if (paths[idx]._containsPoint(point)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    MultiPath.prototype._isOnPath = function _isOnPath (point) {\n        var paths = this.paths;\n        var width = this.options.stroke.width;\n\n        for (var idx = 0; idx < paths.length; idx++) {\n            if (paths[idx]._isOnPath(point, width)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    MultiPath.prototype._clippedBBox = function _clippedBBox (transformation) {\n        return elementsClippedBoundingBox(this.paths, this.currentTransform(transformation));\n    };\n\n    Object.defineProperties( MultiPath.prototype, prototypeAccessors$1 );\n\n    return MultiPath;\n}(paintable(measurable(Element$1))));\n\nvar DEFAULT_STROKE = \"#000\";\n\nvar Arc = (function (superclass) {\n    function Arc(geometry, options) {\n        if ( geometry === void 0 ) geometry = new Arc$1();\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(DEFAULT_STROKE);\n        }\n    }\n\n    if ( superclass ) Arc.__proto__ = superclass;\n    Arc.prototype = Object.create( superclass && superclass.prototype );\n    Arc.prototype.constructor = Arc;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Arc\";\n    };\n\n    Arc.prototype._bbox = function _bbox (matrix) {\n        return this._geometry.bbox(matrix);\n    };\n\n    Arc.prototype.rawBBox = function rawBBox () {\n        return this.geometry().bbox();\n    };\n\n    Arc.prototype.toPath = function toPath () {\n        var path = new Path();\n        var curvePoints = this.geometry().curvePoints();\n\n        if (curvePoints.length > 0) {\n            path.moveTo(curvePoints[0].x, curvePoints[0].y);\n\n            for (var i = 1; i < curvePoints.length; i += 3) {\n                path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n            }\n        }\n\n        return path;\n    };\n\n    Arc.prototype._containsPoint = function _containsPoint (point) {\n        return this.geometry().containsPoint(point);\n    };\n\n    Arc.prototype._isOnPath = function _isOnPath (point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    };\n\n    Object.defineProperties( Arc.prototype, prototypeAccessors );\n\n    return Arc;\n}(paintable(measurable(withGeometry(Element$1)))));\n\nvar DEFAULT_FONT = \"12px sans-serif\";\nvar DEFAULT_FILL = \"#000\";\n\nvar Text = (function (superclass) {\n    function Text(content, position, options) {\n        if ( position === void 0 ) position = new Point();\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.content(content);\n        this.position(position);\n\n        if (!this.options.font) {\n            this.options.font = DEFAULT_FONT;\n        }\n\n        if (!defined(this.options.fill)) {\n            this.fill(DEFAULT_FILL);\n        }\n    }\n\n    if ( superclass ) Text.__proto__ = superclass;\n    Text.prototype = Object.create( superclass && superclass.prototype );\n    Text.prototype.constructor = Text;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Text\";\n    };\n\n    Text.prototype.content = function content (value) {\n        if (defined(value)) {\n            this.options.set(\"content\", value);\n            return this;\n        }\n\n        return this.options.get(\"content\");\n    };\n\n    Text.prototype.measure = function measure () {\n        var metrics = measureText(this.content(), {\n            font: this.options.get(\"font\")\n        });\n\n        return metrics;\n    };\n\n    Text.prototype.rect = function rect () {\n        var size = this.measure();\n        var pos = this.position().clone();\n        return new Rect$1(pos, [ size.width, size.height ]);\n    };\n\n    Text.prototype.bbox = function bbox (transformation) {\n        var combinedMatrix = toMatrix(this.currentTransform(transformation));\n        return this.rect().bbox(combinedMatrix);\n    };\n\n    Text.prototype.rawBBox = function rawBBox () {\n        return this.rect().bbox();\n    };\n\n    Text.prototype._containsPoint = function _containsPoint (point) {\n        return this.rect().containsPoint(point);\n    };\n\n    Object.defineProperties( Text.prototype, prototypeAccessors );\n\n    return Text;\n}(paintable(withPoints(Element$1, [ \"position\" ]))));\n\nvar Image$1 = (function (superclass) {\n    function Image(src, rect, options) {\n        if ( rect === void 0 ) rect = new Rect$1();\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.src(src);\n        this.rect(rect);\n    }\n\n    if ( superclass ) Image.__proto__ = superclass;\n    Image.prototype = Object.create( superclass && superclass.prototype );\n    Image.prototype.constructor = Image;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Image\";\n    };\n\n    Image.prototype.src = function src (value) {\n        if (defined(value)) {\n            this.options.set(\"src\", value);\n            return this;\n        }\n\n        return this.options.get(\"src\");\n    };\n\n    Image.prototype.bbox = function bbox (transformation) {\n        var combinedMatrix = toMatrix(this.currentTransform(transformation));\n        return this._rect.bbox(combinedMatrix);\n    };\n\n    Image.prototype.rawBBox = function rawBBox () {\n        return this._rect.bbox();\n    };\n\n    Image.prototype._containsPoint = function _containsPoint (point) {\n        return this._rect.containsPoint(point);\n    };\n\n    Image.prototype._hasFill = function _hasFill () {\n        return this.src();\n    };\n\n    Object.defineProperties( Image.prototype, prototypeAccessors );\n\n    return Image;\n}(withGeometry(Element$1, [ \"rect\" ])));\n\nvar traversable = function (TBase, childrenField) { return (\n    (function (TBase) {\n        function anonymous () {\n            TBase.apply(this, arguments);\n        }\n\n        if ( TBase ) anonymous.__proto__ = TBase;\n        anonymous.prototype = Object.create( TBase && TBase.prototype );\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.traverse = function traverse (callback) {\n            var children = this[childrenField];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n\n                if (child.traverse) {\n                    child.traverse(callback);\n                } else {\n                    callback(child);\n                }\n            }\n\n            return this;\n        };\n\n        return anonymous;\n    }(TBase))\n); };\n\nvar Group = (function (superclass) {\n    function Group(options) {\n        superclass.call(this, options);\n        this.children = [];\n    }\n\n    if ( superclass ) Group.__proto__ = superclass;\n    Group.prototype = Object.create( superclass && superclass.prototype );\n    Group.prototype.constructor = Group;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Group\";\n    };\n\n    Group.prototype.childrenChange = function childrenChange (action, items, index) {\n        this.trigger(\"childrenChange\",{\n            action: action,\n            items: items,\n            index: index\n        });\n    };\n\n    Group.prototype.append = function append$1 () {\n        append(this.children, arguments);\n        this._reparent(arguments, this);\n\n        this.childrenChange(\"add\", arguments);\n\n        return this;\n    };\n\n    Group.prototype.insert = function insert (index, element) {\n        this.children.splice(index, 0, element);\n        element.parent = this;\n\n        this.childrenChange(\"add\", [ element ], index);\n\n        return this;\n    };\n\n    Group.prototype.insertAt = function insertAt (element, index) {\n        return this.insert(index, element);\n    };\n\n    Group.prototype.remove = function remove (element) {\n        var index = this.children.indexOf(element);\n        if (index >= 0) {\n            this.children.splice(index, 1);\n            element.parent = null;\n            this.childrenChange(\"remove\", [ element ], index);\n        }\n\n        return this;\n    };\n\n    Group.prototype.removeAt = function removeAt (index) {\n        if (0 <= index && index < this.children.length) {\n            var element = this.children[index];\n            this.children.splice(index, 1);\n            element.parent = null;\n            this.childrenChange(\"remove\", [ element ], index);\n        }\n\n        return this;\n    };\n\n    Group.prototype.clear = function clear () {\n        var items = this.children;\n        this.children = [];\n        this._reparent(items, null);\n\n        this.childrenChange(\"remove\", items, 0);\n\n        return this;\n    };\n\n    Group.prototype.bbox = function bbox (transformation) {\n        return elementsBoundingBox(this.children, true, this.currentTransform(transformation));\n    };\n\n    Group.prototype.rawBBox = function rawBBox () {\n        return elementsBoundingBox(this.children, false);\n    };\n\n    Group.prototype._clippedBBox = function _clippedBBox (transformation) {\n        return elementsClippedBoundingBox(this.children, this.currentTransform(transformation));\n    };\n\n    Group.prototype.currentTransform = function currentTransform (transformation) {\n        return Element$1.prototype.currentTransform.call(this, transformation) || null;\n    };\n\n    Group.prototype.containsPoint = function containsPoint (point, parentTransform) {\n        if (this.visible()) {\n            var children = this.children;\n            var transform = this.currentTransform(parentTransform);\n            for (var idx = 0; idx < children.length; idx++) {\n                if (children[idx].containsPoint(point, transform)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n\n    Group.prototype._reparent = function _reparent (elements, newParent) {\n        var this$1$1 = this;\n\n        for (var i = 0; i < elements.length; i++) {\n            var child = elements[i];\n            var parent = child.parent;\n            if (parent && parent !== this$1$1 && parent.remove) {\n                parent.remove(child);\n            }\n\n            child.parent = newParent;\n        }\n    };\n\n    Object.defineProperties( Group.prototype, prototypeAccessors );\n\n    return Group;\n}(traversable(Element$1, \"children\")));\n\nfunction translateToPoint(point, bbox, element) {\n    var transofrm = element.transform() || transform();\n    var matrix = transofrm.matrix();\n    matrix.e += point.x - bbox.origin.x;\n    matrix.f += point.y - bbox.origin.y;\n\n    transofrm.matrix(matrix);\n    element.transform(transofrm);\n}\n\nfunction alignStart(size, rect, align, axis, sizeField) {\n    var start;\n    if (align === \"start\") {\n        start = rect.origin[axis];\n    } else if (align === \"end\") {\n        start = rect.origin[axis] + rect.size[sizeField] - size;\n    } else {\n        start = rect.origin[axis] + (rect.size[sizeField] - size) / 2;\n    }\n\n    return start;\n}\n\nfunction alignStartReverse(size, rect, align, axis, sizeField) {\n    var start;\n    if (align === \"start\") {\n        start = rect.origin[axis] + rect.size[sizeField] - size;\n    } else if (align === \"end\") {\n        start = rect.origin[axis];\n    } else {\n        start = rect.origin[axis] + (rect.size[sizeField] - size) / 2;\n    }\n\n    return start;\n}\n\nvar DEFAULT_OPTIONS = {\n    alignContent: \"start\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    spacing: 0,\n    orientation: \"horizontal\",\n    lineSpacing: 0,\n    wrap: true,\n    revers: false\n};\n\nvar forEach = function (elements, callback) {\n    elements.forEach(callback);\n};\n\nvar forEachReverse = function (elements, callback) {\n    var length = elements.length;\n\n    for (var idx = length - 1; idx >= 0; idx--) {\n        callback(elements[idx], idx);\n    }\n};\n\nvar Layout = (function (Group) {\n    function Layout(rect, options) {\n        Group.call(this, Object.assign({}, DEFAULT_OPTIONS, options));\n        this._rect = rect;\n        this._fieldMap = {};\n    }\n\n    if ( Group ) Layout.__proto__ = Group;\n    Layout.prototype = Object.create( Group && Group.prototype );\n    Layout.prototype.constructor = Layout;\n\n    Layout.prototype.rect = function rect (value) {\n        if (value) {\n            this._rect = value;\n            return this;\n        }\n\n        return this._rect;\n    };\n\n    Layout.prototype._initMap = function _initMap () {\n        var options = this.options;\n        var fieldMap = this._fieldMap;\n        if (options.orientation === \"horizontal\") {\n            fieldMap.sizeField = \"width\";\n            fieldMap.groupsSizeField = \"height\";\n            fieldMap.groupAxis = \"x\";\n            fieldMap.groupsAxis = \"y\";\n        } else {\n            fieldMap.sizeField = \"height\";\n            fieldMap.groupsSizeField = \"width\";\n            fieldMap.groupAxis = \"y\";\n            fieldMap.groupsAxis = \"x\";\n        }\n\n        if (options.reverse) {\n            this.forEach = forEachReverse;\n            this.justifyAlign = alignStartReverse;\n        } else {\n            this.forEach = forEach;\n            this.justifyAlign = alignStart;\n        }\n    };\n\n    Layout.prototype.reflow = function reflow () {\n        var this$1$1 = this;\n\n        if (!this._rect || this.children.length === 0) {\n            return;\n        }\n        this._initMap();\n\n        if (this.options.transform) {\n            this.transform(null);\n        }\n\n        var options = this.options;\n        var rect = this._rect;\n        var ref = this._initGroups();\n        var groups = ref.groups;\n        var groupsSize = ref.groupsSize;\n        var ref$1 = this._fieldMap;\n        var sizeField = ref$1.sizeField;\n        var groupsSizeField = ref$1.groupsSizeField;\n        var groupAxis = ref$1.groupAxis;\n        var groupsAxis = ref$1.groupsAxis;\n        var groupOrigin = new Point();\n        var elementOrigin = new Point();\n        var size = new Size();\n        var groupStart = alignStart(groupsSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n        var elementStart, group, groupBox;\n\n        var arrangeElements = function (bbox, idx) {\n            var element = group.elements[idx];\n\n            elementOrigin[groupAxis] = elementStart;\n            elementOrigin[groupsAxis] = alignStart(bbox.size[groupsSizeField], groupBox, options.alignItems, groupsAxis, groupsSizeField);\n            translateToPoint(elementOrigin, bbox, element);\n            elementStart += bbox.size[sizeField] + options.spacing;\n        };\n\n        for (var groupIdx = 0; groupIdx < groups.length; groupIdx++) {\n            group = groups[groupIdx];\n            groupOrigin[groupAxis] = elementStart = this$1$1.justifyAlign(group.size, rect, options.justifyContent, groupAxis, sizeField);\n            groupOrigin[groupsAxis] = groupStart;\n            size[sizeField] = group.size;\n            size[groupsSizeField] = group.lineSize;\n            groupBox = new Rect$1(groupOrigin, size);\n            this$1$1.forEach(group.bboxes, arrangeElements);\n\n            groupStart += group.lineSize + options.lineSpacing;\n        }\n\n        if (!options.wrap && group.size > rect.size[sizeField]) {\n            var scale = rect.size[sizeField] / groupBox.size[sizeField];\n            var scaledStart = groupBox.topLeft().scale(scale, scale);\n            var scaledSize = groupBox.size[groupsSizeField] * scale;\n            var newStart = alignStart(scaledSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n            var transform$1 = transform();\n            if (groupAxis === \"x\") {\n                transform$1.translate(rect.origin.x - scaledStart.x, newStart - scaledStart.y);\n            } else {\n                transform$1.translate(newStart - scaledStart.x, rect.origin.y - scaledStart.y);\n            }\n            transform$1.scale(scale, scale);\n\n            this.transform(transform$1);\n        }\n    };\n\n    Layout.prototype._initGroups = function _initGroups () {\n        var this$1$1 = this;\n\n        var ref = this;\n        var options = ref.options;\n        var children = ref.children;\n        var lineSpacing = options.lineSpacing;\n        var wrap = options.wrap;\n        var spacing = options.spacing;\n        var sizeField = this._fieldMap.sizeField;\n        var group = this._newGroup();\n        var groups = [];\n        var addGroup = function() {\n            groups.push(group);\n            groupsSize += group.lineSize + lineSpacing;\n        };\n        var groupsSize = -lineSpacing;\n\n        for (var idx = 0; idx < children.length; idx++) {\n            var element = children[idx];\n            var bbox = children[idx].clippedBBox();\n            if (element.visible() && bbox) {\n                if (wrap && group.size + bbox.size[sizeField] + spacing > this$1$1._rect.size[sizeField]) {\n                    if (group.bboxes.length === 0) {\n                        this$1$1._addToGroup(group, bbox, element);\n                        addGroup();\n                        group = this$1$1._newGroup();\n                    } else {\n                        addGroup();\n                        group = this$1$1._newGroup();\n                        this$1$1._addToGroup(group, bbox, element);\n                    }\n                } else {\n                    this$1$1._addToGroup(group, bbox, element);\n                }\n            }\n        }\n\n        if (group.bboxes.length) {\n            addGroup();\n        }\n\n        return {\n            groups: groups,\n            groupsSize: groupsSize\n        };\n    };\n\n    Layout.prototype._addToGroup = function _addToGroup (group, bbox, element) {\n        group.size += bbox.size[this._fieldMap.sizeField] + this.options.spacing;\n        group.lineSize = Math.max(bbox.size[this._fieldMap.groupsSizeField], group.lineSize);\n        group.bboxes.push(bbox);\n        group.elements.push(element);\n    };\n\n    Layout.prototype._newGroup = function _newGroup () {\n        return {\n            lineSize: 0,\n            size: -this.options.spacing,\n            bboxes: [],\n            elements: []\n        };\n    };\n\n    return Layout;\n}(Group));\n\nvar Rect = (function (superclass) {\n    function Rect(geometry, options) {\n        if ( geometry === void 0 ) geometry = new Rect$1();\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(\"#000\");\n        }\n    }\n\n    if ( superclass ) Rect.__proto__ = superclass;\n    Rect.prototype = Object.create( superclass && superclass.prototype );\n    Rect.prototype.constructor = Rect;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Rect\";\n    };\n\n    Rect.prototype._bbox = function _bbox (matrix) {\n        return this._geometry.bbox(matrix);\n    };\n\n    Rect.prototype.rawBBox = function rawBBox () {\n        return this._geometry.bbox();\n    };\n\n    Rect.prototype._containsPoint = function _containsPoint (point) {\n        return this._geometry.containsPoint(point);\n    };\n\n    Rect.prototype._isOnPath = function _isOnPath (point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    };\n\n    Object.defineProperties( Rect.prototype, prototypeAccessors );\n\n    return Rect;\n}(paintable(measurable(withGeometry(Element$1)))));\n\nfunction alignElements(elements, rect, alignment, axis, sizeField) {\n    for (var idx = 0; idx < elements.length; idx++) {\n        var bbox = elements[idx].clippedBBox();\n        if (bbox) {\n            var point = bbox.origin.clone();\n            point[axis] = alignStart(bbox.size[sizeField], rect, alignment || \"start\", axis, sizeField);\n            translateToPoint(point, bbox, elements[idx]);\n        }\n    }\n}\n\nfunction align(elements, rect, alignment) {\n    alignElements(elements, rect, alignment, \"x\", \"width\");\n}\n\nfunction vAlign(elements, rect, alignment) {\n    alignElements(elements, rect, alignment, \"y\", \"height\");\n}\n\nfunction stackElements(elements, stackAxis, otherAxis, sizeField) {\n    if (elements.length > 1) {\n        var origin = new Point();\n        var previousBBox = elements[0].bbox;\n\n        for (var idx = 1; idx < elements.length; idx++) {\n            var element = elements[idx].element;\n            var bbox = elements[idx].bbox;\n            origin[stackAxis] = previousBBox.origin[stackAxis] + previousBBox.size[sizeField];\n            origin[otherAxis] = bbox.origin[otherAxis];\n            translateToPoint(origin, bbox, element);\n            bbox.origin[stackAxis] = origin[stackAxis];\n            previousBBox = bbox;\n        }\n    }\n}\n\nfunction createStackElements(elements) {\n    var stackElements = [];\n\n    for (var idx = 0; idx < elements.length; idx++) {\n        var element = elements[idx];\n        var bbox = element.clippedBBox();\n        if (bbox) {\n            stackElements.push({\n                element: element,\n                bbox: bbox\n            });\n        }\n    }\n\n    return stackElements;\n}\n\nfunction stack(elements) {\n    stackElements(createStackElements(elements), \"x\", \"y\", \"width\");\n}\n\nfunction vStack(elements) {\n    stackElements(createStackElements(elements), \"y\", \"x\", \"height\");\n}\n\nfunction getStacks(elements, rect, sizeField) {\n    var maxSize = rect.size[sizeField];\n    var stacks = [];\n    var stack = [];\n    var stackSize = 0;\n    var element, bbox;\n\n    var addElementToStack = function() {\n        stack.push({\n            element: element,\n            bbox: bbox\n        });\n    };\n\n    for (var idx = 0; idx < elements.length; idx++) {\n        element = elements[idx];\n\n        bbox = element.clippedBBox();\n        if (bbox) {\n            var size = bbox.size[sizeField];\n            if (stackSize + size > maxSize) {\n                if (stack.length) {\n                    stacks.push(stack);\n                    stack = [];\n                    addElementToStack();\n                    stackSize = size;\n                } else {\n                    addElementToStack();\n                    stacks.push(stack);\n                    stack = [];\n                    stackSize = 0;\n                }\n            } else {\n                addElementToStack();\n                stackSize += size;\n            }\n        }\n    }\n\n    if (stack.length) {\n        stacks.push(stack);\n    }\n\n    return stacks;\n}\n\nfunction wrapElements(elements, rect, axis, otherAxis, sizeField) {\n    var stacks = getStacks(elements, rect, sizeField);\n    var origin = rect.origin.clone();\n    var result = [];\n\n    for (var idx = 0; idx < stacks.length; idx++) {\n        var stack = stacks[idx];\n        var startElement = stack[0];\n        origin[otherAxis] = startElement.bbox.origin[otherAxis];\n        translateToPoint(origin, startElement.bbox, startElement.element);\n        startElement.bbox.origin[axis] = origin[axis];\n        stackElements(stack, axis, otherAxis, sizeField);\n        result.push([]);\n        for (var elementIdx = 0; elementIdx < stack.length; elementIdx++) {\n            result[idx].push(stack[elementIdx].element);\n        }\n    }\n    return result;\n}\n\nfunction wrap(elements, rect) {\n    return wrapElements(elements, rect, \"x\", \"y\", \"width\");\n}\n\nfunction vWrap(elements, rect) {\n    return wrapElements(elements, rect, \"y\", \"x\", \"height\");\n}\n\nfunction fit(element, rect) {\n    var bbox = element.clippedBBox();\n    if (bbox) {\n        var elementSize = bbox.size;\n        var rectSize = rect.size;\n        if (rectSize.width < elementSize.width || rectSize.height < elementSize.height) {\n            var scale = Math.min(rectSize.width / elementSize.width, rectSize.height / elementSize.height);\n            var transform$1 = element.transform() || transform();\n            transform$1.scale(scale, scale);\n            element.transform(transform$1);\n        }\n    }\n}\n\nvar StopsArray = (function (ElementsArray) {\n    function StopsArray () {\n        ElementsArray.apply(this, arguments);\n    }\n\n    if ( ElementsArray ) StopsArray.__proto__ = ElementsArray;\n    StopsArray.prototype = Object.create( ElementsArray && ElementsArray.prototype );\n    StopsArray.prototype.constructor = StopsArray;\n\n    StopsArray.prototype._change = function _change () {\n        this.optionsChange({\n            field: \"stops\"\n        });\n    };\n\n    return StopsArray;\n}(ElementsArray));\n\nfunction optionsAccessor(name) {\n    return function(value) {\n        if (defined(value)) {\n            this.options.set(name, value);\n            return this;\n        }\n\n        return this.options.get(name);\n    };\n}\n\nfunction defineOptionsAccessors(fn, names) {\n    for (var i = 0; i < names.length; i++) {\n        fn[names[i]] = optionsAccessor(names[i]);\n    }\n}\n\nvar withOptions = function (TBase, names) {\n    var result = (function (TBase) {\n        function result () {\n            TBase.apply(this, arguments);\n        }if ( TBase ) result.__proto__ = TBase;\n        result.prototype = Object.create( TBase && TBase.prototype );\n        result.prototype.constructor = result;\n\n        \n\n        return result;\n    }(TBase));\n    defineOptionsAccessors(result.prototype, names);\n\n    return result;\n};\n\nvar options = [ \"offset\", \"color\", \"opacity\" ];\n\nvar GradientStop = (function (superclass) {\n    function GradientStop(offset, color, opacity) {\n        superclass.call(this);\n\n        this.options = new OptionsStore({\n            offset: offset,\n            color: color,\n            opacity: defined(opacity) ? opacity : 1\n        });\n\n        this.options.addObserver(this);\n    }\n\n    if ( superclass ) GradientStop.__proto__ = superclass;\n    GradientStop.prototype = Object.create( superclass && superclass.prototype );\n    GradientStop.prototype.constructor = GradientStop;\n\n    GradientStop.create = function create (arg) {\n        if (defined(arg)) {\n            var stop;\n            if (arg instanceof GradientStop) {\n                stop = arg;\n            } else if (arg.length > 1) {\n                stop = new GradientStop(arg[0], arg[1], arg[2]);\n            } else {\n                stop = new GradientStop(arg.offset, arg.color, arg.opacity);\n            }\n\n            return stop;\n        }\n    };\n\n    return GradientStop;\n}(withOptions(HasObservers, options)));\n\nvar Gradient = (function (HasObservers) {\n    function Gradient(options) {\n        if ( options === void 0 ) options = {};\n\n        HasObservers.call(this);\n\n        this.stops = new StopsArray(this._createStops(options.stops));\n        this.stops.addObserver(this);\n        this._userSpace = options.userSpace;\n        this.id = definitionId();\n    }\n\n    if ( HasObservers ) Gradient.__proto__ = HasObservers;\n    Gradient.prototype = Object.create( HasObservers && HasObservers.prototype );\n    Gradient.prototype.constructor = Gradient;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\n\n    prototypeAccessors.nodeType.get = function () {\n        return \"Gradient\";\n    };\n\n    Gradient.prototype.userSpace = function userSpace (value) {\n        if (defined(value)) {\n            this._userSpace = value;\n            this.optionsChange();\n            return this;\n        }\n\n        return this._userSpace;\n    };\n\n    Gradient.prototype._createStops = function _createStops (stops) {\n        if ( stops === void 0 ) stops = [];\n\n        var result = [];\n        for (var idx = 0; idx < stops.length; idx++) {\n            result.push(GradientStop.create(stops[idx]));\n        }\n\n        return result;\n    };\n\n    Gradient.prototype.addStop = function addStop (offset, color, opacity) {\n        this.stops.push(new GradientStop(offset, color, opacity));\n    };\n\n    Gradient.prototype.removeStop = function removeStop (stop) {\n        var index = this.stops.indexOf(stop);\n        if (index >= 0) {\n            this.stops.splice(index, 1);\n        }\n    };\n\n    Gradient.prototype.optionsChange = function optionsChange (e) {\n        this.trigger(\"optionsChange\", {\n            field: \"gradient\" + (e ? \".\" + e.field : \"\"),\n            value: this\n        });\n    };\n\n    Gradient.prototype.geometryChange = function geometryChange () {\n        this.optionsChange();\n    };\n\n    Object.defineProperties( Gradient.prototype, prototypeAccessors );\n\n    return Gradient;\n}(HasObservers));\n\nvar points = [ \"start\", \"end\" ];\n\nvar LinearGradient = (function (superclass) {\n    function LinearGradient(options) {\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.start(options.start || new Point());\n        this.end(options.end || new Point(1, 0));\n    }\n\n    if ( superclass ) LinearGradient.__proto__ = superclass;\n    LinearGradient.prototype = Object.create( superclass && superclass.prototype );\n    LinearGradient.prototype.constructor = LinearGradient;\n\n    return LinearGradient;\n}(withPoints(Gradient, points)));\n\nvar RadialGradient = (function (superclass) {\n    function RadialGradient(options) {\n        if ( options === void 0 ) options = {};\n\n        superclass.call(this, options);\n\n        this.center(options.center || new Point());\n        this._radius = defined(options.radius) ? options.radius : 1;\n        this._fallbackFill = options.fallbackFill;\n    }\n\n    if ( superclass ) RadialGradient.__proto__ = superclass;\n    RadialGradient.prototype = Object.create( superclass && superclass.prototype );\n    RadialGradient.prototype.constructor = RadialGradient;\n\n    RadialGradient.prototype.radius = function radius (value) {\n        if (defined(value)) {\n            this._radius = value;\n            this.geometryChange();\n            return this;\n        }\n\n        return this._radius;\n    };\n\n    RadialGradient.prototype.fallbackFill = function fallbackFill (value) {\n        if (defined(value)) {\n            this._fallbackFill = value;\n            this.optionsChange();\n            return this;\n        }\n\n        return this._fallbackFill;\n    };\n\n    return RadialGradient;\n}(withPoints(Gradient, [ \"center\" ])));\n\nvar defaultColor = \"#aba4a6\";\r\nvar defaultLine = { width: 2, gap: 18 };\r\nvar defaultDot = { radius: 10, gap: 10 };\r\nvar defaultGrid = { size: 18, gap: 2 };\r\n\r\nvar Pattern = (function (Group) {\n    function Pattern(options) {\r\n        Group.call(this);\r\n\r\n        var width = options.width;\n        var height = options.height;\r\n        this._size = Size.create([width, height]);\r\n        this.id = definitionId();\r\n    }\n\n    if ( Group ) Pattern.__proto__ = Group;\n    Pattern.prototype = Object.create( Group && Group.prototype );\n    Pattern.prototype.constructor = Pattern;\n\n    var prototypeAccessors = { nodeType: { configurable: true } };\r\n\r\n    prototypeAccessors.nodeType.get = function () {\r\n        return PATTERN;\r\n    };\n\n    Pattern.prototype.size = function size (value) {\r\n        if (value) {\r\n            this._size = Size.create(value);\r\n            return this;\r\n        }\r\n\r\n        return this._size;\r\n    };\n\n    Object.defineProperties( Pattern.prototype, prototypeAccessors );\n\n    return Pattern;\n}(Group));\r\n\r\nvar drawBackground = function (pattern, color, size) {\r\n    if (color) {\r\n        pattern.append(\r\n            new Rect(new Rect$1([0, 0], size), { fill: { color: color }, stroke: null })\r\n        );\r\n    }\r\n};\r\n\r\nfunction dotsPattern(options) {\n    if ( options === void 0 ) options = {};\n\r\n    var gap = options.gap; if ( gap === void 0 ) gap = defaultDot.gap;\n    var radius = options.radius; if ( radius === void 0 ) radius = defaultDot.radius;\n    var color = options.color; if ( color === void 0 ) color = defaultColor;\n    var background = options.background;\r\n    var shapeOptions = { fill: { color: color }, stroke: null };\r\n    var size = 4 * radius + 2 * gap;\r\n    var yC2 = 3 * radius + 1.5 * gap;\r\n    var center1 = [size / 2, radius + 1/2 * gap];\r\n    var center2 = [0, yC2];\r\n    var center3 = [size, yC2];\r\n\r\n    var pattern = new Pattern({ width: size, height: size });\r\n\r\n    drawBackground(pattern, background, [size, size]);\r\n\r\n    pattern.append(\r\n        new Circle(new Circle$1(center1, radius), shapeOptions),\r\n        new Circle(new Circle$1(center2, radius), shapeOptions),\r\n        new Circle(new Circle$1(center3, radius), shapeOptions)\r\n    );\r\n\r\n    return pattern;\r\n};\r\n\r\nfunction verticalStripesPattern(options) {\n    if ( options === void 0 ) options = {};\n\r\n    var gap = options.gap; if ( gap === void 0 ) gap = defaultLine.gap;\n    var width = options.width; if ( width === void 0 ) width = defaultLine.width;\n    var color = options.color; if ( color === void 0 ) color = defaultColor;\n    var background = options.background;\r\n    var size = width + gap;\r\n    var shapeOptions = { fill: null, stroke: { color: color, width: width / 2 } };\r\n    var pattern = new Pattern({ width: size, height: size });\r\n\r\n    drawBackground(pattern, background, [size, size]);\r\n\r\n    var xStart = width / 4;\r\n    var xEnd = size - width / 4;\r\n\r\n    var startLine = new Path(shapeOptions);\r\n    startLine.moveTo(xStart, 0).lineTo(xStart, size);\r\n\r\n    var endLine = new Path(shapeOptions);\r\n    endLine.moveTo(xEnd, 0).lineTo(xEnd, size);\r\n\r\n    pattern.append(startLine, endLine);\r\n\r\n    return pattern;\r\n};\r\n\r\nfunction crosshatchPattern(options) {\n    if ( options === void 0 ) options = {};\n\r\n    var gap = options.gap; if ( gap === void 0 ) gap = defaultLine.gap;\n    var width = options.width; if ( width === void 0 ) width = defaultLine.width;\n    var color = options.color; if ( color === void 0 ) color = defaultColor;\n    var background = options.background;\r\n    var size = Math.sqrt(2) * (width + gap);\r\n    var shapeOptions = { fill: null, stroke: { color: color, width: width } };\r\n    var pattern = new Pattern({ width: size, height: size });\r\n\r\n    drawBackground(pattern, background, [size, size]);\r\n\r\n    var line1 = new Path(shapeOptions);\r\n    line1.moveTo(0, 0).lineTo(size, size);\r\n\r\n    var line2 = new Path(shapeOptions);\r\n    line2.moveTo(size, 0).lineTo(0, size);\r\n\r\n    pattern.append(line1, line2);\r\n\r\n    return pattern;\r\n};\r\n\r\nfunction diagonalStripesPattern(options) {\n    if ( options === void 0 ) options = {};\n\r\n    var gap = options.gap; if ( gap === void 0 ) gap = defaultLine.gap;\n    var width = options.width; if ( width === void 0 ) width = defaultLine.width;\n    var color = options.color; if ( color === void 0 ) color = defaultColor;\n    var background = options.background;\r\n    var size = Math.sqrt(2) * (width + gap);\r\n    var shapeOptions = { fill: null, stroke: { color: color, width: width, lineCap: 'square' } };\r\n    var pattern = new Pattern({ width: size, height: size });\r\n    \r\n    drawBackground(pattern, background, [size, size]);\r\n\r\n    var line1 = new Path(shapeOptions);\r\n    line1.moveTo(0, size / 2).lineTo(size / 2, 0);\r\n\r\n    var line2 = new Path(shapeOptions);\r\n    line2.moveTo(size / 2, size).lineTo(size, size / 2);\r\n\r\n    pattern.append(line1, line2);\r\n\r\n    return pattern;\r\n};\r\n\r\nfunction gridPattern(options) {\n    if ( options === void 0 ) options = {};\n\r\n    var gap = options.gap; if ( gap === void 0 ) gap = defaultGrid.gap;\n    var squareSize = options.size; if ( squareSize === void 0 ) squareSize = defaultGrid.size;\n    var color = options.color; if ( color === void 0 ) color = defaultColor;\n    var background = options.background;\r\n    var size = squareSize + gap;\r\n    var halfGap = gap / 2;\r\n    var shapeOptions = { fill: { color: color }, stroke: null };\r\n    var pattern = new Pattern({ width: size, height: size });\r\n\r\n    drawBackground(pattern, background, [size, size]);\r\n\r\n    var rect = new Rect(new Rect$1([halfGap, halfGap], [squareSize, squareSize]), shapeOptions);\r\n    pattern.append(rect);\r\n\r\n    return pattern;\r\n};\n\nfunction swing(position) {\n    return 0.5 - Math.cos(position * Math.PI) / 2;\n}\n\nfunction linear(position) {\n    return position;\n}\n\nfunction easeOutElastic(position, time, start, diff) {\n    var s = 1.70158,\n        p = 0,\n        a = diff;\n\n    if (position === 0) {\n        return start;\n    }\n\n    if (position === 1) {\n        return start + diff;\n    }\n\n    if (!p) {\n        p = 0.5;\n    }\n\n    if (a < Math.abs(diff)) {\n        a = diff;\n        s = p / 4;\n    } else {\n        s = p / (2 * Math.PI) * Math.asin(diff / a);\n    }\n\n    return a * Math.pow(2, -10 * position) *\n           Math.sin((Number(position) - s) * (1.1 * Math.PI) / p) + diff + start;\n}\n\nvar easingFunctions = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    easeOutElastic: easeOutElastic,\n    linear: linear,\n    swing: swing\n});\n\nvar instance$2;\n\nvar AnimationFactory = (function (Class) {\n    function AnimationFactory() {\n        Class.call(this);\n\n        this._items = [];\n    }\n\n    if ( Class ) AnimationFactory.__proto__ = Class;\n    AnimationFactory.prototype = Object.create( Class && Class.prototype );\n    AnimationFactory.prototype.constructor = AnimationFactory;\n\n    var staticAccessors = { current: { configurable: true } };\n\n    staticAccessors.current.get = function () {\n        if (!instance$2) {\n            instance$2 = new AnimationFactory();\n        }\n\n        return instance$2;\n    };\n\n    AnimationFactory.prototype.register = function register (name, type) {\n        this._items.push({\n            name: name,\n            type: type\n        });\n    };\n\n    AnimationFactory.prototype.create = function create (element, options) {\n        var items = this._items;\n        var match;\n\n        if (options && options.type) {\n            var type = options.type.toLowerCase();\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].name.toLowerCase() === type) {\n                    match = items[i];\n                    break;\n                }\n            }\n        }\n\n        if (match) {\n            return new match.type(element, options);\n        }\n    };\n\n    Object.defineProperties( AnimationFactory, staticAccessors );\n\n    return AnimationFactory;\n}(Class));\n\nvar Animation = (function (Class) {\n    function Animation(element, options) {\n        Class.call(this);\n\n        this.options = Object.assign({}, this.options, options);\n        this.element = element;\n    }\n\n    if ( Class ) Animation.__proto__ = Class;\n    Animation.prototype = Object.create( Class && Class.prototype );\n    Animation.prototype.constructor = Animation;\n\n    var prototypeAccessors = { options: { configurable: true } };\n\n    Animation.create = function create (type, element, options) {\n        return AnimationFactory.current.create(type, element, options);\n    };\n\n    prototypeAccessors.options.get = function () {\n        return this._options || {\n            duration: 500,\n            easing: \"swing\"\n        };\n    };\n\n    prototypeAccessors.options.set = function (value) {\n        this._options = value;\n    };\n\n    Animation.prototype.setup = function setup () {};\n    Animation.prototype.step = function step () {};\n\n    Animation.prototype.play = function play () {\n        var this$1$1 = this;\n\n        var options = this.options;\n        var duration = options.duration;\n        var delay = options.delay; if ( delay === void 0 ) delay = 0;\n        var easing = easingFunctions[options.easing];\n        var start = now() + delay;\n        var finish = start + duration;\n\n        if (duration === 0) {\n            this.step(1);\n            this.abort();\n        } else {\n            setTimeout(function () {\n                var loop = function () {\n                    if (this$1$1._stopped) {\n                        return;\n                    }\n\n                    var wallTime = now();\n\n                    var time = limitValue(wallTime - start, 0, duration);\n                    var position = time / duration;\n                    var easingPosition = easing(position, time, 0, 1, duration);\n\n                    this$1$1.step(easingPosition);\n\n                    if (wallTime < finish) {\n                        animationFrame(loop);\n                    } else {\n                        this$1$1.abort();\n                    }\n                };\n\n                loop();\n            }, delay);\n        }\n    };\n\n    Animation.prototype.abort = function abort () {\n        this._stopped = true;\n    };\n\n    Animation.prototype.destroy = function destroy () {\n        this.abort();\n    };\n\n    Object.defineProperties( Animation.prototype, prototypeAccessors );\n\n    return Animation;\n}(Class));\n\nvar instance$1;\n\nvar PathParser = (function (Class) {\n    function PathParser () {\n        Class.apply(this, arguments);\n    }\n\n    if ( Class ) PathParser.__proto__ = Class;\n    PathParser.prototype = Object.create( Class && Class.prototype );\n    PathParser.prototype.constructor = PathParser;\n\n    var staticAccessors = { current: { configurable: true } };\n\n    staticAccessors.current.get = function () {\n        if (!instance$1) {\n            instance$1 = new PathParser();\n        }\n\n        return instance$1;\n    };\n\n    PathParser.prototype.parse = function parse (str, options) {\n        var multiPath = new MultiPath(options);\n        return parsePath(multiPath, str);\n    };\n\n    Object.defineProperties( PathParser, staticAccessors );\n\n    return PathParser;\n}(Class));\n\nvar BaseNode = (function (Class) {\n    function BaseNode(srcElement) {\n        Class.call(this);\n\n        this.childNodes = [];\n        this.parent = null;\n\n        if (srcElement) {\n            this.srcElement = srcElement;\n            this.observe();\n        }\n    }\n\n    if ( Class ) BaseNode.__proto__ = Class;\n    BaseNode.prototype = Object.create( Class && Class.prototype );\n    BaseNode.prototype.constructor = BaseNode;\n\n    BaseNode.prototype.destroy = function destroy () {\n        var this$1$1 = this;\n\n        if (this.srcElement) {\n            this.srcElement.removeObserver(this);\n        }\n\n        var children = this.childNodes;\n        for (var i = 0; i < children.length; i++) {\n            this$1$1.childNodes[i].destroy();\n        }\n\n        this.parent = null;\n    };\n\n    BaseNode.prototype.load = function load () {};\n\n    BaseNode.prototype.observe = function observe () {\n        if (this.srcElement) {\n            this.srcElement.addObserver(this);\n        }\n    };\n\n    BaseNode.prototype.append = function append (node) {\n        this.childNodes.push(node);\n        node.parent = this;\n    };\n\n    BaseNode.prototype.insertAt = function insertAt (node, pos) {\n        this.childNodes.splice(pos, 0, node);\n        node.parent = this;\n    };\n\n    BaseNode.prototype.remove = function remove (index, count) {\n        var this$1$1 = this;\n\n        var end = index + count;\n        for (var i = index; i < end; i++) {\n            this$1$1.childNodes[i].removeSelf();\n        }\n        this.childNodes.splice(index, count);\n    };\n\n    BaseNode.prototype.removeSelf = function removeSelf () {\n        this.clear();\n        this.destroy();\n    };\n\n    BaseNode.prototype.clear = function clear () {\n        this.remove(0, this.childNodes.length);\n    };\n\n    BaseNode.prototype.invalidate = function invalidate () {\n        if (this.parent) {\n            this.parent.invalidate();\n        }\n    };\n\n    BaseNode.prototype.geometryChange = function geometryChange () {\n        this.invalidate();\n    };\n\n    BaseNode.prototype.optionsChange = function optionsChange () {\n        this.invalidate();\n    };\n\n    BaseNode.prototype.childrenChange = function childrenChange (e) {\n        if (e.action === \"add\") {\n            this.load(e.items, e.index);\n        } else if (e.action === \"remove\") {\n            this.remove(e.index, e.items.length);\n        }\n\n        this.invalidate();\n    };\n\n    return BaseNode;\n}(Class));\n\nvar events = [\n    \"click\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"mousemove\",\n    \"resize\"\n];\n\nvar Surface$3 = (function (Observable) {\n    function Surface(element, options) {\n        Observable.call(this);\n\n        this.options = Object.assign({}, options);\n        this.element = element;\n        this.element._kendoExportVisual = this.exportVisual.bind(this);\n\n        this._click = this._handler(\"click\");\n        this._mouseenter = this._handler(\"mouseenter\");\n        this._mouseleave = this._handler(\"mouseleave\");\n        this._mousemove = this._handler(\"mousemove\");\n\n        this._visual = new Group();\n\n        elementSize(element, this.options);\n\n        this.bind(events, this.options);\n\n        this._enableTracking();\n    }\n\n    if ( Observable ) Surface.__proto__ = Observable;\n    Surface.prototype = Object.create( Observable && Observable.prototype );\n    Surface.prototype.constructor = Surface;\n\n    Surface.prototype.draw = function draw (element) {\n        this._visual.children.push(element);\n    };\n\n    Surface.prototype.clear = function clear () {\n        this._visual.children = [];\n    };\n\n    Surface.prototype.destroy = function destroy () {\n        this._visual = null;\n        this.element._kendoExportVisual = null;\n        this.unbind();\n    };\n\n    Surface.prototype.eventTarget = function eventTarget (e) {\n        var this$1$1 = this;\n\n        var domNode = eventElement(e);\n        var node;\n\n        while (!node && domNode) {\n            node = domNode._kendoNode;\n            if (domNode === this$1$1.element) {\n                break;\n            }\n\n            domNode = domNode.parentElement;\n        }\n\n        if (node) {\n            return node.srcElement;\n        }\n    };\n\n    Surface.prototype.exportVisual = function exportVisual () {\n        return this._visual;\n    };\n\n    Surface.prototype.getSize = function getSize () {\n        return elementSize(this.element);\n    };\n\n    Surface.prototype.currentSize = function currentSize (size) {\n        if (size) {\n            this._size = size;\n        } else {\n            return this._size;\n        }\n    };\n\n    Surface.prototype.setSize = function setSize (size) {\n        elementSize(this.element, size);\n\n        this.currentSize(size);\n        this._resize();\n    };\n\n    Surface.prototype.resize = function resize (force) {\n        var size = this.getSize();\n        var currentSize = this.currentSize();\n\n        if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n            this.currentSize(size);\n            this._resize(size, force);\n            this.trigger(\"resize\", size);\n        }\n    };\n\n    Surface.prototype.size = function size (value) {\n        if (!value) {\n            return this.getSize();\n        }\n\n        this.setSize(value);\n    };\n\n    Surface.prototype.suspendTracking = function suspendTracking () {\n        this._suspendedTracking = true;\n    };\n\n    Surface.prototype.resumeTracking = function resumeTracking () {\n        this._suspendedTracking = false;\n    };\n\n    Surface.prototype._enableTracking = function _enableTracking () {};\n\n    Surface.prototype._resize = function _resize () {};\n\n    Surface.prototype._handler = function _handler (eventName) {\n        var this$1$1 = this;\n\n        return function (e) {\n            var node = this$1$1.eventTarget(e);\n            if (node && !this$1$1._suspendedTracking) {\n                this$1$1.trigger(eventName, {\n                    element: node,\n                    originalEvent: e,\n                    type: eventName\n                });\n            }\n        };\n    };\n\n    Surface.prototype._elementOffset = function _elementOffset () {\n        var element = this.element;\n        var padding = elementPadding(element);\n        var ref = elementOffset(element);\n        var left = ref.left;\n        var top = ref.top;\n\n        return {\n            left: left + padding.left,\n            top: top + padding.top\n        };\n    };\n\n    Surface.prototype._surfacePoint = function _surfacePoint (e) {\n        var offset = this._elementOffset();\n        var coord = eventCoordinates(e);\n        var x = coord.x - offset.left;\n        var y = coord.y - offset.top;\n\n        var inverseTransform = elementScale(this.element).invert();\n        var point = new Point(\n            x,\n            y\n        ).transform(inverseTransform);\n\n        return point;\n    };\n\n    return Surface;\n}(Observable));\n\nfunction renderAttr(name, value) {\n    return (defined(value) && value !== null) ? (\" \" + name + \"=\\\"\" + value + \"\\\" \") : \"\";\n}\n\nfunction renderAllAttr(attrs) {\n    var output = \"\";\n    for (var i = 0; i < attrs.length; i++) {\n        output += renderAttr(attrs[i][0], attrs[i][1]);\n    }\n\n    return output;\n}\n\nfunction renderStyle(attrs) {\n    var output = \"\";\n    for (var i = 0; i < attrs.length; i++) {\n        var value = attrs[i][1];\n        if (defined(value)) {\n            output += attrs[i][0] + \":\" + value + \";\";\n        }\n    }\n\n    if (output !== \"\") {\n        return output;\n    }\n}\n\nvar NODE_MAP$1 = {};\n\nvar setStyle = function (element, styleString) {\r\n    var styles = parseInlineStyles(styleString);\r\n    Object.keys(styles).forEach(function (key) {\r\n        element.style[key] = styles[key];\r\n    });\r\n};\r\n\r\nvar styleAttr = 'data-style';\r\nvar replaceStyleAttr = function (html) { return (html || '').replace(/\\sstyle=/g, ' ' + styleAttr + '='); };\r\nvar restoreStyleAttr = function (container) {\r\n    Array.from(container.querySelectorAll('[' + styleAttr +']')).forEach(function (element) {\r\n        var styleString = element.getAttribute(styleAttr);\r\n        element.removeAttribute(styleAttr);\r\n        setStyle(element, styleString);\r\n    });\r\n};\r\n\r\nvar setInnerHTML = function (container, html) {\r\n    container.innerHTML = replaceStyleAttr(html);\r\n    restoreStyleAttr(container);\r\n};\n\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar NONE = \"none\";\nvar POINT_DIGITS = 3;\n\nvar renderSVG = function(container, svg) {\n    setInnerHTML(container, svg);\n};\n\nif (typeof document !== \"undefined\") {\n    var testFragment = \"<svg xmlns='\" + SVG_NS + \"'></svg>\";\n    var testContainer = document.createElement(\"div\");\n    var hasParser = typeof DOMParser !== \"undefined\";\n\n    testContainer.innerHTML = testFragment;\n\n    if (hasParser && testContainer.firstChild.namespaceURI !== SVG_NS) {\n        renderSVG = function(container, svg) {\n            var parser = new DOMParser();\n            var chartDoc = parser.parseFromString(replaceStyleAttr(svg), \"text/xml\");\n            restoreStyleAttr(chartDoc);\n            var importedDoc = document.adoptNode(chartDoc.documentElement);\n\n            container.innerHTML = \"\";\n            container.appendChild(importedDoc);\n        };\n    }\n}\n\nvar renderSVG$1 = renderSVG;\n\nvar TRANSFORM = \"transform\";\nvar DefinitionMap = {\n    clip: \"clip-path\",\n    fill: \"fill\"\n};\n\nfunction isDefinition(type, value) {\n    return type === \"clip\" || (type === \"fill\" && (!value || value.nodeType === \"Gradient\" || value.nodeType === PATTERN));\n}\n\nfunction baseUrl() {\n    var base = document.getElementsByTagName(\"base\")[0];\n    var href = document.location.href;\n    var url = \"\";\n\n    if (base && !(support$1.browser || {}).msie) {\n        var hashIndex = href.indexOf(\"#\");\n        if (hashIndex !== -1) {\n            href = href.substring(0, hashIndex);\n        }\n\n        url = href;\n    }\n\n    return url;\n}\n\nvar Node$1 = (function (BaseNode) {\n    function Node(srcElement, options) {\n        BaseNode.call(this, srcElement);\n        this.definitions = {};\n\n        this.options = options;\n    }\n\n    if ( BaseNode ) Node.__proto__ = BaseNode;\n    Node.prototype = Object.create( BaseNode && BaseNode.prototype );\n    Node.prototype.constructor = Node;\n\n    Node.prototype.destroy = function destroy () {\n        if (this.element) {\n            this.element._kendoNode = null;\n            this.element = null;\n        }\n\n        this.clearDefinitions();\n        BaseNode.prototype.destroy.call(this);\n    };\n\n    Node.prototype.load = function load (elements, pos) {\n        var this$1$1 = this;\n\n        for (var i = 0; i < elements.length; i++) {\n            var srcElement = elements[i];\n            var children = srcElement.children;\n\n            var childNode = new NODE_MAP$1[srcElement.nodeType](srcElement, this$1$1.options);\n\n            if (defined(pos)) {\n                this$1$1.insertAt(childNode, pos);\n            } else {\n                this$1$1.append(childNode);\n            }\n\n            childNode.createDefinitions();\n\n            if (children && children.length > 0) {\n                childNode.load(children);\n            }\n\n            var element = this$1$1.element;\n            if (element) {\n                childNode.attachTo(element, pos);\n            }\n        }\n    };\n\n    Node.prototype.root = function root () {\n        var root = this;\n\n        while (root.parent) {\n            root = root.parent;\n        }\n\n        return root;\n    };\n\n    Node.prototype.attachTo = function attachTo (domElement, pos) {\n        var container = document.createElement(\"div\");\n        renderSVG$1(container,\n            \"<svg xmlns='\" + SVG_NS + \"' version='1.1'>\" +\n                this.render() +\n            \"</svg>\"\n        );\n\n        var element = container.firstChild.firstChild;\n        if (element) {\n            if (defined(pos)) {\n                domElement.insertBefore(element, domElement.childNodes[pos] || null);\n            } else {\n                domElement.appendChild(element);\n            }\n            this.setElement(element);\n        }\n    };\n\n    Node.prototype.setElement = function setElement (element) {\n        if (this.element) {\n            this.element._kendoNode = null;\n        }\n\n        this.element = element;\n        this.element._kendoNode = this;\n\n        var nodes = this.childNodes;\n        for (var i = 0; i < nodes.length; i++) {\n            var childElement = element.childNodes[i];\n            nodes[i].setElement(childElement);\n        }\n    };\n\n    Node.prototype.clear = function clear () {\n        this.clearDefinitions();\n\n        if (this.element) {\n            this.element.innerHTML = \"\";\n        }\n\n        var children = this.childNodes;\n        for (var i = 0; i < children.length; i++) {\n            children[i].destroy();\n        }\n\n        this.childNodes = [];\n    };\n\n    Node.prototype.removeSelf = function removeSelf () {\n        if (this.element) {\n            var parentNode = this.element.parentNode;\n            if (parentNode) {\n                parentNode.removeChild(this.element);\n            }\n            this.element = null;\n        }\n\n        BaseNode.prototype.removeSelf.call(this);\n    };\n\n    Node.prototype.template = function template () {\n        return this.renderChildren();\n    };\n\n    Node.prototype.render = function render () {\n        return this.template();\n    };\n\n    Node.prototype.renderChildren = function renderChildren () {\n        var nodes = this.childNodes;\n        var output = \"\";\n\n        for (var i = 0; i < nodes.length; i++) {\n            output += nodes[i].render();\n        }\n\n        return output;\n    };\n\n    Node.prototype.optionsChange = function optionsChange (e) {\n        var field = e.field;\n        var value = e.value;\n\n        if (field === \"visible\") {\n            this.css(\"display\", value ? \"\" : NONE);\n        } else if (DefinitionMap[field] && isDefinition(field, value)) {\n            this.updateDefinition(field, value);\n        } else if (field === \"opacity\") {\n            this.attr(\"opacity\", value);\n        } else if (field === \"cursor\") {\n            this.css(\"cursor\", value);\n        } else if (field === \"id\") {\n            if (value) {\n                this.attr(\"id\", value);\n            } else {\n                this.removeAttr(\"id\");\n            }\n        }\n\n        BaseNode.prototype.optionsChange.call(this, e);\n    };\n\n    Node.prototype.accessibilityOptionsChange = function accessibilityOptionsChange (e) {\n        var field = e.field;\n        var value = e.value;\n\n\n        if (field === \"role\") {\n            if (value) {\n                this.attr(\"role\", value);\n            } else {\n                this.removeAttr(\"role\");\n            }\n        } else if (field === \"ariaLabel\") {\n            if (value) {\n                this.attr(\"aria-label\", htmlEncode(value));\n            } else {\n                this.removeAttr(\"aria-label\");\n            }\n        } else if (field === \"ariaRoleDescription\") {\n            if (value) {\n                this.attr(\"aria-roledescription\", htmlEncode(value));\n            } else {\n                this.removeAttr(\"aria-roledescription\");\n            }\n        } else if (field === \"ariaChecked\") {\n            if (defined(value)) {\n                this.attr(\"aria-checked\", value);\n            } else {\n                this.removeAttr(\"aria-checked\");\n            }\n        } else if (field === \"className\") {\n            this.className(value);\n        }\n    };\n\n    Node.prototype.attr = function attr (name, value) {\n        if (this.element) {\n            this.element.setAttribute(name, value);\n        }\n    };\n\n    Node.prototype.allAttr = function allAttr (attrs) {\n        var this$1$1 = this;\n\n        for (var i = 0; i < attrs.length; i++) {\n            this$1$1.attr(attrs[i][0], attrs[i][1]);\n        }\n    };\n\n    Node.prototype.toggleAttr = function toggleAttr (name, value) {\n        if (value) {\n            this.attr(name, value);\n        } else {\n            this.removeAttr(name);\n        }\n    };\n\n    Node.prototype.css = function css (name, value) {\n        if (this.element) {\n            this.element.style[name] = value;\n        }\n    };\n\n    Node.prototype.allCss = function allCss (styles) {\n        var this$1$1 = this;\n\n        for (var i = 0; i < styles.length; i++) {\n            this$1$1.css(styles[i][0], styles[i][1]);\n        }\n    };\n\n    Node.prototype.className = function className (value) {\n        var this$1$1 = this;\n\n        if (this.element) {\n            (ref = this.element.classList).remove.apply(ref, this.element.classList);\n            value.split(\" \").forEach(function (item) {\n                this$1$1.element.classList.add(item);\n            });\n        }\n        var ref;\n    };\n\n    Node.prototype.removeAttr = function removeAttr (name) {\n        if (this.element) {\n            this.element.removeAttribute(name);\n        }\n    };\n\n    Node.prototype.mapTransform = function mapTransform (transform) {\n        var attrs = [];\n        if (transform) {\n            attrs.push([\n                TRANSFORM,\n                \"matrix(\" + transform.matrix().toString(6) + \")\"\n            ]);\n        }\n\n        return attrs;\n    };\n\n    Node.prototype.renderTransform = function renderTransform () {\n        return renderAllAttr(\n            this.mapTransform(this.srcElement.transform())\n        );\n    };\n\n    Node.prototype.transformChange = function transformChange (value) {\n        if (value) {\n            this.allAttr(this.mapTransform(value));\n        } else {\n            this.removeAttr(TRANSFORM);\n        }\n    };\n\n    Node.prototype.mapStyle = function mapStyle () {\n        var options = this.srcElement.options;\n        var style = [ [ \"cursor\", options.cursor ] ];\n\n        if (options.visible === false) {\n            style.push([ \"display\", NONE ]);\n        }\n\n        return style;\n    };\n\n    Node.prototype.renderStyle = function renderStyle$1 () {\n        return renderAttr(\"style\", renderStyle(this.mapStyle(true)));\n    };\n\n    Node.prototype.renderOpacity = function renderOpacity () {\n        return renderAttr(\"opacity\", this.srcElement.options.opacity);\n    };\n\n    Node.prototype.renderId = function renderId () {\n        return renderAttr(\"id\", this.srcElement.options.id);\n    };\n\n    Node.prototype.renderClassName = function renderClassName () {\n        return renderAttr(\"class\", this.srcElement.options.className);\n    };\n\n    Node.prototype.renderRole = function renderRole () {\n        return renderAttr(\"role\", this.srcElement.options.role);\n    };\n\n    Node.prototype.renderAriaLabel = function renderAriaLabel () {\n        var value = this.srcElement.options.ariaLabel;\n        if (value) {\n            value = htmlEncode(value);\n        }\n        return renderAttr(\"aria-label\", value);\n    };\n\n    Node.prototype.renderAriaRoleDescription = function renderAriaRoleDescription () {\n        var value = this.srcElement.options.ariaRoleDescription;\n        if (value) {\n            value = htmlEncode(value);\n        }\n        return renderAttr(\"aria-roledescription\", value);\n    };\n\n    Node.prototype.renderAriaChecked = function renderAriaChecked () {\n        return renderAttr(\"aria-checked\", this.srcElement.options.ariaChecked);\n    };\n\n    Node.prototype.createDefinitions = function createDefinitions () {\n        var srcElement = this.srcElement;\n        var definitions = this.definitions;\n        if (srcElement) {\n            var options = srcElement.options;\n            var hasDefinitions;\n\n            for (var field in DefinitionMap) {\n                var definition = options.get(field);\n                if (definition && isDefinition(field, definition)) {\n                    definitions[field] = definition;\n                    hasDefinitions = true;\n                }\n            }\n            if (hasDefinitions) {\n                this.definitionChange({\n                    action: \"add\",\n                    definitions: definitions\n                });\n            }\n        }\n    };\n\n    Node.prototype.definitionChange = function definitionChange (e) {\n        if (this.parent) {\n            this.parent.definitionChange(e);\n        }\n    };\n\n    Node.prototype.updateDefinition = function updateDefinition (type, value) {\n        var definitions = this.definitions;\n        var current = definitions[type];\n        var attr = DefinitionMap[type];\n        var definition = {};\n        if (current) {\n            definition[type] = current;\n            this.definitionChange({\n                action: \"remove\",\n                definitions: definition\n            });\n            delete definitions[type];\n        }\n\n        if (!value) {\n            if (current) {\n                this.removeAttr(attr);\n            }\n        } else {\n            definition[type] = value;\n            this.definitionChange({\n                action: \"add\",\n                definitions: definition\n            });\n            definitions[type] = value;\n            this.attr(attr, this.refUrl(value.id));\n        }\n    };\n\n    Node.prototype.clearDefinitions = function clearDefinitions () {\n        var definitions = this.definitions;\n\n        this.definitionChange({\n            action: \"remove\",\n            definitions: definitions\n        });\n        this.definitions = {};\n    };\n\n    Node.prototype.renderDefinitions = function renderDefinitions () {\n        return renderAllAttr(this.mapDefinitions());\n    };\n\n    Node.prototype.mapDefinitions = function mapDefinitions () {\n        var this$1$1 = this;\n\n        var definitions = this.definitions;\n        var attrs = [];\n\n        for (var field in definitions) {\n            attrs.push([ DefinitionMap[field], this$1$1.refUrl(definitions[field].id) ]);\n        }\n\n        return attrs;\n    };\n\n    Node.prototype.refUrl = function refUrl (id) {\n        var skipBaseHref = (this.options || {}).skipBaseHref;\n        var baseHref = this.baseUrl().replace(/'/g, \"\\\\'\");\n        var base = skipBaseHref ? '' : baseHref;\n        return (\"url(\" + base + \"#\" + id + \")\");\n    };\n\n    Node.prototype.baseUrl = function baseUrl$1 () {\n        return baseUrl();\n    };\n\n    return Node;\n}(BaseNode));\n\nvar GradientStopNode = (function (Node) {\n    function GradientStopNode () {\n        Node.apply(this, arguments);\n    }\n\n    if ( Node ) GradientStopNode.__proto__ = Node;\n    GradientStopNode.prototype = Object.create( Node && Node.prototype );\n    GradientStopNode.prototype.constructor = GradientStopNode;\n\n    GradientStopNode.prototype.template = function template () {\n        return (\"<stop \" + (this.renderOffset()) + \" \" + (this.renderStyle()) + \" />\");\n    };\n\n    GradientStopNode.prototype.renderOffset = function renderOffset () {\n        return renderAttr(\"offset\", this.srcElement.offset());\n    };\n\n    GradientStopNode.prototype.mapStyle = function mapStyle () {\n        var srcElement = this.srcElement;\n        return [\n            [ \"stop-color\", srcElement.color() ],\n            [ \"stop-opacity\", srcElement.opacity() ]\n        ];\n    };\n\n    GradientStopNode.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"offset\") {\n            this.attr(e.field, e.value);\n        } else if (e.field === \"color\" || e.field === \"opacity\") {\n            this.css(\"stop-\" + e.field, e.value);\n        }\n    };\n\n    return GradientStopNode;\n}(Node$1));\n\nvar GradientNode = (function (Node) {\n    function GradientNode(srcElement) {\n        Node.call(this, srcElement);\n\n        this.id = srcElement.id;\n\n        this.loadStops();\n    }\n\n    if ( Node ) GradientNode.__proto__ = Node;\n    GradientNode.prototype = Object.create( Node && Node.prototype );\n    GradientNode.prototype.constructor = GradientNode;\n\n    GradientNode.prototype.loadStops = function loadStops () {\n        var this$1$1 = this;\n\n        var stops = this.srcElement.stops;\n        var element = this.element;\n\n        for (var idx = 0; idx < stops.length; idx++) {\n            var stopNode = new GradientStopNode(stops[idx]);\n            this$1$1.append(stopNode);\n            if (element) {\n                stopNode.attachTo(element);\n            }\n        }\n    };\n\n    GradientNode.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"gradient.stops\") {\n            BaseNode.prototype.clear.call(this);\n            this.loadStops();\n        } else if (e.field === \"gradient\") {\n            this.allAttr(this.mapCoordinates());\n        }\n    };\n\n    GradientNode.prototype.renderCoordinates = function renderCoordinates () {\n        return renderAllAttr(this.mapCoordinates());\n    };\n\n    GradientNode.prototype.mapSpace = function mapSpace () {\n        return [ \"gradientUnits\", this.srcElement.userSpace() ? \"userSpaceOnUse\" : \"objectBoundingBox\" ];\n    };\n\n    return GradientNode;\n}(Node$1));\n\nvar LinearGradientNode = (function (GradientNode) {\n    function LinearGradientNode () {\n        GradientNode.apply(this, arguments);\n    }\n\n    if ( GradientNode ) LinearGradientNode.__proto__ = GradientNode;\n    LinearGradientNode.prototype = Object.create( GradientNode && GradientNode.prototype );\n    LinearGradientNode.prototype.constructor = LinearGradientNode;\n\n    LinearGradientNode.prototype.template = function template () {\n        return (\"<linearGradient id='\" + (this.id) + \"' \" + (this.renderCoordinates()) + \">\" + (this.renderChildren()) + \"</linearGradient>\");\n    };\n\n    LinearGradientNode.prototype.mapCoordinates = function mapCoordinates () {\n        var srcElement = this.srcElement;\n        var start = srcElement.start();\n        var end = srcElement.end();\n        var attrs = [\n            [ \"x1\", start.x ],\n            [ \"y1\", start.y ],\n            [ \"x2\", end.x ],\n            [ \"y2\", end.y ],\n            this.mapSpace()\n        ];\n\n        return attrs;\n    };\n\n    return LinearGradientNode;\n}(GradientNode));\n\nvar RadialGradientNode = (function (GradientNode) {\n    function RadialGradientNode () {\n        GradientNode.apply(this, arguments);\n    }\n\n    if ( GradientNode ) RadialGradientNode.__proto__ = GradientNode;\n    RadialGradientNode.prototype = Object.create( GradientNode && GradientNode.prototype );\n    RadialGradientNode.prototype.constructor = RadialGradientNode;\n\n    RadialGradientNode.prototype.template = function template () {\n        return (\"<radialGradient id='\" + (this.id) + \"' \" + (this.renderCoordinates()) + \">\" + (this.renderChildren()) + \"</radialGradient>\");\n    };\n\n    RadialGradientNode.prototype.mapCoordinates = function mapCoordinates () {\n        var srcElement = this.srcElement;\n        var center = srcElement.center();\n        var radius = srcElement.radius();\n        var attrs = [\n            [ \"cx\", center.x ],\n            [ \"cy\", center.y ],\n            [ \"r\", radius ],\n            this.mapSpace()\n        ];\n        return attrs;\n    };\n\n    return RadialGradientNode;\n}(GradientNode));\n\nvar PatternNode = (function (Node) {\n    function PatternNode(pattern) {\n        Node.call(this, pattern);\n\n        this.id = pattern.id;\n        this.load(pattern.children);\n    }\n\n    if ( Node ) PatternNode.__proto__ = Node;\n    PatternNode.prototype = Object.create( Node && Node.prototype );\n    PatternNode.prototype.constructor = PatternNode;\n\n    PatternNode.prototype.template = function template () {\n        var width = this.srcElement.size().getWidth();\n        var height = this.srcElement.size().getHeight();\n\n        return \"<pattern id='\" + (this.srcElement.id) + \"' width='\" + width + \"' height='\" + height + \"' patternUnits='userSpaceOnUse'>\" +\n                    \"\" + (this.renderChildren()) +\n                \"</pattern>\";\n    };\n\n    return PatternNode;\n}(Node$1));\n\nvar ClipNode = (function (Node) {\n    function ClipNode(srcElement) {\n        Node.call(this);\n\n        this.srcElement = srcElement;\n        this.id = srcElement.id;\n\n        this.load([ srcElement ]);\n    }\n\n    if ( Node ) ClipNode.__proto__ = Node;\n    ClipNode.prototype = Object.create( Node && Node.prototype );\n    ClipNode.prototype.constructor = ClipNode;\n\n    ClipNode.prototype.renderClipRule = function renderClipRule () {\n        return renderAttr(\"clip-rule\", \"evenodd\");\n    };\n    ClipNode.prototype.template = function template () {\n        return (\"<clipPath \" + (this.renderClipRule()) + \" id='\" + (this.id) + \"'>\" + (this.renderChildren()) + \"</clipPath>\");\n    };\n\n    return ClipNode;\n}(Node$1));\n\nvar DefinitionNode = (function (Node) {\n    function DefinitionNode() {\n        Node.call(this);\n        this.definitionMap = {};\n    }\n\n    if ( Node ) DefinitionNode.__proto__ = Node;\n    DefinitionNode.prototype = Object.create( Node && Node.prototype );\n    DefinitionNode.prototype.constructor = DefinitionNode;\n\n    DefinitionNode.prototype.attachTo = function attachTo (domElement) {\n        this.element = domElement;\n    };\n\n    DefinitionNode.prototype.template = function template () {\n        return (\"<defs>\" + (this.renderChildren()) + \"</defs>\");\n    };\n\n    DefinitionNode.prototype.definitionChange = function definitionChange (e) {\n        var definitions = e.definitions;\n        var action = e.action;\n\n        if (action === \"add\") {\n            this.addDefinitions(definitions);\n        } else if (action === \"remove\") {\n            this.removeDefinitions(definitions);\n        }\n    };\n\n    DefinitionNode.prototype.createDefinition = function createDefinition (type, item) {\n        var nodeType;\n        if (type === \"clip\") {\n            nodeType = ClipNode;\n        } else if (type === \"fill\") {\n            if (item instanceof LinearGradient) {\n                nodeType = LinearGradientNode;\n            } else if (item instanceof RadialGradient) {\n                nodeType = RadialGradientNode;\n            } else if (item.nodeType === PATTERN) {\n                nodeType = PatternNode;\n            }\n        }\n        return new nodeType(item);\n    };\n\n    DefinitionNode.prototype.addDefinitions = function addDefinitions (definitions) {\n        var this$1$1 = this;\n\n        for (var field in definitions) {\n            this$1$1.addDefinition(field, definitions[field]);\n        }\n    };\n\n    DefinitionNode.prototype.addDefinition = function addDefinition (type, srcElement) {\n        var ref = this;\n        var element = ref.element;\n        var definitionMap = ref.definitionMap;\n        var id = srcElement.id;\n        var mapItem = definitionMap[id];\n        if (!mapItem) {\n            var node = this.createDefinition(type, srcElement);\n            definitionMap[id] = {\n                element: node,\n                count: 1\n            };\n            this.append(node);\n            if (element) {\n                node.attachTo(this.element);\n            }\n        } else {\n            mapItem.count++;\n        }\n    };\n\n    DefinitionNode.prototype.removeDefinitions = function removeDefinitions (definitions) {\n        var this$1$1 = this;\n\n        for (var field in definitions) {\n            this$1$1.removeDefinition(definitions[field]);\n        }\n    };\n\n    DefinitionNode.prototype.removeDefinition = function removeDefinition (srcElement) {\n        var definitionMap = this.definitionMap;\n        var id = srcElement.id;\n        var mapItem = definitionMap[id];\n\n        if (mapItem) {\n            mapItem.count--;\n            if (mapItem.count === 0) {\n                this.remove(this.childNodes.indexOf(mapItem.element), 1);\n                delete definitionMap[id];\n            }\n        }\n    };\n\n    return DefinitionNode;\n}(Node$1));\n\nvar RootNode$1 = (function (Node) {\n    function RootNode(options) {\n        Node.call(this);\n        this.options = options;\n        this.defs = new DefinitionNode();\n    }\n\n    if ( Node ) RootNode.__proto__ = Node;\n    RootNode.prototype = Object.create( Node && Node.prototype );\n    RootNode.prototype.constructor = RootNode;\n\n    RootNode.prototype.attachTo = function attachTo (domElement) {\n        this.element = domElement;\n        this.defs.attachTo(domElement.firstElementChild);\n    };\n\n    RootNode.prototype.clear = function clear () {\n        BaseNode.prototype.clear.call(this);\n    };\n\n    RootNode.prototype.template = function template () {\n        return this.defs.render() + this.renderChildren();\n    };\n\n    RootNode.prototype.definitionChange = function definitionChange (e) {\n        this.defs.definitionChange(e);\n    };\n\n    return RootNode;\n}(Node$1));\n\nvar ATTRIBUTE_MAP = {\n    \"fill.opacity\": \"fill-opacity\",\n    \"stroke.color\": \"stroke\",\n    \"stroke.width\": \"stroke-width\",\n    \"stroke.opacity\": \"stroke-opacity\"\n};\n\nvar PathNode$1 = (function (Node) {\n    function PathNode () {\n        Node.apply(this, arguments);\n    }\n\n    if ( Node ) PathNode.__proto__ = Node;\n    PathNode.prototype = Object.create( Node && Node.prototype );\n    PathNode.prototype.constructor = PathNode;\n\n    PathNode.prototype.geometryChange = function geometryChange () {\n        this.attr(\"d\", this.renderData());\n        this.invalidate();\n    };\n\n    PathNode.prototype.optionsChange = function optionsChange (e) {\n        switch (e.field) {\n        case \"fill\":\n            if (e.value) {\n                this.allAttr(this.mapFill(e.value));\n            } else {\n                this.removeAttr(\"fill\");\n            }\n            break;\n\n        case \"fill.color\":\n            this.allAttr(this.mapFill({ color: e.value }));\n            break;\n\n        case \"stroke\":\n            if (e.value) {\n                this.allAttr(this.mapStroke(e.value));\n            } else {\n                this.removeAttr(\"stroke\");\n            }\n            break;\n\n        case \"transform\":\n            this.transformChange(e.value);\n            break;\n\n        default:\n            var name = ATTRIBUTE_MAP[e.field];\n            if (name) {\n                this.attr(name, e.value);\n            }\n            break;\n        }\n\n        this.accessibilityOptionsChange(e);\n\n        Node.prototype.optionsChange.call(this, e);\n    };\n\n    PathNode.prototype.content = function content () {\n        if (this.element) {\n            this.element.textContent = this.srcElement.content();\n        }\n    };\n\n    PathNode.prototype.renderData = function renderData () {\n        return this.srcElement.toString(POINT_DIGITS) || undefined;\n    };\n\n    PathNode.prototype.mapStroke = function mapStroke (stroke) {\n        var attrs = [];\n\n        if (stroke && !isTransparent(stroke.color)) {\n            attrs.push([ \"stroke\", stroke.color ]);\n            attrs.push([ \"stroke-width\", stroke.width ]);\n            attrs.push([ \"stroke-linecap\", this.renderLinecap(stroke) ]);\n            attrs.push([ \"stroke-linejoin\", stroke.lineJoin ]);\n\n            if (defined(stroke.opacity)) {\n                attrs.push([ \"stroke-opacity\", stroke.opacity ]);\n            }\n\n            if (defined(stroke.dashType)) {\n                attrs.push([ \"stroke-dasharray\", this.renderDashType(stroke) ]);\n            }\n        } else {\n            attrs.push([ \"stroke\", NONE ]);\n        }\n\n        return attrs;\n    };\n\n    PathNode.prototype.renderStroke = function renderStroke () {\n        return renderAllAttr(\n            this.mapStroke(this.srcElement.options.stroke)\n        );\n    };\n\n    PathNode.prototype.renderDashType = function renderDashType (stroke) {\n        var dashType = stroke.dashType;\n        var width = stroke.width; if ( width === void 0 ) width = 1;\n\n        if (dashType && dashType !== SOLID) {\n            var dashArray = DASH_ARRAYS[dashType.toLowerCase()];\n            var result = [];\n\n            for (var i = 0; i < dashArray.length; i++) {\n                result.push(dashArray[i] * width);\n            }\n\n            return result.join(\" \");\n        }\n    };\n\n    PathNode.prototype.renderLinecap = function renderLinecap (stroke) {\n        var dashType = stroke.dashType;\n        var lineCap = stroke.lineCap;\n\n        return (dashType && dashType !== SOLID) ? BUTT : lineCap;\n    };\n\n    PathNode.prototype.mapFill = function mapFill (fill) {\n        var attrs = [];\n        if (!(fill && (fill.nodeType === \"Gradient\" || fill.nodeType === PATTERN))) {\n            if (fill && !isTransparent(fill.color)) {\n                attrs.push([ \"fill\", fill.color ]);\n\n                if (defined(fill.opacity)) {\n                    attrs.push([ \"fill-opacity\", fill.opacity ]);\n                }\n            } else {\n                attrs.push([ \"fill\", NONE ]);\n            }\n        }\n\n        return attrs;\n    };\n\n    PathNode.prototype.renderFill = function renderFill () {\n        return renderAllAttr(\n            this.mapFill(this.srcElement.options.fill)\n        );\n    };\n\n    PathNode.prototype.template = function template () {\n        return \"<path \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) + \" \" + (renderAttr('d', this.renderData())) +\n                \"\" + (this.renderStroke()) + (this.renderFill()) + (this.renderDefinitions()) + (this.renderTransform()) +\n                (this.renderClassName()) + \" \" + (this.renderRole()) +\n                (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                (this.renderAriaChecked()) + \" ></path>\";\n    };\n\n    return PathNode;\n}(Node$1));\n\nvar ArcNode$1 = (function (PathNode) {\n    function ArcNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) ArcNode.__proto__ = PathNode;\n    ArcNode.prototype = Object.create( PathNode && PathNode.prototype );\n    ArcNode.prototype.constructor = ArcNode;\n\n    ArcNode.prototype.renderData = function renderData () {\n        return this.srcElement.toPath().toString(POINT_DIGITS);\n    };\n\n    return ArcNode;\n}(PathNode$1));\n\nvar CircleNode$1 = (function (PathNode) {\n    function CircleNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) CircleNode.__proto__ = PathNode;\n    CircleNode.prototype = Object.create( PathNode && PathNode.prototype );\n    CircleNode.prototype.constructor = CircleNode;\n\n    CircleNode.prototype.geometryChange = function geometryChange () {\n        var center = this.center();\n        this.attr(\"cx\", center.x);\n        this.attr(\"cy\", center.y);\n        this.attr(\"r\", this.radius());\n        this.invalidate();\n    };\n\n    CircleNode.prototype.center = function center () {\n        return this.srcElement.geometry().center;\n    };\n\n    CircleNode.prototype.radius = function radius () {\n        return this.srcElement.geometry().radius;\n    };\n\n    CircleNode.prototype.template = function template () {\n        return \"<circle \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) +\n                    \"cx='\" + (this.center().x) + \"' cy='\" + (this.center().y) + \"' r='\" + (this.radius()) + \"'\" +\n                    (this.renderStroke()) + \" \" + (this.renderFill()) + \" \" + (this.renderDefinitions()) +\n                    (this.renderClassName()) + \" \" + (this.renderRole()) +\n                    (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                    (this.renderAriaChecked()) + \" \" + (this.renderTransform()) + \" ></circle>\";\n    };\n\n    return CircleNode;\n}(PathNode$1));\n\nvar GroupNode$1 = (function (Node) {\n    function GroupNode () {\n        Node.apply(this, arguments);\n    }\n\n    if ( Node ) GroupNode.__proto__ = Node;\n    GroupNode.prototype = Object.create( Node && Node.prototype );\n    GroupNode.prototype.constructor = GroupNode;\n\n    GroupNode.prototype.template = function template () {\n        return (\"<g\" + (this.renderId() + \n            this.renderTransform() + \n            this.renderClassName() + \n            this.renderStyle() + \n            this.renderOpacity() + \n            this.renderRole() + \n            this.renderAriaLabel() + \n            this.renderAriaRoleDescription() + \n            this.renderAriaChecked() +\n            this.renderDefinitions()) + \">\" + (this.renderChildren()) + \"</g>\");\n    };\n\n    GroupNode.prototype.optionsChange = function optionsChange (e) {\n        var field = e.field;\n        var value = e.value;\n\n        if (field === \"transform\") {\n            this.transformChange(value);\n        }\n\n        this.accessibilityOptionsChange(e);\n\n        Node.prototype.optionsChange.call(this, e);\n    };\n\n    return GroupNode;\n}(Node$1));\n\nvar ImageNode$1 = (function (PathNode) {\n    function ImageNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) ImageNode.__proto__ = PathNode;\n    ImageNode.prototype = Object.create( PathNode && PathNode.prototype );\n    ImageNode.prototype.constructor = ImageNode;\n\n    ImageNode.prototype.geometryChange = function geometryChange () {\n        this.allAttr(this.mapPosition());\n        this.invalidate();\n    };\n\n    ImageNode.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"src\") {\n            this.allAttr(this.mapSource());\n        }\n\n        PathNode.prototype.optionsChange.call(this, e);\n    };\n\n    ImageNode.prototype.mapPosition = function mapPosition () {\n        var rect = this.srcElement.rect();\n        var tl = rect.topLeft();\n\n        return [\n            [ \"x\", tl.x ],\n            [ \"y\", tl.y ],\n            [ \"width\", rect.width() + \"px\" ],\n            [ \"height\", rect.height() + \"px\" ]\n        ];\n    };\n\n    ImageNode.prototype.renderPosition = function renderPosition () {\n        return renderAllAttr(this.mapPosition());\n    };\n\n    ImageNode.prototype.mapSource = function mapSource (encode) {\n        var src = this.srcElement.src();\n\n        if (encode) {\n            src = htmlEncode(src);\n        }\n\n        return [ [ \"xlink:href\", src ] ];\n    };\n\n    ImageNode.prototype.renderSource = function renderSource () {\n        return renderAllAttr(this.mapSource(true));\n    };\n\n    ImageNode.prototype.template = function template () {\n        return \"<image preserveAspectRatio='none' \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderTransform()) + \" \" + (this.renderOpacity()) +\n               (this.renderPosition()) + \" \" + (this.renderSource()) + \" \" + (this.renderDefinitions()) +\n               (this.renderClassName()) + \" \" + (this.renderRole()) +\n                (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                (this.renderAriaChecked()) + \" >\" +\n               \"</image>\";\n    };\n\n    return ImageNode;\n}(PathNode$1));\n\nvar MultiPathNode$1 = (function (PathNode) {\n    function MultiPathNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) MultiPathNode.__proto__ = PathNode;\n    MultiPathNode.prototype = Object.create( PathNode && PathNode.prototype );\n    MultiPathNode.prototype.constructor = MultiPathNode;\n\n    MultiPathNode.prototype.renderData = function renderData () {\n        return this.srcElement.toString(POINT_DIGITS) || 'undefined';\n    };\n\n    return MultiPathNode;\n}(PathNode$1));\n\nvar RectNode$1 = (function (PathNode) {\n    function RectNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) RectNode.__proto__ = PathNode;\n    RectNode.prototype = Object.create( PathNode && PathNode.prototype );\n    RectNode.prototype.constructor = RectNode;\n\n    RectNode.prototype.geometryChange = function geometryChange () {\n        var geometry = this.srcElement.geometry();\n        this.attr(\"x\", geometry.origin.x);\n        this.attr(\"y\", geometry.origin.y);\n        this.attr(\"width\", geometry.size.width);\n        this.attr(\"height\", geometry.size.height);\n        this.attr(\"rx\", geometry.cornerRadius[0]);\n        this.attr(\"ry\", geometry.cornerRadius[1]);\n        this.invalidate();\n    };\n\n    RectNode.prototype.size = function size () {\n        return this.srcElement.geometry().size;\n    };\n\n    RectNode.prototype.origin = function origin () {\n        return this.srcElement.geometry().origin;\n    };\n\n    RectNode.prototype.rx = function rx () {\n        return this.srcElement.geometry().cornerRadius[0];\n    };\n\n    RectNode.prototype.ry = function ry () {\n        return this.srcElement.geometry().cornerRadius[1];\n    };\n\n    RectNode.prototype.template = function template () {\n        return \"<rect \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) + \" x='\" + (this.origin().x) + \"' y='\" + (this.origin().y) + \"' \" +\n                    \"rx='\" + (this.rx()) + \"' ry='\" + (this.ry()) + \"' \" +\n                    \"width='\" + (this.size().width) + \"' height='\" + (this.size().height) + \"' \" + (this.renderStroke()) + \" \" +\n                    (this.renderFill()) + \" \" + (this.renderDefinitions()) + \" \" + (this.renderTransform()) +\n                    (this.renderClassName()) + \" \" + (this.renderRole()) +\n                    (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                    (this.renderAriaChecked()) + \" />\";\n    };\n\n    return RectNode;\n}(PathNode$1));\n\nvar ENTITY_REGEX = /&(?:[a-zA-Z]+|#\\d+);/g;\n\nfunction decodeEntities(text) {\n    if (!text || typeof text !== \"string\" || !ENTITY_REGEX.test(text)) {\n        return text;\n    }\n\n    var element = decodeEntities._element;\n    ENTITY_REGEX.lastIndex = 0;\n\n    return text.replace(ENTITY_REGEX, function (match) {\n        element.innerHTML = match;\n\n        return element.textContent || element.innerText;\n    });\n}\n\nif (typeof document !== \"undefined\") {\n    decodeEntities._element = document.createElement(\"span\");\n}\n\nvar TextNode$1 = (function (PathNode) {\n    function TextNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) TextNode.__proto__ = PathNode;\n    TextNode.prototype = Object.create( PathNode && PathNode.prototype );\n    TextNode.prototype.constructor = TextNode;\n\n    TextNode.prototype.geometryChange = function geometryChange () {\n        var pos = this.pos();\n        this.attr(\"x\", pos.x);\n        this.attr(\"y\", pos.y);\n        this.invalidate();\n    };\n\n    TextNode.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"font\") {\n            this.attr(\"style\", renderStyle(this.mapStyle()));\n            this.geometryChange();\n        } else if (e.field === \"content\") {\n            PathNode.prototype.content.call(this, this.srcElement.content());\n        }\n\n        PathNode.prototype.optionsChange.call(this, e);\n    };\n\n    TextNode.prototype.mapStyle = function mapStyle (encode) {\n        var style = PathNode.prototype.mapStyle.call(this, encode);\n        var font = this.srcElement.options.font;\n\n        if (encode) {\n            font = htmlEncode(font);\n        }\n\n        style.push([ \"font\", font ], [ \"white-space\", \"pre\" ]);\n\n        return style;\n    };\n\n    TextNode.prototype.pos = function pos () {\n        var pos = this.srcElement.position();\n        var size = this.srcElement.measure();\n        return pos.clone().setY(pos.y + size.baseline);\n    };\n\n    TextNode.prototype.renderContent = function renderContent () {\n        var content = this.srcElement.content();\n        content = decodeEntities(content);\n        content = htmlEncode(content);\n\n        return normalizeText(content);\n    };\n\n    TextNode.prototype.renderTextAnchor = function renderTextAnchor () {\n        var anchor;\n\n        if ((this.options || {}).rtl && !(support$1.browser.msie || support$1.browser.edge)) {\n            anchor = 'end';\n        }\n\n        return renderAttr(\"text-anchor\", anchor);\n    };\n\n    TextNode.prototype.renderPaintOrder = function renderPaintOrder () {\n        var paintOrder = this.srcElement.options.paintOrder;\n        return paintOrder ? renderAttr(\"paint-order\", paintOrder) : \"\";\n    };\n\n    TextNode.prototype.template = function template () {\n        return \"<text \" + (this.renderId()) + \" \" + (this.renderTextAnchor()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) +\n                    \"x='\" + (this.pos().x) + \"' y='\" + (this.pos().y) + \"' \" + (this.renderStroke()) + \" \" + (this.renderTransform()) + \" \" + (this.renderDefinitions()) +\n                    \"\" + (this.renderPaintOrder()) +\n                    \"\" + (this.renderFill()) +\n                    (this.renderClassName()) + \" \" + (this.renderRole()) +\n                    (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                    (this.renderAriaChecked()) + \">\" + (this.renderContent()) + \"</text>\";\n    };\n\n    return TextNode;\n}(PathNode$1));\n\nNODE_MAP$1.Arc = ArcNode$1;\nNODE_MAP$1.Circle = CircleNode$1;\nNODE_MAP$1.Group = GroupNode$1;\nNODE_MAP$1.Image = ImageNode$1;\nNODE_MAP$1.MultiPath = MultiPathNode$1;\nNODE_MAP$1.Path = PathNode$1;\nNODE_MAP$1.Rect = RectNode$1;\nNODE_MAP$1.Text = TextNode$1;\n\nvar RTL = 'rtl';\n\nfunction alignToScreen(element) {\n    var ctm;\n\n    try {\n        ctm = element.getScreenCTM ? element.getScreenCTM() : null;\n    } catch (e) { } // eslint-disable-line no-empty\n\n    if (ctm) {\n        var left = - ctm.e % 1;\n        var top = - ctm.f % 1;\n        var style = element.style;\n\n        if (left !== 0 || top !== 0) {\n            style.left = left + \"px\";\n            style.top = top + \"px\";\n        }\n    }\n}\n\nvar Surface$2 = (function (BaseSurface) {\n    function Surface(element, options) {\n        BaseSurface.call(this, element, options);\n\n        this._root = new RootNode$1(Object.assign({\n            rtl: elementStyles(element, 'direction').direction === RTL\n        }, this.options));\n\n        renderSVG$1(this.element, this._template(''));\n\n        this._rootElement = this.element.firstElementChild;\n        this._rootElement.style.width = '100%';\n        this._rootElement.style.height = '100%';\n        this._rootElement.style.overflow = 'hidden';\n\n        alignToScreen(this._rootElement);\n\n        this._root.attachTo(this._rootElement);\n\n        bindEvents(this.element, {\n            click: this._click,\n            mouseover: this._mouseenter,\n            mouseout: this._mouseleave,\n            mousemove: this._mousemove\n        });\n\n        this.resize();\n    }\n\n    if ( BaseSurface ) Surface.__proto__ = BaseSurface;\n    Surface.prototype = Object.create( BaseSurface && BaseSurface.prototype );\n    Surface.prototype.constructor = Surface;\n\n    var prototypeAccessors = { type: { configurable: true } };\n\n    prototypeAccessors.type.get = function () {\n        return \"svg\";\n    };\n\n    Surface.prototype.destroy = function destroy () {\n        if (this._root) {\n            this._root.destroy();\n            this._root = null;\n            this._rootElement = null;\n            unbindEvents(this.element, {\n                click: this._click,\n                mouseover: this._mouseenter,\n                mouseout: this._mouseleave,\n                mousemove: this._mousemove\n            });\n        }\n\n        BaseSurface.prototype.destroy.call(this);\n    };\n\n    Surface.prototype.translate = function translate (offset) {\n        var viewBox = (Math.round(offset.x)) + \" \" + (Math.round(offset.y)) + \" \" + (this._size.width) + \" \" + (this._size.height);\n\n        this._offset = offset;\n        this._rootElement.setAttribute(\"viewBox\", viewBox);\n    };\n\n    Surface.prototype.draw = function draw (element) {\n        BaseSurface.prototype.draw.call(this, element);\n        this._root.load([ element ]);\n    };\n\n    Surface.prototype.clear = function clear () {\n        BaseSurface.prototype.clear.call(this);\n        this._root.clear();\n    };\n\n    Surface.prototype.svg = function svg () {\n        return \"<?xml version='1.0' ?>\" + this._template();\n    };\n\n    Surface.prototype.exportVisual = function exportVisual () {\n        var ref = this;\n        var visual = ref._visual;\n        var offset = ref._offset;\n\n        if (offset) {\n            var wrap = new Group();\n            wrap.children.push(visual);\n\n            wrap.transform(\n                transform().translate(-offset.x, -offset.y)\n            );\n\n            visual = wrap;\n        }\n\n        return visual;\n    };\n\n    Surface.prototype._resize = function _resize () {\n        if (this._offset) {\n            this.translate(this._offset);\n        }\n    };\n\n    Surface.prototype._template = function _template (svgStyles) {\n        var styles = typeof svgStyles === 'string' ? svgStyles :\n            \"style='width: 100%; height: 100%; overflow: hidden;' \";\n        return (\"<svg \" + styles + \"xmlns='\" + SVG_NS + \"' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>\" + (this._root.render()) + \"</svg>\");\n    };\n\n    Object.defineProperties( Surface.prototype, prototypeAccessors );\n\n    return Surface;\n}(Surface$3));\n\nvar NODE_MAP = {};\n\nvar Node = (function (BaseNode) {\n    function Node(srcElement) {\n        BaseNode.call(this, srcElement);\n        if (srcElement) {\n            this.initClip();\n        }\n    }\n\n    if ( BaseNode ) Node.__proto__ = BaseNode;\n    Node.prototype = Object.create( BaseNode && BaseNode.prototype );\n    Node.prototype.constructor = Node;\n\n    Node.prototype.initClip = function initClip () {\n        var clip = this.srcElement.clip();\n        if (clip) {\n            this.clip = clip;\n            clip.addObserver(this);\n        }\n    };\n\n    Node.prototype.clear = function clear () {\n        if (this.srcElement) {\n            this.srcElement.removeObserver(this);\n        }\n\n        this.clearClip();\n\n        BaseNode.prototype.clear.call(this);\n    };\n\n    Node.prototype.clearClip = function clearClip () {\n        if (this.clip) {\n            this.clip.removeObserver(this);\n            delete this.clip;\n        }\n    };\n\n    Node.prototype.setClip = function setClip (ctx) {\n        if (this.clip) {\n            ctx.beginPath();\n\n            var clipNode = new NODE_MAP[this.clip.nodeType](this.clip);\n            clipNode.renderPoints(ctx, this.clip);\n\n            ctx.clip(\"evenodd\");\n        }\n    };\n\n    Node.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"clip\") {\n            this.clearClip();\n            this.initClip();\n        }\n\n        BaseNode.prototype.optionsChange.call(this, e);\n    };\n\n    Node.prototype.setTransform = function setTransform (ctx) {\n        if (this.srcElement) {\n            var transform = this.srcElement.transform();\n            if (transform) {\n                ctx.transform.apply(ctx, transform.matrix().toArray(6));\n            }\n        }\n    };\n\n    Node.prototype.loadElements = function loadElements (elements, pos, cors) {\n        var this$1$1 = this;\n\n        for (var i = 0; i < elements.length; i++) {\n            var srcElement = elements[i];\n            var children = srcElement.children;\n\n            var childNode = new NODE_MAP[srcElement.nodeType](srcElement, cors);\n\n            if (children && children.length > 0) {\n                childNode.load(children, pos, cors);\n            }\n\n            if (defined(pos)) {\n                this$1$1.insertAt(childNode, pos);\n            } else {\n                this$1$1.append(childNode);\n            }\n        }\n    };\n\n    Node.prototype.load = function load (elements, pos, cors) {\n        this.loadElements(elements, pos, cors);\n\n        this.invalidate();\n    };\n\n    Node.prototype.setOpacity = function setOpacity (ctx) {\n        if (this.srcElement) {\n            var opacity = this.srcElement.opacity();\n            if (defined(opacity)) {\n                this.globalAlpha(ctx, opacity);\n            }\n        }\n    };\n\n    Node.prototype.globalAlpha = function globalAlpha (ctx, value) {\n        var opactity = value;\n        if (opactity && ctx.globalAlpha) {\n            opactity *= ctx.globalAlpha;\n        }\n        ctx.globalAlpha = opactity;\n    };\n\n    Node.prototype.visible = function visible () {\n        var src = this.srcElement;\n        return !src || (src && src.options.visible !== false);\n    };\n\n    return Node;\n}(BaseNode));\n\nvar GroupNode = (function (superclass) {\n    function GroupNode () {\n        superclass.apply(this, arguments);\n    }\n\n    if ( superclass ) GroupNode.__proto__ = superclass;\n    GroupNode.prototype = Object.create( superclass && superclass.prototype );\n    GroupNode.prototype.constructor = GroupNode;\n\n    GroupNode.prototype.renderTo = function renderTo (ctx) {\n        if (!this.visible()) {\n            return;\n        }\n\n        ctx.save();\n\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.setOpacity(ctx);\n\n        var childNodes = this.childNodes;\n        for (var i = 0; i < childNodes.length; i++) {\n            var child = childNodes[i];\n            if (child.visible()) {\n                child.renderTo(ctx);\n            }\n        }\n\n        ctx.restore();\n    };\n\n    return GroupNode;\n}(traversable(Node, \"childNodes\")));\n\nvar FRAME_DELAY = 1000 / 60;\n\nvar RootNode = (function (superclass) {\n    function RootNode(canvas, size) {\n        superclass.call(this);\n\n        this.canvas = canvas;\n        this.size = size;\n        this.ctx = canvas.getContext(\"2d\");\n\n        var invalidateHandler = this._invalidate.bind(this);\n        this.invalidate = throttle(function () {\n            animationFrame(invalidateHandler);\n        }, FRAME_DELAY);\n    }\n\n    if ( superclass ) RootNode.__proto__ = superclass;\n    RootNode.prototype = Object.create( superclass && superclass.prototype );\n    RootNode.prototype.constructor = RootNode;\n\n    RootNode.prototype.destroy = function destroy () {\n        superclass.prototype.destroy.call(this);\n        this.canvas = null;\n        this.ctx = null;\n    };\n\n    RootNode.prototype.load = function load (elements, pos, cors) {\n        this.loadElements(elements, pos, cors);\n        this._invalidate();\n    };\n\n    RootNode.prototype._rescale = function _rescale (scale) {\n        var ref = this;\n        var canvas = ref.canvas;\n        var size = ref.size;\n        canvas.width = size.width * scale;\n        canvas.height = size.height * scale;\n        this.ctx.scale(scale, scale);\n    };\n\n    RootNode.prototype._devicePixelRatio = function _devicePixelRatio () {\n        if (typeof window.devicePixelRatio === 'number') {\n            return window.devicePixelRatio;\n        }\n\n        return 1;\n    };\n\n    RootNode.prototype._invalidate = function _invalidate (options) {\n        if (!this.ctx) {\n            return;\n        }\n\n        var fixedScale = options && options.fixedScale;\n        var scale = fixedScale ? 1 : this._devicePixelRatio();\n        this._rescale(scale);\n\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.renderTo(this.ctx);\n    };\n\n    return RootNode;\n}(traversable(GroupNode, \"childNodes\")));\n\nvar QuadRoot = (function (Class) {\n    function QuadRoot() {\n        Class.call(this);\n\n        this.shapes = [];\n    }\n\n    if ( Class ) QuadRoot.__proto__ = Class;\n    QuadRoot.prototype = Object.create( Class && Class.prototype );\n    QuadRoot.prototype.constructor = QuadRoot;\n\n    QuadRoot.prototype._add = function _add (shape, bbox) {\n        this.shapes.push({\n            bbox: bbox,\n            shape: shape\n        });\n        shape._quadNode = this;\n    };\n\n    QuadRoot.prototype.pointShapes = function pointShapes (point) {\n        var shapes = this.shapes;\n        var length = shapes.length;\n        var result = [];\n        for (var idx = 0; idx < length; idx++) {\n            if (shapes[idx].bbox.containsPoint(point)) {\n                result.push(shapes[idx].shape);\n            }\n        }\n        return result;\n    };\n\n    QuadRoot.prototype.insert = function insert (shape, bbox) {\n        this._add(shape, bbox);\n    };\n\n    QuadRoot.prototype.remove = function remove (shape) {\n        var shapes = this.shapes;\n        var length = shapes.length;\n\n        for (var idx = 0; idx < length; idx++) {\n            if (shapes[idx].shape === shape) {\n                shapes.splice(idx, 1);\n                break;\n            }\n        }\n    };\n\n    return QuadRoot;\n}(Class));\n\nvar QuadNode = (function (QuadRoot) {\n    function QuadNode(rect) {\n        QuadRoot.call(this);\n        this.children = [];\n        this.rect = rect;\n    }\n\n    if ( QuadRoot ) QuadNode.__proto__ = QuadRoot;\n    QuadNode.prototype = Object.create( QuadRoot && QuadRoot.prototype );\n    QuadNode.prototype.constructor = QuadNode;\n\n    QuadNode.prototype.inBounds = function inBounds (rect) {\n        var nodeRect = this.rect;\n        var nodeBottomRight = nodeRect.bottomRight();\n        var bottomRight = rect.bottomRight();\n        var inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x &&\n            bottomRight.y <= nodeBottomRight.y;\n        return inBounds;\n    };\n\n    QuadNode.prototype.pointShapes = function pointShapes (point) {\n        var children = this.children;\n        var length = children.length;\n        var result = QuadRoot.prototype.pointShapes.call(this, point);\n        for (var idx = 0; idx < length; idx++) {\n            append(result, children[idx].pointShapes(point));\n        }\n        return result;\n    };\n\n    QuadNode.prototype.insert = function insert (shape, bbox) {\n        var children = this.children;\n        var inserted = false;\n\n        if (this.inBounds(bbox)) {\n            if (this.shapes.length < 4) {\n                this._add(shape, bbox);\n            } else {\n                if (!children.length) {\n                    this._initChildren();\n                }\n\n                for (var idx = 0; idx < children.length; idx++) {\n                    if (children[idx].insert(shape, bbox)) {\n                        inserted = true;\n                        break;\n                    }\n                }\n\n                if (!inserted) {\n                    this._add(shape, bbox);\n                }\n            }\n            inserted = true;\n        }\n\n        return inserted;\n    };\n\n    QuadNode.prototype._initChildren = function _initChildren () {\n        var ref = this;\n        var rect = ref.rect;\n        var children = ref.children;\n        var center = rect.center();\n        var halfWidth = rect.width() / 2;\n        var halfHeight = rect.height() / 2;\n\n        children.push(\n            new QuadNode(new Rect$1([ rect.origin.x, rect.origin.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect$1([ center.x, rect.origin.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect$1([ rect.origin.x, center.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect$1([ center.x, center.y ], [ halfWidth, halfHeight ]))\n        );\n    };\n\n    return QuadNode;\n}(QuadRoot));\n\nvar ROOT_SIZE = 3000;\nvar LEVEL_STEP = 10000;\nvar MAX_LEVEL = 75;\n\nvar ShapesQuadTree = (function (Class) {\n    function ShapesQuadTree() {\n        Class.call(this);\n\n        this.initRoots();\n    }\n\n    if ( Class ) ShapesQuadTree.__proto__ = Class;\n    ShapesQuadTree.prototype = Object.create( Class && Class.prototype );\n    ShapesQuadTree.prototype.constructor = ShapesQuadTree;\n\n    ShapesQuadTree.prototype.initRoots = function initRoots () {\n        this.rootMap = {};\n        this.root = new QuadRoot();\n        this.rootElements = [];\n    };\n\n    ShapesQuadTree.prototype.clear = function clear () {\n        var this$1$1 = this;\n\n        var rootElements = this.rootElements;\n        for (var idx = 0; idx < rootElements.length; idx++) {\n            this$1$1.remove(rootElements[idx]);\n        }\n        this.initRoots();\n    };\n\n    ShapesQuadTree.prototype.pointShape = function pointShape (point) {\n        var sectorRoot = ( this.rootMap[ Math.floor( point.x / ROOT_SIZE ) ] || {} )[ Math.floor( point.y / ROOT_SIZE ) ];\n        var result = this.root.pointShapes(point);\n\n        if (sectorRoot) {\n            result = result.concat(sectorRoot.pointShapes(point));\n        }\n\n        this.assignZindex(result);\n\n        result.sort(zIndexComparer);\n        for (var idx = 0; idx < result.length; idx++) {\n            if (result[idx].containsPoint(point)) {\n                return result[idx];\n            }\n        }\n    };\n\n    ShapesQuadTree.prototype.assignZindex = function assignZindex (elements) {\n        var this$1$1 = this;\n\n        for (var idx = 0; idx < elements.length; idx++) {\n            var element = elements[idx];\n            var zIndex = 0;\n            var levelWeight = Math.pow(LEVEL_STEP, MAX_LEVEL);\n            var parents = [];\n\n            while (element) {\n                parents.push(element);\n                element = element.parent;\n            }\n\n            while (parents.length) {\n                element = parents.pop();\n                zIndex += ((element.parent ? element.parent.children : this$1$1.rootElements).indexOf(element) + 1) * levelWeight;\n                levelWeight /= LEVEL_STEP;\n            }\n\n            elements[idx]._zIndex = zIndex;\n        }\n    };\n\n    ShapesQuadTree.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"transform\" || e.field === \"stroke.width\") {\n            this.bboxChange(e.element);\n        }\n    };\n\n    ShapesQuadTree.prototype.geometryChange = function geometryChange (e) {\n        this.bboxChange(e.element);\n    };\n\n    ShapesQuadTree.prototype.bboxChange = function bboxChange (element) {\n        var this$1$1 = this;\n\n        if (element.nodeType === \"Group\") {\n            for (var idx = 0; idx < element.children.length; idx++) {\n                this$1$1.bboxChange(element.children[idx]);\n            }\n        } else {\n            if (element._quadNode) {\n                element._quadNode.remove(element);\n            }\n            this._insertShape(element);\n        }\n    };\n\n    ShapesQuadTree.prototype.add = function add (elements) {\n        var elementsArray = Array.isArray(elements) ? elements.slice(0) : [ elements ];\n\n        append(this.rootElements, elementsArray);\n        this._insert(elementsArray);\n    };\n\n    ShapesQuadTree.prototype.childrenChange = function childrenChange (e) {\n        var this$1$1 = this;\n\n        if (e.action === \"remove\") {\n            for (var idx = 0; idx < e.items.length; idx++) {\n                this$1$1.remove(e.items[idx]);\n            }\n        } else {\n            this._insert(Array.prototype.slice.call(e.items, 0));\n        }\n    };\n\n    ShapesQuadTree.prototype._insert = function _insert (elements) {\n        var this$1$1 = this;\n\n        var element;\n\n        while (elements.length > 0) {\n            element = elements.pop();\n            element.addObserver(this$1$1);\n            if (element.nodeType === \"Group\") {\n                append(elements, element.children);\n            } else {\n                this$1$1._insertShape(element);\n            }\n        }\n    };\n\n    ShapesQuadTree.prototype._insertShape = function _insertShape (shape) {\n        var bbox = shape.bbox();\n        if (bbox) {\n            var sectors = this.getSectors(bbox);\n            var x = sectors[0][0];\n            var y = sectors[1][0];\n\n            if (this.inRoot(sectors)) {\n                this.root.insert(shape, bbox);\n            } else {\n                var rootMap = this.rootMap;\n                if (!rootMap[x]) {\n                    rootMap[x] = {};\n                }\n\n                if (!rootMap[x][y]) {\n                    rootMap[x][y] = new QuadNode(\n                        new Rect$1([ x * ROOT_SIZE, y * ROOT_SIZE ], [ ROOT_SIZE, ROOT_SIZE ])\n                    );\n                }\n\n                rootMap[x][y].insert(shape, bbox);\n            }\n        }\n    };\n\n    ShapesQuadTree.prototype.remove = function remove (element) {\n        var this$1$1 = this;\n\n        element.removeObserver(this);\n\n        if (element.nodeType === \"Group\") {\n            var children = element.children;\n            for (var idx = 0; idx < children.length; idx++) {\n                this$1$1.remove(children[idx]);\n            }\n        } else if (element._quadNode) {\n            element._quadNode.remove(element);\n            delete element._quadNode;\n        }\n    };\n\n    ShapesQuadTree.prototype.inRoot = function inRoot (sectors) {\n        return sectors[0].length > 1 || sectors[1].length > 1;\n    };\n\n    ShapesQuadTree.prototype.getSectors = function getSectors (rect) {\n        var bottomRight = rect.bottomRight();\n        var bottomX = Math.floor(bottomRight.x / ROOT_SIZE);\n        var bottomY = Math.floor(bottomRight.y / ROOT_SIZE);\n        var sectors = [ [], [] ];\n        for (var x = Math.floor(rect.origin.x / ROOT_SIZE); x <= bottomX; x++) {\n            sectors[0].push(x);\n        }\n        for (var y = Math.floor(rect.origin.y / ROOT_SIZE); y <= bottomY; y++) {\n            sectors[1].push(y);\n        }\n        return sectors;\n    };\n\n    return ShapesQuadTree;\n}(Class));\n\nfunction zIndexComparer(x1, x2) {\n    if (x1._zIndex < x2._zIndex) {\n        return 1;\n    }\n    if (x1._zIndex > x2._zIndex) {\n        return -1;\n    }\n\n    return 0;\n}\n\nvar SurfaceCursor = function SurfaceCursor(surface) {\n    surface.bind(\"mouseenter\", this._mouseenter.bind(this));\n    surface.bind(\"mouseleave\", this._mouseleave.bind(this));\n\n    this.element = surface.element;\n};\n\nSurfaceCursor.prototype.clear = function clear () {\n    this._resetCursor();\n};\n\nSurfaceCursor.prototype.destroy = function destroy () {\n    this._resetCursor();\n    delete this.element;\n};\n\nSurfaceCursor.prototype._mouseenter = function _mouseenter (e) {\n    var cursor = this._shapeCursor(e);\n\n    if (!cursor) {\n        this._resetCursor();\n    } else {\n        if (!this._current) {\n            this._defaultCursor = this._getCursor();\n        }\n\n        this._setCursor(cursor);\n    }\n};\n\nSurfaceCursor.prototype._mouseleave = function _mouseleave () {\n    this._resetCursor();\n};\n\nSurfaceCursor.prototype._shapeCursor = function _shapeCursor (e) {\n    var shape = e.element;\n\n    while (shape && !defined(shape.options.cursor)) {\n        shape = shape.parent;\n    }\n\n    if (shape) {\n        return shape.options.cursor;\n    }\n};\n\nSurfaceCursor.prototype._getCursor = function _getCursor () {\n    if (this.element) {\n        return this.element.style.cursor;\n    }\n};\n\nSurfaceCursor.prototype._setCursor = function _setCursor (cursor) {\n    if (this.element) {\n        this.element.style.cursor = cursor;\n        this._current = cursor;\n    }\n};\n\nSurfaceCursor.prototype._resetCursor = function _resetCursor () {\n    if (this._current) {\n        this._setCursor(this._defaultCursor || \"\");\n        delete this._current;\n    }\n};\n\nfunction renderPath(ctx, path) {\n    var segments = path.segments;\n\n    if (segments.length === 0) {\n        return;\n    }\n\n    var segment = segments[0];\n    var anchor = segment.anchor();\n    ctx.moveTo(anchor.x, anchor.y);\n\n    for (var i = 1; i < segments.length; i++) {\n        segment = segments[i];\n        anchor = segment.anchor();\n\n        var prevSeg = segments[i - 1];\n        var prevOut = prevSeg.controlOut();\n        var controlIn = segment.controlIn();\n\n        if (prevOut && controlIn) {\n            ctx.bezierCurveTo(prevOut.x, prevOut.y,\n                controlIn.x, controlIn.y,\n                anchor.x, anchor.y);\n        } else {\n            ctx.lineTo(anchor.x, anchor.y);\n        }\n    }\n\n    if (path.options.closed) {\n        ctx.closePath();\n    }\n}\n\nfunction addGradientStops(gradient, stops) {\n    for (var idx = 0; idx < stops.length; idx++) {\n        var stop = stops[idx];\n        var color = parseColor$2(stop.color());\n\n        color.a *= stop.opacity();\n\n        gradient.addColorStop(stop.offset(), color.toCssRgba());\n    }\n}\n\nvar PathNode = (function (Node) {\n    function PathNode () {\n        Node.apply(this, arguments);\n    }\n\n    if ( Node ) PathNode.__proto__ = Node;\n    PathNode.prototype = Object.create( Node && Node.prototype );\n    PathNode.prototype.constructor = PathNode;\n\n    PathNode.prototype.renderTo = function renderTo (ctx) {\n        ctx.save();\n\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.setOpacity(ctx);\n\n        ctx.beginPath();\n\n        this.renderPoints(ctx, this.srcElement);\n\n        this.setLineDash(ctx);\n        this.setLineCap(ctx);\n        this.setLineJoin(ctx);\n\n        this.setFill(ctx);\n        this.setStroke(ctx);\n\n        ctx.restore();\n    };\n\n    PathNode.prototype.setFill = function setFill (ctx) {\n        var fill = this.srcElement.options.fill;\n        var hasFill = false;\n\n        if (fill) {\n            if (fill.nodeType === \"Gradient\") {\n                this.setGradientFill(ctx, fill);\n                hasFill = true;\n            } else if (fill.nodeType === PATTERN) {\n                this.setPatternFill(ctx, fill);\n                hasFill = true;\n            } else if (!isTransparent(fill.color)) {\n                ctx.fillStyle = fill.color;\n\n                ctx.save();\n                this.globalAlpha(ctx, fill.opacity);\n                ctx.fill();\n                ctx.restore();\n\n                hasFill = true;\n            }\n        }\n\n        return hasFill;\n    };\n\n    PathNode.prototype.setGradientFill = function setGradientFill (ctx, fill) {\n        var bbox = this.srcElement.rawBBox();\n        var gradient;\n\n        if (fill instanceof LinearGradient) {\n            var start = fill.start();\n            var end = fill.end();\n            gradient = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n        } else if (fill instanceof RadialGradient) {\n            var center = fill.center();\n            gradient = ctx.createRadialGradient(center.x, center.y, 0, center.x, center.y, fill.radius());\n        }\n\n        addGradientStops(gradient, fill.stops);\n\n        ctx.save();\n\n        if (!fill.userSpace()) {\n            ctx.transform(bbox.width(), 0, 0, bbox.height(), bbox.origin.x, bbox.origin.y);\n        }\n        ctx.fillStyle = gradient;\n        ctx.fill();\n\n        ctx.restore();\n    };\n\n    PathNode.prototype.setPatternFill = function setPatternFill (ctx, pattern) {\n        var size = pattern.size();\n        var patternCanvas = document.createElement(\"canvas\");\n        var patternContext = patternCanvas.getContext(\"2d\");\n\n        patternCanvas.width = size.getWidth();\n        patternCanvas.height = size.getHeight();\n\n        this.childNodes.length = 0;\n        this.loadElements(pattern.children);\n\n        var childNodes = this.childNodes;\n        for (var i = 0; i < childNodes.length; i++) {\n            var child = childNodes[i];\n            child.renderTo(patternContext);\n        }\n\n        ctx.save();\n        ctx.fillStyle = ctx.createPattern(patternCanvas, \"repeat\");\n        ctx.fill();\n        ctx.restore();\n    };\n\n    PathNode.prototype.setStroke = function setStroke (ctx) {\n        var stroke = this.srcElement.options.stroke;\n        if (stroke && !isTransparent(stroke.color) && stroke.width > 0) {\n            ctx.strokeStyle = stroke.color;\n            ctx.lineWidth = valueOrDefault(stroke.width, 1);\n            ctx.lineJoin = valueOrDefault(stroke.lineJoin, ctx.lineJoin);\n\n            ctx.save();\n            this.globalAlpha(ctx, stroke.opacity);\n            ctx.stroke();\n            ctx.restore();\n\n            return true;\n        }\n    };\n\n    PathNode.prototype.dashType = function dashType () {\n        var stroke = this.srcElement.options.stroke;\n        if (stroke && stroke.dashType) {\n            return stroke.dashType.toLowerCase();\n        }\n    };\n\n    PathNode.prototype.setLineDash = function setLineDash (ctx) {\n        var dashType = this.dashType();\n        if (dashType && dashType !== SOLID) {\n            var dashArray = DASH_ARRAYS[dashType];\n            if (ctx.setLineDash) {\n                ctx.setLineDash(dashArray);\n            } else {\n                ctx.mozDash = dashArray;\n                ctx.webkitLineDash = dashArray;\n            }\n        }\n    };\n\n    PathNode.prototype.setLineCap = function setLineCap (ctx) {\n        var dashType = this.dashType();\n        var stroke = this.srcElement.options.stroke;\n        if (dashType && dashType !== SOLID) {\n            ctx.lineCap = BUTT;\n        } else if (stroke && stroke.lineCap) {\n            ctx.lineCap = stroke.lineCap;\n        }\n    };\n\n    PathNode.prototype.setLineJoin = function setLineJoin (ctx) {\n        var stroke = this.srcElement.options.stroke;\n        if (stroke && stroke.lineJoin) {\n            ctx.lineJoin = stroke.lineJoin;\n        }\n    };\n\n    PathNode.prototype.renderPoints = function renderPoints (ctx, path) {\n        renderPath(ctx, path);\n    };\n\n    return PathNode;\n}(Node));\n\nvar ArcNode = (function (PathNode) {\n    function ArcNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) ArcNode.__proto__ = PathNode;\n    ArcNode.prototype = Object.create( PathNode && PathNode.prototype );\n    ArcNode.prototype.constructor = ArcNode;\n\n    ArcNode.prototype.renderPoints = function renderPoints (ctx) {\n        var path = this.srcElement.toPath();\n        renderPath(ctx, path);\n    };\n\n    return ArcNode;\n}(PathNode));\n\nvar CircleNode = (function (PathNode) {\n    function CircleNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) CircleNode.__proto__ = PathNode;\n    CircleNode.prototype = Object.create( PathNode && PathNode.prototype );\n    CircleNode.prototype.constructor = CircleNode;\n\n    CircleNode.prototype.renderPoints = function renderPoints (ctx) {\n        var ref = this.srcElement.geometry();\n        var center = ref.center;\n        var radius = ref.radius;\n\n        ctx.arc(center.x, center.y, radius, 0, Math.PI * 2);\n    };\n\n    return CircleNode;\n}(PathNode));\n\nvar ImageNode = (function (PathNode) {\n    function ImageNode(srcElement, cors) {\n        PathNode.call(this, srcElement);\n\n        this.onLoad = this.onLoad.bind(this);\n        this.onError = this.onError.bind(this);\n\n        this.loading = createPromise();\n\n        var img = this.img = new Image();\n        var src = srcElement.src();\n\n        if (cors && !(/^data:/i.test(src))) {\n            img.crossOrigin = cors;\n        }\n\n        if (src) {\n            img.src = src;\n        }\n\n        if (img.complete) {\n            this.onLoad();\n        } else {\n            img.onload = this.onLoad;\n            img.onerror = this.onError;\n        }\n    }\n\n    if ( PathNode ) ImageNode.__proto__ = PathNode;\n    ImageNode.prototype = Object.create( PathNode && PathNode.prototype );\n    ImageNode.prototype.constructor = ImageNode;\n\n    ImageNode.prototype.renderTo = function renderTo (ctx) {\n        if (this.loading.state() === \"resolved\") {\n            ctx.save();\n\n            this.setTransform(ctx);\n            this.setClip(ctx);\n\n            this.drawImage(ctx);\n\n            ctx.restore();\n        }\n    };\n\n    ImageNode.prototype.optionsChange = function optionsChange (e) {\n        if (e.field === \"src\") {\n            this.loading = createPromise();\n            this.img.src = this.srcElement.src();\n        } else {\n            PathNode.prototype.optionsChange.call(this, e);\n        }\n    };\n\n    ImageNode.prototype.onLoad = function onLoad () {\n        this.loading.resolve();\n        this.invalidate();\n    };\n\n    ImageNode.prototype.onError = function onError () {\n        this.loading.reject(new Error(\n            \"Unable to load image '\" + this.img.src +\n            \"'. Check for connectivity and verify CORS headers.\"\n        ));\n    };\n\n    ImageNode.prototype.drawImage = function drawImage (ctx) {\n        var rect = this.srcElement.rect();\n        var topLeft = rect.topLeft();\n\n        ctx.drawImage(\n            this.img, topLeft.x, topLeft.y, rect.width(), rect.height()\n        );\n    };\n\n    return ImageNode;\n}(PathNode));\n\nvar MultiPathNode = (function (PathNode) {\n    function MultiPathNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) MultiPathNode.__proto__ = PathNode;\n    MultiPathNode.prototype = Object.create( PathNode && PathNode.prototype );\n    MultiPathNode.prototype.constructor = MultiPathNode;\n\n    MultiPathNode.prototype.renderPoints = function renderPoints (ctx) {\n        var paths = this.srcElement.paths;\n        for (var i = 0; i < paths.length; i++) {\n            renderPath(ctx, paths[i]);\n        }\n    };\n\n    return MultiPathNode;\n}(PathNode));\n\nvar RectNode = (function (PathNode) {\n    function RectNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) RectNode.__proto__ = PathNode;\n    RectNode.prototype = Object.create( PathNode && PathNode.prototype );\n    RectNode.prototype.constructor = RectNode;\n\n    RectNode.prototype.renderPoints = function renderPoints (ctx) {\n        var geometry = this.srcElement.geometry();\n        var ref = geometry.cornerRadius;\n        var rx = ref[0];\n        var ry = ref[1];\n\n        if (rx === 0 && ry === 0) {\n            var origin = geometry.origin;\n            var size = geometry.size;\n            ctx.rect(origin.x, origin.y, size.width, size.height);\n        } else {\n            PathNode.prototype.renderPoints.call(this, ctx, Path.fromRect(geometry));\n        }\n    };\n\n    return RectNode;\n}(PathNode));\n\nvar TextNode = (function (PathNode) {\n    function TextNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) TextNode.__proto__ = PathNode;\n    TextNode.prototype = Object.create( PathNode && PathNode.prototype );\n    TextNode.prototype.constructor = TextNode;\n\n    TextNode.prototype.renderTo = function renderTo (ctx) {\n        var text = this.srcElement;\n        var pos = text.position();\n        var size = text.measure();\n\n        ctx.save();\n\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.setOpacity(ctx);\n\n        ctx.beginPath();\n\n        ctx.font = text.options.font;\n        ctx.textAlign = 'left';\n\n        if (text.options.paintOrder === 'stroke') {\n            this.stroke(ctx, text, pos, size);\n            this.fill(ctx, text, pos, size);\n        } else {\n            this.fill(ctx, text, pos, size);\n            this.stroke(ctx, text, pos, size);\n        }\n\n        ctx.restore();\n    };\n\n    TextNode.prototype.stroke = function stroke (ctx, text, pos, size) {\n        if (this.setStroke(ctx)) {\n            this.setLineDash(ctx);\n            ctx.strokeText(text.content(), pos.x, pos.y + size.baseline);\n        }\n    };\n\n    TextNode.prototype.fill = function fill (ctx, text, pos, size) {\n        if (this.setFill(ctx)) {\n            ctx.fillText(text.content(), pos.x, pos.y + size.baseline);\n        }\n    };\n\n    return TextNode;\n}(PathNode));\n\nNODE_MAP.Arc = ArcNode;\nNODE_MAP.Circle = CircleNode;\nNODE_MAP.Group = GroupNode;\nNODE_MAP.Image = ImageNode;\nNODE_MAP.MultiPath = MultiPathNode;\nNODE_MAP.Path = PathNode;\nNODE_MAP.Rect = RectNode;\nNODE_MAP.Text = TextNode;\n\n\nvar Surface$1 = (function (BaseSurface) {\n    function Surface(element, options) {\n        BaseSurface.call(this, element, options);\n\n        this.element.innerHTML = this._template(this);\n\n        var canvas = this.element.firstElementChild;\n        canvas.style.width = '100%';\n        canvas.style.height = '100%';\n\n        var size = elementSize(element);\n\n        canvas.width = size.width;\n        canvas.height = size.height;\n\n        this._rootElement = canvas;\n\n        this._root = new RootNode(canvas, size);\n\n        this._mouseTrackHandler = this._trackMouse.bind(this);\n\n        bindEvents(this.element, {\n            click: this._mouseTrackHandler,\n            mousemove: this._mouseTrackHandler\n        });\n    }\n\n    if ( BaseSurface ) Surface.__proto__ = BaseSurface;\n    Surface.prototype = Object.create( BaseSurface && BaseSurface.prototype );\n    Surface.prototype.constructor = Surface;\n\n    var prototypeAccessors = { type: { configurable: true } };\n\n    prototypeAccessors.type.get = function () {\n        return \"canvas\";\n    };\n\n    Surface.prototype.destroy = function destroy () {\n        BaseSurface.prototype.destroy.call(this);\n\n        if (this._root) {\n            this._root.destroy();\n            this._root = null;\n        }\n\n        if (this._searchTree) {\n            this._searchTree.clear();\n            delete this._searchTree;\n        }\n\n        if (this._cursor) {\n            this._cursor.destroy();\n            delete this._cursor;\n        }\n\n        unbindEvents(this.element, {\n            click: this._mouseTrackHandler,\n            mousemove: this._mouseTrackHandler\n        });\n    };\n\n    Surface.prototype.draw = function draw (element) {\n        BaseSurface.prototype.draw.call(this, element);\n        this._root.load([ element ], undefined, this.options.cors);\n\n        if (this._searchTree) {\n            this._searchTree.add([ element ]);\n        }\n    };\n\n    Surface.prototype.clear = function clear () {\n        BaseSurface.prototype.clear.call(this);\n        this._root.clear();\n\n        if (this._searchTree) {\n            this._searchTree.clear();\n        }\n\n        if (this._cursor) {\n            this._cursor.clear();\n        }\n    };\n\n    Surface.prototype.eventTarget = function eventTarget (e) {\n        if (this._searchTree) {\n            var point = this._surfacePoint(e);\n            var shape = this._searchTree.pointShape(point);\n            return shape;\n        }\n    };\n\n    Surface.prototype.image = function image () {\n        var ref = this;\n        var root = ref._root;\n        var rootElement = ref._rootElement;\n        var loadingStates = [];\n\n        root.traverse(function (childNode) {\n            if (childNode.loading) {\n                loadingStates.push(childNode.loading);\n            }\n        });\n\n        var promise = createPromise();\n        var resolveDataURL = function () {\n            root._invalidate({ fixedScale: true });\n\n            try {\n                var data = rootElement.toDataURL();\n                promise.resolve(data);\n            } catch (e) {\n                promise.reject(e);\n            }\n        };\n\n        promiseAll(loadingStates).then(resolveDataURL, resolveDataURL);\n\n        return promise;\n    };\n\n    Surface.prototype.suspendTracking = function suspendTracking () {\n        BaseSurface.prototype.suspendTracking.call(this);\n        if (this._searchTree) {\n            this._searchTree.clear();\n            delete this._searchTree;\n        }\n    };\n\n    Surface.prototype.resumeTracking = function resumeTracking () {\n        BaseSurface.prototype.resumeTracking.call(this);\n        if (!this._searchTree) {\n            this._searchTree = new ShapesQuadTree();\n\n            var childNodes = this._root.childNodes;\n            var rootElements = [];\n            for (var idx = 0; idx < childNodes.length; idx++) {\n                rootElements.push(childNodes[idx].srcElement);\n            }\n            this._searchTree.add(rootElements);\n        }\n    };\n\n    Surface.prototype._resize = function _resize () {\n        this._rootElement.width = this._size.width;\n        this._rootElement.height = this._size.height;\n\n        this._root.size = this._size;\n        this._root.invalidate();\n    };\n\n    Surface.prototype._template = function _template () {\n        return \"<canvas></canvas>\";\n    };\n\n    Surface.prototype._enableTracking = function _enableTracking () {\n        this._searchTree = new ShapesQuadTree();\n        this._cursor = new SurfaceCursor(this);\n\n        BaseSurface.prototype._enableTracking.call(this);\n    };\n\n    Surface.prototype._trackMouse = function _trackMouse (e) {\n        if (this._suspendedTracking) {\n            return;\n        }\n\n        var shape = this.eventTarget(e);\n\n        if (e.type !== \"click\") {\n            var currentShape = this._currentShape;\n            if (currentShape && currentShape !== shape) {\n                this.trigger(\"mouseleave\", {\n                    element: currentShape,\n                    originalEvent: e,\n                    type: \"mouseleave\"\n                });\n            }\n\n            if (shape && currentShape !== shape) {\n                this.trigger(\"mouseenter\", {\n                    element: shape,\n                    originalEvent: e,\n                    type: \"mouseenter\"\n                });\n            }\n\n            this.trigger(\"mousemove\", {\n                element: shape,\n                originalEvent: e,\n                type: \"mousemove\"\n            });\n\n            this._currentShape = shape;\n        } else if (shape) {\n            this.trigger(\"click\", {\n                element: shape,\n                originalEvent: e,\n                type: \"click\"\n            });\n        }\n    };\n\n    Object.defineProperties( Surface.prototype, prototypeAccessors );\n\n    return Surface;\n}(Surface$3));\n\nvar instance;\nvar support;\n\nvar hasDocument = function () { return typeof document !== \"undefined\"; };\n\nvar supportsCanvas = function () { return hasDocument() &&\n    document.createElement(\"canvas\").getContext; };\n\nvar supportsSVG = function () { return hasDocument() &&\n    document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\"); };\n\nvar SurfaceFactory = (function (Class) {\n    function SurfaceFactory() {\n        Class.call(this);\n\n        this._items = [ {\n            name: \"svg\",\n            type: Surface$2\n        }, {\n            name: \"canvas\",\n            type: Surface$1\n        } ];\n    }\n\n    if ( Class ) SurfaceFactory.__proto__ = Class;\n    SurfaceFactory.prototype = Object.create( Class && Class.prototype );\n    SurfaceFactory.prototype.constructor = SurfaceFactory;\n\n    var staticAccessors = { support: { configurable: true },current: { configurable: true } };\n\n    staticAccessors.support.get = function () {\n        if (!support) {\n            support = {\n                canvas: supportsCanvas(),\n                svg: supportsSVG()\n            };\n        }\n\n        return support;\n    };\n\n    staticAccessors.current.get = function () {\n        if (!instance) {\n            instance = new SurfaceFactory();\n        }\n\n        return instance;\n    };\n\n    SurfaceFactory.prototype.create = function create (element, options) {\n        var items = this._items;\n        var match = items[0];\n\n        if (options && options.type) {\n            var preferred = options.type.toLowerCase();\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].name === preferred) {\n                    match = items[i];\n                    break;\n                }\n            }\n        }\n\n        if (match) {\n            return new match.type(element, options);\n        }\n\n        logToConsole(\n            \"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" +\n            \"- The browser does not support SVG and Canvas. User agent: \" + (navigator.userAgent));\n    };\n\n    Object.defineProperties( SurfaceFactory, staticAccessors );\n\n    return SurfaceFactory;\n}(Class));\n\nvar Surface = (function (BaseSurface) {\n    function Surface () {\n        BaseSurface.apply(this, arguments);\n    }\n\n    if ( BaseSurface ) Surface.__proto__ = BaseSurface;\n    Surface.prototype = Object.create( BaseSurface && BaseSurface.prototype );\n    Surface.prototype.constructor = Surface;\n\n    var staticAccessors = { support: { configurable: true } };\n\n    staticAccessors.support.get = function () {\n        return SurfaceFactory.support;\n    };\n\n    Surface.create = function create (element, options) {\n        return SurfaceFactory.current.create(element, options);\n    };\n\n    Object.defineProperties( Surface, staticAccessors );\n\n    return Surface;\n}(Surface$3));\n\nfunction exportGroup(group) {\n    var root = new RootNode$1({\n        skipBaseHref: true\n    });\n    var bbox = group.clippedBBox();\n    var rootGroup = group;\n\n    if (bbox) {\n        var origin = bbox.getOrigin();\n        var exportRoot = new Group();\n        exportRoot.transform(transform().translate(-origin.x, -origin.y));\n        exportRoot.children.push(group);\n        rootGroup = exportRoot;\n    }\n\n    root.load([ rootGroup ]);\n\n    var svg = \"<?xml version='1.0' ?><svg xmlns='\" + SVG_NS + \"' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>\" + (root.render()) + \"</svg>\";\n\n    root.destroy();\n\n    return svg;\n}\n\nvar svg = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcNode: ArcNode$1,\n    CircleNode: CircleNode$1,\n    ClipNode: ClipNode,\n    DefinitionNode: DefinitionNode,\n    GradientStopNode: GradientStopNode,\n    GroupNode: GroupNode$1,\n    ImageNode: ImageNode$1,\n    LinearGradientNode: LinearGradientNode,\n    MultiPathNode: MultiPathNode$1,\n    Node: Node$1,\n    PathNode: PathNode$1,\n    RadialGradientNode: RadialGradientNode,\n    RectNode: RectNode$1,\n    RootNode: RootNode$1,\n    Surface: Surface$2,\n    TextNode: TextNode$1,\n    exportGroup: exportGroup\n});\n\nvar canvas = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcNode: ArcNode,\n    CircleNode: CircleNode,\n    GroupNode: GroupNode,\n    ImageNode: ImageNode,\n    MultiPathNode: MultiPathNode,\n    Node: Node,\n    PathNode: PathNode,\n    RectNode: RectNode,\n    RootNode: RootNode,\n    Surface: Surface$1,\n    TextNode: TextNode\n});\n\nfunction exportImage(group, options) {\n    var defaults = {\n        width: \"800px\", height: \"600px\",\n        cors: \"Anonymous\"\n    };\n\n    var exportRoot = group;\n    var bbox = group.clippedBBox();\n\n\n    if (bbox) {\n        var origin = bbox.getOrigin();\n        exportRoot = new Group();\n        exportRoot.transform(transform().translate(-origin.x, -origin.y));\n        exportRoot.children.push(group);\n\n        var size = bbox.getSize();\n        defaults.width = size.width + \"px\";\n        defaults.height = size.height + \"px\";\n    }\n\n    var surfaceOptions = Object.assign(defaults, options);\n\n    var container = document.createElement(\"div\");\n    var style = container.style;\n\n    style.display = \"none\";\n    style.width = surfaceOptions.width;\n    style.height = surfaceOptions.height;\n    document.body.appendChild(container);\n\n    var surface = new Surface$1(container, surfaceOptions);\n    surface.suspendTracking();\n    surface.draw(exportRoot);\n\n    var promise = surface.image();\n    var destroy = function () {\n        surface.destroy();\n        document.body.removeChild(container);\n    };\n    promise.then(destroy, destroy);\n\n    return promise;\n}\n\nfunction exportSVG(group, options) {\n    var svg = exportGroup(group);\n\n    if (!options || !options.raw) {\n        svg = \"data:image/svg+xml;base64,\" + encodeBase64(svg);\n    }\n\n    return createPromise().resolve(svg);\n}\n\nvar drawing = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Animation: Animation,\n    AnimationFactory: AnimationFactory,\n    Arc: Arc,\n    BaseNode: BaseNode,\n    Circle: Circle,\n    Element: Element$1,\n    Gradient: Gradient,\n    GradientStop: GradientStop,\n    Group: Group,\n    HasObservers: HasObservers,\n    Image: Image$1,\n    Layout: Layout,\n    LinearGradient: LinearGradient,\n    MultiPath: MultiPath,\n    OptionsStore: OptionsStore,\n    Path: Path,\n    PathParser: PathParser,\n    Pattern: Pattern,\n    QuadNode: QuadNode,\n    RadialGradient: RadialGradient,\n    Rect: Rect,\n    ShapesQuadTree: ShapesQuadTree,\n    Surface: Surface,\n    SurfaceFactory: SurfaceFactory,\n    Text: Text,\n    align: align,\n    canvas: canvas,\n    crosshatchPattern: crosshatchPattern,\n    diagonalStripesPattern: diagonalStripesPattern,\n    dotsPattern: dotsPattern,\n    exportImage: exportImage,\n    exportSVG: exportSVG,\n    fit: fit,\n    gridPattern: gridPattern,\n    parsePath: parsePath,\n    stack: stack,\n    svg: svg,\n    util: util,\n    vAlign: vAlign,\n    vStack: vStack,\n    vWrap: vWrap,\n    verticalStripesPattern: verticalStripesPattern,\n    wrap: wrap\n});\n\n/* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n/* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n/* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n/* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n// XXX: remove this junk (assume `true`) when we no longer have to support IE < 10\n// IE 9 (at least compatibility) reports having Uint8Array but the request response does not contain ArrayBuffer which results in missing table head error\nvar HAS_TYPED_ARRAYS = typeof Uint8Array !== 'undefined' && support$1.browser && (!support$1.browser.msie || support$1.browser.version > 9);\n\nvar BASE64 = (function(){\n    var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    return {\n        decode: function(str) {\n            var input = str.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"), i = 0, n = input.length, output = [];\n\n            while (i < n) {\n                var enc1 = keyStr.indexOf(input.charAt(i++));\n                var enc2 = keyStr.indexOf(input.charAt(i++));\n                var enc3 = keyStr.indexOf(input.charAt(i++));\n                var enc4 = keyStr.indexOf(input.charAt(i++));\n\n                var chr1 = (enc1 << 2) | (enc2 >>> 4);\n                var chr2 = ((enc2 & 15) << 4) | (enc3 >>> 2);\n                var chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output.push(chr1);\n                if (enc3 != 64) {\n                    output.push(chr2);\n                }\n                if (enc4 != 64) {\n                    output.push(chr3);\n                }\n            }\n\n            return output;\n        },\n        encode: function(bytes) {\n            var i = 0, n = bytes.length;\n            var output = \"\";\n\n            while (i < n) {\n                var chr1 = bytes[i++];\n                var chr2 = bytes[i++];\n                var chr3 = bytes[i++];\n\n                var enc1 = chr1 >>> 2;\n                var enc2 = ((chr1 & 3) << 4) | (chr2 >>> 4);\n                var enc3 = ((chr2 & 15) << 2) | (chr3 >>> 6);\n                var enc4 = chr3 & 63;\n\n                if (i - n == 2) {\n                    enc3 = enc4 = 64;\n                } else if (i - n == 1) {\n                    enc4 = 64;\n                }\n\n                output += keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n            }\n            return output;\n        }\n    };\n}());\n\nfunction BinaryStream(data) {\n    var offset = 0, length = 0;\n    if (data == null) {\n        data = HAS_TYPED_ARRAYS ? new Uint8Array(256) : [];\n    } else {\n        length = data.length;\n    }\n\n    var ensure = HAS_TYPED_ARRAYS ? function(len) {\n        if (len >= data.length) {\n            var tmp = new Uint8Array(Math.max(len + 256, data.length * 2));\n            tmp.set(data, 0);\n            data = tmp;\n        }\n    } : function() {};\n\n    var get = HAS_TYPED_ARRAYS ? function() {\n        return new Uint8Array(data.buffer, 0, length);\n    } : function() {\n        return data;\n    };\n\n    var write = HAS_TYPED_ARRAYS ? function(bytes) {\n        if (typeof bytes == \"string\") {\n            return writeString(bytes);\n        }\n        var len = bytes.length;\n        ensure(offset + len);\n        data.set(bytes, offset);\n        offset += len;\n        if (offset > length) {\n            length = offset;\n        }\n    } : function(bytes) {\n        if (typeof bytes == \"string\") {\n            return writeString(bytes);\n        }\n        for (var i = 0; i < bytes.length; ++i) {\n            writeByte(bytes[i]);\n        }\n    };\n\n    var slice = HAS_TYPED_ARRAYS ? function(start, length) {\n        if (data.buffer.slice) {\n            return new Uint8Array(data.buffer.slice(start, start + length));\n        } else {\n            // IE10\n            var x = new Uint8Array(length);\n            x.set(new Uint8Array(data.buffer, start, length));\n            return x;\n        }\n    } : function(start, length) {\n        return data.slice(start, start + length);\n    };\n\n    function eof() {\n        return offset >= length;\n    }\n    function readByte() {\n        return offset < length ? data[offset++] : 0;\n    }\n    function writeByte(b) {\n        ensure(offset);\n        data[offset++] = b & 0xFF;\n        if (offset > length) {\n            length = offset;\n        }\n    }\n    function readShort() {\n        return (readByte() << 8) | readByte();\n    }\n    function writeShort(w) {\n        writeByte(w >> 8);\n        writeByte(w);\n    }\n    function readShort_() {\n        var w = readShort();\n        return w >= 0x8000 ? w - 0x10000 : w;\n    }\n    function writeShort_(w) {\n        writeShort(w < 0 ? w + 0x10000 : w);\n    }\n    function readLong() {\n        return (readShort() * 0x10000) + readShort();\n    }\n    function writeLong(w) {\n        writeShort((w >>> 16) & 0xFFFF);\n        writeShort(w & 0xFFFF);\n    }\n    function readLong_() {\n        var w = readLong();\n        return w >= 0x80000000 ? w - 0x100000000 : w;\n    }\n    function writeLong_(w) {\n        writeLong(w < 0 ? w + 0x100000000 : w);\n    }\n    function readFixed() {\n        return readLong() / 0x10000;\n    }\n    function writeFixed(f) {\n        writeLong(Math.round(f * 0x10000));\n    }\n    function readFixed_() {\n        return readLong_() / 0x10000;\n    }\n    function writeFixed_(f) {\n        writeLong_(Math.round(f * 0x10000));\n    }\n    function read(len) {\n        return times(len, readByte);\n    }\n    function readString(len) {\n        return String.fromCharCode.apply(String, read(len));\n    }\n    function writeString(str) {\n        for (var i = 0; i < str.length; ++i) {\n            writeByte(str.charCodeAt(i));\n        }\n    }\n    function times(n, reader) {\n        for (var ret = new Array(n), i = 0; i < n; ++i) {\n            ret[i] = reader();\n        }\n        return ret;\n    }\n\n    var stream = {\n        eof         : eof,\n        readByte    : readByte,\n        writeByte   : writeByte,\n        readShort   : readShort,\n        writeShort  : writeShort,\n        readLong    : readLong,\n        writeLong   : writeLong,\n        readFixed   : readFixed,\n        writeFixed  : writeFixed,\n\n        // signed numbers.\n        readShort_  : readShort_,\n        writeShort_ : writeShort_,\n        readLong_   : readLong_,\n        writeLong_  : writeLong_,\n        readFixed_  : readFixed_,\n        writeFixed_ : writeFixed_,\n\n        read        : read,\n        write       : write,\n        readString  : readString,\n        writeString : writeString,\n\n        times       : times,\n        get         : get,\n        slice       : slice,\n\n        offset: function(pos) {\n            if (pos != null) {\n                offset = pos;\n                return stream;\n            }\n            return offset;\n        },\n\n        skip: function(nbytes) {\n            offset += nbytes;\n        },\n\n        toString: function() {\n            throw new Error(\"FIX CALLER.  BinaryStream is no longer convertible to string!\");\n        },\n\n        length: function() { return length; },\n\n        saveExcursion: function(f) {\n            var pos = offset;\n            try {\n                return f();\n            } finally {\n                offset = pos;\n            }\n        },\n\n        writeBase64: function(base64) {\n            if (window.atob) {\n                writeString(window.atob(base64));\n            } else {\n                write(BASE64.decode(base64));\n            }\n        },\n        base64: function() {\n            return BASE64.encode(get());\n        }\n    };\n\n    return stream;\n}\n\nfunction ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n    while (counter < length) {\n        value = string.charCodeAt(counter++);\n        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n            // high surrogate, and there is a next character\n            extra = string.charCodeAt(counter++);\n            if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n            } else {\n                // unmatched surrogate; only append this code unit, in case the next\n                // code unit is the high surrogate of a surrogate pair\n                output.push(value);\n                counter--;\n            }\n        } else {\n            output.push(value);\n        }\n    }\n    return output;\n}\n\nfunction ucs2encode(array) {\n    return array.map(function(value){\n        var output = \"\";\n        if (value > 0xFFFF) {\n            value -= 0x10000;\n            output += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);\n            value = 0xDC00 | value & 0x3FF;\n        }\n        output += String.fromCharCode(value);\n        return output;\n    }).join(\"\");\n}\n\nfunction atobUint8Array(base64) {\n    var data = window.atob(base64);\n    var result = new Uint8Array(data.length);\n\n    for (var idx = 0; idx < data.length; idx++) {\n        result[idx] = data.charCodeAt(idx);\n    }\n\n    return result;\n}\n\nfunction createUint8Array(data) {\n    var result = new Uint8Array(data.length);\n\n    for (var idx = 0; idx < data.length; idx++) {\n        result[idx] = data[idx];\n    }\n\n    return result;\n}\n\nfunction base64ToUint8Array(base64) {\n    if (window.atob) {\n        return atobUint8Array(base64);\n    }\n\n    return createUint8Array(BASE64.decode(base64));\n}\n\n/* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n/* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n/* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n/* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n\nfunction hasOwnProperty$2(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction sortedKeys(obj) {\n    return Object.keys(obj).sort(function(a, b){ return a - b; }).map(parseFloat);\n}\n\n///\nvar Directory = function Directory(data) {\n    this.raw = data;\n    this.scalerType = data.readLong();\n    this.tableCount = data.readShort();\n    this.searchRange = data.readShort();\n    this.entrySelector = data.readShort();\n    this.rangeShift = data.readShort();\n\n    var tables = this.tables = {};\n    for (var i = 0; i < this.tableCount; ++i) {\n        var entry = {\n            tag  : data.readString(4),\n            checksum : data.readLong(),\n            offset   : data.readLong(),\n            length   : data.readLong()\n        };\n        tables[entry.tag] = entry;\n    }\n};\n\nDirectory.prototype.readTable = function readTable (name, Ctor) {\n    var def = this.tables[name];\n    if (!def) {\n        throw new Error(\"Table \" + name + \" not found in directory\");\n    }\n    return (this[name] = def.table = new Ctor(this, def));\n};\n\nDirectory.prototype.render = function render (tables) {\n        var this$1$1 = this;\n\n    var tableCount = Object.keys(tables).length;\n\n    var maxpow2 = Math.pow(2, Math.floor(Math.log(tableCount) / Math.LN2));\n    var searchRange = maxpow2 * 16;\n    var entrySelector = Math.floor(Math.log(maxpow2) / Math.LN2);\n    var rangeShift = tableCount * 16 - searchRange;\n\n    var out = BinaryStream();\n    out.writeLong(this.scalerType);\n    out.writeShort(tableCount);\n    out.writeShort(searchRange);\n    out.writeShort(entrySelector);\n    out.writeShort(rangeShift);\n\n    var directoryLength = tableCount * 16;\n    var offset = out.offset() + directoryLength;\n    var headOffset = null;\n    var tableData = BinaryStream();\n\n    for (var tag in tables) {\n        if (hasOwnProperty$2(tables, tag)) {\n            var table = tables[tag];\n\n            out.writeString(tag);\n            out.writeLong(this$1$1.checksum(table));\n            out.writeLong(offset);\n            out.writeLong(table.length);\n\n            tableData.write(table);\n            if (tag == \"head\") {\n                headOffset = offset;\n            }\n            offset += table.length;\n\n            while (offset % 4) {\n                tableData.writeByte(0);\n                offset++;\n            }\n        }\n    }\n\n    out.write(tableData.get());\n    var sum = this.checksum(out.get());\n    var adjustment = 0xB1B0AFBA - sum;\n\n    out.offset(headOffset + 8);\n    out.writeLong(adjustment);\n    return out.get();\n};\n\nDirectory.prototype.checksum = function checksum (data) {\n    data = BinaryStream(data);\n    var sum = 0;\n    while (!data.eof()) {\n        sum += data.readLong();\n    }\n    return sum & 0xFFFFFFFF;\n};\n\nvar Table = function Table(file, def) {\n    this.definition = def;\n    this.length = def.length;\n    this.offset = def.offset;\n    this.file = file;\n    this.rawData = file.raw;\n    this.parse(file.raw);\n};\n\nTable.prototype.raw = function raw () {\n    return this.rawData.slice(this.offset, this.length);\n};\n\nTable.prototype.parse = function parse () {};\n\nvar HeadTable = (function (Table) {\n    function HeadTable () {\n        Table.apply(this, arguments);\n    }\n\n    if ( Table ) HeadTable.__proto__ = Table;\n    HeadTable.prototype = Object.create( Table && Table.prototype );\n    HeadTable.prototype.constructor = HeadTable;\n\n    HeadTable.prototype.parse = function parse (data) {\n        data.offset(this.offset);\n        this.version             = data.readLong();\n        this.revision            = data.readLong();\n        this.checkSumAdjustment  = data.readLong();\n        this.magicNumber         = data.readLong();\n        this.flags               = data.readShort();\n        this.unitsPerEm          = data.readShort();\n        this.created             = data.read(8);\n        this.modified            = data.read(8);\n\n        this.xMin = data.readShort_();\n        this.yMin = data.readShort_();\n        this.xMax = data.readShort_();\n        this.yMax = data.readShort_();\n\n        this.macStyle           = data.readShort();\n        this.lowestRecPPEM      = data.readShort();\n        this.fontDirectionHint  = data.readShort_();\n        this.indexToLocFormat   = data.readShort_();\n        this.glyphDataFormat    = data.readShort_();\n    };\n\n    HeadTable.prototype.render = function render (indexToLocFormat) {\n        var out = BinaryStream();\n        out.writeLong(this.version);\n        out.writeLong(this.revision);\n        out.writeLong(0);       // checksum adjustment; shall be computed later\n        out.writeLong(this.magicNumber);\n        out.writeShort(this.flags);\n        out.writeShort(this.unitsPerEm);\n        out.write(this.created);\n        out.write(this.modified);\n        out.writeShort_(this.xMin);\n        out.writeShort_(this.yMin);\n        out.writeShort_(this.xMax);\n        out.writeShort_(this.yMax);\n        out.writeShort(this.macStyle);\n        out.writeShort(this.lowestRecPPEM);\n        out.writeShort_(this.fontDirectionHint);\n        out.writeShort_(indexToLocFormat); // this will depend on the `loca` table\n        out.writeShort_(this.glyphDataFormat);\n        return out.get();\n    };\n\n    return HeadTable;\n}(Table));\n\nvar LocaTable = (function (Table) {\n    function LocaTable () {\n        Table.apply(this, arguments);\n    }\n\n    if ( Table ) LocaTable.__proto__ = Table;\n    LocaTable.prototype = Object.create( Table && Table.prototype );\n    LocaTable.prototype.constructor = LocaTable;\n\n    LocaTable.prototype.parse = function parse (data) {\n        data.offset(this.offset);\n        var format = this.file.head.indexToLocFormat;\n        if (format === 0) {\n            this.offsets = data.times(this.length / 2, function(){\n                return 2 * data.readShort();\n            });\n        } else {\n            this.offsets = data.times(this.length / 4, data.readLong);\n        }\n    };\n\n    LocaTable.prototype.offsetOf = function offsetOf (id) {\n        return this.offsets[id];\n    };\n\n    LocaTable.prototype.lengthOf = function lengthOf (id) {\n        return this.offsets[id + 1] - this.offsets[id];\n    };\n\n    LocaTable.prototype.render = function render (offsets) {\n        var out = BinaryStream();\n        var needsLongFormat = offsets[offsets.length - 1] > 0xFFFF;\n        for (var i = 0; i < offsets.length; ++i) {\n            if (needsLongFormat) {\n                out.writeLong(offsets[i]);\n            } else {\n                out.writeShort(offsets[i] / 2);\n            }\n        }\n        return {\n            format: needsLongFormat ? 1 : 0,\n            table: out.get()\n        };\n    };\n\n    return LocaTable;\n}(Table));\n\nvar HheaTable = (function (Table) {\n    function HheaTable () {\n        Table.apply(this, arguments);\n    }\n\n    if ( Table ) HheaTable.__proto__ = Table;\n    HheaTable.prototype = Object.create( Table && Table.prototype );\n    HheaTable.prototype.constructor = HheaTable;\n\n    HheaTable.prototype.parse = function parse (data) {\n        data.offset(this.offset);\n\n        this.version              = data.readLong();\n        this.ascent               = data.readShort_();\n        this.descent              = data.readShort_();\n        this.lineGap              = data.readShort_();\n        this.advanceWidthMax      = data.readShort();\n        this.minLeftSideBearing   = data.readShort_();\n        this.minRightSideBearing  = data.readShort_();\n        this.xMaxExtent           = data.readShort_();\n        this.caretSlopeRise       = data.readShort_();\n        this.caretSlopeRun        = data.readShort_();\n        this.caretOffset          = data.readShort_();\n\n        data.skip(4 * 2);       // reserved\n\n        this.metricDataFormat     = data.readShort_();\n        this.numOfLongHorMetrics  = data.readShort();\n    };\n\n    HheaTable.prototype.render = function render (ids) {\n        var out = BinaryStream();\n        out.writeLong(this.version);\n        out.writeShort_(this.ascent);\n        out.writeShort_(this.descent);\n        out.writeShort_(this.lineGap);\n        out.writeShort(this.advanceWidthMax);\n        out.writeShort_(this.minLeftSideBearing);\n        out.writeShort_(this.minRightSideBearing);\n        out.writeShort_(this.xMaxExtent);\n        out.writeShort_(this.caretSlopeRise);\n        out.writeShort_(this.caretSlopeRun);\n        out.writeShort_(this.caretOffset);\n\n        out.write([ 0, 0, 0, 0, 0, 0, 0, 0 ]); // reserved bytes\n\n        out.writeShort_(this.metricDataFormat);\n        out.writeShort(ids.length);\n        return out.get();\n    };\n\n    return HheaTable;\n}(Table));\n\nvar MaxpTable = (function (Table) {\n    function MaxpTable () {\n        Table.apply(this, arguments);\n    }\n\n    if ( Table ) MaxpTable.__proto__ = Table;\n    MaxpTable.prototype = Object.create( Table && Table.prototype );\n    MaxpTable.prototype.constructor = MaxpTable;\n\n    MaxpTable.prototype.parse = function parse (data) {\n        data.offset(this.offset);\n        this.version = data.readLong();\n        this.numGlyphs = data.readShort();\n        this.maxPoints = data.readShort();\n        this.maxContours = data.readShort();\n        this.maxComponentPoints = data.readShort();\n        this.maxComponentContours = data.readShort();\n        this.maxZones = data.readShort();\n        this.maxTwilightPoints = data.readShort();\n        this.maxStorage = data.readShort();\n        this.maxFunctionDefs = data.readShort();\n        this.maxInstructionDefs = data.readShort();\n        this.maxStackElements = data.readShort();\n        this.maxSizeOfInstructions = data.readShort();\n        this.maxComponentElements = data.readShort();\n        this.maxComponentDepth = data.readShort();\n    };\n\n    MaxpTable.prototype.render = function render (glyphIds) {\n        var out = BinaryStream();\n        out.writeLong(this.version);\n        out.writeShort(glyphIds.length);\n        out.writeShort(this.maxPoints);\n        out.writeShort(this.maxContours);\n        out.writeShort(this.maxComponentPoints);\n        out.writeShort(this.maxComponentContours);\n        out.writeShort(this.maxZones);\n        out.writeShort(this.maxTwilightPoints);\n        out.writeShort(this.maxStorage);\n        out.writeShort(this.maxFunctionDefs);\n        out.writeShort(this.maxInstructionDefs);\n        out.writeShort(this.maxStackElements);\n        out.writeShort(this.maxSizeOfInstructions);\n        out.writeShort(this.maxComponentElements);\n        out.writeShort(this.maxComponentDepth);\n        return out.get();\n    };\n\n    return MaxpTable;\n}(Table));\n\nvar HmtxTable = (function (Table) {\n    function HmtxTable () {\n        Table.apply(this, arguments);\n    }\n\n    if ( Table ) HmtxTable.__proto__ = Table;\n    HmtxTable.prototype = Object.create( Table && Table.prototype );\n    HmtxTable.prototype.constructor = HmtxTable;\n\n    HmtxTable.prototype.parse = function parse (data) {\n        data.offset(this.offset);\n        var dir = this.file, hhea = dir.hhea;\n        this.metrics = data.times(hhea.numOfLongHorMetrics, function(){\n            return {\n                advance: data.readShort(),\n                lsb: data.readShort_()\n            };\n        });\n        var lsbCount = dir.maxp.numGlyphs - dir.hhea.numOfLongHorMetrics;\n        this.leftSideBearings = data.times(lsbCount, data.readShort_);\n    };\n\n    HmtxTable.prototype.forGlyph = function forGlyph (id) {\n        var metrics = this.metrics;\n        var n = metrics.length;\n        if (id < n) {\n            return metrics[id];\n        }\n        return {\n            advance: metrics[n - 1].advance,\n            lsb: this.leftSideBearings[id - n]\n        };\n    };\n\n    HmtxTable.prototype.render = function render (glyphIds) {\n        var this$1$1 = this;\n\n        var out = BinaryStream();\n        for (var i = 0; i < glyphIds.length; ++i) {\n            var m = this$1$1.forGlyph(glyphIds[i]);\n            out.writeShort(m.advance);\n            out.writeShort_(m.lsb);\n        }\n        return out.get();\n    };\n\n    return HmtxTable;\n}(Table));\n\nvar GlyfTable = (function(){\n    var SimpleGlyph = function SimpleGlyph(raw) {\n        this.raw = raw;\n    };\n\n    var prototypeAccessors = { compound: { configurable: true } };\n\n    prototypeAccessors.compound.get = function () {\n        return false;\n    };\n\n    SimpleGlyph.prototype.render = function render () {\n        return this.raw.get();\n    };\n\n    Object.defineProperties( SimpleGlyph.prototype, prototypeAccessors );\n\n    var ARG_1_AND_2_ARE_WORDS     = 0x0001;\n    var WE_HAVE_A_SCALE           = 0x0008;\n    var MORE_COMPONENTS           = 0x0020;\n    var WE_HAVE_AN_X_AND_Y_SCALE  = 0x0040;\n    var WE_HAVE_A_TWO_BY_TWO      = 0x0080;\n    //var WE_HAVE_INSTRUCTIONS      = 0x0100;\n\n    var CompoundGlyph = function CompoundGlyph(data) {\n        this.raw = data;\n        var ids = this.glyphIds = [];\n        var offsets = this.idOffsets = [];\n        while (true) {      // eslint-disable-line no-constant-condition\n            var flags = data.readShort();\n            offsets.push(data.offset());\n            ids.push(data.readShort());\n\n            if (!(flags & MORE_COMPONENTS)) {\n                break;\n            }\n\n            data.skip(flags & ARG_1_AND_2_ARE_WORDS ? 4 : 2);\n\n            if (flags & WE_HAVE_A_TWO_BY_TWO) {\n                data.skip(8);\n            } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n                data.skip(4);\n            } else if (flags & WE_HAVE_A_SCALE) {\n                data.skip(2);\n            }\n        }\n    };\n\n    var prototypeAccessors$1 = { compound: { configurable: true } };\n\n    prototypeAccessors$1.compound.get = function () {\n        return true;\n    };\n\n    CompoundGlyph.prototype.render = function render (old2new) {\n            var this$1$1 = this;\n\n        var out = BinaryStream(this.raw.get());\n        for (var i = 0; i < this.glyphIds.length; ++i) {\n            var id = this$1$1.glyphIds[i];\n            out.offset(this$1$1.idOffsets[i]);\n            out.writeShort(old2new[id]);\n        }\n        return out.get();\n    };\n\n    Object.defineProperties( CompoundGlyph.prototype, prototypeAccessors$1 );\n\n    return (function (Table) {\n        function anonymous () {\n            Table.apply(this, arguments);\n        }\n\n        if ( Table ) anonymous.__proto__ = Table;\n        anonymous.prototype = Object.create( Table && Table.prototype );\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.parse = function parse () {\n            this.cache = {};\n        };\n\n        anonymous.prototype.glyphFor = function glyphFor (id) {\n            var cache = this.cache;\n            if (hasOwnProperty$2(cache, id)) {\n                return cache[id];\n            }\n\n            var loca = this.file.loca;\n            var length = loca.lengthOf(id);\n\n            if (length === 0) {\n                return (cache[id] = null);\n            }\n\n            var data = this.rawData;\n            var offset = this.offset + loca.offsetOf(id);\n            var raw = BinaryStream(data.slice(offset, length));\n\n            var numberOfContours = raw.readShort_();\n            var xMin = raw.readShort_();\n            var yMin = raw.readShort_();\n            var xMax = raw.readShort_();\n            var yMax = raw.readShort_();\n\n            var glyph = cache[id] = numberOfContours < 0 ? new CompoundGlyph(raw) : new SimpleGlyph(raw);\n\n            glyph.numberOfContours = numberOfContours;\n            glyph.xMin = xMin;\n            glyph.yMin = yMin;\n            glyph.xMax = xMax;\n            glyph.yMax = yMax;\n\n            return glyph;\n        };\n\n        anonymous.prototype.render = function render (glyphs, oldIds, old2new) {\n            var out = BinaryStream(), offsets = [];\n            for (var i = 0; i < oldIds.length; ++i) {\n                var id = oldIds[i];\n                var glyph = glyphs[id];\n                if (out.offset() % 2) {\n                    out.writeByte(0);\n                }\n                offsets.push(out.offset());\n                if (glyph) {\n                    out.write(glyph.render(old2new));\n                }\n            }\n            if (out.offset() % 2) {\n                out.writeByte(0);\n            }\n            offsets.push(out.offset());\n            return {\n                table: out.get(),\n                offsets: offsets\n            };\n        };\n\n        return anonymous;\n    }(Table));\n}());\n\nvar NameTable = (function(){\n    var NameEntry = function NameEntry(text, entry) {\n        this.text = text;\n        this.length = text.length;\n        this.platformID = entry.platformID;\n        this.platformSpecificID = entry.platformSpecificID;\n        this.languageID = entry.languageID;\n        this.nameID = entry.nameID;\n    };\n\n    return (function (Table) {\n        function anonymous () {\n            Table.apply(this, arguments);\n        }\n\n        if ( Table ) anonymous.__proto__ = Table;\n        anonymous.prototype = Object.create( Table && Table.prototype );\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.parse = function parse (data) {\n            data.offset(this.offset);\n            data.readShort();   // format\n            var count = data.readShort();\n            var stringOffset = this.offset + data.readShort();\n            var nameRecords = data.times(count, function(){\n                return {\n                    platformID         : data.readShort(),\n                    platformSpecificID : data.readShort(),\n                    languageID         : data.readShort(),\n                    nameID             : data.readShort(),\n                    length             : data.readShort(),\n                    offset             : data.readShort() + stringOffset\n                };\n            });\n            var strings = this.strings = {};\n            for (var i = 0; i < nameRecords.length; ++i) {\n                var rec = nameRecords[i];\n                data.offset(rec.offset);\n                var text = data.readString(rec.length);\n                if (!strings[rec.nameID]) {\n                    strings[rec.nameID] = [];\n                }\n                strings[rec.nameID].push(new NameEntry(text, rec));\n            }\n            this.postscriptEntry = strings[6][0];\n            this.postscriptName = this.postscriptEntry.text.replace(/[^\\x20-\\x7F]/g, \"\");\n        };\n\n        anonymous.prototype.render = function render (psName) {\n            var this$1$1 = this;\n\n            var strings = this.strings;\n            var strCount = 0;\n            for (var i in strings) {\n                if (hasOwnProperty$2(strings, i)) {\n                    strCount += strings[i].length;\n                }\n            }\n            var out = BinaryStream();\n            var strTable = BinaryStream();\n\n            out.writeShort(0);  // format\n            out.writeShort(strCount);\n            out.writeShort(6 + 12 * strCount); // stringOffset\n\n            for (i in strings) {\n                if (hasOwnProperty$2(strings, i)) {\n                    var list = i == 6 ? [\n                        new NameEntry(psName, this$1$1.postscriptEntry)\n                    ] : strings[i];\n                    for (var j = 0; j < list.length; ++j) {\n                        var str = list[j];\n                        out.writeShort(str.platformID);\n                        out.writeShort(str.platformSpecificID);\n                        out.writeShort(str.languageID);\n                        out.writeShort(str.nameID);\n                        out.writeShort(str.length);\n                        out.writeShort(strTable.offset());\n\n                        strTable.writeString(str.text);\n                    }\n                }\n            }\n\n            out.write(strTable.get());\n\n            return out.get();\n        };\n\n        return anonymous;\n    }(Table));\n})();\n\nvar PostTable = (function(){\n    var POSTSCRIPT_GLYPHS = \".notdef .null nonmarkingreturn space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent sterling section bullet paragraph germandbls registered copyright trademark acute dieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu partialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash questiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft guillemotright ellipsis nonbreakingspace Agrave Atilde Otilde OE oe endash emdash quotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis fraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered quotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute Ucircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla hungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron zcaron brokenbar Eth eth Yacute yacute Thorn thorn minus multiply onesuperior twosuperior threesuperior onehalf onequarter threequarters franc Gbreve gbreve Idotaccent Scedilla scedilla Cacute cacute Ccaron ccaron dcroat\".split(/\\s+/g);\n\n    return (function (Table) {\n        function anonymous () {\n            Table.apply(this, arguments);\n        }\n\n        if ( Table ) anonymous.__proto__ = Table;\n        anonymous.prototype = Object.create( Table && Table.prototype );\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.parse = function parse (data) {\n            var this$1$1 = this;\n\n            data.offset(this.offset);\n\n            this.format = data.readLong();\n            this.italicAngle = data.readFixed_();\n            this.underlinePosition = data.readShort_();\n            this.underlineThickness = data.readShort_();\n            this.isFixedPitch = data.readLong();\n            this.minMemType42 = data.readLong();\n            this.maxMemType42 = data.readLong();\n            this.minMemType1 = data.readLong();\n            this.maxMemType1 = data.readLong();\n\n            var numberOfGlyphs;\n\n            switch (this.format) {\n              case 0x00010000:\n              case 0x00030000:\n                break;\n\n              case 0x00020000:\n                numberOfGlyphs = data.readShort();\n                this.glyphNameIndex = data.times(numberOfGlyphs, data.readShort);\n                this.names = [];\n                var limit = this.offset + this.length;\n                while (data.offset() < limit) {\n                    this$1$1.names.push(data.readString(data.readByte()));\n                }\n                break;\n\n              case 0x00025000:\n                numberOfGlyphs = data.readShort();\n                this.offsets = data.read(numberOfGlyphs);\n                break;\n\n              case 0x00040000:\n                this.map = data.times(this.file.maxp.numGlyphs, data.readShort);\n                break;\n            }\n        };\n\n        anonymous.prototype.glyphFor = function glyphFor (code) {\n            switch (this.format) {\n              case 0x00010000:\n                return POSTSCRIPT_GLYPHS[code] || \".notdef\";\n\n              case 0x00020000:\n                var index = this.glyphNameIndex[code];\n                if (index < POSTSCRIPT_GLYPHS.length) {\n                    return POSTSCRIPT_GLYPHS[index];\n                }\n                return this.names[index - POSTSCRIPT_GLYPHS.length] || \".notdef\";\n\n              case 0x00025000:\n\n              case 0x00030000:\n                return \".notdef\";\n\n              case 0x00040000:\n                return this.map[code] || 0xFFFF;\n            }\n        };\n\n        anonymous.prototype.render = function render (mapping) {\n            var this$1$1 = this;\n\n            if (this.format == 0x00030000) {\n                return this.raw();\n            }\n\n            // keep original header, but set format to 2.0\n            var out = BinaryStream(this.rawData.slice(this.offset, 32));\n            out.writeLong(0x00020000);\n            out.offset(32);\n\n            var indexes = [];\n            var strings = [];\n\n            for (var i = 0; i < mapping.length; ++i) {\n                var id = mapping[i];\n                var post = this$1$1.glyphFor(id);\n                var index = POSTSCRIPT_GLYPHS.indexOf(post);\n                if (index >= 0) {\n                    indexes.push(index);\n                } else {\n                    indexes.push(POSTSCRIPT_GLYPHS.length + strings.length);\n                    strings.push(post);\n                }\n            }\n\n            out.writeShort(mapping.length);\n\n            for (i = 0; i < indexes.length; ++i) {\n                out.writeShort(indexes[i]);\n            }\n\n            for (i = 0; i < strings.length; ++i) {\n                out.writeByte(strings[i].length);\n                out.writeString(strings[i]);\n            }\n\n            return out.get();\n        };\n\n        return anonymous;\n    }(Table));\n})();\n\nvar CmapTable = (function(){\n    var CmapEntry = function CmapEntry(data, offset, codeMap) {\n        var self = this;\n        self.platformID = data.readShort();\n        self.platformSpecificID = data.readShort();\n        self.offset = offset + data.readLong();\n\n        data.saveExcursion(function(){\n            var code;\n            data.offset(self.offset);\n            self.format = data.readShort();\n\n            switch (self.format) {\n            case 0:\n                self.length = data.readShort();\n                self.language = data.readShort();\n                for (var i = 0; i < 256; ++i) {\n                    codeMap[i] = data.readByte();\n                }\n                break;\n\n            case 4:\n                self.length = data.readShort();\n                self.language = data.readShort();\n                var segCount = data.readShort() / 2;\n\n                data.skip(6);   // searchRange, entrySelector, rangeShift\n                var endCode = data.times(segCount, data.readShort);\n                data.skip(2);   // reserved pad\n                var startCode = data.times(segCount, data.readShort);\n                var idDelta = data.times(segCount, data.readShort_);\n                var idRangeOffset = data.times(segCount, data.readShort);\n\n                var count = (self.length + self.offset - data.offset()) / 2;\n                var glyphIds = data.times(count, data.readShort);\n\n                for (i = 0; i < segCount; ++i) {\n                    var start = startCode[i], end = endCode[i];\n                    for (code = start; code <= end; ++code) {\n                        var glyphId;\n                        if (idRangeOffset[i] === 0) {\n                            glyphId = code + idDelta[i];\n                        } else {\n                            ///\n                            // When non-zero, idRangeOffset contains for each segment the byte offset of the Glyph ID\n                            // into the glyphIds table, from the *current* `i` cell of idRangeOffset.  In other words,\n                            // this offset spans from the first into the second array.  This works, because the arrays\n                            // are consecutive in the TTF file:\n                            //\n                            // [ ...idRangeOffset... ][ ...glyphIds... ]\n                            //   ...... 48 ......   .... ID ....\n                            //          ^----- 48 bytes -----^\n                            //\n                            // (but I can't stop wondering why is it not just a plain index, possibly incremented by 1\n                            // so that we can have that special `zero` value.)\n                            //\n                            // The elements of idRangeOffset are even numbers, because both arrays contain 16-bit words,\n                            // yet the offset is in bytes.  That is why we divide it by 2.  Then we subtract the\n                            // remaining segments (segCount-i), and add the code-start offset, to which we need to add\n                            // the corresponding delta to get the actual glyph ID.\n                            ///\n                            var index = idRangeOffset[i] / 2 - (segCount - i) + (code - start);\n                            glyphId = glyphIds[index] || 0;\n                            if (glyphId !== 0) {\n                                glyphId += idDelta[i];\n                            }\n                        }\n                        codeMap[code] = glyphId & 0xFFFF;\n                    }\n                }\n                break;\n\n            case 6:\n                self.length = data.readShort();\n                self.language = data.readShort();\n                code = data.readShort();\n                var length = data.readShort();\n                while (length-- > 0) {\n                    codeMap[code++] = data.readShort();\n                }\n                break;\n\n            case 12:\n                data.readShort(); // reserved\n                self.length = data.readLong();\n                self.language = data.readLong();\n                var ngroups = data.readLong();\n                while (ngroups-- > 0) {\n                    code = data.readLong();\n                    var endCharCode = data.readLong();\n                    var glyphCode = data.readLong();\n                    while (code <= endCharCode) {\n                        codeMap[code++] = glyphCode++;\n                    }\n                }\n                break;\n\n            default:\n                if (window.console) {\n                    window.console.error(\"Unhandled CMAP format: \" + self.format);\n                }\n            }\n        });\n    };\n\n    function renderCharmap(ncid2ogid, ogid2ngid) {\n        var codes = sortedKeys(ncid2ogid);\n        var startCodes = [];\n        var endCodes = [];\n        var last = null;\n        var diff = null;\n\n        function new_gid(charcode) {\n            return ogid2ngid[ncid2ogid[charcode]];\n        }\n\n        for (var i = 0; i < codes.length; ++i) {\n            var code = codes[i];\n            var gid = new_gid(code);\n            var delta = gid - code;\n            if (last == null || delta !== diff) {\n                if (last) {\n                    endCodes.push(last);\n                }\n                startCodes.push(code);\n                diff = delta;\n            }\n            last = code;\n        }\n\n        if (last) {\n            endCodes.push(last);\n        }\n        endCodes.push(0xFFFF);\n        startCodes.push(0xFFFF);\n\n        var segCount = startCodes.length;\n        var segCountX2 = segCount * 2;\n        var searchRange = 2 * Math.pow(2, Math.floor(Math.log(segCount) / Math.LN2));\n        var entrySelector = Math.log(searchRange / 2) / Math.LN2;\n        var rangeShift = segCountX2 - searchRange;\n\n        var deltas = [];\n        var rangeOffsets = [];\n        var glyphIds = [];\n\n        for (i = 0; i < segCount; ++i) {\n            var startCode = startCodes[i];\n            var endCode = endCodes[i];\n            if (startCode == 0xFFFF) {\n                deltas.push(0);\n                rangeOffsets.push(0);\n                break;\n            }\n            var startGlyph = new_gid(startCode);\n            if (startCode - startGlyph >= 0x8000) {\n                deltas.push(0);\n                rangeOffsets.push(2 * (glyphIds.length + segCount - i));\n                for (var j = startCode; j <= endCode; ++j) {\n                    glyphIds.push(new_gid(j));\n                }\n            } else {\n                deltas.push(startGlyph - startCode);\n                rangeOffsets.push(0);\n            }\n        }\n\n        var out = BinaryStream();\n\n        out.writeShort(3);      // platformID\n        out.writeShort(1);      // platformSpecificID\n        out.writeLong(12);      // offset\n        out.writeShort(4);      // format\n        out.writeShort(16 + segCount * 8 + glyphIds.length * 2); // length\n        out.writeShort(0);      // language\n        out.writeShort(segCountX2);\n        out.writeShort(searchRange);\n        out.writeShort(entrySelector);\n        out.writeShort(rangeShift);\n\n        endCodes.forEach(out.writeShort);\n        out.writeShort(0);      // reserved pad\n        startCodes.forEach(out.writeShort);\n        deltas.forEach(out.writeShort_);\n        rangeOffsets.forEach(out.writeShort);\n        glyphIds.forEach(out.writeShort);\n\n        return out.get();\n    }\n\n    return (function (Table) {\n        function anonymous () {\n            Table.apply(this, arguments);\n        }\n\n        if ( Table ) anonymous.__proto__ = Table;\n        anonymous.prototype = Object.create( Table && Table.prototype );\n        anonymous.prototype.constructor = anonymous;\n\n        anonymous.prototype.parse = function parse (data) {\n            var self = this;\n            var offset = self.offset;\n            data.offset(offset);\n            self.codeMap = {};\n            self.version = data.readShort();\n            var tableCount = data.readShort();\n            self.tables = data.times(tableCount, function(){\n                return new CmapEntry(data, offset, self.codeMap);\n            });\n        };\n\n        anonymous.render = function render (ncid2ogid, ogid2ngid) {\n            var out = BinaryStream();\n            out.writeShort(0);  // version\n            out.writeShort(1);  // tableCount\n            out.write(renderCharmap(ncid2ogid, ogid2ngid));\n            return out.get();\n        };\n\n        return anonymous;\n    }(Table));\n\n})();\n\nvar OS2Table = (function (Table) {\n    function OS2Table () {\n        Table.apply(this, arguments);\n    }\n\n    if ( Table ) OS2Table.__proto__ = Table;\n    OS2Table.prototype = Object.create( Table && Table.prototype );\n    OS2Table.prototype.constructor = OS2Table;\n\n    OS2Table.prototype.parse = function parse (data) {\n        data.offset(this.offset);\n        this.version = data.readShort();\n        this.averageCharWidth = data.readShort_();\n        this.weightClass = data.readShort();\n        this.widthClass = data.readShort();\n        this.type = data.readShort();\n        this.ySubscriptXSize = data.readShort_();\n        this.ySubscriptYSize = data.readShort_();\n        this.ySubscriptXOffset = data.readShort_();\n        this.ySubscriptYOffset = data.readShort_();\n        this.ySuperscriptXSize = data.readShort_();\n        this.ySuperscriptYSize = data.readShort_();\n        this.ySuperscriptXOffset = data.readShort_();\n        this.ySuperscriptYOffset = data.readShort_();\n        this.yStrikeoutSize = data.readShort_();\n        this.yStrikeoutPosition = data.readShort_();\n        this.familyClass = data.readShort_();\n\n        this.panose = data.times(10, data.readByte);\n        this.charRange = data.times(4, data.readLong);\n\n        this.vendorID = data.readString(4);\n        this.selection = data.readShort();\n        this.firstCharIndex = data.readShort();\n        this.lastCharIndex = data.readShort();\n\n        if (this.version > 0) {\n            this.ascent = data.readShort_();\n            this.descent = data.readShort_();\n            this.lineGap = data.readShort_();\n            this.winAscent = data.readShort();\n            this.winDescent = data.readShort();\n            this.codePageRange = data.times(2, data.readLong);\n\n            if (this.version > 1) {\n                this.xHeight = data.readShort();\n                this.capHeight = data.readShort();\n                this.defaultChar = data.readShort();\n                this.breakChar = data.readShort();\n                this.maxContext = data.readShort();\n            }\n        }\n    };\n\n    OS2Table.prototype.render = function render () {\n        return this.raw();\n    };\n\n    return OS2Table;\n}(Table));\n\nvar subsetTag = 100000;\n\nfunction nextSubsetTag() {\n    var ret = \"\", n = String(subsetTag);\n    for (var i = 0; i < n.length; ++i) {\n        ret += String.fromCharCode(n.charCodeAt(i) - 48 + 65);\n    }\n    ++subsetTag;\n    return ret;\n}\n\nvar Subfont = function Subfont(font) {\n    this.font = font;\n    this.subset = {};\n    this.unicodes = {};\n    this.ogid2ngid = { 0: 0 };\n    this.ngid2ogid = { 0: 0 };\n    this.ncid2ogid = {};\n    this.next = this.firstChar = 1;\n    this.nextGid = 1;\n    this.psName = nextSubsetTag() + \"+\" + this.font.psName;\n};\n\nSubfont.prototype.use = function use (ch) {\n    var self = this;\n    if (typeof ch == \"string\") {\n        return ucs2decode(ch).reduce(function(ret, code){\n            return ret + String.fromCharCode(self.use(code));\n        }, \"\");\n    }\n    var code = self.unicodes[ch];\n    if (!code) {\n        code = self.next++;\n        self.subset[code] = ch;\n        self.unicodes[ch] = code;\n\n        // generate new GID (glyph ID) and maintain newGID ->\n        // oldGID and back mappings\n        var old_gid = self.font.cmap.codeMap[ch];\n        if (old_gid) {\n            self.ncid2ogid[code] = old_gid;\n            if (self.ogid2ngid[old_gid] == null) {\n                var new_gid = self.nextGid++;\n                self.ogid2ngid[old_gid] = new_gid;\n                self.ngid2ogid[new_gid] = old_gid;\n            }\n        }\n    }\n    return code;\n};\n\nSubfont.prototype.encodeText = function encodeText (text) {\n    return this.use(text);\n};\n\nSubfont.prototype.glyphIds = function glyphIds () {\n    return sortedKeys(this.ogid2ngid);\n};\n\nSubfont.prototype.glyphsFor = function glyphsFor (glyphIds, result) {\n        var this$1$1 = this;\n\n    if (!result) {\n        result = {};\n    }\n    for (var i = 0; i < glyphIds.length; ++i) {\n        var id = glyphIds[i];\n        if (!result[id]) {\n            var glyph = result[id] = this$1$1.font.glyf.glyphFor(id);\n            if (glyph && glyph.compound) {\n                this$1$1.glyphsFor(glyph.glyphIds, result);\n            }\n        }\n    }\n    return result;\n};\n\nSubfont.prototype.render = function render () {\n        var this$1$1 = this;\n\n    var glyphs = this.glyphsFor(this.glyphIds());\n\n    // add missing sub-glyphs\n    for (var old_gid in glyphs) {\n        if (hasOwnProperty$2(glyphs, old_gid)) {\n            old_gid = parseInt(old_gid, 10);\n            if (this$1$1.ogid2ngid[old_gid] == null) {\n                var new_gid = this$1$1.nextGid++;\n                this$1$1.ogid2ngid[old_gid] = new_gid;\n                this$1$1.ngid2ogid[new_gid] = old_gid;\n            }\n        }\n    }\n\n    // must obtain old_gid_ids in an order matching sorted\n    // new_gid_ids\n    var new_gid_ids = sortedKeys(this.ngid2ogid);\n    var old_gid_ids = new_gid_ids.map(function(id){\n        return this.ngid2ogid[id];\n    }, this);\n\n    var font = this.font;\n    var glyf = font.glyf.render(glyphs, old_gid_ids, this.ogid2ngid);\n    var loca = font.loca.render(glyf.offsets);\n\n    this.lastChar = this.next - 1;\n\n    var tables = {\n        \"cmap\" : CmapTable.render(this.ncid2ogid, this.ogid2ngid),\n        \"glyf\" : glyf.table,\n        \"loca\" : loca.table,\n        \"hmtx\" : font.hmtx.render(old_gid_ids),\n        \"hhea\" : font.hhea.render(old_gid_ids),\n        \"maxp\" : font.maxp.render(old_gid_ids),\n        \"post\" : font.post.render(old_gid_ids),\n        \"name\" : font.name.render(this.psName),\n        \"head\" : font.head.render(loca.format),\n        \"OS/2\" : font.os2.render()\n    };\n\n    return this.font.directory.render(tables);\n};\n\nSubfont.prototype.cidToGidMap = function cidToGidMap () {\n        var this$1$1 = this;\n\n    var out = BinaryStream(), len = 0;\n    for (var cid = this.firstChar; cid < this.next; ++cid) {\n        while (len < cid) {\n            out.writeShort(0);\n            len++;\n        }\n        var old_gid = this$1$1.ncid2ogid[cid];\n        if (old_gid) {\n            var new_gid = this$1$1.ogid2ngid[old_gid];\n            out.writeShort(new_gid);\n        } else {\n            out.writeShort(0);\n        }\n        len++;\n    }\n    return out.get();\n};\n\nvar TTFFont = function TTFFont(rawData, name) {\n    var self = this;\n    var data = self.contents = BinaryStream(rawData);\n    if (data.readString(4) == \"ttcf\") {\n        var offset;\n        var parse = function() {\n            data.offset(offset);\n            self.parse();\n        };\n        if (!name) {\n            throw new Error(\"Must specify a name for TTC files\");\n        }\n        data.readLong();    // version\n        var numFonts = data.readLong();\n        for (var i = 0; i < numFonts; ++i) {\n            offset = data.readLong();\n            data.saveExcursion(parse);\n            if (self.psName == name) {\n                return;\n            }\n        }\n        throw new Error(\"Font \" + name + \" not found in collection\");\n    } else {\n        data.offset(0);\n        self.parse();\n    }\n};\n\nTTFFont.prototype.parse = function parse () {\n    var dir = this.directory = new Directory(this.contents);\n\n    this.head = dir.readTable(\"head\", HeadTable);\n    this.loca = dir.readTable(\"loca\", LocaTable);\n    this.hhea = dir.readTable(\"hhea\", HheaTable);\n    this.maxp = dir.readTable(\"maxp\", MaxpTable);\n    this.hmtx = dir.readTable(\"hmtx\", HmtxTable);\n    this.glyf = dir.readTable(\"glyf\", GlyfTable);\n    this.name = dir.readTable(\"name\", NameTable);\n    this.post = dir.readTable(\"post\", PostTable);\n    this.cmap = dir.readTable(\"cmap\", CmapTable);\n    this.os2  = dir.readTable(\"OS/2\", OS2Table);\n\n    this.psName = this.name.postscriptName;\n    this.ascent = this.os2.ascent || this.hhea.ascent;\n    this.descent = this.os2.descent || this.hhea.descent;\n    this.lineGap = this.os2.lineGap || this.hhea.lineGap;\n    this.scale = 1000 / this.head.unitsPerEm;\n};\n\nTTFFont.prototype.widthOfGlyph = function widthOfGlyph (glyph) {\n    return this.hmtx.forGlyph(glyph).advance * this.scale;\n};\n\nTTFFont.prototype.makeSubset = function makeSubset () {\n    return new Subfont(this);\n};\n\nvar deflate = deflate$1;\n\nfunction supportsDeflate() {\n    return true;\n}\n\n/* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n/* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n/* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n/* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n\nvar browser$1 = support$1.browser;\nvar NL = \"\\n\";\n\nvar RESOURCE_COUNTER = 0;\n\nvar PAPER_SIZE = {\n    a0        : [ 2383.94 , 3370.39 ],\n    a1        : [ 1683.78 , 2383.94 ],\n    a2        : [ 1190.55 , 1683.78 ],\n    a3        : [ 841.89  , 1190.55 ],\n    a4        : [ 595.28  , 841.89  ],\n    a5        : [ 419.53  , 595.28  ],\n    a6        : [ 297.64  , 419.53  ],\n    a7        : [ 209.76  , 297.64  ],\n    a8        : [ 147.40  , 209.76  ],\n    a9        : [ 104.88  , 147.40  ],\n    a10       : [ 73.70   , 104.88  ],\n    b0        : [ 2834.65 , 4008.19 ],\n    b1        : [ 2004.09 , 2834.65 ],\n    b2        : [ 1417.32 , 2004.09 ],\n    b3        : [ 1000.63 , 1417.32 ],\n    b4        : [ 708.66  , 1000.63 ],\n    b5        : [ 498.90  , 708.66  ],\n    b6        : [ 354.33  , 498.90  ],\n    b7        : [ 249.45  , 354.33  ],\n    b8        : [ 175.75  , 249.45  ],\n    b9        : [ 124.72  , 175.75  ],\n    b10       : [ 87.87   , 124.72  ],\n    c0        : [ 2599.37 , 3676.54 ],\n    c1        : [ 1836.85 , 2599.37 ],\n    c2        : [ 1298.27 , 1836.85 ],\n    c3        : [ 918.43  , 1298.27 ],\n    c4        : [ 649.13  , 918.43  ],\n    c5        : [ 459.21  , 649.13  ],\n    c6        : [ 323.15  , 459.21  ],\n    c7        : [ 229.61  , 323.15  ],\n    c8        : [ 161.57  , 229.61  ],\n    c9        : [ 113.39  , 161.57  ],\n    c10       : [ 79.37   , 113.39  ],\n    executive : [ 521.86  , 756.00  ],\n    folio     : [ 612.00  , 936.00  ],\n    legal     : [ 612.00  , 1008.00 ],\n    letter    : [ 612.00  , 792.00  ],\n    tabloid   : [ 792.00  , 1224.00 ]\n};\n\nfunction makeOutput() {\n    var indentLevel = 0, output = BinaryStream();\n    function out() {\n        var arguments$1 = arguments;\n\n        for (var i = 0; i < arguments.length; ++i) {\n            var x = arguments$1[i];\n            if (x === undefined) {\n                throw new Error(\"Cannot output undefined to PDF\");\n            }\n            else if (x instanceof PDFValue) {\n                x.beforeRender(out);\n                x.render(out);\n            }\n            else if (isArray(x)) {\n                renderArray(x, out);\n            }\n            else if (isDate(x)) {\n                renderDate(x, out);\n            }\n            else if (typeof x == \"number\") {\n                if (isNaN(x)) {\n                    throw new Error(\"Cannot output NaN to PDF\");\n                }\n                // make sure it doesn't end up in exponent notation\n                var num = x.toFixed(7);\n                if (num.indexOf(\".\") >= 0) {\n                    num = num.replace(/\\.?0+$/, \"\");\n                }\n                if (num == \"-0\") {\n                    num = \"0\";\n                }\n                output.writeString(num);\n            }\n            else if (/string|boolean/.test(typeof x)) {\n                output.writeString(String(x));\n            }\n            else if (typeof x.get == \"function\") {\n                output.write(x.get());\n            }\n            else if (typeof x == \"object\") {\n                if (!x) {\n                    output.writeString(\"null\");\n                } else {\n                    out(new PDFDictionary(x));\n                }\n            }\n        }\n    }\n    out.writeData = function(data) {\n        output.write(data);\n    };\n    out.withIndent = function(f) {\n        ++indentLevel;\n        f(out);\n        --indentLevel;\n    };\n    out.indent = function() {\n        out(NL, pad(\"\", indentLevel * 2, \"  \"));\n        out.apply(null, arguments);\n    };\n    out.offset = function() {\n        return output.offset();\n    };\n    out.toString = function() {\n        throw new Error(\"FIX CALLER\");\n    };\n    out.get = function() {\n        return output.get();\n    };\n    out.stream = function() {\n        return output;\n    };\n    return out;\n}\n\nfunction wrapObject(value, id) {\n    var beforeRender = value.beforeRender;\n    var renderValue = value.render;\n\n    value.beforeRender = function(){};\n\n    value.render = function(out) {\n        out(id, \" 0 R\");\n    };\n\n    value.renderFull = function(out) {\n        value._offset = out.offset();\n        out(id, \" 0 obj \");\n        beforeRender.call(value, out);\n        renderValue.call(value, out);\n        out(\" endobj\");\n    };\n}\n\nfunction getPaperOptions(getOption) {\n    if (typeof getOption != \"function\") {\n        var options = getOption;\n        getOption = function(key, def) {\n            return key in options ? options[key] : def;\n        };\n    }\n    var paperSize = getOption(\"paperSize\", PAPER_SIZE.a4);\n    if (!paperSize) {\n        return {};\n    }\n    if (typeof paperSize == \"string\") {\n        paperSize = PAPER_SIZE[paperSize.toLowerCase()];\n        if (paperSize == null) {\n            throw new Error(\"Unknown paper size\");\n        }\n    }\n\n    paperSize[0] = unitsToPoints(paperSize[0]);\n    paperSize[1] = unitsToPoints(paperSize[1]);\n\n    if (getOption(\"landscape\", false)) {\n        paperSize = [\n            Math.max(paperSize[0], paperSize[1]),\n            Math.min(paperSize[0], paperSize[1])\n        ];\n    }\n\n    var margin = getOption(\"margin\");\n    if (margin) {\n        if (typeof margin == \"string\" || typeof margin == \"number\") {\n            margin = unitsToPoints(margin, 0);\n            margin = { left: margin, top: margin, right: margin, bottom: margin };\n        } else {\n            margin = {\n                left   : unitsToPoints(margin.left, 0),\n                top    : unitsToPoints(margin.top, 0),\n                right  : unitsToPoints(margin.right, 0),\n                bottom : unitsToPoints(margin.bottom, 0)\n            };\n        }\n        if (getOption(\"addMargin\")) {\n            paperSize[0] += margin.left + margin.right;\n            paperSize[1] += margin.top + margin.bottom;\n        }\n    }\n    return { paperSize: paperSize, margin: margin };\n}\n\nvar FONT_CACHE = {\n    \"Times-Roman\"           : true,\n    \"Times-Bold\"            : true,\n    \"Times-Italic\"          : true,\n    \"Times-BoldItalic\"      : true,\n    \"Helvetica\"             : true,\n    \"Helvetica-Bold\"        : true,\n    \"Helvetica-Oblique\"     : true,\n    \"Helvetica-BoldOblique\" : true,\n    \"Courier\"               : true,\n    \"Courier-Bold\"          : true,\n    \"Courier-Oblique\"       : true,\n    \"Courier-BoldOblique\"   : true,\n    \"Symbol\"                : true,\n    \"ZapfDingbats\"          : true\n};\n\nfunction loadBinary(url, cont) {\n    // IE throws Accesss denied error for Data URIs\n    var m;\n    if (browser$1.msie && (m = /^data:.*?;base64,/i.exec(url))) {\n        cont(base64ToUint8Array(url.substr(m[0].length)));\n        return;\n    }\n\n    function error() {\n        if (window.console) {\n            if (window.console.error) {\n                window.console.error(\"Cannot load URL: %s\", url);\n            } else {\n                window.console.log(\"Cannot load URL: %s\", url);\n            }\n        }\n        cont(null);\n    }\n    var req = new XMLHttpRequest();\n    req.open('GET', url, true);\n    if (HAS_TYPED_ARRAYS) {\n        req.responseType = \"arraybuffer\";\n    }\n    req.onload = function() {\n        if (req.status == 200 || req.status == 304) {\n            if (HAS_TYPED_ARRAYS) {\n                cont(new Uint8Array(req.response));\n            } else {\n                cont(new window.VBArray(req.responseBody).toArray()); // IE9 only\n            }\n        } else {\n            error();\n        }\n    };\n    req.onerror = error;\n    req.send(null);\n}\n\nfunction loadFont(url, cont) {\n    var font = FONT_CACHE[url];\n    if (font) {\n        cont(font);\n    } else {\n        loadBinary(url, function(data){\n            if (data == null) {\n                throw new Error(\"Cannot load font from \" + url);\n            } else {\n                var font = new TTFFont(data);\n                FONT_CACHE[url] = font;\n                cont(font);\n            }\n        });\n    }\n}\n\nvar IMAGE_CACHE$1 = {};\n\nfunction clearImageCache() {\n    IMAGE_CACHE$1 = {};\n}\n\nfunction loadImage(url, size, cont, options) {\n    var img = IMAGE_CACHE$1[url], bloburl, blob;\n    if (img) {\n        cont(img);\n    } else {\n        img = new Image();\n        if (!(/^data:/i.test(url))) {\n            img.crossOrigin = \"Anonymous\";\n        }\n        if (HAS_TYPED_ARRAYS && !(/^data:/i.test(url))) {\n            // IE10 fails to load images from another domain even when the server sends the\n            // proper CORS headers.  a XHR, however, will be able to load the data.\n            // http://stackoverflow.com/a/19734516/154985\n            //\n            // On the other hand, it's worth doing it this way for all browsers which support\n            // responseType = \"blob\" (HAS_TYPED_ARRAYS will be true), because we can inspect the\n            // mime type and if it's a JPEG (very common case) we can save a lot of time in\n            // _load below.\n            var xhr = new XMLHttpRequest();\n            xhr.onload = function() {\n                blob = xhr.response;\n                if (browser$1.mozilla && blob.type == \"image/svg+xml\") {\n                    // Firefox won't render SVGs that don't contain width and height attributes.\n                    var reader = new FileReader();\n                    reader.onload = function() {\n                        var doc = new window.DOMParser().parseFromString(this.result, \"image/svg+xml\");\n                        var svg = doc.documentElement;\n                        if (svg.getAttribute(\"width\") && svg.getAttribute(\"height\")) {\n                            // we're good, continue with the existing blob.\n                            bloburl = URL.createObjectURL(blob);\n                            _load(bloburl);\n                        } else {\n                            svg.setAttribute(\"width\", size.width);\n                            svg.setAttribute(\"height\", size.height);\n                            var xml = new window.XMLSerializer().serializeToString(svg);\n                            var dataURL = \"data:image/svg+xml;base64,\" + (encodeBase64(xml));\n                            _load(dataURL);\n                        }\n                    };\n                    reader.readAsText(blob);\n                } else {\n                    bloburl = URL.createObjectURL(blob);\n                    _load(bloburl);\n                }\n            };\n            xhr.onerror = _onerror;\n            xhr.open(\"GET\", url, true);\n            xhr.responseType = \"blob\";\n            xhr.send();\n        } else {\n            _load(url);\n        }\n    }\n\n    function _load(url) {\n        img.src = url;\n        if (img.complete && !browser$1.msie) {\n            // IE, bless its little heart, says img.complete == true even though the image is\n            // not loaded (width=0), therefore we must go the onload route (ticket 929635).\n            _onload.call(img);\n        } else {\n            img.onload = _onload;\n            img.onerror = _onerror;\n        }\n    }\n\n    function _trycanvas() {\n        if (!size) {\n            size = { width: img.width, height: img.height };\n        }\n\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = size.width;\n        canvas.height = size.height;\n\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0, size.width, size.height);\n\n        var imgdata;\n        try {\n            imgdata = ctx.getImageData(0, 0, size.width, size.height);\n        } catch (ex) {\n            // it tainted the canvas -- can't draw it.\n            _onerror();\n            return;\n        } finally {\n            if (bloburl) {\n                URL.revokeObjectURL(bloburl);\n            }\n        }\n\n        // in case it contains transparency, we must separate rgb data from the alpha\n        // channel and create a PDFRawImage image with opacity.  otherwise we can use a\n        // PDFJpegImage.\n        //\n        // to do this in one step, we create the rgb and alpha streams anyway, even if\n        // we might end up not using them if hasAlpha remains false.\n\n        var hasAlpha = false, rgb = BinaryStream(), alpha = BinaryStream();\n        var rawbytes = imgdata.data;\n        var i = 0;\n        while (i < rawbytes.length) {\n            rgb.writeByte(rawbytes[i++]);\n            rgb.writeByte(rawbytes[i++]);\n            rgb.writeByte(rawbytes[i++]);\n            var a = rawbytes[i++];\n            if (a < 255) {\n                hasAlpha = true;\n            }\n            alpha.writeByte(a);\n        }\n\n        if (hasAlpha || options.keepPNG) {\n            img = new PDFRawImage(size.width, size.height, rgb, alpha);\n        } else {\n            // no transparency, encode as JPEG.\n            var data = canvas.toDataURL(\"image/jpeg\", options.jpegQuality);\n            data = data.substr(data.indexOf(\";base64,\") + 8);\n\n            var stream = BinaryStream();\n            stream.writeBase64(data);\n            img = new PDFJpegImage(stream);\n        }\n\n        cont(IMAGE_CACHE$1[url] = img);\n    }\n\n    function _onerror() {\n        cont(IMAGE_CACHE$1[url] = \"ERROR\");\n    }\n\n    function _onload() {\n        if (size) {\n            var svg = (blob && blob.type === 'image/svg+xml') || (\n              /^data:image\\/svg\\+xml;/i.test(this.src.substring(0, 19))\n            );\n\n            var upscale = size.width >= img.width || size.height >= img.height;\n\n            // Use the original image if requested size is bigger than the source,\n            // unless it's an SVG that can be upscaled.\n            if (!svg && upscale) {\n                size = null;\n            }\n        }\n        if (!size && blob && /^image\\/jpe?g$/i.test(blob.type)) {\n            // If we know we got a JPEG, we can skip the process of rendering it to a\n            // canvas, getting the pixel data, searching for transparency we know we won't\n            // find, getting back a data URI and then decoding the BASE64 to finally get the\n            // binary we already have.  Also, we avoid downgrading the image quality, with\n            // the possible drawback of making a bigger PDF; still, seems legit.\n            //\n            // Besides saving a lot of work, this also reuses the buffer memory\n            // (BinaryStream does not create a copy), potentially saving some GC cycles.\n            var reader = new FileReader();\n            reader.onload = function() {\n                try {\n                    var img = new PDFJpegImage(BinaryStream(new Uint8Array(this.result)));\n                    URL.revokeObjectURL(bloburl);\n                    cont(IMAGE_CACHE$1[url] = img);\n                } catch (ex) {\n                    // if there's an error parsing the JPEG stream, it could be due to a\n                    // misconfigured server (improper content-type:\n                    // https://github.com/telerik/kendo-ui-core/issues/4184).  If that's the case,\n                    // the canvas will still be able to draw it.\n                    _trycanvas();\n                }\n            };\n            reader.readAsArrayBuffer(blob);\n        } else {\n            _trycanvas();\n        }\n    }\n}\n\nfunction manyLoader(loadOne) {\n    return function(urls, callback) {\n        var n = urls.length, i = n;\n        if (n === 0) {\n            return callback();\n        }\n        function next() {\n            if (--n === 0) {\n                callback();\n            }\n        }\n        while (i-- > 0) {\n            loadOne(urls[i], next);\n        }\n    };\n}\n\nvar loadFonts = manyLoader(loadFont);\nvar loadImages = function(images, callback, options) {\n    options = Object.assign({\n        jpegQuality : 0.92,\n        keepPNG     : false\n    }, options);\n    var urls = Object.keys(images), n = urls.length;\n    if (n === 0) {\n        return callback();\n    }\n    function next() {\n        if (--n === 0) {\n            callback();\n        }\n    }\n    urls.forEach(function(url){\n        loadImage(url, images[url], next, options);\n    });\n};\n\nvar PDFDocument = function PDFDocument (options) {\n    var self = this;\n    var out = makeOutput();\n    var objcount = 0;\n    var objects = [];\n\n    function getOption(name, defval) {\n        return (options && options[name] != null) ? options[name] : defval;\n    }\n\n    self.getOption = getOption;\n\n    self.attach = function(value) {\n        if (objects.indexOf(value) < 0) {\n            wrapObject(value, ++objcount);\n            objects.push(value);\n        }\n        return value;\n    };\n\n    self.pages = [];\n\n    self.FONTS = {};\n    self.IMAGES = {};\n    self.GRAD_COL_FUNCTIONS = {}; // cache for color gradient functions\n    self.GRAD_OPC_FUNCTIONS = {}; // cache for opacity gradient functions\n    self.GRAD_COL = {}; // cache for whole color gradient objects\n    self.GRAD_OPC = {}; // cache for whole opacity gradient objects\n\n    var catalog = self.attach(new PDFCatalog());\n    var pageTree = self.attach(new PDFPageTree());\n\n    if (getOption(\"autoPrint\")) {\n        var nameTree = {};\n        nameTree.JavaScript = new PDFDictionary({ Names: [\n            new PDFString(\"JS\"), self.attach(new PDFDictionary({\n                S: _(\"JavaScript\"),\n                JS: new PDFString(\"print(true);\")\n            }))\n        ] });\n        catalog.props.Names = new PDFDictionary(nameTree);\n    }\n\n    catalog.setPages(pageTree);\n\n    var info = self.attach(new PDFDictionary({\n        Producer : new PDFString(getOption(\"producer\", \"Kendo UI PDF Generator\"), true), // XXX: kendo.version?\n        Title    : new PDFString(getOption(\"title\", \"\"), true),\n        Author   : new PDFString(getOption(\"author\", \"\"), true),\n        Subject  : new PDFString(getOption(\"subject\", \"\"), true),\n        Keywords : new PDFString(getOption(\"keywords\", \"\"), true),\n        Creator  : new PDFString(getOption(\"creator\", \"Kendo UI PDF Generator\"), true),\n        CreationDate : getOption(\"date\", new Date())\n    }));\n\n    self.addPage = function(options) {\n        var paperOptions  = getPaperOptions(function(name, defval){\n            return (options && options[name] != null) ? options[name] : defval;\n        });\n        var paperSize = paperOptions.paperSize;\n        var margin    = paperOptions.margin;\n        var contentWidth  = paperSize[0];\n        var contentHeight = paperSize[1];\n        if (margin) {\n            contentWidth -= margin.left + margin.right;\n            contentHeight -= margin.top + margin.bottom;\n        }\n        var content = new PDFStream(makeOutput(), null, true);\n        var props = {\n            Contents : self.attach(content),\n            Parent   : pageTree,\n            MediaBox : [ 0, 0, paperSize[0], paperSize[1] ]\n        };\n        var page = new PDFPage(self, props);\n        page._content = content;\n        pageTree.addPage(self.attach(page));\n\n        // canvas-like coord. system.  (0,0) is upper-left.\n        // text must be vertically mirorred before drawing.\n        page.transform(1, 0, 0, -1, 0, paperSize[1]);\n\n        if (margin) {\n            page.translate(margin.left, margin.top);\n            // XXX: clip to right/bottom margin.  Make this optional?\n            page.rect(0, 0, contentWidth, contentHeight);\n            page.clip();\n        }\n\n        self.pages.push(page);\n        return page;\n    };\n\n    self.render = function() {\n        var i;\n        /// file header\n        out(\"%PDF-1.4\", NL, \"%\\xc2\\xc1\\xda\\xcf\\xce\", NL, NL);\n\n        /// file body\n        for (i = 0; i < objects.length; ++i) {\n            objects[i].renderFull(out);\n            out(NL, NL);\n        }\n\n        /// cross-reference table\n        var xrefOffset = out.offset();\n        out(\"xref\", NL, 0, \" \", objects.length + 1, NL);\n        out(\"0000000000 65535 f \", NL);\n        for (i = 0; i < objects.length; ++i) {\n            out(zeropad(objects[i]._offset, 10), \" 00000 n \", NL);\n        }\n        out(NL);\n\n        /// trailer\n        out(\"trailer\", NL);\n        out(new PDFDictionary({\n            Size: objects.length + 1,\n            Root: catalog,\n            Info: info\n        }), NL, NL);\n\n        /// end\n        out(\"startxref\", NL, xrefOffset, NL);\n        out(\"%%EOF\", NL);\n\n        return out.stream().offset(0);\n    };\n\n    self.loadFonts = loadFonts;\n    self.loadImages = loadImages;\n};\n\nPDFDocument.prototype.getFont = function getFont (url) {\n    var font = this.FONTS[url];\n    if (!font) {\n        font = FONT_CACHE[url];\n        if (!font) {\n            throw new Error(\"Font \" + url + \" has not been loaded\");\n        }\n        if (font === true) {\n            font = this.attach(new PDFStandardFont(url));\n        } else {\n            font = this.attach(new PDFFont(this, font));\n        }\n        this.FONTS[url] = font;\n    }\n    return font;\n};\n\nPDFDocument.prototype.getImage = function getImage (url) {\n    var img = this.IMAGES[url];\n    if (!img) {\n        img = IMAGE_CACHE$1[url];\n        if (!img) {\n            throw new Error(\"Image \" + url + \" has not been loaded\");\n        }\n        if (img === \"ERROR\") {\n            return null;\n        }\n        img = this.IMAGES[url] = this.attach(img.asStream(this));\n    }\n    return img;\n};\n\nPDFDocument.prototype.getOpacityGS = function getOpacityGS (opacity, forStroke) {\n    var id = parseFloat(opacity).toFixed(3);\n    opacity = parseFloat(id);\n    id += forStroke ? \"S\" : \"F\";\n    var cache = this._opacityGSCache || (this._opacityGSCache = {});\n    var gs = cache[id];\n    if (!gs) {\n        var props = {\n            Type: _(\"ExtGState\")\n        };\n        if (forStroke) {\n            props.CA = opacity;\n        } else {\n            props.ca = opacity;\n        }\n        gs = this.attach(new PDFDictionary(props));\n        gs._resourceName = _(\"GS\" + (++RESOURCE_COUNTER));\n        cache[id] = gs;\n    }\n    return gs;\n};\n\nPDFDocument.prototype.dict = function dict (props) {\n    return new PDFDictionary(props);\n};\n\nPDFDocument.prototype.name = function name (str) {\n    return _(str);\n};\n\nPDFDocument.prototype.stream = function stream (props, content) {\n    return new PDFStream(content, props);\n};\n\n/* -----[ utils ]----- */\n\nfunction pad(str, len, ch) {\n    while (str.length < len) {\n        str = ch + str;\n    }\n    return str;\n}\n\nfunction zeropad(n, len) {\n    return pad(String(n), len, \"0\");\n}\n\nfunction hasOwnProperty$1(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nvar isArray = Array.isArray || function(obj) {\n    return obj instanceof Array;\n};\n\nfunction isDate(obj) {\n    return obj instanceof Date;\n}\n\nfunction renderArray(a, out) {\n    out(\"[\");\n    if (a.length > 0) {\n        out.withIndent(function(){\n            for (var i = 0; i < a.length; ++i) {\n                if (i > 0 && i % 8 === 0) {\n                    out.indent(a[i]);\n                } else {\n                    out(\" \", a[i]);\n                }\n            }\n        });\n        //out.indent();\n    }\n    out(\" ]\");\n}\n\nfunction renderDate(date, out) {\n    out(\"(D:\",\n        zeropad(date.getUTCFullYear(), 4),\n        zeropad(date.getUTCMonth() + 1, 2),\n        zeropad(date.getUTCDate(), 2),\n        zeropad(date.getUTCHours(), 2),\n        zeropad(date.getUTCMinutes(), 2),\n        zeropad(date.getUTCSeconds(), 2),\n        \"Z)\");\n}\n\nfunction mm2pt(mm) {\n    return mm * (72/25.4);\n}\n\nfunction cm2pt(cm) {\n    return mm2pt(cm * 10);\n}\n\nfunction in2pt(inch)  {\n    return inch * 72;\n}\n\n\nfunction unitsToPoints(x, def) {\n    if (typeof x == \"number\") {\n        return x;\n    }\n    if (typeof x == \"string\") {\n        var m;\n        m = /^\\s*([0-9.]+)\\s*(mm|cm|in|pt)\\s*$/.exec(x);\n        if (m) {\n            var num = parseFloat(m[1]);\n            if (!isNaN(num)) {\n                if (m[2] == \"pt\") {\n                    return num;\n                }\n                return {\n                    \"mm\": mm2pt,\n                    \"cm\": cm2pt,\n                    \"in\": in2pt\n                }[m[2]](num);\n            }\n        }\n    }\n    if (def != null) {\n        return def;\n    }\n    throw new Error(\"Can't parse unit: \" + x);\n}\n\n/* -----[ PDF basic objects ]----- */\n\nvar PDFValue = function PDFValue () {};\n\nPDFValue.prototype.beforeRender = function beforeRender () {};\n\nvar PDFString = (function (PDFValue) {\n    function PDFString(value, utf16be) {\n        PDFValue.call(this);\n        this.value = value;\n        this.utf16be = Boolean(utf16be);\n    }\n\n    if ( PDFValue ) PDFString.__proto__ = PDFValue;\n    PDFString.prototype = Object.create( PDFValue && PDFValue.prototype );\n    PDFString.prototype.constructor = PDFString;\n\n    PDFString.prototype.render = function render (out) {\n        var txt = this.value;\n        if (this.utf16be) {\n            txt = BOM + encodeUTF16BE(txt);\n            txt = txt.replace(/([\\(\\)\\\\])/g, \"\\\\$1\");\n            out(\"(\", txt, \")\");\n        } else {\n            // out.writeString truncates charcodes to 8 bits and\n            // 0x128 & 0xFF is 40, the code for open paren.\n            // therefore we need to do the chopping here to make\n            // sure we backslash all cases.\n            var data = [ 40 ]; // open PDF string '('\n            for (var i = 0; i < txt.length; ++i) {\n                var code = txt.charCodeAt(i) & 0xFF;\n                if (code == 40 || code == 41 || code == 92) {\n                    // backslash before (, ) and \\\n                    data.push(92);\n                }\n                data.push(code);\n            }\n            data.push(41);  // ')' close PDF string\n            out.writeData(data);\n        }\n    };\n\n    PDFString.prototype.toString = function toString () {\n        return this.value;\n    };\n\n    return PDFString;\n}(PDFValue));\n\nvar PDFHexString = (function (PDFString) {\n    function PDFHexString(value) {\n        PDFString.call(this, value);\n        this.value = value;\n    }\n\n    if ( PDFString ) PDFHexString.__proto__ = PDFString;\n    PDFHexString.prototype = Object.create( PDFString && PDFString.prototype );\n    PDFHexString.prototype.constructor = PDFHexString;\n\n    PDFHexString.prototype.render = function render (out) {\n        var this$1$1 = this;\n\n        out(\"<\");\n        for (var i = 0; i < this.value.length; ++i) {\n            out(zeropad(this$1$1.value.charCodeAt(i).toString(16), 4));\n        }\n        out(\">\");\n    };\n\n    return PDFHexString;\n}(PDFString));\n\n/// names\nvar PDFName = (function (PDFValue) {\n    function PDFName(name) {\n        PDFValue.call(this);\n        this.name = name;\n    }\n\n    if ( PDFValue ) PDFName.__proto__ = PDFValue;\n    PDFName.prototype = Object.create( PDFValue && PDFValue.prototype );\n    PDFName.prototype.constructor = PDFName;\n\n    PDFName.get = function get (name) {\n        return _(name);\n    };\n\n    PDFName.prototype.render = function render (out) {\n        out(\"/\" + this.escape());\n    };\n\n    PDFName.prototype.escape = function escape () {\n        return this.name.replace(/[^\\x21-\\x7E]/g, function(c){\n            return \"#\" + zeropad(c.charCodeAt(0).toString(16), 2);\n        });\n    };\n\n    PDFName.prototype.toString = function toString () {\n        return this.name;\n    };\n\n    return PDFName;\n}(PDFValue));\n\nfunction _(name) {\n    return new PDFName(name);\n}\n\n/// dictionary\n\nvar PDFDictionary = (function (PDFValue) {\n    function PDFDictionary(props) {\n        PDFValue.call(this);\n        this.props = props;\n    }\n\n    if ( PDFValue ) PDFDictionary.__proto__ = PDFValue;\n    PDFDictionary.prototype = Object.create( PDFValue && PDFValue.prototype );\n    PDFDictionary.prototype.constructor = PDFDictionary;\n\n    PDFDictionary.prototype.render = function render (out) {\n        var props = this.props, empty = true;\n        out(\"<<\");\n        out.withIndent(function(){\n            for (var i in props) {\n                if (hasOwnProperty$1(props, i) && !/^_/.test(i)) {\n                    empty = false;\n                    out.indent(_(i), \" \", props[i]);\n                }\n            }\n        });\n        if (!empty) {\n            out.indent();\n        }\n        out(\">>\");\n    };\n\n    return PDFDictionary;\n}(PDFValue));\n\n/// streams\n\nvar PDFStream = (function (PDFValue) {\n    function PDFStream(data, props, compress) {\n        PDFValue.call(this);\n        if (typeof data == \"string\") {\n            var tmp = BinaryStream();\n            tmp.write(data);\n            data = tmp;\n        }\n        this.data = data;\n        this.props = props || {};\n        this.compress = compress;\n    }\n\n    if ( PDFValue ) PDFStream.__proto__ = PDFValue;\n    PDFStream.prototype = Object.create( PDFValue && PDFValue.prototype );\n    PDFStream.prototype.constructor = PDFStream;\n\n    PDFStream.prototype.render = function render (out) {\n        var data = this.data.get(), props = this.props;\n        if (this.compress && supportsDeflate()) {\n            if (!props.Filter) {\n                props.Filter = [];\n            } else if (!(props.Filter instanceof Array)) {\n                props.Filter = [ props.Filter ];\n            }\n            props.Filter.unshift(_(\"FlateDecode\"));\n            data = deflate(data);\n        }\n        props.Length = data.length;\n        out(new PDFDictionary(props), \" stream\", NL);\n        out.writeData(data);\n        out(NL, \"endstream\");\n    };\n\n    return PDFStream;\n}(PDFValue));\n\n/// catalog\n\nvar PDFCatalog = (function (PDFDictionary) {\n    function PDFCatalog() {\n        PDFDictionary.call(this, {\n            Type: _(\"Catalog\")\n        });\n    }\n\n    if ( PDFDictionary ) PDFCatalog.__proto__ = PDFDictionary;\n    PDFCatalog.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n    PDFCatalog.prototype.constructor = PDFCatalog;\n\n    PDFCatalog.prototype.setPages = function setPages (pagesObj) {\n        this.props.Pages = pagesObj;\n    };\n\n    return PDFCatalog;\n}(PDFDictionary));\n\n/// page tree\n\nvar PDFPageTree = (function (PDFDictionary) {\n    function PDFPageTree() {\n        PDFDictionary.call(this, {\n            Type  : _(\"Pages\"),\n            Kids  : [],\n            Count : 0\n        });\n    }\n\n    if ( PDFDictionary ) PDFPageTree.__proto__ = PDFDictionary;\n    PDFPageTree.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n    PDFPageTree.prototype.constructor = PDFPageTree;\n\n    PDFPageTree.prototype.addPage = function addPage (pageObj) {\n        this.props.Kids.push(pageObj);\n        this.props.Count++;\n    };\n\n    return PDFPageTree;\n}(PDFDictionary));\n\n/// images\n\n// JPEG\n\nvar SOF_CODES = [0xc0, 0xc1, 0xc2, 0xc3, 0xc5, 0xc6, 0xc7, 0xc9, 0xca, 0xcb, 0xcd, 0xce, 0xcf];\n\nvar PDFJpegImage = function PDFJpegImage(data) {\n    // we must determine the correct color space.  we'll parse a bit\n    // of the JPEG stream for this, it's still better than going\n    // through the canvas.\n    // https://github.com/telerik/kendo-ui-core/issues/2845\n    data.offset(0);\n    var width, height, colorSpace, bitsPerComponent;\n    var soi = data.readShort();\n    if (soi != 0xFFD8) {\n        // XXX: do we have some better options here?\n        throw new Error(\"Invalid JPEG image\");\n    }\n    while (!data.eof()) {\n        var ff = data.readByte();\n        if (ff != 0xFF) {\n            throw new Error(\"Invalid JPEG image\");\n        }\n        var marker = data.readByte();\n        var length = data.readShort();\n        if (SOF_CODES.indexOf(marker) >= 0) {\n            // \"start of frame\" marker\n            bitsPerComponent = data.readByte();\n            height = data.readShort();\n            width = data.readShort();\n            colorSpace = data.readByte();\n            break;\n        }\n        data.skip(length - 2);\n    }\n\n    if (colorSpace == null) {\n        throw new Error(\"Invalid JPEG image\");\n    }\n\n    var props = {\n        Type         : _(\"XObject\"),\n        Subtype      : _(\"Image\"),\n        Width        : width,\n        Height       : height,\n        BitsPerComponent : bitsPerComponent,\n        Filter       : _(\"DCTDecode\")\n    };\n\n    switch (colorSpace) {\n    case 1:\n        props.ColorSpace = _(\"DeviceGray\");\n        break;\n    case 3:\n        props.ColorSpace = _(\"DeviceRGB\");\n        break;\n    case 4:\n        props.ColorSpace = _(\"DeviceCMYK\");\n        props.Decode = [ 1, 0, 1, 0, 1, 0, 1, 0 ]; // invert colors\n        break;\n    }\n\n    this.asStream = function() {\n        data.offset(0);\n        var stream = new PDFStream(data, props);\n        stream._resourceName = _(\"I\" + (++RESOURCE_COUNTER));\n        return stream;\n    };\n};\n\n// PDFRawImage will be used for images with transparency (PNG)\n\nvar PDFRawImage = function PDFRawImage(width, height, rgb, alpha) {\n    this.asStream = function(pdf) {\n        var mask = new PDFStream(alpha, {\n            Type         : _(\"XObject\"),\n            Subtype      : _(\"Image\"),\n            Width        : width,\n            Height       : height,\n            BitsPerComponent : 8,\n            ColorSpace   : _(\"DeviceGray\")\n        }, true);\n        var stream = new PDFStream(rgb, {\n            Type         : _(\"XObject\"),\n            Subtype      : _(\"Image\"),\n            Width        : width,\n            Height       : height,\n            BitsPerComponent : 8,\n            ColorSpace   : _(\"DeviceRGB\"),\n            SMask        : pdf.attach(mask)\n        }, true);\n        stream._resourceName = _(\"I\" + (++RESOURCE_COUNTER));\n        return stream;\n    };\n};\n\n/// standard fonts\n\nvar PDFStandardFont = (function (PDFDictionary) {\n    function PDFStandardFont(name){\n        PDFDictionary.call(this, {\n            Type     : _(\"Font\"),\n            Subtype  : _(\"Type1\"),\n            BaseFont : _(name)\n        });\n\n        this._resourceName = _(\"F\" + (++RESOURCE_COUNTER));\n    }\n\n    if ( PDFDictionary ) PDFStandardFont.__proto__ = PDFDictionary;\n    PDFStandardFont.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n    PDFStandardFont.prototype.constructor = PDFStandardFont;\n\n    PDFStandardFont.prototype.encodeText = function encodeText (str) {\n        return new PDFString(String(str));\n    };\n\n    return PDFStandardFont;\n}(PDFDictionary));\n\n/// TTF fonts\n\nvar PDFFont = (function (PDFDictionary) {\n    function PDFFont(pdf, font, props){\n        PDFDictionary.call(this, {});\n\n        props = this.props;\n        props.Type = _(\"Font\");\n        props.Subtype = _(\"Type0\");\n        props.Encoding = _(\"Identity-H\");\n\n        this._pdf = pdf;\n        this._font = font;\n        this._sub = font.makeSubset();\n        this._resourceName = _(\"F\" + (++RESOURCE_COUNTER));\n\n        var head = font.head;\n\n        this.name = font.psName;\n        var scale = this.scale = font.scale;\n        this.bbox = [\n            head.xMin * scale,\n            head.yMin * scale,\n            head.xMax * scale,\n            head.yMax * scale\n        ];\n\n        this.italicAngle = font.post.italicAngle;\n        this.ascent = font.ascent * scale;\n        this.descent = font.descent * scale;\n        this.lineGap = font.lineGap * scale;\n        this.capHeight = font.os2.capHeight || this.ascent;\n        this.xHeight = font.os2.xHeight || 0;\n        this.stemV = 0;\n\n        this.familyClass = (font.os2.familyClass || 0) >> 8;\n        this.isSerif = this.familyClass >= 1 && this.familyClass <= 7;\n        this.isScript = this.familyClass == 10;\n\n        this.flags = ((font.post.isFixedPitch ? 1 : 0) |\n                    (this.isSerif ? 1 << 1 : 0) |\n                    (this.isScript ? 1 << 3 : 0) |\n                    (this.italicAngle !== 0 ? 1 << 6 : 0) |\n                    (1 << 5));\n        }\n\n    if ( PDFDictionary ) PDFFont.__proto__ = PDFDictionary;\n    PDFFont.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n    PDFFont.prototype.constructor = PDFFont;\n\n        PDFFont.prototype.encodeText = function encodeText (text) {\n            return new PDFHexString(this._sub.encodeText(String(text)));\n        };\n\n        PDFFont.prototype.getTextWidth = function getTextWidth (fontSize, text) {\n            var this$1$1 = this;\n\n            var width = 0, codeMap = this._font.cmap.codeMap;\n            for (var i = 0; i < text.length; ++i) {\n                var glyphId = codeMap[text.charCodeAt(i)];\n                width += this$1$1._font.widthOfGlyph(glyphId || 0);\n            }\n            return width * fontSize / 1000;\n        };\n\n        PDFFont.prototype.beforeRender = function beforeRender () {\n            var self = this;\n            var sub = self._sub;\n\n            // write the TTF data\n            var data = sub.render();\n            var fontStream = new PDFStream(BinaryStream(data), {\n                Length1: data.length\n            }, true);\n\n            var descriptor = self._pdf.attach(new PDFDictionary({\n                Type         : _(\"FontDescriptor\"),\n                FontName     : _(self._sub.psName),\n                FontBBox     : self.bbox,\n                Flags        : self.flags,\n                StemV        : self.stemV,\n                ItalicAngle  : self.italicAngle,\n                Ascent       : self.ascent,\n                Descent      : self.descent,\n                CapHeight    : self.capHeight,\n                XHeight      : self.xHeight,\n                FontFile2    : self._pdf.attach(fontStream)\n            }));\n\n            var cmap = sub.ncid2ogid;\n            var firstChar = sub.firstChar;\n            var lastChar = sub.lastChar;\n            var charWidths = [];\n            (function loop(i, chunk){\n                if (i <= lastChar) {\n                    var gid = cmap[i];\n                    if (gid == null) {\n                        loop(i + 1);\n                    } else {\n                        if (!chunk) {\n                            charWidths.push(i, chunk = []);\n                        }\n                        chunk.push(self._font.widthOfGlyph(gid));\n                        loop(i + 1, chunk);\n                    }\n                }\n            })(firstChar);\n\n            // As if two dictionaries weren't enough, we need another\n            // one, the \"descendant font\".  Only that one can be of\n            // Subtype CIDFontType2.  PDF is the X11 of document\n            // formats: portable but full of legacy that nobody cares\n            // about anymore.\n\n            var descendant = new PDFDictionary({\n                Type: _(\"Font\"),\n                Subtype: _(\"CIDFontType2\"),\n                BaseFont: _(self._sub.psName),\n                CIDSystemInfo: new PDFDictionary({\n                    Registry   : new PDFString(\"Adobe\"),\n                    Ordering   : new PDFString(\"Identity\"),\n                    Supplement : 0\n                }),\n                FontDescriptor: descriptor,\n                FirstChar: firstChar,\n                LastChar: lastChar,\n                DW: Math.round(self._font.widthOfGlyph(0)),\n                W: charWidths,\n                CIDToGIDMap: self._pdf.attach(self._makeCidToGidMap())\n            });\n\n            var dict = self.props;\n            dict.BaseFont = _(self._sub.psName);\n            dict.DescendantFonts = [ self._pdf.attach(descendant) ];\n\n            // Compute the ToUnicode map so that apps can extract\n            // meaningful text from the PDF.\n            var unimap = new PDFToUnicodeCmap(firstChar, lastChar, sub.subset);\n            var unimapStream = new PDFStream(makeOutput(), null, true);\n            unimapStream.data(unimap);\n            dict.ToUnicode = self._pdf.attach(unimapStream);\n        };\n\n        PDFFont.prototype._makeCidToGidMap = function _makeCidToGidMap () {\n            return new PDFStream(BinaryStream(this._sub.cidToGidMap()), null, true);\n        };\n\n    return PDFFont;\n}(PDFDictionary));\n\nvar PDFToUnicodeCmap = (function (PDFValue) {\n    function PDFToUnicodeCmap(firstChar, lastChar, map){\n        PDFValue.call(this);\n        this.firstChar = firstChar;\n        this.lastChar = lastChar;\n        this.map = map;\n    }\n\n    if ( PDFValue ) PDFToUnicodeCmap.__proto__ = PDFValue;\n    PDFToUnicodeCmap.prototype = Object.create( PDFValue && PDFValue.prototype );\n    PDFToUnicodeCmap.prototype.constructor = PDFToUnicodeCmap;\n\n    PDFToUnicodeCmap.prototype.render = function render (out) {\n        out.indent(\"/CIDInit /ProcSet findresource begin\");\n        out.indent(\"12 dict begin\");\n        out.indent(\"begincmap\");\n        out.indent(\"/CIDSystemInfo <<\");\n        out.indent(\"  /Registry (Adobe)\");\n        out.indent(\"  /Ordering (UCS)\");\n        out.indent(\"  /Supplement 0\");\n        out.indent(\">> def\");\n        out.indent(\"/CMapName /Adobe-Identity-UCS def\");\n        out.indent(\"/CMapType 2 def\");\n        out.indent(\"1 begincodespacerange\");\n        out.indent(\"  <0000><ffff>\");\n        out.indent(\"endcodespacerange\");\n\n        var self = this;\n        out.indent(self.lastChar - self.firstChar + 1, \" beginbfchar\");\n        out.withIndent(function(){\n            for (var code = self.firstChar; code <= self.lastChar; ++code) {\n                var unicode = self.map[code];\n                var str = ucs2encode([ unicode ]);\n                out.indent(\"<\", zeropad(code.toString(16), 4), \">\", \"<\");\n                for (var i = 0; i < str.length; ++i) {\n                    out(zeropad(str.charCodeAt(i).toString(16), 4));\n                }\n                out(\">\");\n            }\n        });\n        out.indent(\"endbfchar\");\n\n        out.indent(\"endcmap\");\n        out.indent(\"CMapName currentdict /CMap defineresource pop\");\n        out.indent(\"end\");\n        out.indent(\"end\");\n    };\n\n    return PDFToUnicodeCmap;\n}(PDFValue));\n\n/// gradients\n\nfunction makeHash(a) {\n    return a.map(function(x){\n        return isArray(x) ? makeHash(x)\n            : typeof x == \"number\" ? (Math.round(x * 1000) / 1000).toFixed(3)\n            : x;\n    }).join(\" \");\n}\n\nfunction cacheColorGradientFunction(pdf, r1, g1, b1, r2, g2, b2) {\n    var hash = makeHash([ r1, g1, b1, r2, g2, b2 ]);\n    var func = pdf.GRAD_COL_FUNCTIONS[hash];\n    if (!func) {\n        func = pdf.GRAD_COL_FUNCTIONS[hash] = pdf.attach(new PDFDictionary({\n            FunctionType: 2,\n            Domain: [ 0, 1 ],\n            Range: [ 0, 1, 0, 1, 0, 1 ],\n            N: 1,\n            C0: [ r1 , g1 , b1 ],\n            C1: [ r2 , g2 , b2 ]\n        }));\n    }\n    return func;\n}\n\nfunction cacheOpacityGradientFunction(pdf, a1, a2) {\n    var hash = makeHash([ a1, a2 ]);\n    var func = pdf.GRAD_OPC_FUNCTIONS[hash];\n    if (!func) {\n        func = pdf.GRAD_OPC_FUNCTIONS[hash] = pdf.attach(new PDFDictionary({\n            FunctionType: 2,\n            Domain: [ 0, 1 ],\n            Range: [ 0, 1 ],\n            N: 1,\n            C0: [ a1 ],\n            C1: [ a2 ]\n        }));\n    }\n    return func;\n}\n\nfunction makeGradientFunctions(pdf, stops) {\n    var hasAlpha = false;\n    var opacities = [];\n    var colors = [];\n    var offsets = [];\n    var encode = [];\n    var i, prev, cur, prevColor, curColor;\n    for (i = 1; i < stops.length; ++i) {\n        prev = stops[i - 1];\n        cur = stops[i];\n        prevColor = prev.color;\n        curColor = cur.color;\n        colors.push(cacheColorGradientFunction(\n            pdf,\n            prevColor.r, prevColor.g, prevColor.b,\n            curColor.r,  curColor.g,  curColor.b\n        ));\n        if (prevColor.a < 1 || curColor.a < 1) {\n            hasAlpha = true;\n        }\n        offsets.push(cur.offset);\n        encode.push(0, 1);\n    }\n    if (hasAlpha) {\n        for (i = 1; i < stops.length; ++i) {\n            prev = stops[i - 1];\n            cur = stops[i];\n            prevColor = prev.color;\n            curColor = cur.color;\n            opacities.push(cacheOpacityGradientFunction(\n                pdf, prevColor.a, curColor.a\n            ));\n        }\n    }\n    offsets.pop();\n    return {\n        hasAlpha  : hasAlpha,\n        colors    : assemble(colors),\n        opacities : hasAlpha ? assemble(opacities) : null\n    };\n    function assemble(funcs) {\n        if (funcs.length == 1) {\n            return funcs[0];\n        }\n        return {\n            FunctionType: 3,\n            Functions: funcs,\n            Domain: [ 0, 1 ],\n            Bounds: offsets,\n            Encode: encode\n        };\n    }\n}\n\nfunction cacheColorGradient(pdf, isRadial, stops, coords, funcs, box) {\n    var shading, hash;\n    // if box is given then we have user-space coordinates, which\n    // means the gradient is designed for a certain position/size\n    // on page.  caching won't do any good.\n    if (!box) {\n        var a = [ isRadial ].concat(coords);\n        stops.forEach(function(x){\n            a.push(x.offset, x.color.r, x.color.g, x.color.b);\n        });\n        hash = makeHash(a);\n        shading = pdf.GRAD_COL[hash];\n    }\n    if (!shading) {\n        shading = new PDFDictionary({\n            Type: _(\"Shading\"),\n            ShadingType: isRadial ? 3 : 2,\n            ColorSpace: _(\"DeviceRGB\"),\n            Coords: coords,\n            Domain: [ 0, 1 ],\n            Function: funcs,\n            Extend: [ true, true ]\n        });\n        pdf.attach(shading);\n        shading._resourceName = \"S\" + (++RESOURCE_COUNTER);\n        if (hash) {\n            pdf.GRAD_COL[hash] = shading;\n        }\n    }\n    return shading;\n}\n\nfunction cacheOpacityGradient(pdf, isRadial, stops, coords, funcs, box) {\n    var opacity, hash;\n    // if box is given then we have user-space coordinates, which\n    // means the gradient is designed for a certain position/size\n    // on page.  caching won't do any good.\n    if (!box) {\n        var a = [ isRadial ].concat(coords);\n        stops.forEach(function(x){\n            a.push(x.offset, x.color.a);\n        });\n        hash = makeHash(a);\n        opacity = pdf.GRAD_OPC[hash];\n    }\n    if (!opacity) {\n        opacity = new PDFDictionary({\n            Type: _(\"ExtGState\"),\n            AIS: false,\n            CA: 1,\n            ca: 1,\n            SMask: {\n                Type: _(\"Mask\"),\n                S: _(\"Luminosity\"),\n                G: pdf.attach(new PDFStream(\"/a0 gs /s0 sh\", {\n                    Type: _(\"XObject\"),\n                    Subtype: _(\"Form\"),\n                    FormType: 1,\n                    BBox: (box ? [\n                        box.left, box.top + box.height, box.left + box.width, box.top\n                    ] : [ 0, 1, 1, 0 ]),\n                    Group: {\n                        Type: _(\"Group\"),\n                        S: _(\"Transparency\"),\n                        CS: _(\"DeviceGray\"),\n                        I: true\n                    },\n                    Resources: {\n                        ExtGState: {\n                            a0: { CA: 1, ca: 1 }\n                        },\n                        Shading: {\n                            s0: {\n                                ColorSpace: _(\"DeviceGray\"),\n                                Coords: coords,\n                                Domain: [ 0, 1 ],\n                                ShadingType: isRadial ? 3 : 2,\n                                Function: funcs,\n                                Extend: [ true, true ]\n                            }\n                        }\n                    }\n                }))\n            }\n        });\n        pdf.attach(opacity);\n        opacity._resourceName = \"O\" + (++RESOURCE_COUNTER);\n        if (hash) {\n            pdf.GRAD_OPC[hash] = opacity;\n        }\n    }\n    return opacity;\n}\n\nfunction cacheGradient(pdf, gradient, box) {\n    var isRadial = gradient.type == \"radial\";\n    var funcs = makeGradientFunctions(pdf, gradient.stops);\n    var coords = isRadial ? [\n        gradient.start.x , gradient.start.y , gradient.start.r,\n        gradient.end.x   , gradient.end.y   , gradient.end.r\n    ] : [\n        gradient.start.x , gradient.start.y,\n        gradient.end.x   , gradient.end.y\n    ];\n    var shading = cacheColorGradient(\n        pdf, isRadial, gradient.stops, coords, funcs.colors, gradient.userSpace && box\n    );\n    var opacity = funcs.hasAlpha ? cacheOpacityGradient(\n        pdf, isRadial, gradient.stops, coords, funcs.opacities, gradient.userSpace && box\n    ) : null;\n    return {\n        hasAlpha: funcs.hasAlpha,\n        shading: shading,\n        opacity: opacity\n    };\n}\n\n/// page object\n\nvar PDFPage = (function (PDFDictionary) {\n    function PDFPage(pdf, props){\n        PDFDictionary.call(this, props);\n\n        this._pdf = pdf;\n        this._rcount = 0;\n        this._textMode = false;\n        this._fontResources = {};\n        this._gsResources = {};\n        this._xResources = {};\n        this._patResources = {};\n        this._shResources = {};\n        this._opacity = 1;\n        this._matrix = [ 1, 0, 0, 1, 0, 0 ];\n        this._annotations = [];\n\n        this._font = null;\n        this._fontSize = null;\n\n        this._contextStack = [];\n\n        props = this.props;\n        props.Type = _(\"Page\");\n        props.ProcSet = [\n            _(\"PDF\"),\n            _(\"Text\"),\n            _(\"ImageB\"),\n            _(\"ImageC\"),\n            _(\"ImageI\")\n        ];\n        props.Resources = new PDFDictionary({\n            Font      : new PDFDictionary(this._fontResources),\n            ExtGState : new PDFDictionary(this._gsResources),\n            XObject   : new PDFDictionary(this._xResources),\n            Pattern   : new PDFDictionary(this._patResources),\n            Shading   : new PDFDictionary(this._shResources)\n        });\n        props.Annots = this._annotations;\n    }\n\n    if ( PDFDictionary ) PDFPage.__proto__ = PDFDictionary;\n    PDFPage.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n    PDFPage.prototype.constructor = PDFPage;\n\n    PDFPage.prototype._out = function _out () {\n        this._content.data.apply(null, arguments);\n    };\n\n    PDFPage.prototype.transform = function transform (a, b, c, d, e, f) {\n        if (!isIdentityMatrix(arguments)) {\n            this._matrix = mmul$1(arguments, this._matrix);\n            this._out(a, \" \", b, \" \", c, \" \", d, \" \", e, \" \", f, \" cm\");\n            // XXX: debug\n            // this._out(\" % current matrix: \", this._matrix);\n            this._out(NL);\n        }\n    };\n\n    PDFPage.prototype.translate = function translate (dx, dy) {\n        this.transform(1, 0, 0, 1, dx, dy);\n    };\n\n    PDFPage.prototype.scale = function scale (sx, sy) {\n        this.transform(sx, 0, 0, sy, 0, 0);\n    };\n\n    PDFPage.prototype.rotate = function rotate (angle) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        this.transform(cos, sin, -sin, cos, 0, 0);\n    };\n\n    PDFPage.prototype.beginText = function beginText () {\n        this._textMode = true;\n        this._out(\"BT\", NL);\n    };\n\n    PDFPage.prototype.endText = function endText () {\n        this._textMode = false;\n        this._out(\"ET\", NL);\n    };\n\n    PDFPage.prototype._requireTextMode = function _requireTextMode () {\n        if (!this._textMode) {\n            throw new Error(\"Text mode required; call page.beginText() first\");\n        }\n    };\n\n    PDFPage.prototype._requireFont = function _requireFont () {\n        if (!this._font) {\n            throw new Error(\"No font selected; call page.setFont() first\");\n        }\n    };\n\n    PDFPage.prototype.setFont = function setFont (font, size) {\n        this._requireTextMode();\n        if (font == null) {\n            font = this._font;\n        } else if (!(font instanceof PDFFont)) {\n            font = this._pdf.getFont(font);\n        }\n        if (size == null) {\n            size = this._fontSize;\n        }\n        this._fontResources[font._resourceName] = font;\n        this._font = font;\n        this._fontSize = size;\n        this._out(font._resourceName, \" \", size, \" Tf\", NL);\n    };\n\n    PDFPage.prototype.setTextLeading = function setTextLeading (size) {\n        this._requireTextMode();\n        this._out(size, \" TL\", NL);\n    };\n\n    PDFPage.prototype.setTextRenderingMode = function setTextRenderingMode (mode) {\n        this._requireTextMode();\n        this._out(mode, \" Tr\", NL);\n    };\n\n    PDFPage.prototype.showText = function showText (text, requestedWidth) {\n        this._requireFont();\n        if (text.length > 1 && requestedWidth && this._font instanceof PDFFont) {\n            var outputWidth = this._font.getTextWidth(this._fontSize, text);\n            var scale = requestedWidth / outputWidth * 100;\n            this._out(scale, \" Tz \");\n        }\n        this._out(this._font.encodeText(text), \" Tj\", NL);\n    };\n\n    PDFPage.prototype.showTextNL = function showTextNL (text) {\n        this._requireFont();\n        this._out(this._font.encodeText(text), \" '\", NL);\n    };\n\n    PDFPage.prototype.addLink = function addLink (uri, box) {\n        var ll = this._toPage({ x: box.left, y: box.bottom });\n        var ur = this._toPage({ x: box.right, y: box.top });\n        this._annotations.push(new PDFDictionary({\n            Type    : _(\"Annot\"),\n            Subtype : _(\"Link\"),\n            Rect    : [ ll.x, ll.y, ur.x, ur.y ],\n            Border  : [ 0, 0, 0 ],\n            A       : new PDFDictionary({\n                Type : _(\"Action\"),\n                S    : _(\"URI\"),\n                URI  : new PDFString(uri)\n            })\n        }));\n    };\n\n    PDFPage.prototype.setStrokeColor = function setStrokeColor (r, g, b) {\n        this._out(r, \" \", g, \" \", b, \" RG\", NL);\n    };\n\n    PDFPage.prototype.setOpacity = function setOpacity (opacity) {\n        this.setFillOpacity(opacity);\n        this.setStrokeOpacity(opacity);\n        this._opacity *= opacity;\n    };\n\n    PDFPage.prototype.setStrokeOpacity = function setStrokeOpacity (opacity) {\n        if (opacity < 1) {\n            var gs = this._pdf.getOpacityGS(this._opacity * opacity, true);\n            this._gsResources[gs._resourceName] = gs;\n            this._out(gs._resourceName, \" gs\", NL);\n        }\n    };\n\n    PDFPage.prototype.setFillColor = function setFillColor (r, g, b) {\n        this._out(r, \" \", g, \" \", b, \" rg\", NL);\n    };\n\n    PDFPage.prototype.setFillOpacity = function setFillOpacity (opacity) {\n        if (opacity < 1) {\n            var gs = this._pdf.getOpacityGS(this._opacity * opacity, false);\n            this._gsResources[gs._resourceName] = gs;\n            this._out(gs._resourceName, \" gs\", NL);\n        }\n    };\n\n    PDFPage.prototype.gradient = function gradient (gradient$1, box) {\n        this.save();\n        this.rect(box.left, box.top, box.width, box.height);\n        this.clip();\n        if (!gradient$1.userSpace) {\n            this.transform(box.width, 0, 0, box.height, box.left, box.top);\n        }\n        var g = cacheGradient(this._pdf, gradient$1, box);\n        var sname = g.shading._resourceName, oname;\n        this._shResources[sname] = g.shading;\n        if (g.hasAlpha) {\n            oname = g.opacity._resourceName;\n            this._gsResources[oname] = g.opacity;\n            this._out(\"/\" + oname + \" gs \");\n        }\n        this._out(\"/\" + sname + \" sh\", NL);\n        this.restore();\n    };\n\n    PDFPage.prototype.setDashPattern = function setDashPattern (dashArray, dashPhase) {\n        this._out(dashArray, \" \", dashPhase, \" d\", NL);\n    };\n\n    PDFPage.prototype.setLineWidth = function setLineWidth (width) {\n        this._out(width, \" w\", NL);\n    };\n\n    PDFPage.prototype.setLineCap = function setLineCap (lineCap) {\n        this._out(lineCap, \" J\", NL);\n    };\n\n    PDFPage.prototype.setLineJoin = function setLineJoin (lineJoin) {\n        this._out(lineJoin, \" j\", NL);\n    };\n\n    PDFPage.prototype.setMitterLimit = function setMitterLimit (mitterLimit) {\n        this._out(mitterLimit, \" M\", NL);\n    };\n\n    PDFPage.prototype.save = function save () {\n        this._contextStack.push(this._context());\n        this._out(\"q\", NL);\n    };\n\n    PDFPage.prototype.restore = function restore () {\n        this._out(\"Q\", NL);\n        this._context(this._contextStack.pop());\n    };\n\n\n    // paths\n    PDFPage.prototype.moveTo = function moveTo (x, y) {\n        this._out(x, \" \", y, \" m\", NL);\n    };\n\n    PDFPage.prototype.lineTo = function lineTo (x, y) {\n        this._out(x, \" \", y, \" l\", NL);\n    };\n\n    PDFPage.prototype.bezier = function bezier (x1, y1, x2, y2, x3, y3) {\n        this._out(x1, \" \", y1, \" \", x2, \" \", y2, \" \", x3, \" \", y3, \" c\", NL);\n    };\n\n    PDFPage.prototype.bezier1 = function bezier1 (x1, y1, x3, y3) {\n        this._out(x1, \" \", y1, \" \", x3, \" \", y3, \" y\", NL);\n    };\n\n    PDFPage.prototype.bezier2 = function bezier2 (x2, y2, x3, y3) {\n        this._out(x2, \" \", y2, \" \", x3, \" \", y3, \" v\", NL);\n    };\n\n    PDFPage.prototype.close = function close () {\n        this._out(\"h\", NL);\n    };\n\n    PDFPage.prototype.rect = function rect (x, y, w, h) {\n        this._out(x, \" \", y, \" \", w, \" \", h, \" re\", NL);\n    };\n\n    PDFPage.prototype.ellipse = function ellipse (x, y, rx, ry) {\n        function _X(v) { return x + v; }\n        function _Y(v) { return y + v; }\n\n        // how to get to the \"magic number\" is explained here:\n        // http://www.whizkidtech.redprince.net/bezier/circle/kappa/\n        var k = 0.5522847498307936;\n\n        this.moveTo(_X(0), _Y(ry));\n        this.bezier(\n            _X(rx * k) , _Y(ry),\n            _X(rx)     , _Y(ry * k),\n            _X(rx)     , _Y(0)\n        );\n        this.bezier(\n            _X(rx)     , _Y(-ry * k),\n            _X(rx * k) , _Y(-ry),\n            _X(0)      , _Y(-ry)\n        );\n        this.bezier(\n            _X(-rx * k) , _Y(-ry),\n            _X(-rx)     , _Y(-ry * k),\n            _X(-rx)     , _Y(0)\n        );\n        this.bezier(\n            _X(-rx)     , _Y(ry * k),\n            _X(-rx * k) , _Y(ry),\n            _X(0)       , _Y(ry)\n        );\n    };\n\n    PDFPage.prototype.circle = function circle (x, y, r) {\n        this.ellipse(x, y, r, r);\n    };\n\n    PDFPage.prototype.stroke = function stroke () {\n        this._out(\"S\", NL);\n    };\n\n    PDFPage.prototype.nop = function nop () {\n        this._out(\"n\", NL);\n    };\n\n    PDFPage.prototype.clip = function clip () {\n        this._out(\"W n\", NL);\n    };\n\n    PDFPage.prototype.clipStroke = function clipStroke () {\n        this._out(\"W S\", NL);\n    };\n\n    PDFPage.prototype.closeStroke = function closeStroke () {\n        this._out(\"s\", NL);\n    };\n\n    PDFPage.prototype.fill = function fill () {\n        this._out(\"f\", NL);\n    };\n\n    PDFPage.prototype.fillStroke = function fillStroke () {\n        this._out(\"B\", NL);\n    };\n\n    PDFPage.prototype.drawImage = function drawImage (url) {\n        var img = this._pdf.getImage(url);\n        if (img) { // the result can be null for a cross-domain image\n            this._xResources[img._resourceName] = img;\n            this._out(img._resourceName, \" Do\", NL);\n        }\n    };\n\n    PDFPage.prototype.comment = function comment (txt) {\n        var self = this;\n        txt.split(/\\r?\\n/g).forEach(function(line){\n            self._out(\"% \", line, NL);\n        });\n    };\n\n    // internal\n    PDFPage.prototype._context = function _context (val) {\n        if (val != null) {\n            this._opacity = val.opacity;\n            this._matrix = val.matrix;\n        } else {\n            return {\n                opacity: this._opacity,\n                matrix: this._matrix\n            };\n        }\n    };\n\n    PDFPage.prototype._toPage = function _toPage (p) {\n        var m = this._matrix;\n        var a = m[0], b = m[1], c = m[2], d = m[3], e = m[4], f = m[5];\n        return {\n            x: a*p.x + c*p.y + e,\n            y: b*p.x + d*p.y + f\n        };\n    };\n\n    return PDFPage;\n}(PDFDictionary));\n\nfunction unquote(str) {\n    return str.replace(/^\\s*(['\"])(.*)\\1\\s*$/, \"$2\");\n}\n\nfunction parseFontDef(fontdef) {\n    // XXX: this is very crude for now and buggy.  Proper parsing is quite involved.\n    var rx = /^\\s*((normal|italic)\\s+)?((normal|small-caps)\\s+)?((normal|bold|\\d+)\\s+)?(([0-9.]+)(px|pt))(\\/(([0-9.]+)(px|pt)|normal))?\\s+(.*?)\\s*$/i;\n    var m = rx.exec(fontdef);\n    if (!m) {\n        return { fontSize: 12, fontFamily: \"sans-serif\" };\n    }\n    var fontSize = m[8] ? parseInt(m[8], 10) : 12;\n    return {\n        italic     : m[2] && m[2].toLowerCase() == \"italic\",\n        variant    : m[4],\n        bold       : m[6] && /bold|700/i.test(m[6]),\n        fontSize   : fontSize,\n        lineHeight : m[12] ? m[12] == \"normal\" ? fontSize : parseInt(m[12], 10) : null,\n        fontFamily : m[14].split(/\\s*,\\s*/g).map(unquote)\n    };\n}\n\nfunction getFontURL$1(style) {\n    function mkFamily(name) {\n        if (style.bold) {\n            name += \"|bold\";\n        }\n        if (style.italic) {\n            name += \"|italic\";\n        }\n        return name.toLowerCase();\n    }\n    var fontFamily = style.fontFamily;\n    var name, url;\n    if (fontFamily instanceof Array) {\n        for (var i = 0; i < fontFamily.length; ++i) {\n            name = mkFamily(fontFamily[i]);\n            url = FONT_MAPPINGS[name];\n            if (url) {\n                break;\n            }\n        }\n    } else {\n        url = FONT_MAPPINGS[fontFamily.toLowerCase()];\n    }\n    while (typeof url == \"function\") {\n        url = url();\n    }\n    if (!url) {\n        url = \"Times-Roman\";\n    }\n    return url;\n}\n\nvar FONT_MAPPINGS = {\n    \"serif\"                    : \"Times-Roman\",\n    \"serif|bold\"               : \"Times-Bold\",\n    \"serif|italic\"             : \"Times-Italic\",\n    \"serif|bold|italic\"        : \"Times-BoldItalic\",\n    \"sans-serif\"               : \"Helvetica\",\n    \"sans-serif|bold\"          : \"Helvetica-Bold\",\n    \"sans-serif|italic\"        : \"Helvetica-Oblique\",\n    \"sans-serif|bold|italic\"   : \"Helvetica-BoldOblique\",\n    \"monospace\"                : \"Courier\",\n    \"monospace|bold\"           : \"Courier-Bold\",\n    \"monospace|italic\"         : \"Courier-Oblique\",\n    \"monospace|bold|italic\"    : \"Courier-BoldOblique\",\n    \"zapfdingbats\"             : \"ZapfDingbats\",\n    \"zapfdingbats|bold\"        : \"ZapfDingbats\",\n    \"zapfdingbats|italic\"      : \"ZapfDingbats\",\n    \"zapfdingbats|bold|italic\" : \"ZapfDingbats\"\n};\n\nfunction fontAlias(alias, name) {\n    alias = alias.toLowerCase();\n    FONT_MAPPINGS[alias] = function() {\n        return FONT_MAPPINGS[name];\n    };\n    FONT_MAPPINGS[alias + \"|bold\"] = function() {\n        return FONT_MAPPINGS[name + \"|bold\"];\n    };\n    FONT_MAPPINGS[alias + \"|italic\"] = function() {\n        return FONT_MAPPINGS[name + \"|italic\"];\n    };\n    FONT_MAPPINGS[alias + \"|bold|italic\"] = function() {\n        return FONT_MAPPINGS[name + \"|bold|italic\"];\n    };\n}\n\n// Let's define some common names to an appropriate replacement.\n// These are overridable via pdf.defineFont, should the user want to\n// include the proper versions.\n\nfontAlias(\"Times New Roman\" , \"serif\");\nfontAlias(\"Courier New\"     , \"monospace\");\nfontAlias(\"Arial\"           , \"sans-serif\");\nfontAlias(\"Helvetica\"       , \"sans-serif\");\nfontAlias(\"Verdana\"         , \"sans-serif\");\nfontAlias(\"Tahoma\"          , \"sans-serif\");\nfontAlias(\"Georgia\"         , \"sans-serif\");\nfontAlias(\"Monaco\"          , \"monospace\");\nfontAlias(\"Andale Mono\"     , \"monospace\");\n\nfunction defineFont(name, url) {\n    if (arguments.length == 1) {\n        for (var i in name) {\n            if (hasOwnProperty$1(name, i)) {\n                defineFont(i, name[i]);\n            }\n        }\n    } else {\n        name = name.toLowerCase();\n        FONT_MAPPINGS[name] = url;\n\n        // special handling for DejaVu fonts: if they get defined,\n        // let them also replace the default families, for good\n        // Unicode support out of the box.\n        switch (name) {\n          case \"dejavu sans\"               : FONT_MAPPINGS[\"sans-serif\"]              = url; break;\n          case \"dejavu sans|bold\"          : FONT_MAPPINGS[\"sans-serif|bold\"]         = url; break;\n          case \"dejavu sans|italic\"        : FONT_MAPPINGS[\"sans-serif|italic\"]       = url; break;\n          case \"dejavu sans|bold|italic\"   : FONT_MAPPINGS[\"sans-serif|bold|italic\"]  = url; break;\n          case \"dejavu serif\"              : FONT_MAPPINGS[\"serif\"]                   = url; break;\n          case \"dejavu serif|bold\"         : FONT_MAPPINGS[\"serif|bold\"]              = url; break;\n          case \"dejavu serif|italic\"       : FONT_MAPPINGS[\"serif|italic\"]            = url; break;\n          case \"dejavu serif|bold|italic\"  : FONT_MAPPINGS[\"serif|bold|italic\"]       = url; break;\n          case \"dejavu mono\"               : FONT_MAPPINGS[\"monospace\"]               = url; break;\n          case \"dejavu mono|bold\"          : FONT_MAPPINGS[\"monospace|bold\"]          = url; break;\n          case \"dejavu mono|italic\"        : FONT_MAPPINGS[\"monospace|italic\"]        = url; break;\n          case \"dejavu mono|bold|italic\"   : FONT_MAPPINGS[\"monospace|bold|italic\"]   = url; break;\n        }\n    }\n}\n\nfunction mmul$1(a, b) {\n    var a1 = a[0], b1 = a[1], c1 = a[2], d1 = a[3], e1 = a[4], f1 = a[5];\n    var a2 = b[0], b2 = b[1], c2 = b[2], d2 = b[3], e2 = b[4], f2 = b[5];\n    return [\n        a1*a2 + b1*c2,          a1*b2 + b1*d2,\n        c1*a2 + d1*c2,          c1*b2 + d1*d2,\n        e1*a2 + f1*c2 + e2,     e1*b2 + f1*d2 + f2\n    ];\n}\n\nfunction isIdentityMatrix(m) {\n    return m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0;\n}\n\nvar TEXT_RENDERING_MODE$1 = {\n    fill           : 0,\n    stroke         : 1,\n    fillAndStroke  : 2,\n    invisible      : 3,\n    fillAndClip    : 4,\n    strokeAndClip  : 5,\n    fillStrokeClip : 6,\n    clip           : 7\n};\n\n/* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n/* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n/* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n/* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n\nvar DEFAULT_IMAGE_DPI = 300;\nvar TEXT_RENDERING_MODE = TEXT_RENDERING_MODE$1;\n\nvar DASH_PATTERNS = {\n    dash           : [ 4 ],\n    dashDot        : [ 4, 2, 1, 2 ],\n    dot            : [ 1, 2 ],\n    longDash       : [ 8, 2 ],\n    longDashDot    : [ 8, 2, 1, 2 ],\n    longDashDotDot : [ 8, 2, 1, 2, 1, 2 ],\n    solid          : []\n};\n\nvar LINE_CAP = {\n    butt   : 0,\n    round  : 1,\n    square : 2\n};\n\nvar LINE_JOIN = {\n    miter : 0,\n    round : 1,\n    bevel : 2\n};\n\nfunction render(group, callback) {\n    var fonts = [], images = {}, options = group.options;\n\n    function getOption(name, defval, hash) {\n        if (!hash) {\n            hash = options;\n        }\n        if (hash.pdf && hash.pdf[name] != null) {\n            return hash.pdf[name];\n        }\n        return defval;\n    }\n\n    var multiPage = getOption(\"multiPage\");\n    var imgDPI = getOption(\"imgDPI\", DEFAULT_IMAGE_DPI);\n\n    clearImageCache();\n\n    group.traverse(function(element){\n        dispatch({\n            Image: function(element) {\n                var url = element.src();\n                var size = element.bbox().size;\n                if (imgDPI) {\n                    var prev = images[url];\n                    size = {\n                      width: Math.ceil(size.width * imgDPI / 72),\n                      height: Math.ceil(size.height * imgDPI / 72)\n                    };\n\n                    if (prev) {\n                      size.width = Math.max(prev.width, size.width);\n                      size.height = Math.max(prev.height, size.height);\n                    }\n                }\n\n                images[url] = size;\n            },\n            Text: function(element) {\n                var style = parseFontDef(element.options.font);\n                var url = getFontURL$1(style);\n                if (fonts.indexOf(url) < 0) {\n                    fonts.push(url);\n                }\n            }\n        }, element);\n    });\n\n    function doIt() {\n        if (--count > 0) {\n            return;\n        }\n\n        var pdf = new (PDFDocument)({\n            producer  : getOption(\"producer\"),\n            title     : getOption(\"title\"),\n            author    : getOption(\"author\"),\n            subject   : getOption(\"subject\"),\n            keywords  : getOption(\"keywords\"),\n            creator   : getOption(\"creator\"),\n            date      : getOption(\"date\"),\n\n            autoPrint : getOption(\"autoPrint\")\n        });\n\n        function drawPage(group) {\n            var options = group.options;\n\n            var tmp = optimize(group);\n            var bbox = tmp.bbox;\n            group = tmp.root;\n            // var tmp, bbox;\n\n            var paperSize = getOption(\"paperSize\", getOption(\"paperSize\", \"auto\"), options), addMargin = false;\n            if (paperSize == \"auto\") {\n                if (bbox) {\n                    var size = bbox.getSize();\n                    paperSize = [ size.width, size.height ];\n                    addMargin = true;\n                    var origin = bbox.getOrigin();\n                    tmp = new Group();\n                    tmp.transform(new Matrix(1, 0, 0, 1, -origin.x, -origin.y));\n                    tmp.append(group);\n                    group = tmp;\n                }\n                else {\n                    paperSize = \"A4\";\n                }\n            }\n\n            var page;\n            page = pdf.addPage({\n                paperSize : paperSize,\n                margin    : getOption(\"margin\", getOption(\"margin\"), options),\n                addMargin : addMargin,\n                landscape : getOption(\"landscape\", getOption(\"landscape\", false), options)\n            });\n            drawElement(group, page, pdf);\n        }\n\n        if (multiPage) {\n            group.children.forEach(drawPage);\n        } else {\n            drawPage(group);\n        }\n\n        callback(pdf.render(), pdf);\n    }\n\n    var count = 2;\n    loadFonts(fonts, doIt);\n    loadImages(images, doIt, {\n        jpegQuality : getOption(\"jpegQuality\", 0.92),\n        keepPNG     : getOption(\"keepPNG\", false)\n    });\n}\n\nfunction toDataURL(group, callback) {\n    render(group, function(data){\n        callback(\"data:application/pdf;base64,\" + data.base64());\n    });\n}\n\nfunction toBlob(group, callback) {\n    render(group, function(data){\n        callback(new window.Blob([ data.get() ], { type: \"application/pdf\" }));\n    });\n}\n\nfunction saveAs(group, filename, proxy, callback) {\n    // XXX: Safari has Blob, but does not support the download attribute\n    //      so we'd end up converting to dataURL and using the proxy anyway.\n    if (window.Blob && !support$1.browser.safari) {\n        toBlob(group, function(blob){\n            saveAs$1({ dataURI: blob, fileName: filename });\n            if (callback) {\n                callback(blob);\n            }\n        });\n    } else {\n        toDataURL(group, function(dataURL){\n            saveAs$1({ dataURI: dataURL, fileName: filename, proxyURL: proxy });\n            if (callback) {\n                callback(dataURL);\n            }\n        });\n    }\n}\n\nfunction dispatch(handlers, element) {\n    var handler = handlers[element.nodeType];\n    if (handler) {\n        return handler.call.apply(handler, arguments);\n    }\n    return element;\n}\n\nfunction drawElement(element, page, pdf) {\n    if (element.options._pdfDebug) {\n        page.comment(\"BEGIN: \" + element.options._pdfDebug);\n    }\n\n    var transform = element.transform();\n    var opacity = element.opacity();\n\n    page.save();\n\n    if (opacity != null && opacity < 1) {\n        page.setOpacity(opacity);\n    }\n\n    setStrokeOptions(element, page, pdf);\n    setFillOptions(element, page, pdf);\n\n    if (transform) {\n        var m = transform.matrix();\n        page.transform(m.a, m.b, m.c, m.d, m.e, m.f);\n    }\n\n    setClipping$1(element, page, pdf);\n\n    dispatch({\n        Path      : drawPath,\n        MultiPath : drawMultiPath,\n        Circle    : drawCircle,\n        Arc       : drawArc,\n        Text      : drawText$1,\n        Image     : drawImage,\n        Group     : drawGroup,\n        Rect      : drawRect\n    }, element, page, pdf);\n\n    page.restore();\n\n    if (element.options._pdfDebug) {\n        page.comment(\"END: \" + element.options._pdfDebug);\n    }\n}\n\nfunction setStrokeOptions(element, page) {\n    var stroke = element.stroke && element.stroke();\n    if (!stroke) {\n        return;\n    }\n\n    var color = stroke.color;\n    if (color) {\n        color = parseColor$1(color);\n        if (color == null) {\n            return; // no stroke\n        }\n        page.setStrokeColor(color.r, color.g, color.b);\n        if (color.a != 1) {\n            page.setStrokeOpacity(color.a);\n        }\n    }\n\n    var width = stroke.width;\n    if (width != null) {\n        if (width === 0) {\n            return; // no stroke\n        }\n        page.setLineWidth(width);\n    }\n\n    var dashType = stroke.dashType;\n    if (dashType) {\n        page.setDashPattern(DASH_PATTERNS[dashType], 0);\n    }\n\n    var lineCap = stroke.lineCap;\n    if (lineCap) {\n        page.setLineCap(LINE_CAP[lineCap]);\n    }\n\n    var lineJoin = stroke.lineJoin;\n    if (lineJoin) {\n        page.setLineJoin(LINE_JOIN[lineJoin]);\n    }\n\n    var opacity = stroke.opacity;\n    if (opacity != null) {\n        page.setStrokeOpacity(opacity);\n    }\n}\n\nfunction setFillOptions(element, page) {\n    var fill = element.fill && element.fill();\n    if (!fill) {\n        return;\n    }\n\n    if (fill instanceof Gradient) {\n        return;\n    }\n\n    var color = fill.color;\n    if (color) {\n        color = parseColor$1(color);\n        if (color == null) {\n            return; // no fill\n        }\n        page.setFillColor(color.r, color.g, color.b);\n        if (color.a != 1) {\n            page.setFillOpacity(color.a);\n        }\n    }\n\n    var opacity = fill.opacity;\n    if (opacity != null) {\n        page.setFillOpacity(opacity);\n    }\n}\n\nfunction setClipping$1(element, page, pdf) {\n    // XXX: only Path supported at the moment.\n    var clip = element.clip();\n    if (clip) {\n        _drawPath(clip, page, pdf);\n        page.clip();\n        // page.setStrokeColor(Math.random(), Math.random(), Math.random());\n        // page.setLineWidth(1);\n        // page.stroke();\n    }\n}\n\nfunction shouldDraw(thing) {\n    return (thing &&\n            (thing instanceof Gradient ||\n             (thing.color && !/^(none|transparent)$/i.test(thing.color) &&\n              (thing.width == null || thing.width > 0) &&\n              (thing.opacity == null || thing.opacity > 0))));\n}\n\nfunction maybeGradient(element, page, pdf, stroke) {\n    var fill = element.fill();\n    if (fill instanceof Gradient) {\n        if (stroke) {\n            page.clipStroke();\n        } else {\n            page.clip();\n        }\n        var isRadial = fill instanceof RadialGradient;\n        var start, end;\n        if (isRadial) {\n            start = { x: fill.center().x , y: fill.center().y , r: 0 };\n            end   = { x: fill.center().x , y: fill.center().y , r: fill.radius() };\n        } else {\n            start = { x: fill.start().x , y: fill.start().y };\n            end   = { x: fill.end().x   , y: fill.end().y   };\n        }\n\n        var stops = fill.stops.elements().map(function(stop){\n            var offset = stop.offset();\n            if (/%$/.test(offset)) {\n                offset = parseFloat(offset) / 100;\n            } else {\n                offset = parseFloat(offset);\n            }\n            var color = parseColor$1(stop.color());\n            color.a *= stop.opacity();\n            return {\n                offset: offset,\n                color: color\n            };\n        });\n\n        // Duplicats first and last stop to fix\n        // https://github.com/telerik/kendo-ui-core/issues/1782\n        stops.unshift(stops[0]);\n        stops.push(stops[stops.length - 1]);\n\n        var gradient = {\n            userSpace : fill.userSpace(),\n            type      : isRadial ? \"radial\" : \"linear\",\n            start     : start,\n            end       : end,\n            stops     : stops\n        };\n        var box = element.rawBBox();\n        var tl = box.topLeft(), size = box.getSize();\n        box = {\n            left   : tl.x,\n            top    : tl.y,\n            width  : size.width,\n            height : size.height\n        };\n        page.gradient(gradient, box);\n        return true;\n    }\n}\n\nfunction maybeFillStroke(element, page, pdf) {\n    if (shouldDraw(element.fill()) && shouldDraw(element.stroke())) {\n        if (!maybeGradient(element, page, pdf, true)) {\n            page.fillStroke();\n        }\n    } else if (shouldDraw(element.fill())) {\n        if (!maybeGradient(element, page, pdf, false)) {\n            page.fill();\n        }\n    } else if (shouldDraw(element.stroke())) {\n        page.stroke();\n    } else {\n        // we should not get here; the path should have been\n        // optimized away.  but let's be prepared.\n        page.nop();\n    }\n}\n\nfunction maybeDrawRect(path, page) {\n    var segments = path.segments;\n    if (segments.length == 4 && path.options.closed) {\n        // detect if this path looks like a rectangle parallel to the axis\n        var a = [];\n        for (var i = 0; i < segments.length; ++i) {\n            if (segments[i].controlIn()) { // has curve?\n                return false;\n            }\n            a[i] = segments[i].anchor();\n        }\n        // it's a rectangle if the y/x/y/x or x/y/x/y coords of\n        // consecutive points are the same.\n        var isRect = (\n            a[0].y == a[1].y && a[1].x == a[2].x && a[2].y == a[3].y && a[3].x == a[0].x\n        ) || (\n            a[0].x == a[1].x && a[1].y == a[2].y && a[2].x == a[3].x && a[3].y == a[0].y\n        );\n        if (isRect) {\n            // this saves a bunch of instructions in PDF:\n            // moveTo, lineTo, lineTo, lineTo, close -> rect.\n            page.rect(a[0].x, a[0].y,\n                      a[2].x - a[0].x /*width*/,\n                      a[2].y - a[0].y /*height*/);\n            return true;\n        }\n    }\n}\n\nfunction _drawPath(element, page, pdf) {\n    var segments = element.segments;\n    if (segments.length === 0) {\n        return;\n    }\n    if (!maybeDrawRect(element, page, pdf)) {\n        for (var prev, i = 0; i < segments.length; ++i) {\n            var seg = segments[i];\n            var anchor = seg.anchor();\n            if (!prev) {\n                page.moveTo(anchor.x, anchor.y);\n            } else {\n                var prevOut = prev.controlOut();\n                var controlIn = seg.controlIn();\n                if (prevOut && controlIn) {\n                    page.bezier(\n                        prevOut.x   , prevOut.y,\n                        controlIn.x , controlIn.y,\n                        anchor.x    , anchor.y\n                    );\n                } else {\n                    page.lineTo(anchor.x, anchor.y);\n                }\n            }\n            prev = seg;\n        }\n        if (element.options.closed) {\n            page.close();\n        }\n    }\n}\n\nfunction drawPath(element, page, pdf) {\n    _drawPath(element, page, pdf);\n    maybeFillStroke(element, page, pdf);\n}\n\nfunction drawMultiPath(element, page, pdf) {\n    var paths = element.paths;\n    for (var i = 0; i < paths.length; ++i) {\n        _drawPath(paths[i], page, pdf);\n    }\n    maybeFillStroke(element, page, pdf);\n}\n\nfunction drawCircle(element, page, pdf) {\n    var g = element.geometry();\n    page.circle(g.center.x, g.center.y, g.radius);\n    maybeFillStroke(element, page, pdf);\n}\n\nfunction drawArc(element, page, pdf) {\n    var points = element.geometry().curvePoints();\n    page.moveTo(points[0].x, points[0].y);\n    for (var i = 1; i < points.length;) {\n        page.bezier(\n            points[i].x, points[i++].y,\n            points[i].x, points[i++].y,\n            points[i].x, points[i++].y\n        );\n    }\n    maybeFillStroke(element, page, pdf);\n}\n\nfunction drawText$1(element, page) {\n    var style = parseFontDef(element.options.font);\n    var pos = element._position;\n    var mode;\n\n    page.transform(1, 0, 0, -1, pos.x, pos.y + style.fontSize);\n\n    var draw = function (renderMode) {\n        page.beginText();\n        page.setFont(getFontURL$1(style), style.fontSize);\n        page.setTextRenderingMode(renderMode);\n        page.showText(element.content(), element._pdfRect ? element._pdfRect.width() : null);\n    };\n\n    if (element.fill() && element.stroke()) {\n        mode = TEXT_RENDERING_MODE.fillAndStroke;\n        if (element.options.paintOrder === \"stroke\") {\n            draw(TEXT_RENDERING_MODE.stroke);\n            mode = TEXT_RENDERING_MODE.fill;\n        }\n    } else if (element.fill()) {\n        mode = TEXT_RENDERING_MODE.fill;\n    } else if (element.stroke()) {\n        mode = TEXT_RENDERING_MODE.stroke;\n    }\n\n    draw(mode);\n    page.endText();\n}\n\nfunction drawGroup(element, page, pdf) {\n    if (element._pdfLink) {\n        page.addLink(element._pdfLink.url, element._pdfLink);\n    }\n    var children = element.children;\n    for (var i = 0; i < children.length; ++i) {\n        drawElement(children[i], page, pdf);\n    }\n}\n\nfunction drawImage(element, page) {\n    var url = element.src();\n    if (!url) {\n        return;\n    }\n\n    var rect = element.rect();\n    var tl = rect.getOrigin();\n    var sz = rect.getSize();\n    page.transform(sz.width, 0, 0, -sz.height, tl.x, tl.y + sz.height);\n    page.drawImage(url);\n}\n\nfunction drawRect(element, page, pdf) {\n    var geometry = element.geometry();\n    var ref = geometry.cornerRadius;\n    var rx = ref[0];\n    var ry = ref[1];\n    if (rx === 0 && ry === 0) {\n        page.rect(geometry.origin.x, geometry.origin.y, geometry.size.width, geometry.size.height);\n        maybeFillStroke(element, page, pdf);\n    } else {\n        drawPath(Path.fromRect(geometry, element.options), page, pdf);\n    }\n}\n\nfunction parseColor$1(value) {\n    var color = parseColor$2(value, true);\n    return color ? color.toRGB() : null;\n}\n\nfunction optimize(root) {\n    var clipbox = false;\n    var matrix = Matrix.unit();\n    var currentBox = null;\n    var changed;\n    do {\n        changed = false;\n        root = opt(root);\n    } while (root && changed);\n    return { root: root, bbox: currentBox };\n\n    function change(newShape) {\n        changed = true;\n        return newShape;\n    }\n\n    function visible(shape) {\n        return (shape.visible() && shape.opacity() > 0 &&\n                ( shouldDraw(shape.fill()) ||\n                  shouldDraw(shape.stroke()) ));\n    }\n\n    function optArray(a) {\n        var b = [];\n        for (var i = 0; i < a.length; ++i) {\n            var el = opt(a[i]);\n            if (el != null) {\n                b.push(el);\n            }\n        }\n        return b;\n    }\n\n    function withClipping(shape, f) {\n        var saveclipbox = clipbox;\n        var savematrix = matrix;\n\n        if (shape.transform()) {\n            matrix = matrix.multiplyCopy(shape.transform().matrix());\n        }\n\n        var clip = shape.clip();\n        if (clip && typeof clip.bbox === 'function') {\n            clip = clip.bbox();\n            if (clip) {\n                clip = clip.bbox(matrix);\n                clipbox = clipbox ? Rect$1.intersect(clipbox, clip) : clip;\n            }\n        }\n\n        try {\n            return f();\n        }\n        finally {\n            clipbox = saveclipbox;\n            matrix = savematrix;\n        }\n    }\n\n    function inClipbox(shape) {\n        if (clipbox == null) {\n            return false;\n        }\n\n        var box = shape.rawBBox();\n        if (box) {\n            box = box.bbox(matrix);\n        }\n\n        if (clipbox && box) {\n            box = Rect$1.intersect(box, clipbox);\n        }\n        return box;\n    }\n\n    function opt(shape) {\n        return withClipping(shape, function(){\n            if (!(shape instanceof Group || shape instanceof MultiPath)) {\n                var box = inClipbox(shape);\n                if (!box) {\n                    return change(null);\n                }\n                currentBox = currentBox ? Rect$1.union(currentBox, box) : box;\n            }\n            return dispatch({\n                Path: function(shape) {\n                    if (shape.segments.length === 0 || !visible(shape)) {\n                        return change(null);\n                    }\n                    return shape;\n                },\n                MultiPath: function(shape) {\n                    if (!visible(shape)) {\n                        return change(null);\n                    }\n                    var el = new MultiPath(shape.options);\n                    el.paths = optArray(shape.paths);\n                    if (el.paths.length === 0) {\n                        return change(null);\n                    }\n                    return el;\n                },\n                Circle: function(shape) {\n                    if (!visible(shape)) {\n                        return change(null);\n                    }\n                    return shape;\n                },\n                Arc: function(shape) {\n                    if (!visible(shape)) {\n                        return change(null);\n                    }\n                    return shape;\n                },\n                Text: function(shape) {\n                    if (!/\\S/.test(shape.content()) || !visible(shape)) {\n                        return change(null);\n                    }\n                    return shape;\n                },\n                Image: function(shape) {\n                    if (!(shape.visible() && shape.opacity() > 0)) {\n                        return change(null);\n                    }\n                    return shape;\n                },\n                Group: function(shape) {\n                    if (!(shape.visible() && shape.opacity() > 0)) {\n                        return change(null);\n                    }\n                    var el = new Group(shape.options);\n                    el.children = optArray(shape.children);\n                    el._pdfLink = shape._pdfLink;\n                    if (shape !== root && el.children.length === 0 && !shape._pdfLink) {\n                        return change(null);\n                    }\n                    return el;\n                },\n                Rect: function(shape) {\n                    if (!visible(shape)) {\n                        return change(null);\n                    }\n                    return shape;\n                }\n            }, shape);\n        });\n    }\n}\n\nfunction exportPDF(group, options) {\n    var promise = createPromise();\n\n    for (var i in options) {\n        if (i == \"margin\" && group.options.pdf && group.options.pdf._ignoreMargin) {\n            // This hackish option is set by the page breaking code in drawDOM.  The idea is\n            // that margin is already taken into account there (that's required to do proper\n            // page breaking) and we don't want to set it again here, as it would double the\n            // top-left margin, and truncate the content on bottom/right.\n            continue;\n        }\n        group.options.set(\"pdf.\" + i, options[i]);\n    }\n\n    toDataURL(group, promise.resolve);\n\n    return promise;\n}\n\n// XXX: the duplication is in order to keep exportPDF return a data\n// URI, which is what previous versions do.  Currently only IE9 does\n// not support Blob, IMO we should switch to Blob by default\n// everywhere.\nfunction exportPDFToBlob(group, options) {\n    var promise = createPromise();\n\n    for (var i in options) {\n        if (i == \"margin\" && group.options.pdf && group.options.pdf._ignoreMargin) {\n            // This hackish option is set by the page breaking code in drawDOM.  The idea is\n            // that margin is already taken into account there (that's required to do proper\n            // page breaking) and we don't want to set it again here, as it would double the\n            // top-left margin, and truncate the content on bottom/right.\n            continue;\n        }\n        group.options.set(\"pdf.\" + i, options[i]);\n    }\n\n    if (window.Blob && !support$1.browser.safari) {\n        toBlob(group, promise.resolve);\n    } else {\n        toDataURL(group, promise.resolve);\n    }\n\n    return promise;\n}\n\nvar pdf = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BinaryStream: BinaryStream,\n    Document: PDFDocument,\n    TEXT_RENDERING_MODE: TEXT_RENDERING_MODE$1,\n    clearImageCache: clearImageCache,\n    defineFont: defineFont,\n    exportPDF: exportPDF,\n    exportPDFToBlob: exportPDFToBlob,\n    getFontURL: getFontURL$1,\n    getPaperOptions: getPaperOptions,\n    loadFonts: loadFonts,\n    loadImages: loadImages,\n    parseFontDef: parseFontDef,\n    render: render,\n    saveAs: saveAs,\n    toBlob: toBlob,\n    toDataURL: toDataURL\n});\n\n/* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n/* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n/* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty, yoda */\n/* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n\nvar browser = support$1.browser || {};\n/*\n\n  XXX: to test:\n\n  - cloneNodes function:\n    - drawing document containing canvas with page breaking\n    - drawing document with named radio <input>-s (should not clear selection)\n    - IE9/IE10 don't support el.dataset; do they copy user data?\n\n  - repeating table headers/footers on page breaking\n\n  - forceBreak, keepTogether\n\n  - avoidLinks\n\n */\n\n/* -----[ local vars ]----- */\n\nfunction slice(thing) {\n    return Array.prototype.slice.call(thing);\n}\n\nvar KENDO_PSEUDO_ELEMENT = \"KENDO-PSEUDO-ELEMENT\";\nvar KENDO_BULLET_TYPE = 'data-kendo-bullet-type';\n\nvar IMAGE_CACHE = {};\n\nvar nodeInfo = {};\nnodeInfo._root = nodeInfo;\n\n/* -----[ Custom Text node to speed up rendering in PDF ]----- */\n\nvar inBrowser = typeof window !== 'undefined';\nvar microsoft = inBrowser ? browser.msie || browser.edge : false;\n\nvar TextRect = (function (Text) {\n  function TextRect(str, rect, options) {\n        Text.call(this, str, rect.getOrigin(), options);\n        this._pdfRect = rect;\n    }\n\n  if ( Text ) TextRect.__proto__ = Text;\n  TextRect.prototype = Object.create( Text && Text.prototype );\n  TextRect.prototype.constructor = TextRect;\n    TextRect.prototype.rect = function rect () {\n        // this is the crux of it: we can avoid a call to\n        // measure(), which is what the base class does, since we\n        // already know the rect.  measure() is s-l-o-w.\n        return this._pdfRect;\n    };\n    TextRect.prototype.rawBBox = function rawBBox () {\n        // also let's avoid creating a new rectangle.\n        return this._pdfRect;\n    };\n\n  return TextRect;\n}(Text));\n\nfunction addClass(el, cls) {\n    if (el.classList) {\n        el.classList.add(cls);\n    } else {\n        el.className += \" \" + cls;\n    }\n}\n\nfunction removeClass(el, cls) {\n    if (el.classList) {\n        el.classList.remove(cls);\n    } else {\n        el.className = el.className.split(/\\s+/).reduce(function(a, word){\n            if (word != cls) {\n                a.push(word);\n            }\n            return a;\n        }, []).join(\" \");\n    }\n}\n\nfunction setCSS(el, styles) {\n    Object.keys(styles).forEach(function(key){\n        el.style[key] = styles[key];\n    });\n}\n\nvar matches = typeof Element !== \"undefined\" && Element.prototype && (function(p){\n    if (p.matches) {\n        return function(el, selector) { return el.matches(selector); };\n    }\n    if (p.webkitMatchesSelector) {\n        return function(el, selector) { return el.webkitMatchesSelector(selector); };\n    }\n    if (p.mozMatchesSelector) {\n        return function(el, selector) { return el.mozMatchesSelector(selector); };\n    }\n    if (p.msMatchesSelector) {\n        return function(el, selector) { return el.msMatchesSelector(selector); };\n    }\n    return function(s) {\n\treturn [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n})(Element.prototype);\n\nfunction closest(el, selector) {\n    if (el.closest) {\n        return el.closest(selector);\n    }\n    // IE: stringifying rather than simply comparing with `document`,\n    // which is not iframe-proof and fails in editor export —\n    // https://github.com/telerik/kendo/issues/6721\n    while (el && !/^\\[object (?:HTML)?Document\\]$/.test(String(el))) {\n        if (el.nodeType == 1 /* Element */ && matches(el, selector)) {\n            return el;\n        }\n        el = el.parentNode;\n    }\n}\n\n// clone nodes ourselves, so that we redraw <canvas> (DOM or\n// jQuery clone will not)\nvar cloneNodes = (function($){\n    if ($) {\n        // if we have Kendo and jQuery, use this version as it will\n        // maintain proper links between cloned element and Kendo\n        // widgets (i.e. it clones jQuery data(), which isn't the same\n        // as element's data attributes).\n        // https://github.com/telerik/kendo-ui-core/issues/2750\n        return function cloneNodes(el) {\n            var clone = el.cloneNode(false);\n            if (el.nodeType == 1 /* Element */) {\n                var $el = $(el), $clone = $(clone), i;\n                var data = $el.data();\n                for (i in data) {\n                    $clone.data(i, data[i]);\n                }\n                if (/^canvas$/i.test(el.tagName)) {\n                    clone.getContext(\"2d\").drawImage(el, 0, 0);\n                } else if (/^(?:input|select|textarea|option)$/i.test(el.tagName)) {\n                    // drop the name attributes so that we don't affect the selection of the\n                    // original nodes (i.e. checked status of radio buttons) when we insert our copy\n                    // into the DOM.  https://github.com/telerik/kendo/issues/5409\n                    clone.removeAttribute(\"id\");\n                    clone.removeAttribute(\"name\");\n                    if (!/^textarea$/i.test(el.tagName)) {\n                        clone.value = el.value;\n                    }\n                    clone.checked = el.checked;\n                    clone.selected = el.selected;\n                }\n\n                if (el._kendoExportVisual) {\n                    clone._kendoExportVisual = el._kendoExportVisual;\n                }\n\n                for (i = el.firstChild; i; i = i.nextSibling) {\n                    clone.appendChild(cloneNodes(i));\n                }\n            }\n            return clone;\n        };\n    } else {\n        // the no-jQuery version\n        return function cloneNodes(el) {\n            var clone = (function dive(node){\n                var clone = node.cloneNode(false);\n                if (node._kendoExportVisual) {\n                    clone._kendoExportVisual = node._kendoExportVisual;\n                }\n                for (var i = node.firstChild; i; i = i.nextSibling) {\n                    clone.appendChild(dive(i));\n                }\n                return clone;\n            })(el);\n\n            // re-draw canvases - https://github.com/telerik/kendo/issues/4872\n            var canvases = el.querySelectorAll(\"canvas\");\n            if (canvases.length) {\n                slice(clone.querySelectorAll(\"canvas\")).forEach(function (canvas, i) {\n                    canvas.getContext(\"2d\").drawImage(canvases[i], 0, 0);\n                });\n            }\n\n            // remove \"name\" attributes from <input> elements -\n            // https://github.com/telerik/kendo/issues/5409\n            var orig = el.querySelectorAll(\"input, select, textarea, option\");\n            slice(clone.querySelectorAll(\"input, select, textarea, option\")).forEach(function (el, i) {\n                el.removeAttribute(\"id\");\n                el.removeAttribute(\"name\");\n                if (!/^textarea$/i.test(el.tagName)) {\n                    el.value = orig[i].value;\n                }\n                el.checked = orig[i].checked;\n                el.selected = orig[i].selected;\n            });\n\n            return clone;\n        };\n    }\n})(typeof window !== \"undefined\" && window.kendo && window.kendo.jQuery);\n\nfunction getXY(thing) {\n    if (typeof thing == \"number\") {\n        return { x: thing, y: thing };\n    }\n    if (Array.isArray(thing)) {\n        return { x: thing[0], y: thing[1] };\n    }\n    return { x: thing.x, y: thing.y };\n}\n\nfunction drawDOM(element, options) {\n    if (!options) {\n        options = {};\n    }\n    var promise = createPromise();\n\n    if (!element) {\n        return promise.reject(\"No element to export\");\n    }\n\n    if (typeof window.getComputedStyle != \"function\") {\n        throw new Error(\"window.getComputedStyle is missing.  You are using an unsupported browser, or running in IE8 compatibility mode.  Drawing HTML is supported in Chrome, Firefox, Safari and IE9+.\");\n    }\n\n    defineFont(getFontFaces(element.ownerDocument));\n\n    var scale = getXY(options.scale || 1);\n\n    function doOne(element) {\n        var group = new Group();\n\n        // translate to start of page\n        var pos = element.getBoundingClientRect();\n        setTransform(group, [\n            scale.x,\n            0,\n            0,\n            scale.y,\n            (-pos.left * scale.x),\n            (-pos.top * scale.y)\n        ]);\n\n        nodeInfo._clipbox = false;\n        nodeInfo._matrix = Matrix.unit();\n        nodeInfo._stackingContext = {\n            element: element,\n            group: group\n        };\n\n        if (options.avoidLinks === true) {\n            nodeInfo._avoidLinks = \"a\";\n        } else {\n            nodeInfo._avoidLinks = options.avoidLinks;\n        }\n\n        addClass(element, \"k-pdf-export\");\n        renderElement(element, group);\n        removeClass(element, \"k-pdf-export\");\n\n        return group;\n    }\n\n    cacheImages([ element ], function(){\n        var forceBreak = options && options.forcePageBreak;\n        var hasPaperSize = options && options.paperSize && options.paperSize != \"auto\";\n        var paperOptions = getPaperOptions(function(key, def){\n            if (key == \"paperSize\") {\n                // PDF.getPaperOptions croaks on \"auto\", just pass dummy A4 as we might\n                // still be interested in margins.\n                return hasPaperSize ? options[key] : \"A4\";\n            }\n            return key in options ? options[key] : def;\n        });\n        var pageWidth = hasPaperSize && paperOptions.paperSize[0];\n        var pageHeight = hasPaperSize && paperOptions.paperSize[1];\n        var margin = options.margin && paperOptions.margin;\n        var hasMargin = Boolean(margin);\n        if (forceBreak || pageHeight) {\n            if (!margin) {\n                margin = { left: 0, top: 0, right: 0, bottom: 0 };\n            }\n\n            // we want paper size and margin to be unaffected by\n            // scaling in the output, so we have to reverse-scale\n            // before our calculations begin.\n            if (pageWidth)  { pageWidth  /= scale.x; }\n            if (pageHeight) { pageHeight /= scale.y; }\n            margin.left   /= scale.x;\n            margin.right  /= scale.x;\n            margin.top    /= scale.y;\n            margin.bottom /= scale.y;\n\n            var group = new Group({\n                pdf: {\n                    multiPage     : true,\n                    paperSize     : hasPaperSize ? paperOptions.paperSize : \"auto\",\n                    _ignoreMargin : hasMargin // HACK!  see exportPDF in pdf/drawing.js\n                }\n            });\n            handlePageBreaks(\n                function(x) {\n                    if (options.progress) {\n                        var canceled = false, pageNum = 0;\n                        (function next(){\n                            if (pageNum < x.pages.length) {\n                                var page = doOne(x.pages[pageNum]);\n                                group.append(page);\n                                options.progress({\n                                    page: page,\n                                    pageNum: ++pageNum,\n                                    totalPages: x.pages.length,\n                                    cancel: function() {\n                                        canceled = true;\n                                    }\n                                });\n                                if (!canceled) {\n                                    setTimeout(next);\n                                } else {\n                                    // XXX: should we also fail() the deferred object?\n                                    x.container.parentNode.removeChild(x.container);\n                                }\n                            } else {\n                                x.container.parentNode.removeChild(x.container);\n                                promise.resolve(group);\n                            }\n                        })();\n                    } else {\n                        x.pages.forEach(function(page){\n                            group.append(doOne(page));\n                        });\n                        x.container.parentNode.removeChild(x.container);\n                        promise.resolve(group);\n                    }\n                },\n                element,\n                forceBreak,\n                pageWidth ? pageWidth - margin.left - margin.right : null,\n                pageHeight ? pageHeight - margin.top - margin.bottom : null,\n                margin,\n                options\n            );\n        } else {\n            promise.resolve(doOne(element));\n        }\n    });\n\n    function makeTemplate(template$1) {\n        if (template$1 != null) {\n            if (typeof template$1 == \"string\") {\n                template$1 = template(template$1.replace(/^\\s+|\\s+$/g, \"\"));\n            }\n            if (typeof template$1 == \"function\") {\n                return function(data) {\n                    var el = template$1(data);\n                    if (el && typeof el == \"string\") {\n                        var div = document.createElement(\"div\");\n                        setInnerHTML(div, el);\n                        el = div.firstElementChild;\n                    }\n                    return el;\n                };\n            }\n            // assumed DOM element\n            return function() {\n                return template$1.cloneNode(true);\n            };\n        }\n    }\n\n    function handlePageBreaks(callback, element, forceBreak, pageWidth, pageHeight, margin, options) {\n        var template = makeTemplate(options.template);\n        var doc = element.ownerDocument;\n        var pages = [];\n        var copy = options._destructive ? element : cloneNodes(element);\n        var container = doc.createElement(\"KENDO-PDF-DOCUMENT\");\n        var adjust = 0;\n\n        // make sure <tfoot> elements are at the end (Grid widget\n        // places TFOOT before TBODY, tricking our algorithm to\n        // insert a page break right after the header).\n        // https://github.com/telerik/kendo/issues/4699\n        slice(copy.querySelectorAll(\"tfoot\")).forEach(function(tfoot){\n            tfoot.parentNode.appendChild(tfoot);\n        });\n\n        // remember the index of each LI from an ordered list.\n        // we'll use it to reconstruct the proper numbering.\n        slice(copy.querySelectorAll(\"ol\")).forEach(function(ol){\n            slice(ol.children).forEach(function(li, index){\n                li.setAttribute(\"kendo-split-index\", index);\n            });\n        });\n\n        setCSS(container, {\n            display   : \"block\",\n            position  : \"absolute\",\n            boxSizing : \"content-box\",\n            left      : \"-10000px\",\n            top       : \"-10000px\"\n        });\n\n        if (pageWidth) {\n            // subtle: if we don't set the width *and* margins here, the layout in this\n            // container will be different from the one in our final page elements, and we'll\n            // split at the wrong places.\n            setCSS(container, {\n                width        : pageWidth + \"px\",\n                paddingLeft  : margin.left + \"px\",\n                paddingRight : margin.right + \"px\"\n            });\n\n            // when the first element has a margin-top (i.e. a <h1>) the page will be\n            // inadvertently enlarged by that number (the browser will report the container's\n            // bounding box top to start at the element's top, rather than including its\n            // margin).  Adding overflow: hidden seems to fix it.\n            //\n            // to understand the difference, try the following snippets in your browser:\n            //\n            // 1. <div style=\"background: yellow\">\n            //      <h1 style=\"margin: 3em\">Foo</h1>\n            //    </div>\n            //\n            // 2. <div style=\"background: yellow; overflow: hidden\">\n            //      <h1 style=\"margin: 3em\">Foo</h1>\n            //    </div>\n            //\n            // this detail is not important when automatic page breaking is not requested, hence\n            // doing it only if pageWidth is defined.\n            setCSS(copy, { overflow: \"hidden\" });\n        }\n\n        element.parentNode.insertBefore(container, element);\n        container.appendChild(copy);\n\n        // With cache disabled, images will still have height zero until their `complete` attribute\n        // is true.  `whenImagesAreActuallyLoaded` will wait for it.\n        if (options.beforePageBreak) {\n            whenImagesAreActuallyLoaded([ container ], function() {\n                options.beforePageBreak(container, doPageBreak);\n            });\n        } else {\n            whenImagesAreActuallyLoaded([ container ], doPageBreak);\n        }\n\n        function doPageBreak() {\n            if (forceBreak != \"-\" || pageHeight) {\n                splitElement(copy);\n            }\n\n            {\n                var page = makePage();\n                copy.parentNode.insertBefore(page, copy);\n                page.appendChild(copy);\n            }\n\n            if (template) {\n                pages.forEach(function(page, i){\n                    var el = template({\n                        element    : page,\n                        pageNum    : i + 1,\n                        totalPages : pages.length\n                    });\n                    if (el) {\n                        page.appendChild(el);\n                    }\n                });\n            }\n\n            cacheImages(pages, callback.bind(null, { pages: pages, container: container }));\n        }\n\n        function keepTogether(el) {\n            if (options.keepTogether && matches(el, options.keepTogether) && el.offsetHeight <= pageHeight - adjust) {\n                return true;\n            }\n\n            var tag = el.tagName;\n            if (/^h[1-6]$/i.test(tag) && el.offsetHeight >= pageHeight - adjust) {\n                return false;\n            }\n\n            return (el.getAttribute(\"data-kendo-chart\") ||\n                    /^(?:img|tr|thead|th|tfoot|iframe|svg|object|canvas|input|textarea|select|video|h[1-6])/i.test(el.tagName));\n        }\n\n        function splitElement(element) {\n            if (element.tagName == \"TABLE\") {\n                setCSS(element, { tableLayout: \"fixed\" });\n            }\n            if (keepTogether(element)) {\n                return;\n            }\n            var style = getComputedStyle$1(element);\n            var bottomPadding = parseFloat(getPropertyValue(style, \"padding-bottom\"));\n            var bottomBorder = parseFloat(getPropertyValue(style, \"border-bottom-width\"));\n            var saveAdjust = adjust;\n            adjust += bottomPadding + bottomBorder;\n            var isFirst = true;\n            for (var el = element.firstChild; el; el = el.nextSibling) {\n                if (el.nodeType == 1 /* Element */) {\n                    isFirst = false;\n                    if (matches(el, forceBreak)) {\n                        breakAtElement(el);\n                        continue;\n                    }\n                    if (!pageHeight) {\n                        // we're in \"manual breaks mode\"\n                        splitElement(el);\n                        continue;\n                    }\n                    if (!/^(?:static|relative)$/.test(getPropertyValue(getComputedStyle$1(el), \"position\"))) {\n                        continue;\n                    }\n                    var fall = fallsOnMargin(el);\n                    if (fall == 1) {\n                        // element starts on next page, break before anyway.\n                        breakAtElement(el);\n                    }\n                    else if (fall) {\n                        // elements ends up on next page, or possibly doesn't fit on a page at\n                        // all.  break before it anyway if it's an <img> or <tr>, otherwise\n                        // attempt to split.\n                        if (keepTogether(el)) {\n                            breakAtElement(el);\n                        } else {\n                            splitElement(el);\n                        }\n                    }\n                    else {\n                        splitElement(el);\n                    }\n                }\n                else if (el.nodeType == 3 /* Text */ && pageHeight) {\n                    splitText(el, isFirst);\n                    isFirst = false;\n                }\n            }\n            adjust = saveAdjust;\n        }\n\n        function firstInParent(el) {\n            var p = el.parentNode, first = p.firstChild;\n            if (el === first) {\n                return true;\n            }\n            if (el === p.children[0]) {\n                if (first.nodeType == 7 /* comment */ ||\n                    first.nodeType == 8 /* processing instruction */) {\n                    return true;\n                }\n                if (first.nodeType == 3 /* text */) {\n                    // if whitespace only we can probably consider it's first\n                    return !/\\S/.test(first.data);\n                }\n            }\n            return false;\n        }\n\n        function breakAtElement(el) {\n            if (el.nodeType == 1 && el !== copy && firstInParent(el)) {\n                return breakAtElement(el.parentNode);\n            }\n            var table, colgroup, thead, grid, gridHead;\n            table = closest(el, \"table\");\n            colgroup = table && table.querySelector(\"colgroup\");\n            if (options.repeatHeaders) {\n                thead = table && table.querySelector(\"thead\");\n\n                // If we break page in a Kendo Grid, repeat its header.  This ugly hack is\n                // necessary because a scrollable grid will keep the header in a separate\n                // <table> element from its content.\n                //\n                // XXX: This is likely to break as soon as the widget HTML is modified.\n                grid = closest(el, \".k-grid\");\n                if (grid && grid.querySelector(\".k-auto-scrollable\")) {\n                    gridHead = grid.querySelector(\".k-grid-header\");\n                }\n            }\n            var page = makePage();\n            var range = doc.createRange();\n            range.setStartBefore(copy);\n            range.setEndBefore(el);\n            page.appendChild(range.extractContents());\n            copy.parentNode.insertBefore(page, copy);\n            preventBulletOnListItem(el.parentNode);\n            if (table) {\n                table = closest(el, \"table\"); // that's the <table> on next page!\n                if (options.repeatHeaders && thead) {\n                    table.insertBefore(thead.cloneNode(true), table.firstChild);\n                }\n                if (colgroup) {\n                    table.insertBefore(colgroup.cloneNode(true), table.firstChild);\n                }\n            }\n            if (options.repeatHeaders && gridHead) {\n                grid = closest(el, \".k-grid\");\n                grid.insertBefore(gridHead.cloneNode(true), grid.firstChild);\n            }\n        }\n\n        function makePage() {\n            var page = doc.createElement(\"KENDO-PDF-PAGE\");\n            setCSS(page, {\n                display  : \"block\",\n                boxSizing: \"content-box\",\n                width    : pageWidth ? (pageWidth + \"px\") : \"auto\",\n                padding  : (margin.top + \"px \" +\n                            margin.right + \"px \" +\n                            margin.bottom + \"px \" +\n                            margin.left + \"px\"),\n\n                // allow absolutely positioned elements to be relative to current page\n                position : \"relative\",\n\n                // without the following we might affect layout of subsequent pages\n                height   : pageHeight ? (pageHeight + \"px\") : \"auto\",\n                overflow : pageHeight || pageWidth ? \"hidden\" : \"visible\",\n                clear    : \"both\"\n            });\n\n            // debug\n            // $(\"<div>\").css({\n            //     position  : \"absolute\",\n            //     left      : margin.left,\n            //     top       : margin.top,\n            //     width     : pageWidth,\n            //     height    : pageHeight,\n            //     boxSizing : \"border-box\",\n            //     background: \"rgba(255, 255, 0, 0.5)\"\n            //     //border    : \"1px solid red\"\n            // }).appendTo(page);\n\n            if (options && options.pageClassName) {\n                page.className = options.pageClassName;\n            }\n            pages.push(page);\n            return page;\n        }\n\n        function fallsOnMargin(thing) {\n            var box = thing.getBoundingClientRect();\n            if (box.width === 0 || box.height === 0) {\n                // I'd say an element with dimensions zero fits on current page.\n                return 0;\n            }\n            var top = copy.getBoundingClientRect().top;\n            var available = pageHeight - adjust;\n            return (box.height > available) ? 3\n                : (box.top - top > available) ? 1\n                : (box.bottom - top > available) ? 2\n                : 0;\n        }\n\n        function splitText(node, isFirst) {\n            if (!/\\S/.test(node.data)) {\n                return;\n            }\n\n            var len = node.data.length;\n            var range = doc.createRange();\n            range.selectNodeContents(node);\n            var fall = fallsOnMargin(range);\n            if (!fall) {\n                return;     // the whole text fits on current page\n            }\n\n            var nextnode = node;\n            if (fall == 1) {\n                // starts on next page, break before anyway.\n                if (isFirst) {\n                    // avoid leaving an empty <p>, <li>, etc. on previous page.\n                    breakAtElement(node.parentNode);\n                } else {\n                    breakAtElement(node);\n                }\n            }\n            else {\n                (function findEOP(min, pos, max) {\n                    range.setEnd(node, pos);\n                    if (min == pos || pos == max) {\n                        return pos;\n                    }\n                    if (fallsOnMargin(range)) {\n                        return findEOP(min, (min + pos) >> 1, pos);\n                    } else {\n                        return findEOP(pos, (pos + max) >> 1, max);\n                    }\n                })(0, len >> 1, len);\n\n                if (!/\\S/.test(range.toString()) && isFirst) {\n                    // avoid leaving an empty <p>, <li>, etc. on previous page.\n                    breakAtElement(node.parentNode);\n                } else {\n                    // This is only needed for IE, but it feels cleaner to do it anyway.  Without\n                    // it, IE will truncate a very long text (playground/pdf-long-text-2.html).\n                    nextnode = node.splitText(range.endOffset);\n\n                    var page = makePage();\n                    range.setStartBefore(copy);\n                    page.appendChild(range.extractContents());\n                    copy.parentNode.insertBefore(page, copy);\n                    preventBulletOnListItem(nextnode.parentNode);\n                }\n            }\n\n            splitText(nextnode);\n        }\n\n        function preventBulletOnListItem(el) {\n            // set a hint on continued LI elements, to tell the\n            // renderer not to draw the bullet again.\n            // https://github.com/telerik/kendo-ui-core/issues/2732\n            var li = closest(el, \"li\");\n            if (li) {\n                li.setAttribute(\"kendo-no-bullet\", \"1\");\n                preventBulletOnListItem(li.parentNode);\n            }\n        }\n    }\n\n    return promise;\n}\n\n// This is needed for the Spreadsheet print functionality.  Since\n// there we only need to draw text, this cuts through the ceremony\n// of drawDOM/renderElement and renders the text node directly.\nfunction drawText(element) {\n    var group = new Group();\n    nodeInfo._clipbox = false;\n    nodeInfo._matrix = Matrix.unit();\n    nodeInfo._stackingContext = {\n        element: element,\n        group: group\n    };\n    pushNodeInfo(element, getComputedStyle$1(element), group);\n    if (element.firstChild.nodeType == 3 /* Text */) {\n        // avoid the penalty of renderElement\n        renderText(element, element.firstChild, group);\n    } else {\n        _renderElement(element, group);\n    }\n    popNodeInfo();\n    return group;\n}\n\nvar parseBackgroundImage = (function(){\n    var tok_linear_gradient  = /^((-webkit-|-moz-|-o-|-ms-)?linear-gradient\\s*)\\(/;\n    //var tok_radial_gradient  = /^((-webkit-|-moz-|-o-|-ms-)?radial-gradient\\s*)\\(/;\n    var tok_percent          = /^([-0-9.]+%)/;\n    var tok_length           = /^([-0-9.]+px)/;\n    var tok_keyword          = /^(left|right|top|bottom|to|center)\\W/;\n    var tok_angle            = /^([-0-9.]+(deg|grad|rad|turn)|0)/;\n    var tok_whitespace       = /^(\\s+)/;\n    var tok_popen            = /^(\\()/;\n    var tok_pclose           = /^(\\))/;\n    var tok_comma            = /^(,)/;\n    var tok_url              = /^(url)\\(/;\n    var tok_content          = /^(.*?)\\)/;\n\n    var cache1 = {}, cache2 = {};\n\n    function parse(input) {\n        var orig = input;\n        if (hasOwnProperty(cache1, orig)) {\n            return cache1[orig];\n        }\n        function skip_ws() {\n            var m = tok_whitespace.exec(input);\n            if (m) {\n                input = input.substr(m[1].length);\n            }\n        }\n        function read(token) {\n            skip_ws();\n            var m = token.exec(input);\n            if (m) {\n                input = input.substr(m[1].length);\n                return m[1];\n            }\n        }\n\n        function read_stop() {\n            var color = parseColor$2(input, true);\n            var length, percent;\n            if (color) {\n                var match =\n                    /^#[0-9a-f]+/i.exec(input) ||\n                    /^rgba?\\(.*?\\)/i.exec(input) ||\n                    /^..*?\\b/.exec(input); // maybe named color\n                input = input.substr(match[0].length);\n                color = color.toRGB();\n                if (!(length = read(tok_length))) {\n                    percent = read(tok_percent);\n                }\n                return { color: color, length: length, percent: percent };\n            }\n        }\n\n        function read_linear_gradient(propName) {\n            var angle;\n            var to1, to2;\n            var stops = [];\n            var reverse = false;\n\n            if (read(tok_popen)) {\n                // 1. [ <angle> || to <side-or-corner>, ]?\n                angle = read(tok_angle);\n                if (angle == \"0\") {\n                    angle = \"0deg\"; // Edge\n                }\n                if (angle) {\n                    angle = parseAngle(angle);\n                    read(tok_comma);\n                }\n                else {\n                    to1 = read(tok_keyword);\n                    if (to1 == \"to\") {\n                        to1 = read(tok_keyword);\n                    } else if (to1 && /^-/.test(propName)) {\n                        reverse = true;\n                    }\n                    to2 = read(tok_keyword);\n                    read(tok_comma);\n                }\n\n                if (/-moz-/.test(propName) && angle == null && to1 == null) {\n                    var x = read(tok_percent), y = read(tok_percent);\n                    reverse = true;\n                    if (x == \"0%\") {\n                        to1 = \"left\";\n                    } else if (x == \"100%\") {\n                        to1 = \"right\";\n                    }\n                    if (y == \"0%\") {\n                        to2 = \"top\";\n                    } else if (y == \"100%\") {\n                        to2 = \"bottom\";\n                    }\n                    read(tok_comma);\n                }\n\n                // 2. color stops\n                while (input && !read(tok_pclose)) {\n                    var stop = read_stop();\n                    if (!stop) {\n                        break;\n                    }\n                    stops.push(stop);\n                    read(tok_comma);\n                }\n\n                return {\n                    type    : \"linear\",\n                    angle   : angle,\n                    to      : to1 && to2 ? to1 + \" \" + to2 : to1 ? to1 : to2 ? to2 : null,\n                    stops   : stops,\n                    reverse : reverse\n                };\n            }\n        }\n\n        function read_url() {\n            if (read(tok_popen)) {\n                var url = read(tok_content);\n                url = url.replace(/^['\"]+|[\"']+$/g, \"\");\n                read(tok_pclose);\n                return { type: \"url\", url: url };\n            }\n        }\n\n        var tok;\n\n        if ((tok = read(tok_linear_gradient))) {\n            tok = read_linear_gradient(tok);\n        }\n        else if ((tok = read(tok_url))) {\n            tok = read_url();\n        }\n\n        return (cache1[orig] = tok || { type: \"none\" });\n    }\n\n    return function(input) {\n        if (hasOwnProperty(cache2, input)) {\n            return cache2[input];\n        }\n        return (cache2[input] = splitProperty(input).map(parse));\n    };\n})();\n\nvar splitProperty = (function(){\n    var cache = {};\n    return function(input, separator) {\n        if (!separator) {\n            separator = /^\\s*,\\s*/;\n        }\n\n        var cacheKey = input + separator;\n\n        if (hasOwnProperty(cache, cacheKey)) {\n            return cache[cacheKey];\n        }\n\n        var ret = [];\n        var last = 0, pos = 0;\n        var in_paren = 0;\n        var in_string = false;\n        var m;\n\n        function looking_at(rx) {\n            return (m = rx.exec(input.substr(pos)));\n        }\n\n        function trim(str) {\n            return str.replace(/^\\s+|\\s+$/g, \"\");\n        }\n\n        while (pos < input.length) {\n            if (!in_string && looking_at(/^[\\(\\[\\{]/)) {\n                in_paren++;\n                pos++;\n            }\n            else if (!in_string && looking_at(/^[\\)\\]\\}]/)) {\n                in_paren--;\n                pos++;\n            }\n            else if (!in_string && looking_at(/^[\\\"\\']/)) {\n                in_string = m[0];\n                pos++;\n            }\n            else if (in_string == \"'\" && looking_at(/^\\\\\\'/)) {\n                pos += 2;\n            }\n            else if (in_string == '\"' && looking_at(/^\\\\\\\"/)) {\n                pos += 2;\n            }\n            else if (in_string == \"'\" && looking_at(/^\\'/)) {\n                in_string = false;\n                pos++;\n            }\n            else if (in_string == '\"' && looking_at(/^\\\"/)) {\n                in_string = false;\n                pos++;\n            }\n            else if (looking_at(separator)) {\n                if (!in_string && !in_paren && pos > last) {\n                    ret.push(trim(input.substring(last, pos)));\n                    last = pos + m[0].length;\n                }\n                pos += m[0].length;\n            }\n            else {\n                pos++;\n            }\n        }\n        if (last < pos) {\n            ret.push(trim(input.substring(last, pos)));\n        }\n        return (cache[cacheKey] = ret);\n    };\n})();\n\nvar getFontURL = (function(cache){\n    return function(el){\n        // XXX: for IE we get here the whole cssText of the rule,\n        // because the computedStyle.src is empty.  Next time we need\n        // to fix these regexps we better write a CSS parser. :-\\\n        var url = cache[el];\n        if (!url) {\n            var m;\n            if ((m = /url\\((['\"]?)([^'\")]*?)\\1\\)\\s+format\\((['\"]?)truetype\\3\\)/.exec(el))) {\n                url = cache[el] = m[2];\n            } else if ((m = /url\\((['\"]?)([^'\")]*?\\.ttf)\\1\\)/.exec(el))) {\n                url = cache[el] = m[2];\n            }\n        }\n        return url;\n    };\n})(Object.create(null));\n\nvar getFontHeight = (function(cache){\n    return function(font) {\n        var height = cache[font];\n        if (height == null) {\n            height = cache[font] = measureText(\"Mapq\", { font: font }).height;\n        }\n        return height;\n    };\n})(Object.create(null));\n\nfunction getFontFaces(doc) {\n    if (doc == null) {\n        doc = document;\n    }\n    var result = {};\n    for (var i = 0; i < doc.styleSheets.length; ++i) {\n        doStylesheet(doc.styleSheets[i]);\n    }\n    return result;\n    function doStylesheet(ss) {\n        if (ss) {\n            var rules = null;\n            try {\n                rules = ss.cssRules;\n            } catch (ex) {}\n            if (rules) {\n                addRules(ss, rules);\n            }\n        }\n    }\n    function findFonts(rule) {\n        var src = getPropertyValue(rule.style, \"src\");\n        if (src) {\n            return splitProperty(src).reduce(function(a, el){\n                var font = getFontURL(el);\n                if (font) {\n                    a.push(font);\n                }\n                return a;\n            }, []);\n        } else {\n            // Internet Explorer\n            // XXX: this is gross.  should work though for valid CSS.\n            var font = getFontURL(rule.cssText);\n            return font ? [ font ] : [];\n        }\n    }\n    function addRules(styleSheet, rules) {\n        for (var i = 0; i < rules.length; ++i) {\n            var r = rules[i];\n            switch (r.type) {\n              case 3:       // CSSImportRule\n                doStylesheet(r.styleSheet);\n                break;\n              case 5:       // CSSFontFaceRule\n                var style  = r.style;\n                var family = splitProperty(getPropertyValue(style, \"font-family\"));\n                var bold   = /^([56789]00|bold)$/i.test(getPropertyValue(style, \"font-weight\"));\n                var italic = \"italic\" == getPropertyValue(style, \"font-style\");\n                var src    = findFonts(r);\n                if (src.length > 0) {\n                    addRule(styleSheet, family, bold, italic, src[0]);\n                }\n            }\n        }\n    }\n    function addRule(styleSheet, names, bold, italic, url) {\n        // We get full resolved absolute URLs in Chrome, but sadly\n        // not in Firefox.\n        if (!(/^data:/i.test(url))) {\n            if (!(/^[^\\/:]+:\\/\\//.test(url) || /^\\//.test(url))) {\n                url = String(styleSheet.href).replace(/[^\\/]*$/, \"\") + url;\n            }\n        }\n        names.forEach(function(name){\n            name = name.replace(/^(['\"]?)(.*?)\\1$/, \"$2\"); // it's quoted\n            if (bold) {\n                name += \"|bold\";\n            }\n            if (italic) {\n                name += \"|italic\";\n            }\n            result[name] = url;\n        });\n    }\n}\n\nfunction hasOwnProperty(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction getCounter(name) {\n    name = \"_counter_\" + name;\n    return nodeInfo[name];\n}\n\nfunction getAllCounters(name) {\n    var values = [], p = nodeInfo;\n    name = \"_counter_\" + name;\n    while (p) {\n        if (hasOwnProperty(p, name)) {\n            values.push(p[name]);\n        }\n        p = Object.getPrototypeOf(p);\n    }\n    return values.reverse();\n}\n\nfunction incCounter(name, inc) {\n    var p = nodeInfo;\n    name = \"_counter_\" + name;\n    while (p && !hasOwnProperty(p, name)) {\n        p = Object.getPrototypeOf(p);\n    }\n    if (!p) {\n        p = nodeInfo._root;\n    }\n    p[name] = (p[name] || 0) + (inc == null ? 1 : inc);\n}\n\nfunction resetCounter(name, val) {\n    name = \"_counter_\" + name;\n    nodeInfo[name] = val == null ? 0 : val;\n}\n\nfunction doCounters(a, f, def) {\n    for (var i = 0; i < a.length;) {\n        var name = a[i++];\n        var val = parseFloat(a[i]);\n        if (isNaN(val)) {\n            f(name, def);\n        } else {\n            f(name, val);\n            ++i;\n        }\n    }\n}\n\nfunction updateCounters(style) {\n    var counterReset = getPropertyValue(style, \"counter-reset\");\n    if (counterReset) {\n        doCounters(splitProperty(counterReset, /^\\s+/), resetCounter, 0);\n    }\n    var counterIncrement = getPropertyValue(style, \"counter-increment\");\n    if (counterIncrement) {\n        doCounters(splitProperty(counterIncrement, /^\\s+/), incCounter, 1);\n    }\n}\n\nfunction parseColor(str, css) {\n    var color = parseColor$2(str, true);\n    if (color) {\n        color = color.toRGB();\n        if (css) {\n            color = color.toCssRgba();\n        } else if (color.a === 0) {\n            color = null;\n        }\n    }\n    return color;\n}\n\nfunction whenImagesAreActuallyLoaded(elements, callback) {\n    var pending = 0;\n    var done = false;\n    elements.forEach(function(el){\n        var images = el.querySelectorAll(\"img\");\n        for (var i = 0; i < images.length; ++i) {\n            var img = images[i];\n            if (!img.complete) {\n                pending++;\n                img.onload = img.onerror = next;\n            }\n        }\n    });\n\n    if (!pending) {\n        next();\n    }\n\n    function next() {\n        if (!done && --pending <= 0) {\n            callback();\n            done = true;\n        }\n    }\n}\n\nfunction cacheImages(elements, callback) {\n    var urls = [];\n    function add(url) {\n        if (!IMAGE_CACHE[url]) {\n            IMAGE_CACHE[url] = true;\n            urls.push(url);\n        }\n    }\n\n    elements.forEach(function dive(element){\n        if (/^img$/i.test(element.tagName)) {\n            add(element.src);\n        }\n        parseBackgroundImage(\n            getPropertyValue(\n                getComputedStyle$1(element), \"background-image\"\n            )\n        ).forEach(function(bg){\n            if (bg.type == \"url\") {\n                add(bg.url);\n            }\n        });\n\n        if (element.children) {\n            slice(element.children).forEach(dive);\n        }\n    });\n\n    var count = urls.length;\n    function next() {\n        if (--count <= 0) {\n            // Even though we cached them, they simply won't be available immediately in the newly\n            // created DOM.  Previously we'd allow a 10ms timeout, but that's arbitrary and clearly\n            // not working in all cases (https://github.com/telerik/kendo/issues/5399), so this\n            // function will wait for their .complete attribute.\n            whenImagesAreActuallyLoaded(elements, callback);\n        }\n    }\n    if (count === 0) {\n        next();\n    }\n    urls.forEach(function(url){\n        var img = IMAGE_CACHE[url] = new window.Image();\n        if (!(/^data:/i.test(url))) {\n            img.crossOrigin = \"Anonymous\";\n        }\n        img.src = url;\n        if (img.complete) {\n            next();\n        } else {\n            img.onload = next;\n            img.onerror = function() {\n                IMAGE_CACHE[url] = null;\n                next();\n            };\n        }\n    });\n}\n\nfunction alphaNumeral(n) {\n    var result = \"\";\n    do {\n        var r = n % 26;\n        result = String.fromCharCode(97 + r) + result;\n        n = Math.floor(n / 26);\n    } while (n > 0);\n    return result;\n}\n\nfunction pushNodeInfo(element, style, group) {\n    nodeInfo = Object.create(nodeInfo);\n    nodeInfo[element.tagName.toLowerCase()] = {\n        element: element,\n        style: style\n    };\n    var decoration = getPropertyValue(style, \"text-decoration\");\n    if (decoration && decoration != \"none\") {\n        var color = getPropertyValue(style, \"text-decoration-color\");\n        decoration.split(/\\s+/g).forEach(function(name){\n            if (!nodeInfo[name]) {\n                nodeInfo[name] = color;\n                if (name == \"underline\") {\n                    var offset = getPropertyValue(style, \"text-underline-offset\");\n                    if (offset != \"auto\") {\n                        nodeInfo[\"underline-offset\"] = parseFloat(offset);\n                    }\n                }\n            }\n        });\n    }\n\n    if (createsStackingContext(style)) {\n        nodeInfo._stackingContext = {\n            element: element,\n            group: group\n        };\n    }\n}\n\nfunction popNodeInfo() {\n    nodeInfo = Object.getPrototypeOf(nodeInfo);\n}\n\nfunction updateClipbox(path) {\n    if (nodeInfo._clipbox != null) {\n        var box = path.bbox(nodeInfo._matrix);\n        if (nodeInfo._clipbox) {\n            nodeInfo._clipbox = Rect$1.intersect(nodeInfo._clipbox, box);\n        } else {\n            nodeInfo._clipbox = box;\n        }\n    }\n}\n\nfunction emptyClipbox() {\n    var cb = nodeInfo._clipbox;\n    if (cb == null) {\n        return true;\n    }\n    if (cb) {\n        return cb.width() === 0 || cb.height() === 0;\n    }\n}\n\nfunction createsStackingContext(style) {\n    function prop(name) { return getPropertyValue(style, name); }\n    if (prop(\"transform\") != \"none\" ||\n        prop(\"position\") != \"static\" ||\n        prop(\"z-index\") != \"auto\" ||\n        prop(\"opacity\") < 1) {\n        return true;\n    }\n}\n\nfunction getComputedStyle$1(element, pseudoElt) {\n    return window.getComputedStyle(element, pseudoElt || null);\n}\n\nfunction getPropertyValue(style, prop, defa) {\n    var val = style.getPropertyValue(prop);\n    if (val == null || val === \"\") {\n        if (browser.webkit) {\n            val = style.getPropertyValue(\"-webkit-\" + prop );\n        } else if (browser.mozilla) {\n            val = style.getPropertyValue(\"-moz-\" + prop );\n        } else if (browser.opera) {\n            val = style.getPropertyValue(\"-o-\" + prop);\n        } else if (microsoft) {\n            val = style.getPropertyValue(\"-ms-\" + prop);\n        }\n    }\n    if (arguments.length > 2 && (val == null || val === \"\")) {\n        return defa;\n    } else {\n        return val;\n    }\n}\n\nfunction pleaseSetPropertyValue(style, prop, value, important) {\n    style.setProperty(prop, value, important);\n    if (browser.webkit) {\n        style.setProperty(\"-webkit-\" + prop, value, important);\n    } else if (browser.mozilla) {\n        style.setProperty(\"-moz-\" + prop, value, important);\n    } else if (browser.opera) {\n        style.setProperty(\"-o-\" + prop, value, important);\n    } else if (microsoft) {\n        style.setProperty(\"-ms-\" + prop, value, important);\n        prop = \"ms\" + prop.replace(/(^|-)([a-z])/g, function(s, p1, p2){\n            return p1 + p2.toUpperCase();\n        });\n        style[prop] = value;\n    }\n}\n\nfunction getBorder(style, side) {\n    side = \"border-\" + side;\n    return {\n        width: parseFloat(getPropertyValue(style, side + \"-width\")),\n        style: getPropertyValue(style, side + \"-style\"),\n        color: parseColor(getPropertyValue(style, side + \"-color\"), true)\n    };\n}\n\nfunction saveStyle(element, func) {\n    var prev = element.style.cssText;\n    var result = func();\n    setStyle(element, prev);\n    return result;\n}\n\nfunction getBorderRadius(style, side) {\n    var r = getPropertyValue(style, \"border-\" + side + \"-radius\").split(/\\s+/g).map(parseFloat);\n    if (r.length == 1) {\n        r.push(r[0]);\n    }\n    return sanitizeRadius({ x: r[0], y: r[1] });\n}\n\nfunction getContentBox(element) {\n    var box = element.getBoundingClientRect();\n    box = innerBox(box, \"border-*-width\", element);\n    box = innerBox(box, \"padding-*\", element);\n    return box;\n}\n\nfunction innerBox(box, prop, element) {\n    var style, wt, wr, wb, wl;\n    if (typeof prop == \"string\") {\n        style = getComputedStyle$1(element);\n        wt = parseFloat(getPropertyValue(style, prop.replace(\"*\", \"top\")));\n        wr = parseFloat(getPropertyValue(style, prop.replace(\"*\", \"right\")));\n        wb = parseFloat(getPropertyValue(style, prop.replace(\"*\", \"bottom\")));\n        wl = parseFloat(getPropertyValue(style, prop.replace(\"*\", \"left\")));\n    }\n    else if (typeof prop == \"number\") {\n        wt = wr = wb = wl = prop;\n    }\n    return {\n        top    : box.top + wt,\n        right  : box.right - wr,\n        bottom : box.bottom - wb,\n        left   : box.left + wl,\n        width  : box.right - box.left - wr - wl,\n        height : box.bottom - box.top - wb - wt\n    };\n}\n\nfunction getTransform(style) {\n    var transform = getPropertyValue(style, \"transform\");\n    if (transform == \"none\") {\n        return null;\n    }\n    var matrix = /^\\s*matrix\\(\\s*(.*?)\\s*\\)\\s*$/.exec(transform);\n    if (matrix) {\n        var origin = getPropertyValue(style, \"transform-origin\");\n        matrix = matrix[1].split(/\\s*,\\s*/g).map(parseFloat);\n        origin = origin.split(/\\s+/g).map(parseFloat);\n        return {\n            matrix: matrix,\n            origin: origin\n        };\n    }\n}\n\nfunction radiansToDegrees(radians) {\n    return ((180 * radians) / Math.PI) % 360;\n}\n\nfunction parseAngle(angle) {\n    var num = parseFloat(angle);\n    if (/grad$/.test(angle)) {\n        return Math.PI * num / 200;\n    }\n    else if (/rad$/.test(angle)) {\n        return num;\n    }\n    else if (/turn$/.test(angle)) {\n        return Math.PI * num * 2;\n    }\n    else if (/deg$/.test(angle)) {\n        return Math.PI * num / 180;\n    }\n}\n\nfunction setTransform(shape, m) {\n    m = new Matrix(m[0], m[1], m[2], m[3], m[4], m[5]);\n    shape.transform(m);\n    return m;\n}\n\nfunction setClipping(shape, clipPath) {\n    shape.clip(clipPath);\n}\n\nfunction addArcToPath(path, x, y, options) {\n    var points = new Arc$1([ x, y ], options).curvePoints(), i = 1;\n    while (i < points.length) {\n        path.curveTo(points[i++], points[i++], points[i++]);\n    }\n}\n\nfunction sanitizeRadius(r) {\n    if (r.x <= 0 || r.y <= 0) {\n        r.x = r.y = 0;\n    }\n    return r;\n}\n\nfunction adjustBorderRadiusForBox(box, rTL, rTR, rBR, rBL) {\n    // adjust border radiuses such that the sum of adjacent\n    // radiuses is not bigger than the length of the side.\n    // seems the correct algorithm is variant (3) from here:\n    // http://www.w3.org/Style/CSS/Tracker/issues/29?changelog\n    var tl_x = Math.max(0, rTL.x), tl_y = Math.max(0, rTL.y);\n    var tr_x = Math.max(0, rTR.x), tr_y = Math.max(0, rTR.y);\n    var br_x = Math.max(0, rBR.x), br_y = Math.max(0, rBR.y);\n    var bl_x = Math.max(0, rBL.x), bl_y = Math.max(0, rBL.y);\n\n    var f = Math.min(\n        box.width / (tl_x + tr_x),\n        box.height / (tr_y + br_y),\n        box.width / (br_x + bl_x),\n        box.height / (bl_y + tl_y)\n    );\n\n    if (f < 1) {\n        tl_x *= f; tl_y *= f;\n        tr_x *= f; tr_y *= f;\n        br_x *= f; br_y *= f;\n        bl_x *= f; bl_y *= f;\n    }\n\n    return {\n        tl: { x: tl_x, y: tl_y },\n        tr: { x: tr_x, y: tr_y },\n        br: { x: br_x, y: br_y },\n        bl: { x: bl_x, y: bl_y }\n    };\n}\n\nfunction elementRoundBox(element, box, type) {\n    var style = getComputedStyle$1(element);\n\n    var rTL = getBorderRadius(style, \"top-left\");\n    var rTR = getBorderRadius(style, \"top-right\");\n    var rBL = getBorderRadius(style, \"bottom-left\");\n    var rBR = getBorderRadius(style, \"bottom-right\");\n\n    if (type == \"padding\" || type == \"content\") {\n        var bt = getBorder(style, \"top\");\n        var br = getBorder(style, \"right\");\n        var bb = getBorder(style, \"bottom\");\n        var bl = getBorder(style, \"left\");\n        rTL.x -= bl.width; rTL.y -= bt.width;\n        rTR.x -= br.width; rTR.y -= bt.width;\n        rBR.x -= br.width; rBR.y -= bb.width;\n        rBL.x -= bl.width; rBL.y -= bb.width;\n        if (type == \"content\") {\n            var pt = parseFloat(getPropertyValue(style, \"padding-top\"));\n            var pr = parseFloat(getPropertyValue(style, \"padding-right\"));\n            var pb = parseFloat(getPropertyValue(style, \"padding-bottom\"));\n            var pl = parseFloat(getPropertyValue(style, \"padding-left\"));\n            rTL.x -= pl; rTL.y -= pt;\n            rTR.x -= pr; rTR.y -= pt;\n            rBR.x -= pr; rBR.y -= pb;\n            rBL.x -= pl; rBL.y -= pb;\n        }\n    }\n\n    if (typeof type == \"number\") {\n        rTL.x -= type; rTL.y -= type;\n        rTR.x -= type; rTR.y -= type;\n        rBR.x -= type; rBR.y -= type;\n        rBL.x -= type; rBL.y -= type;\n    }\n\n    return roundBox(box, rTL, rTR, rBR, rBL);\n}\n\n// Create a drawing.Path for a rounded rectangle.  Receives the\n// bounding box and the border-radiuses in CSS order (top-left,\n// top-right, bottom-right, bottom-left).  The radiuses must be\n// objects containing x (horiz. radius) and y (vertical radius).\nfunction roundBox(box, rTL0, rTR0, rBR0, rBL0) {\n    var tmp = adjustBorderRadiusForBox(box, rTL0, rTR0, rBR0, rBL0);\n    var rTL = tmp.tl;\n    var rTR = tmp.tr;\n    var rBR = tmp.br;\n    var rBL = tmp.bl;\n    var path = new Path({ fill: null, stroke: null });\n    path.moveTo(box.left, box.top + rTL.y);\n    if (rTL.x) {\n        addArcToPath(path, box.left + rTL.x, box.top + rTL.y, {\n            startAngle: -180,\n            endAngle: -90,\n            radiusX: rTL.x,\n            radiusY: rTL.y\n        });\n    }\n    path.lineTo(box.right - rTR.x, box.top);\n    if (rTR.x) {\n        addArcToPath(path, box.right - rTR.x, box.top + rTR.y, {\n            startAngle: -90,\n            endAngle: 0,\n            radiusX: rTR.x,\n            radiusY: rTR.y\n        });\n    }\n    path.lineTo(box.right, box.bottom - rBR.y);\n    if (rBR.x) {\n        addArcToPath(path, box.right - rBR.x, box.bottom - rBR.y, {\n            startAngle: 0,\n            endAngle: 90,\n            radiusX: rBR.x,\n            radiusY: rBR.y\n        });\n    }\n    path.lineTo(box.left + rBL.x, box.bottom);\n    if (rBL.x) {\n        addArcToPath(path, box.left + rBL.x, box.bottom - rBL.y, {\n            startAngle: 90,\n            endAngle: 180,\n            radiusX: rBL.x,\n            radiusY: rBL.y\n        });\n    }\n    return path.close();\n}\n\nfunction formatCounter(val, style) {\n    var str = String(parseFloat(val));\n    switch (style) {\n      case \"decimal-leading-zero\":\n        if (str.length < 2) {\n            str = \"0\" + str;\n        }\n        return str;\n      case \"lower-roman\":\n        return arabicToRoman(val).toLowerCase();\n      case \"upper-roman\":\n        return arabicToRoman(val).toUpperCase();\n      case \"lower-latin\":\n      case \"lower-alpha\":\n        return alphaNumeral(val - 1);\n      case \"upper-latin\":\n      case \"upper-alpha\":\n        return alphaNumeral(val - 1).toUpperCase();\n      default:\n        return str;\n    }\n}\n\nfunction evalPseudoElementContent(element, content) {\n    function displayCounter(name, style, separator) {\n        if (!separator) {\n            return formatCounter(getCounter(name) || 0, style);\n        }\n        separator = separator.replace(/^\\s*([\"'])(.*)\\1\\s*$/, \"$2\");\n        return getAllCounters(name).map(function(val){\n            return formatCounter(val, style);\n        }).join(separator);\n    }\n    var a = splitProperty(content, /^\\s+/);\n    var result = [], m;\n    a.forEach(function(el){\n        var tmp;\n        if ((m = /^\\s*([\"'])(.*)\\1\\s*$/.exec(el))) {\n            result.push(m[2].replace(/\\\\([0-9a-f]{4})/gi, function(s, p){\n                return String.fromCharCode(parseInt(p, 16));\n            }));\n        }\n        else if ((m = /^\\s*counter\\((.*?)\\)\\s*$/.exec(el))) {\n            tmp = splitProperty(m[1]);\n            result.push(displayCounter(tmp[0], tmp[1]));\n        }\n        else if ((m = /^\\s*counters\\((.*?)\\)\\s*$/.exec(el))) {\n            tmp = splitProperty(m[1]);\n            result.push(displayCounter(tmp[0], tmp[2], tmp[1]));\n        }\n        else if ((m = /^\\s*attr\\((.*?)\\)\\s*$/.exec(el))) {\n            result.push(element.getAttribute(m[1]) || \"\");\n        }\n        else {\n            result.push(el);\n        }\n    });\n    return result.join(\"\");\n}\n\nfunction getCssText(style) {\n    if (style.cssText) {\n        return style.cssText;\n    }\n    // Status: NEW.  Report year: 2002.  Current year: 2014.\n    // Nice played, Mozillians.\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=137687\n    var result = [];\n    for (var i = 0; i < style.length; ++i) {\n        result.push(style[i] + \": \" + getPropertyValue(style, style[i]));\n    }\n    return result.join(\";\\n\");\n}\n\nfunction _renderWithPseudoElements(element, group) {\n    if (element.tagName == KENDO_PSEUDO_ELEMENT) {\n        _renderElement(element, group);\n        return;\n    }\n    var fake = [];\n    function pseudo(kind, place) {\n        var style = getComputedStyle$1(element, kind), content = style.content;\n        updateCounters(style);\n        if (content && content != \"normal\" && content != \"none\" && style.width != \"0px\") {\n            var psel = element.ownerDocument.createElement(KENDO_PSEUDO_ELEMENT);\n            setStyle(psel, getCssText(style));\n            psel.textContent = evalPseudoElementContent(element, content);\n            element.insertBefore(psel, place);\n            fake.push(psel);\n        }\n    }\n    pseudo(\":before\", element.firstChild);\n    pseudo(\":after\", null);\n    if (fake.length > 0) {\n        var saveClass = element.className;\n        element.className += \" kendo-pdf-hide-pseudo-elements\";\n        _renderElement(element, group);\n        element.className = saveClass;\n        fake.forEach(function(el){ element.removeChild(el); });\n    } else {\n        _renderElement(element, group);\n    }\n}\n\nfunction _renderElement(element, group) {\n    var style = getComputedStyle$1(element);\n\n    var top = getBorder(style, \"top\");\n    var right = getBorder(style, \"right\");\n    var bottom = getBorder(style, \"bottom\");\n    var left = getBorder(style, \"left\");\n\n    var rTL0 = getBorderRadius(style, \"top-left\");\n    var rTR0 = getBorderRadius(style, \"top-right\");\n    var rBL0 = getBorderRadius(style, \"bottom-left\");\n    var rBR0 = getBorderRadius(style, \"bottom-right\");\n\n    var dir = getPropertyValue(style, \"direction\");\n\n    var backgroundColor = getPropertyValue(style, \"background-color\");\n    backgroundColor = parseColor(backgroundColor);\n\n    var backgroundImage = parseBackgroundImage( getPropertyValue(style, \"background-image\") );\n    var backgroundRepeat = splitProperty( getPropertyValue(style, \"background-repeat\") );\n    var backgroundPosition = splitProperty( getPropertyValue(style, \"background-position\") );\n    var backgroundOrigin = splitProperty( getPropertyValue(style, \"background-origin\") );\n    var backgroundSize = splitProperty( getPropertyValue(style, \"background-size\") );\n\n    // IE shrinks the text with text-overflow: ellipsis,\n    // apparently because the returned bounding box for the range\n    // is limited to the visible area minus space for the dots,\n    // instead of being the full width of the text.\n    //\n    // https://github.com/telerik/kendo/issues/5232\n    // https://github.com/telerik/kendo-ui-core/issues/1868\n    //\n    // We have to test it here rather than in renderText because\n    // text-overflow: ellipsis could be set on a parent element (not\n    // necessarily the one containing the text); in this case,\n    // getComputedStyle(elementWithTheText) will return \"clip\", not\n    // \"ellipsis\" (which is probably a bug, but oh well...)\n    var textOverflow, saveTextOverflow;\n    if (microsoft) {\n        textOverflow = style.textOverflow;             // computed style\n        if (textOverflow == \"ellipsis\") {\n            saveTextOverflow = element.style.textOverflow; // own style.\n            element.style.textOverflow = \"clip\";\n        }\n    }\n\n    if (browser.msie && browser.version < 10) {\n        // IE9 hacks.  getPropertyValue won't return the correct\n        // value.  Sucks that we have to do it here, I'd prefer to\n        // move it in getPropertyValue, but we don't have the\n        // element.\n        backgroundPosition = splitProperty(element.currentStyle.backgroundPosition);\n    }\n\n    var innerbox = innerBox(element.getBoundingClientRect(), \"border-*-width\", element);\n\n    // CSS \"clip\" property - if present, replace the group with a\n    // new one which is clipped.  This must happen before drawing\n    // the borders and background.\n    (function(){\n        var clip = getPropertyValue(style, \"clip\");\n        var m = /^\\s*rect\\((.*)\\)\\s*$/.exec(clip);\n        if (m) {\n            var a = m[1].split(/[ ,]+/g);\n            var top = a[0] == \"auto\" ? innerbox.top : parseFloat(a[0]) + innerbox.top;\n            var right = a[1] == \"auto\" ? innerbox.right : parseFloat(a[1]) + innerbox.left;\n            var bottom = a[2] == \"auto\" ? innerbox.bottom : parseFloat(a[2]) + innerbox.top;\n            var left = a[3] == \"auto\" ? innerbox.left : parseFloat(a[3]) + innerbox.left;\n            var tmp = new Group();\n            var clipPath = new Path()\n                .moveTo(left, top)\n                .lineTo(right, top)\n                .lineTo(right, bottom)\n                .lineTo(left, bottom)\n                .close();\n            setClipping(tmp, clipPath);\n            group.append(tmp);\n            group = tmp;\n            updateClipbox(clipPath);\n        }\n    })();\n\n    var boxes, i, cells;\n    var display = getPropertyValue(style, \"display\");\n\n    if (display == \"table-row\") {\n        // because of rowspan/colspan, we shouldn't draw background of table row elements on the\n        // box given by its getBoundingClientRect, because if we do we risk overwritting a\n        // previously rendered cell.  https://github.com/telerik/kendo/issues/4881\n        boxes = [];\n        for (i = 0, cells = element.children; i < cells.length; ++i) {\n            boxes.push(cells[i].getBoundingClientRect());\n        }\n    } else {\n        boxes = element.getClientRects();\n        if (boxes.length == 1) {\n            // Workaround the missing borders in Chrome!  getClientRects() boxes contains values\n            // rounded to integer.  getBoundingClientRect() appears to work fine.  We still need\n            // getClientRects() to support cases where there are more boxes (continued inline\n            // elements that might have border/background).\n            boxes = [ element.getBoundingClientRect() ];\n        }\n    }\n\n    // This function workarounds another Chrome bug, where boxes returned for a table with\n    // border-collapse: collapse will overlap the table border.  Our rendering is not perfect in\n    // such case anyway, but with this is better than without it.\n    boxes = adjustBoxes(boxes);\n\n    for (i = 0; i < boxes.length; ++i) {\n        drawOneBox(boxes[i], i === 0, i == boxes.length - 1);\n    }\n\n    // Render links as separate groups.  We can't use boxes returned by element's getClientRects\n    // because if display type is \"inline\" (default for <a>), boxes will not include the height of\n    // images inside.  https://github.com/telerik/kendo-ui-core/issues/3359\n    if (element.tagName == \"A\" && element.href && !/^#?$/.test(element.getAttribute(\"href\"))) {\n        if (!nodeInfo._avoidLinks || !matches(element, nodeInfo._avoidLinks)) {\n            var r = document.createRange();\n            r.selectNodeContents(element);\n            slice(r.getClientRects()).forEach(function(box){\n                var g = new Group();\n                g._pdfLink = {\n                    url    : element.href,\n                    top    : box.top,\n                    right  : box.right,\n                    bottom : box.bottom,\n                    left   : box.left\n                };\n                group.append(g);\n            });\n        }\n    }\n\n    if (boxes.length > 0 && display == \"list-item\" && !element.getAttribute(\"kendo-no-bullet\")) {\n        drawBullet(boxes[0]);\n    }\n\n    // overflow: hidden/auto - if present, replace the group with\n    // a new one clipped by the inner box.\n    (function(){\n        function clipit() {\n            var clipPath = elementRoundBox(element, innerbox, \"padding\");\n            var tmp = new Group();\n            setClipping(tmp, clipPath);\n            group.append(tmp);\n            group = tmp;\n            updateClipbox(clipPath);\n        }\n        if (isFormField(element)) {\n            clipit();\n        } else if (/^(hidden|auto|scroll)/.test(getPropertyValue(style, \"overflow\"))) {\n            clipit();\n        } else if (/^(hidden|auto|scroll)/.test(getPropertyValue(style, \"overflow-x\"))) {\n            clipit();\n        } else if (/^(hidden|auto|scroll)/.test(getPropertyValue(style, \"overflow-y\"))) {\n            clipit();\n        }\n    })();\n\n    if (!maybeRenderWidget(element, group) && !maybeRenderBullet(element, group)) {\n        renderContents(element, group);\n    }\n\n    if (microsoft && textOverflow == \"ellipsis\") {\n        element.style.textOverflow = saveTextOverflow;\n    }\n\n    return group; // only utility functions after this line.\n\n    function adjustBoxes(boxes) {\n        if (/^td$/i.test(element.tagName)) {\n            var table = nodeInfo.table;\n            if (table && getPropertyValue(table.style, \"border-collapse\") == \"collapse\") {\n                var tableBorderLeft = getBorder(table.style, \"left\").width;\n                var tableBorderTop = getBorder(table.style, \"top\").width;\n                // check if we need to adjust\n                if (tableBorderLeft === 0 && tableBorderTop === 0) {\n                    return boxes; // nope\n                }\n                var tableBox = table.element.getBoundingClientRect();\n                var firstCell = table.element.rows[0].cells[0];\n                var firstCellBox = firstCell.getBoundingClientRect();\n                if (firstCellBox.top == tableBox.top || firstCellBox.left == tableBox.left) {\n                    return slice(boxes).map(function(box){\n                        return {\n                            left   : box.left + tableBorderLeft,\n                            top    : box.top + tableBorderTop,\n                            right  : box.right + tableBorderLeft,\n                            bottom : box.bottom + tableBorderTop,\n                            height : box.height,\n                            width  : box.width\n                        };\n                    });\n                }\n            }\n        }\n        return boxes;\n    }\n\n    // this function will be called to draw each border.  it\n    // draws starting at origin and the resulted path must be\n    // translated/rotated to be placed in the proper position.\n    //\n    // arguments are named as if it draws the top border:\n    //\n    //    - `len` the length of the edge\n    //    - `Wtop` the width of the edge (i.e. border-top-width)\n    //    - `Wleft` the width of the left edge (border-left-width)\n    //    - `Wright` the width of the right edge\n    //    - `rl` and `rl` -- the border radius on the left and right\n    //      (objects containing x and y, for horiz/vertical radius)\n    //    - `transform` -- transformation to apply\n    //\n    function drawEdge(color, len, Wtop, Wleft, Wright, rl, rr, transform) {\n        if (Wtop <= 0) {\n            return;\n        }\n\n        var path, edge = new Group();\n        setTransform(edge, transform);\n        group.append(edge);\n\n        sanitizeRadius(rl);\n        sanitizeRadius(rr);\n\n        // draw main border.  this is the area without the rounded corners\n        path = new Path({\n            fill: { color: color },\n            stroke: null\n        });\n        edge.append(path);\n        path.moveTo(rl.x ? Math.max(rl.x, Wleft) : 0, 0)\n            .lineTo(len - (rr.x ? Math.max(rr.x, Wright) : 0), 0)\n            .lineTo(len - Math.max(rr.x, Wright), Wtop)\n            .lineTo(Math.max(rl.x, Wleft), Wtop)\n            .close();\n\n        if (rl.x) {\n            drawRoundCorner(Wleft, rl, [ -1, 0, 0, 1, rl.x, 0 ]);\n        }\n\n        if (rr.x) {\n            drawRoundCorner(Wright, rr, [ 1, 0, 0, 1, len - rr.x, 0 ]);\n        }\n\n        // draws one round corner, starting at origin (needs to be\n        // translated/rotated to be placed properly).\n        function drawRoundCorner(Wright, r, transform) {\n            var angle = Math.PI/2 * Wright / (Wright + Wtop);\n\n            // not sanitizing this one, because negative values\n            // are useful to fill the box correctly.\n            var ri = {\n                x: r.x - Wright,\n                y: r.y - Wtop\n            };\n\n            var path = new Path({\n                fill: { color: color },\n                stroke: null\n            }).moveTo(0, 0);\n\n            setTransform(path, transform);\n\n            addArcToPath(path, 0, r.y, {\n                startAngle: -90,\n                endAngle: -radiansToDegrees(angle),\n                radiusX: r.x,\n                radiusY: r.y\n            });\n\n            if (ri.x > 0 && ri.y > 0) {\n                path.lineTo(ri.x * Math.cos(angle), r.y - ri.y * Math.sin(angle));\n                addArcToPath(path, 0, r.y, {\n                    startAngle: -radiansToDegrees(angle),\n                    endAngle: -90,\n                    radiusX: ri.x,\n                    radiusY: ri.y,\n                    anticlockwise: true\n                });\n            }\n            else if (ri.x > 0) {\n                path.lineTo(ri.x, Wtop)\n                    .lineTo(0, Wtop);\n            }\n            else {\n                path.lineTo(ri.x, Wtop)\n                    .lineTo(ri.x, 0);\n            }\n\n            edge.append(path.close());\n        }\n    }\n\n    function drawBackground(box) {\n        var background = new Group();\n        setClipping(background, roundBox(box, rTL0, rTR0, rBR0, rBL0));\n        group.append(background);\n\n        if (backgroundColor) {\n            var path = new Path({\n                fill: { color: backgroundColor.toCssRgba() },\n                stroke: null\n            });\n            path.moveTo(box.left, box.top)\n                .lineTo(box.right, box.top)\n                .lineTo(box.right, box.bottom)\n                .lineTo(box.left, box.bottom)\n                .close();\n            background.append(path);\n        }\n\n        for (var i = backgroundImage.length; --i >= 0;) {\n            drawOneBackground(\n                background, box,\n                backgroundImage[i],\n                backgroundRepeat[i % backgroundRepeat.length],\n                backgroundPosition[i % backgroundPosition.length],\n                backgroundOrigin[i % backgroundOrigin.length],\n                backgroundSize[i % backgroundSize.length]\n            );\n        }\n    }\n\n    function drawOneBackground(group, box, background, backgroundRepeat, backgroundPosition, backgroundOrigin, backgroundSize) {\n        if (!background || (background == \"none\")) {\n            return;\n        }\n\n        if (background.type == \"url\") {\n            var img = IMAGE_CACHE[background.url];\n            if (img && img.width > 0 && img.height > 0) {\n                drawBackgroundImage(group, box, img.width, img.height, function(group, rect){\n                    group.append(new Image$1(background.url, rect));\n                });\n            }\n        } else if (background.type == \"linear\") {\n            drawBackgroundImage(group, box, box.width, box.height, gradientRenderer(background));\n        } else {\n            return;\n        }\n\n        function drawBackgroundImage(group, box, img_width, img_height, renderBG) {\n            var aspect_ratio = img_width / img_height, f;\n\n            // for background-origin: border-box the box is already appropriate\n            var orgBox = box;\n            if (backgroundOrigin == \"content-box\") {\n                orgBox = innerBox(orgBox, \"border-*-width\", element);\n                orgBox = innerBox(orgBox, \"padding-*\", element);\n            } else if (backgroundOrigin == \"padding-box\") {\n                orgBox = innerBox(orgBox, \"border-*-width\", element);\n            }\n\n            if (!/^\\s*auto(\\s+auto)?\\s*$/.test(backgroundSize)) {\n                if (backgroundSize == \"contain\") {\n                    f = Math.min(orgBox.width / img_width,\n                                 orgBox.height / img_height);\n                    img_width *= f;\n                    img_height *= f;\n                }\n                else if (backgroundSize == \"cover\") {\n                    f = Math.max(orgBox.width / img_width,\n                                 orgBox.height / img_height);\n                    img_width *= f;\n                    img_height *= f;\n                }\n                else {\n                    var size = backgroundSize.split(/\\s+/g);\n                    // compute width\n                    if (/%$/.test(size[0])) {\n                        img_width = orgBox.width * parseFloat(size[0]) / 100;\n                    } else {\n                        img_width = parseFloat(size[0]);\n                    }\n                    // compute height\n                    if (size.length == 1 || size[1] == \"auto\") {\n                        img_height = img_width / aspect_ratio;\n                    } else if (/%$/.test(size[1])) {\n                        img_height = orgBox.height * parseFloat(size[1]) / 100;\n                    } else {\n                        img_height = parseFloat(size[1]);\n                    }\n                }\n            }\n\n            var pos = String(backgroundPosition);\n\n            // IE sometimes reports single-word positions\n            // https://github.com/telerik/kendo-ui-core/issues/2786\n            //\n            // it seems to switch to percentages when the horizontal\n            // position is not \"center\", therefore we don't handle\n            // multi-word cases here.  All other browsers return\n            // percentages or pixels instead of keywords.  At least\n            // for now...\n            switch (pos) {\n              case \"bottom\" : pos = \"50% 100%\"; break;\n              case \"top\"    : pos = \"50% 0\"; break;\n              case \"left\"   : pos = \"0 50%\"; break;\n              case \"right\"  : pos = \"100% 50%\"; break;\n              case \"center\" : pos = \"50% 50%\"; break;\n            }\n\n            pos = pos.split(/\\s+/);\n            if (pos.length == 1) {\n                pos[1] = \"50%\";\n            }\n\n            if (/%$/.test(pos[0])) {\n                pos[0] = parseFloat(pos[0]) / 100 * (orgBox.width - img_width);\n            } else {\n                pos[0] = parseFloat(pos[0]);\n            }\n            if (/%$/.test(pos[1])) {\n                pos[1] = parseFloat(pos[1]) / 100 * (orgBox.height - img_height);\n            } else {\n                pos[1] = parseFloat(pos[1]);\n            }\n\n            var rect = new Rect$1([ orgBox.left + pos[0], orgBox.top + pos[1] ], [ img_width, img_height ]);\n\n            // XXX: background-repeat could be implemented more\n            //      efficiently as a fill pattern (at least for PDF\n            //      output, probably SVG too).\n\n            function rewX() {\n                while (rect.origin.x > box.left) {\n                    rect.origin.x -= img_width;\n                }\n            }\n\n            function rewY() {\n                while (rect.origin.y > box.top) {\n                    rect.origin.y -= img_height;\n                }\n            }\n\n            function repeatX() {\n                while (rect.origin.x < box.right) {\n                    renderBG(group, rect.clone());\n                    rect.origin.x += img_width;\n                }\n            }\n\n            if (backgroundRepeat == \"no-repeat\") {\n                renderBG(group, rect);\n            }\n            else if (backgroundRepeat == \"repeat-x\") {\n                rewX();\n                repeatX();\n            }\n            else if (backgroundRepeat == \"repeat-y\") {\n                rewY();\n                while (rect.origin.y < box.bottom) {\n                    renderBG(group, rect.clone());\n                    rect.origin.y += img_height;\n                }\n            }\n            else if (backgroundRepeat == \"repeat\") {\n                rewX();\n                rewY();\n                var origin = rect.origin.clone();\n                while (rect.origin.y < box.bottom) {\n                    rect.origin.x = origin.x;\n                    repeatX();\n                    rect.origin.y += img_height;\n                }\n            }\n        }\n    }\n\n    function drawBullet() {\n        var listStyleType = getPropertyValue(style, \"list-style-type\");\n        if (listStyleType == \"none\") {\n            return;\n        }\n        var listStylePosition = getPropertyValue(style, \"list-style-position\");\n\n        function _drawBullet(f) {\n            saveStyle(element, function(){\n                element.style.position = \"relative\";\n                var bullet = element.ownerDocument.createElement(KENDO_PSEUDO_ELEMENT);\n                bullet.style.position = \"absolute\";\n                bullet.style.boxSizing = \"border-box\";\n                if (listStylePosition == \"outside\") {\n                    bullet.style.width = \"6em\";\n                    bullet.style.left = \"-6.8em\";\n                    bullet.style.textAlign = \"right\";\n                } else {\n                    bullet.style.left = \"0px\";\n                }\n                f(bullet);\n                element.insertBefore(bullet, element.firstChild);\n                renderElement(bullet, group);\n                element.removeChild(bullet);\n            });\n        }\n\n        function elementIndex(f) {\n            var a = element.parentNode.children;\n            var k = element.getAttribute(\"kendo-split-index\");\n            if (k != null) {\n                return f(k|0, a.length);\n            }\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] === element) {\n                    return f(i, a.length);\n                }\n            }\n        }\n\n        switch (listStyleType) {\n          case \"circle\":\n          case \"disc\":\n          case \"square\":\n            _drawBullet(function(bullet){\n                bullet.innerHTML = '&nbsp;';\n                bullet.setAttribute(KENDO_BULLET_TYPE, listStyleType);\n            });\n            break;\n\n          case \"decimal\":\n          case \"decimal-leading-zero\":\n            _drawBullet(function(bullet){\n                elementIndex(function(idx){\n                    ++idx;\n                    if (listStyleType == \"decimal-leading-zero\" && idx < 10) {\n                        idx = \"0\" + idx;\n                    }\n                    bullet.innerHTML = idx + \".\";\n                });\n            });\n            break;\n\n          case \"lower-roman\":\n          case \"upper-roman\":\n            _drawBullet(function(bullet){\n                elementIndex(function(idx){\n                    idx = arabicToRoman(idx + 1);\n                    if (listStyleType == \"upper-roman\") {\n                        idx = idx.toUpperCase();\n                    }\n                    bullet.innerHTML = idx + \".\";\n                });\n            });\n            break;\n\n          case \"lower-latin\":\n          case \"lower-alpha\":\n          case \"upper-latin\":\n          case \"upper-alpha\":\n            _drawBullet(function(bullet){\n                elementIndex(function(idx){\n                    idx = alphaNumeral(idx);\n                    if (/^upper/i.test(listStyleType)) {\n                        idx = idx.toUpperCase();\n                    }\n                    bullet.innerHTML = idx + \".\";\n                });\n            });\n            break;\n        }\n    }\n\n    // draws a single border box\n    function drawOneBox(box, isFirst, isLast) {\n        if (box.width === 0 || box.height === 0) {\n            return;\n        }\n\n        drawBackground(box);\n\n        var shouldDrawLeft = (left.width > 0 && ((isFirst && dir == \"ltr\") || (isLast && dir == \"rtl\")));\n        var shouldDrawRight = (right.width > 0 && ((isLast && dir == \"ltr\") || (isFirst && dir == \"rtl\")));\n\n        // The most general case is that the 4 borders have different widths and border\n        // radiuses.  The way that is handled is by drawing 3 Paths for each border: the\n        // straight line, and two round corners which represent half of the entire rounded\n        // corner.  To simplify code those shapes are drawed at origin (by the drawEdge\n        // function), then translated/rotated into the right position.\n        //\n        // However, this leads to poor results due to rounding in the simpler cases where\n        // borders are straight lines.  Therefore we handle a few such cases separately with\n        // straight lines. C^wC^wC^w -- nope, scratch that.  poor rendering was because of a bug\n        // in Chrome (getClientRects() returns rounded integer values rather than exact floats.\n        // web dev is still a ghetto.)\n\n        // first, just in case there is no border...\n        if (top.width === 0 && left.width === 0 && right.width === 0 && bottom.width === 0) {\n            return;\n        }\n\n        // START paint borders\n        // if all borders have equal colors...\n        if (top.color == right.color && top.color == bottom.color && top.color == left.color) {\n\n            // if same widths too, we can draw the whole border by stroking a single path.\n            if (top.width == right.width && top.width == bottom.width && top.width == left.width)\n            {\n                if (shouldDrawLeft && shouldDrawRight) {\n                    // reduce box by half the border width, so we can draw it by stroking.\n                    box = innerBox(box, top.width/2);\n\n                    // adjust the border radiuses, again by top.width/2, and make the path element.\n                    var path = elementRoundBox(element, box, top.width/2);\n                    path.options.stroke = {\n                        color: top.color,\n                        width: top.width\n                    };\n                    group.append(path);\n                    return;\n                }\n            }\n        }\n\n        // if border radiuses are zero and widths are at most one pixel, we can again use simple\n        // paths.\n        if (rTL0.x === 0 && rTR0.x === 0 && rBR0.x === 0 && rBL0.x === 0) {\n            // alright, 1.9px will do as well.  the difference in color blending should not be\n            // noticeable.\n            if (top.width < 2 && left.width < 2 && right.width < 2 && bottom.width < 2) {\n                // top border\n                if (top.width > 0) {\n                    group.append(\n                        new Path({\n                            stroke: { width: top.width, color: top.color }\n                        })\n                            .moveTo(box.left, box.top + top.width/2)\n                            .lineTo(box.right, box.top + top.width/2)\n                    );\n                }\n\n                // bottom border\n                if (bottom.width > 0) {\n                    group.append(\n                        new Path({\n                            stroke: { width: bottom.width, color: bottom.color }\n                        })\n                            .moveTo(box.left, box.bottom - bottom.width/2)\n                            .lineTo(box.right, box.bottom - bottom.width/2)\n                    );\n                }\n\n                // left border\n                if (shouldDrawLeft) {\n                    group.append(\n                        new Path({\n                            stroke: { width: left.width, color: left.color }\n                        })\n                            .moveTo(box.left + left.width/2, box.top)\n                            .lineTo(box.left + left.width/2, box.bottom)\n                    );\n                }\n\n                // right border\n                if (shouldDrawRight) {\n                    group.append(\n                        new Path({\n                            stroke: { width: right.width, color: right.color }\n                        })\n                            .moveTo(box.right - right.width/2, box.top)\n                            .lineTo(box.right - right.width/2, box.bottom)\n                    );\n                }\n\n                return;\n            }\n        }\n        // END paint borders\n\n        var tmp = adjustBorderRadiusForBox(box, rTL0, rTR0, rBR0, rBL0);\n        var rTL = tmp.tl;\n        var rTR = tmp.tr;\n        var rBR = tmp.br;\n        var rBL = tmp.bl;\n\n        // top border\n        drawEdge(top.color,\n                 box.width, top.width, left.width, right.width,\n                 rTL, rTR,\n                 [ 1, 0, 0, 1, box.left, box.top ]);\n\n        // bottom border\n        drawEdge(bottom.color,\n                 box.width, bottom.width, right.width, left.width,\n                 rBR, rBL,\n                 [ -1, 0, 0, -1, box.right, box.bottom ]);\n\n        // for left/right borders we need to invert the border-radiuses\n        function inv(p) {\n            return { x: p.y, y: p.x };\n        }\n\n        // left border\n        drawEdge(left.color,\n                 box.height, left.width, bottom.width, top.width,\n                 inv(rBL), inv(rTL),\n                 [ 0, -1, 1, 0, box.left, box.bottom ]);\n\n        // right border\n        drawEdge(right.color,\n                 box.height, right.width, top.width, bottom.width,\n                 inv(rTR), inv(rBR),\n                 [ 0, 1, -1, 0, box.right, box.top ]);\n    }\n}\n\nfunction gradientRenderer(gradient) {\n    return function(group, rect) {\n        var width = rect.width(), height = rect.height();\n\n        switch (gradient.type) {\n          case \"linear\":\n\n            // figure out the angle.\n            var angle = gradient.angle != null ? gradient.angle : Math.PI;\n            switch (gradient.to) {\n              case \"top\":\n                angle = 0;\n                break;\n              case \"left\":\n                angle = -Math.PI / 2;\n                break;\n              case \"bottom\":\n                angle = Math.PI;\n                break;\n              case \"right\":\n                angle = Math.PI / 2;\n                break;\n              case \"top left\": case \"left top\":\n                angle = -Math.atan2(height, width);\n                break;\n              case \"top right\": case \"right top\":\n                angle = Math.atan2(height, width);\n                break;\n              case \"bottom left\": case \"left bottom\":\n                angle = Math.PI + Math.atan2(height, width);\n                break;\n              case \"bottom right\": case \"right bottom\":\n                angle = Math.PI - Math.atan2(height, width);\n                break;\n            }\n\n            if (gradient.reverse) {\n                angle -= Math.PI;\n            }\n\n            // limit the angle between 0..2PI\n            angle %= 2 * Math.PI;\n            if (angle < 0) {\n                angle += 2 * Math.PI;\n            }\n\n            // compute gradient's start/end points.  here len is the length of the gradient line\n            // and x,y is the end point relative to the center of the rectangle in conventional\n            // (math) axis direction.\n\n            // this is the original (unscaled) length of the gradient line.  needed to deal with\n            // absolutely positioned color stops.  formula from the CSS spec:\n            // http://dev.w3.org/csswg/css-images-3/#linear-gradient-syntax\n            var pxlen = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n\n            // The math below is pretty simple, but it took a while to figure out.  We compute x\n            // and y, the *end* of the gradient line.  However, we want to transform them into\n            // element-based coordinates (SVG's gradientUnits=\"objectBoundingBox\").  That means,\n            // x=0 is the left edge, x=1 is the right edge, y=0 is the top edge and y=1 is the\n            // bottom edge.\n            //\n            // A naive approach would use the original angle for these calculations.  Say we'd\n            // like to draw a gradient angled at 45deg in a 100x400 box.  When we use\n            // objectBoundingBox, the renderer will draw it in a 1x1 *square* box, and then\n            // scale that to the desired dimensions.  The 45deg angle will look more like 70deg\n            // after scaling.  SVG (http://www.w3.org/TR/SVG/pservers.html#LinearGradients) says\n            // the following:\n            //\n            //     When gradientUnits=\"objectBoundingBox\" and 'gradientTransform' is the\n            //     identity matrix, the normal of the linear gradient is perpendicular to the\n            //     gradient vector in object bounding box space (i.e., the abstract coordinate\n            //     system where (0,0) is at the top/left of the object bounding box and (1,1) is\n            //     at the bottom/right of the object bounding box). When the object's bounding\n            //     box is not square, the gradient normal which is initially perpendicular to\n            //     the gradient vector within object bounding box space may render\n            //     non-perpendicular relative to the gradient vector in user space. If the\n            //     gradient vector is parallel to one of the axes of the bounding box, the\n            //     gradient normal will remain perpendicular. This transformation is due to\n            //     application of the non-uniform scaling transformation from bounding box space\n            //     to user space.\n            //\n            // which is an extremely long and confusing way to tell what I just said above.\n            //\n            // For this reason we need to apply the reverse scaling to the original angle, so\n            // that when it'll finally be rendered it'll actually be at the desired slope.  Now\n            // I'll let you figure out the math yourself.\n\n            var scaledAngle = Math.atan(width * Math.tan(angle) / height);\n            var sin = Math.sin(scaledAngle), cos = Math.cos(scaledAngle);\n            var len = Math.abs(sin) + Math.abs(cos);\n            var x = len/2 * sin;\n            var y = len/2 * cos;\n\n            // Because of the arctangent, our scaledAngle ends up between -PI/2..PI/2, possibly\n            // losing the intended direction of the gradient.  The following fixes it.\n            if (angle > Math.PI/2 && angle <= 3*Math.PI/2) {\n                x = -x;\n                y = -y;\n            }\n\n            // compute the color stops.\n            var implicit = [], right = 0;\n            var stops = gradient.stops.map(function(s, i){\n                var offset = s.percent;\n                if (offset) {\n                    offset = parseFloat(offset) / 100;\n                } else if (s.length) {\n                    offset = parseFloat(s.length) / pxlen;\n                } else if (i === 0) {\n                    offset = 0;\n                } else if (i == gradient.stops.length - 1) {\n                    offset = 1;\n                }\n                var stop = {\n                    color: s.color.toCssRgba(),\n                    offset: offset\n                };\n                if (offset != null) {\n                    right = offset;\n                    // fix implicit offsets\n                    implicit.forEach(function(s, i){\n                        var stop = s.stop;\n                        stop.offset = s.left + (right - s.left) * (i + 1) / (implicit.length + 1);\n                    });\n                    implicit = [];\n                } else {\n                    implicit.push({ left: right, stop: stop });\n                }\n                return stop;\n            });\n\n            var start = [ 0.5 - x, 0.5 + y ];\n            var end = [ 0.5 + x, 0.5 - y ];\n\n            // finally, draw it.\n            group.append(\n                Path.fromRect(rect)\n                    .stroke(null)\n                    .fill(new LinearGradient({\n                        start     : start,\n                        end       : end,\n                        stops     : stops,\n                        userSpace : false\n                    }))\n            );\n            break;\n          case \"radial\":\n            // XXX:\n            if (window.console && window.console.log) {\n                window.console.log(\"Radial gradients are not yet supported in HTML renderer\");\n            }\n            break;\n        }\n    };\n}\n\nfunction maybeRenderWidget(element, group) {\n    var visual;\n    if (element._kendoExportVisual) {\n        var rect = element.getBoundingClientRect();\n        var size = {\n            width: rect.width,\n            height: rect.height\n        };\n        visual = element._kendoExportVisual(size);\n    } else if (window.kendo && window.kendo.jQuery && element.getAttribute(window.kendo.attr(\"role\"))) {\n        var widget = window.kendo.widgetInstance(window.kendo.jQuery(element));\n        if (widget && (widget.exportDOMVisual || widget.exportVisual)) {\n            if (widget.exportDOMVisual) {\n                visual = widget.exportDOMVisual();\n            } else {\n                visual = widget.exportVisual();\n            }\n        }\n    }\n\n    if (!visual) {\n        return false;\n    }\n\n    var wrap = new Group();\n    wrap.children.push(visual);\n\n    var bbox = element.getBoundingClientRect();\n    wrap.transform(transform().translate(bbox.left, bbox.top));\n\n    group.append(wrap);\n\n    return true;\n}\n\nfunction maybeRenderBullet(element, group) {\n    var bulletType = element.getAttribute(KENDO_BULLET_TYPE);\n\n    if (!bulletType) {\n        return false;\n    }\n\n    var box = element.getBoundingClientRect();\n    var color = getComputedStyle$1(element).color;\n\n    if (bulletType === 'square') {\n        var rectSize = box.height / 5;\n        group.append(new Rect(new Rect$1([\n            box.right - rectSize,\n            box.top + box.height / 2.1\n        ], [rectSize, rectSize])).fill(color).stroke(color));\n    } else {\n        var radius = box.height / 7;\n        var center = [\n            box.right - radius,\n            box.top + (box.height + radius) / 2\n        ];\n        var circle = new Circle(new Circle$1(center, radius));\n        if (bulletType === 'circle') {\n            circle.stroke(color, 0.5);\n        } else {\n            circle.fill(color).stroke(null);\n        }\n        group.append(circle);\n    }\n\n    return true;\n}\n\nfunction renderImage(element, url, group) {\n    var box = getContentBox(element);\n    var rect = new Rect$1([ box.left, box.top ], [ box.width, box.height ]);\n    var image = new Image$1(url, rect);\n    setClipping(image, elementRoundBox(element, box, \"content\"));\n    group.append(image);\n}\n\nfunction zIndexSort(a, b) {\n    var sa = getComputedStyle$1(a);\n    var sb = getComputedStyle$1(b);\n    var za = parseFloat(getPropertyValue(sa, \"z-index\"));\n    var zb = parseFloat(getPropertyValue(sb, \"z-index\"));\n    var pa = getPropertyValue(sa, \"position\");\n    var pb = getPropertyValue(sb, \"position\");\n    if (isNaN(za) && isNaN(zb)) {\n        if ((/static|absolute/.test(pa)) && (/static|absolute/.test(pb))) {\n            return 0;\n        }\n        if (pa == \"static\") {\n            return -1;\n        }\n        if (pb == \"static\") {\n            return 1;\n        }\n        return 0;\n    }\n    if (isNaN(za)) {\n        return zb === 0 ? 0 : zb > 0 ? -1 : 1;\n    }\n    if (isNaN(zb)) {\n        return za === 0 ? 0 : za > 0 ? 1 : -1;\n    }\n    return parseFloat(za) - parseFloat(zb);\n}\n\nfunction isFormField(element) {\n    return /^(?:textarea|select|input)$/i.test(element.tagName);\n}\n\nfunction getSelectedOption(element) {\n    if (element.selectedOptions && element.selectedOptions.length > 0) {\n        return element.selectedOptions[0];\n    }\n    return element.options[element.selectedIndex];\n}\n\nfunction renderCheckbox(element, group) {\n    var style = getComputedStyle$1(element);\n    var color = getPropertyValue(style, \"color\");\n    var box = element.getBoundingClientRect();\n    if (element.type == \"checkbox\") {\n        group.append(\n            Path.fromRect(\n                new Rect$1([ box.left+1, box.top+1 ],\n                             [ box.width-2, box.height-2 ])\n            ).stroke(color, 1)\n        );\n        if (element.checked) {\n            // fill a rectangle inside?  looks kinda ugly.\n            // group.append(\n            //     Path.fromRect(\n            //         new geo.Rect([ box.left+4, box.top+4 ],\n            //                      [ box.width-8, box.height-8])\n            //     ).fill(color).stroke(null)\n            // );\n\n            // let's draw a checkmark instead.  artistic, eh?\n            group.append(\n                new Path()\n                    .stroke(color, 1.2)\n                    .moveTo(box.left + 0.22 * box.width,\n                            box.top + 0.55 * box.height)\n                    .lineTo(box.left + 0.45 * box.width,\n                            box.top + 0.75 * box.height)\n                    .lineTo(box.left + 0.78 * box.width,\n                            box.top + 0.22 * box.width)\n            );\n        }\n    } else {\n        group.append(\n            new Circle(\n                new Circle$1([\n                    (box.left + box.right) / 2,\n                    (box.top + box.bottom) / 2\n                ], Math.min(box.width-2, box.height-2) / 2)\n            ).stroke(color, 1)\n        );\n        if (element.checked) {\n            group.append(\n                new Circle(\n                    new Circle$1([\n                        (box.left + box.right) / 2,\n                        (box.top + box.bottom) / 2\n                    ], Math.min(box.width-8, box.height-8) / 2)\n                ).fill(color).stroke(null)\n            );\n        }\n    }\n}\n\nfunction renderFormField(element, group) {\n    var tag = element.tagName.toLowerCase();\n    if (tag == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n        return renderCheckbox(element, group);\n    }\n    var p = element.parentNode;\n    var doc = element.ownerDocument;\n    var el = doc.createElement(KENDO_PSEUDO_ELEMENT);\n    var option;\n    setStyle(el, getCssText(getComputedStyle$1(element)));\n    if (tag == \"input\") {\n        el.style.whiteSpace = \"pre\";\n    }\n    if (tag == \"select\" || tag == \"textarea\") {\n        el.style.overflow = \"auto\";\n    }\n    if (tag == \"select\") {\n        if (element.multiple) {\n            for (var i = 0; i < element.options.length; ++i) {\n                option = doc.createElement(KENDO_PSEUDO_ELEMENT);\n                setStyle(option, getCssText(getComputedStyle$1(element.options[i])));\n                option.style.display = \"block\"; // IE9 messes up without this\n                option.textContent = element.options[i].textContent;\n                el.appendChild(option);\n            }\n        } else {\n            option = getSelectedOption(element);\n            if (option) {\n                el.textContent = option.textContent;\n            }\n        }\n    } else {\n        el.textContent = element.value;\n    }\n    p.insertBefore(el, element);\n    el.scrollLeft = element.scrollLeft;\n    el.scrollTop = element.scrollTop;\n\n    // must temporarily hide the original element, otherwise it\n    // may affect layout of the fake element we want to render.\n    element.style.display = \"none\";\n\n    renderContents(el, group);\n    element.style.display = \"\";\n    p.removeChild(el);\n}\n\nfunction serializeSVG(element) {\n    var serializer = new window.XMLSerializer();\n    var xml = serializer.serializeToString(element);\n\n    if (browser.mozilla && !(element.getAttribute(\"width\") && element.getAttribute(\"height\"))) {\n        var doc = new window.DOMParser().parseFromString(xml, \"image/svg+xml\");\n        var svg = doc.documentElement;\n        var box = getContentBox(element);\n        svg.setAttribute(\"width\", box.width);\n        svg.setAttribute(\"height\", box.height);\n        xml = serializer.serializeToString(svg);\n    }\n\n    return xml;\n}\n\nfunction renderContents(element, group) {\n    if (nodeInfo._stackingContext.element === element) {\n        // the group that was set in pushNodeInfo might have\n        // changed due to clipping/transforms, update it here.\n        nodeInfo._stackingContext.group = group;\n    }\n    switch (element.tagName.toLowerCase()) {\n      case \"img\":\n        renderImage(element, element.src, group);\n        break;\n\n      case \"svg\":\n        var xml = serializeSVG(element);\n        var dataURL = \"data:image/svg+xml;base64,\" + (encodeBase64(xml));\n        renderImage(element, dataURL, group);\n        break;\n\n      case \"canvas\":\n        try {\n            renderImage(element, element.toDataURL(\"image/png\"), group);\n        } catch (ex) {\n            // tainted; can't draw it, ignore.\n        }\n        break;\n\n      case \"textarea\":\n      case \"input\":\n      case \"select\":\n        renderFormField(element, group);\n        break;\n\n      default:\n        var children = [], floats = [], positioned = [];\n        for (var i = element.firstChild; i; i = i.nextSibling) {\n            switch (i.nodeType) {\n              case 3:         // Text\n                if (/\\S/.test(i.data)) {\n                    renderText(element, i, group);\n                }\n                break;\n              case 1:         // Element\n                var style = getComputedStyle$1(i);\n                var floating = getPropertyValue(style, \"float\");\n                var position = getPropertyValue(style, \"position\");\n                if (position != \"static\") {\n                    positioned.push(i);\n                }\n                else if (floating != \"none\") {\n                    floats.push(i);\n                } else {\n                    children.push(i);\n                }\n                break;\n            }\n        }\n\n        mergeSort(children, zIndexSort).forEach(function(el){ renderElement(el, group); });\n        mergeSort(floats, zIndexSort).forEach(function(el){ renderElement(el, group); });\n        mergeSort(positioned, zIndexSort).forEach(function(el){ renderElement(el, group); });\n    }\n}\n\nfunction renderText(element, node, group) {\n    if (emptyClipbox()) {\n        return;\n    }\n    var style = getComputedStyle$1(element);\n\n    if (parseFloat(getPropertyValue(style, \"text-indent\")) < -500) {\n        // assume it should not be displayed.  the slider's\n        // draggable handle displays a Drag text for some reason,\n        // having text-indent: -3333px.\n        return;\n    }\n\n    var text = node.data;\n    var start = 0;\n    var end = text.search(/\\S\\s*$/) + 1;\n\n    if (!end) {\n        return; // whitespace-only node\n    }\n\n    var fontSize = getPropertyValue(style, \"font-size\");\n    var lineHeight = getPropertyValue(style, \"line-height\");\n\n    // simply getPropertyValue(\"font\") doesn't work in Firefox :-\\\n    var font = [\n        getPropertyValue(style, \"font-style\"),\n        getPropertyValue(style, \"font-variant\"),\n        getPropertyValue(style, \"font-weight\"),\n        fontSize, // no need for line height here; it breaks layout in FF\n        getPropertyValue(style, \"font-family\")\n    ].join(\" \");\n\n    fontSize = parseFloat(fontSize);\n    lineHeight = parseFloat(lineHeight);\n\n    if (fontSize === 0 || isNaN(fontSize)) {\n        return;\n    }\n\n    var color = getPropertyValue(style, \"color\");\n    var range = element.ownerDocument.createRange();\n    var align = getPropertyValue(style, \"text-align\");\n    var isJustified = align == \"justify\";\n    var columnCount = getPropertyValue(style, \"column-count\", 1);\n    var whiteSpace = getPropertyValue(style, \"white-space\");\n    var textTransform = getPropertyValue(style, \"text-transform\");\n\n    // A line of 500px, with a font of 12px, contains an average of 80 characters, but since we\n    // err, we'd like to guess a bigger number rather than a smaller one.  Multiplying by 5\n    // seems to be a good option.\n    var estimateLineLength = element.getBoundingClientRect().width / fontSize * 5;\n    if (estimateLineLength === 0) {\n        estimateLineLength = 500;\n    }\n\n    // we'll maintain this so we can workaround bugs in Chrome's Range.getClientRects\n    // https://github.com/telerik/kendo/issues/5740\n    var prevLineBottom = null;\n\n    var underline = nodeInfo[\"underline\"];\n    var lineThrough = nodeInfo[\"line-through\"];\n    var overline = nodeInfo[\"overline\"];\n    var underlineOffset = nodeInfo[\"underline-offset\"];\n\n    if (underline) {\n        forEachRect(decorateUnder);\n    }\n\n    // doChunk returns true when all text has been rendered\n    while (!doChunk()) {}\n\n    if (lineThrough || overline) {\n        forEachRect(decorateOver);\n    }\n\n    return;                 // only function declarations after this line\n\n    function forEachRect(callback) {\n        range.selectNode(node);\n        var clientRects = slice(range.getClientRects());\n\n        forEachRect = function (cb) { return clientRects.forEach(cb); };\n        forEachRect(callback);\n    }\n\n    function actuallyGetRangeBoundingRect(range) {\n        // XXX: to be revised when this Chrome bug is fixed:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=612459\n        if (microsoft || browser.chrome || browser.safari) {\n            // Workaround browser bugs: IE and Chrome would sometimes\n            // return 0 or 1-width rectangles before or after the main\n            // one.  https://github.com/telerik/kendo/issues/4674\n\n            // Actually Chrome 50 got worse, since the rectangles can now have the width of a\n            // full character, making it hard to tell whether it's a bogus rectangle or valid\n            // selection location.  The workaround is to ignore rectangles that fall on the\n            // previous line.  https://github.com/telerik/kendo/issues/5740\n            var rectangles = range.getClientRects(), box = {\n                top    :  Infinity,\n                right  : -Infinity,\n                bottom : -Infinity,\n                left   :  Infinity\n            }, done = false;\n            for (var i = 0; i < rectangles.length; ++i) {\n                var b = rectangles[i];\n                if (b.width <= 1 || b.bottom === prevLineBottom) {\n                    continue;   // bogus rectangle\n                }\n                box.left   = Math.min(b.left   , box.left);\n                box.top    = Math.min(b.top    , box.top);\n                box.right  = Math.max(b.right  , box.right);\n                box.bottom = Math.max(b.bottom , box.bottom);\n                done = true;\n            }\n            if (!done) {\n                return range.getBoundingClientRect();\n            }\n            box.width = box.right - box.left;\n            box.height = box.bottom - box.top;\n            return box;\n        }\n        return range.getBoundingClientRect();\n    }\n\n    // Render a chunk of text, typically one line (but for justified text we render each word as\n    // a separate Text object, because spacing is variable).  Returns true when it finished the\n    // current node.  After each chunk it updates `start` to just after the last rendered\n    // character.\n    function doChunk() {\n        var origStart = start;\n        var box, pos = text.substr(start).search(/\\S/);\n        start += pos;\n        if (pos < 0 || start >= end) {\n            return true;\n        }\n\n        // Select a single character to determine the height of a line of text.  The box.bottom\n        // will be essential for us to figure out where the next line begins.\n        range.setStart(node, start);\n        range.setEnd(node, start + 1);\n        box = actuallyGetRangeBoundingRect(range);\n\n        // for justified text we must split at each space, because space has variable width.\n        var found = false;\n        if (isJustified || columnCount > 1) {\n            pos = text.substr(start).search(/\\s/);\n            if (pos >= 0) {\n                // we can only split there if it's on the same line, otherwise we'll fall back\n                // to the default mechanism (see findEOL below).\n                range.setEnd(node, start + pos);\n                var r = actuallyGetRangeBoundingRect(range);\n                if (r.bottom == box.bottom) {\n                    box = r;\n                    found = true;\n                    start += pos;\n                }\n            }\n        }\n\n        if (!found) {\n            // This code does three things: (1) it selects one line of text in `range`, (2) it\n            // leaves the bounding rect of that line in `box` and (3) it returns the position\n            // just after the EOL.  We know where the line starts (`start`) but we don't know\n            // where it ends.  To figure this out, we select a piece of text and look at the\n            // bottom of the bounding box.  If it changes, we have more than one line selected\n            // and should retry with a smaller selection.\n            //\n            // To speed things up, we first try to select all text in the node (`start` ->\n            // `end`).  If there's more than one line there, then select only half of it.  And\n            // so on.  When we find a value for `end` that fits in one line, we try increasing\n            // it (also in halves) until we get to the next line.  The algorithm stops when the\n            // right side of the bounding box does not change.\n            //\n            // One more thing to note is that everything happens in a single Text DOM node.\n            // There's no other tags inside it, therefore the left/top coordinates of the\n            // bounding box will not change.\n            pos = (function findEOL(min, eol, max){\n                range.setEnd(node, eol);\n                var r = actuallyGetRangeBoundingRect(range);\n                if (r.bottom != box.bottom && min < eol) {\n                    return findEOL(min, (min + eol) >> 1, eol);\n                } else if (r.right != box.right) {\n                    box = r;\n                    if (eol < max) {\n                        return findEOL(eol, (eol + max) >> 1, max);\n                    } else {\n                        return eol;\n                    }\n                } else {\n                    return eol;\n                }\n            })(start, Math.min(end, start + estimateLineLength), end);\n\n            if (pos == start) {\n                // if EOL is at the start, then no more text fits on this line.  Skip the\n                // remainder of this node entirely to avoid a stack overflow.\n                return true;\n            }\n            start = pos;\n\n            pos = range.toString().search(/\\s+$/);\n            if (pos === 0) {\n                return false; // whitespace only; we should not get here.\n            }\n            if (pos > 0) {\n                // eliminate trailing whitespace\n                range.setEnd(node, range.startOffset + pos);\n                box = actuallyGetRangeBoundingRect(range);\n            }\n        }\n\n        // another workaround for IE: if we rely on getBoundingClientRect() we'll overlap with the bullet for LI\n        // elements.  Calling getClientRects() and using the *first* rect appears to give us the correct location.\n        // Note: not to be used in Chrome as it randomly returns a zero-width rectangle from the previous line.\n        if (microsoft) {\n            box = range.getClientRects()[0];\n        }\n\n        var str = range.toString();\n        if (!/^(?:pre|pre-wrap)$/i.test(whiteSpace)) {\n            // node with non-significant space -- collapse whitespace.\n            str = str.replace(/\\s+/g, \" \");\n        }\n        else if (/\\t/.test(str)) {\n            // with significant whitespace we need to do something about literal TAB characters.\n            // There's no TAB glyph in a font so they would be rendered in PDF as an empty box,\n            // and the whole text will stretch to fill the original width.  The core PDF lib\n            // does not have sufficient context to deal with it.\n\n            // calculate the starting column here, since we initially discarded any whitespace.\n            var cc = 0;\n            for (pos = origStart; pos < range.startOffset; ++pos) {\n                var code = text.charCodeAt(pos);\n                if (code == 9) {\n                    // when we meet a TAB we must round up to the next tab stop.\n                    // in all browsers TABs seem to be 8 characters.\n                    cc += 8 - cc % 8;\n                } else if (code == 10 || code == 13) {\n                    // just in case we meet a newline we must restart.\n                    cc = 0;\n                } else {\n                    // ordinary character --> advance one column\n                    cc++;\n                }\n            }\n\n            // based on starting column, replace any TAB characters in the string we actually\n            // have to display with spaces so that they align to columns multiple of 8.\n            while ((pos = str.search(\"\\t\")) >= 0) {\n                var indent = \"        \".substr(0, 8 - (cc + pos) % 8);\n                str = str.substr(0, pos) + indent + str.substr(pos + 1);\n            }\n        }\n\n        if (!found) {\n            prevLineBottom = box.bottom;\n        }\n        drawText(str, box);\n    }\n\n    function drawText(str, box) {\n        // In IE the box height will be approximately lineHeight, while in\n        // other browsers it'll (correctly) be the height of the bounding\n        // box for the current text/font.  Which is to say, IE sucks again.\n        // The only good solution I can think of is to measure the text\n        // ourselves and center the bounding box.\n        if (microsoft && !isNaN(lineHeight)) {\n            var height = getFontHeight(font);\n            var top = (box.top + box.bottom - height) / 2;\n            box = {\n                top    : top,\n                right  : box.right,\n                bottom : top + height,\n                left   : box.left,\n                height : height,\n                width  : box.right - box.left\n            };\n        }\n\n        // var path = new Path({ stroke: { color: \"red\" }});\n        // path.moveTo(box.left, box.top)\n        //     .lineTo(box.right, box.top)\n        //     .lineTo(box.right, box.bottom)\n        //     .lineTo(box.left, box.bottom)\n        //     .close();\n        // group.append(path);\n\n        switch (textTransform) {\n          case \"uppercase\":\n            str = str.toUpperCase();\n            break;\n          case \"lowercase\":\n            str = str.toLowerCase();\n            break;\n          case \"capitalize\":\n            str = str.replace(/(?:^|\\s)\\S/g, function (l) { return l.toUpperCase(); });\n            break;\n        }\n\n        var text = new TextRect(\n            str, new Rect$1([ box.left, box.top ],\n                              [ box.width, box.height ]),\n            {\n                font: font,\n                fill: { color: color }\n            }\n        );\n        group.append(text);\n    }\n\n    function drawTextLine(lineWidth, textBox, color, ypos) {\n        if (color) {\n            var path = new Path({ stroke: {\n                width: lineWidth,\n                color: color\n            }});\n\n            ypos -= lineWidth;\n            path.moveTo(textBox.left, ypos)\n                .lineTo(textBox.right, ypos);\n            group.append(path);\n        }\n    }\n\n    function decorateOver(box) {\n        var width = fontSize / 12;\n        drawTextLine(width, box, lineThrough, box.bottom - box.height / 2.7);\n        drawTextLine(width, box, overline, box.top);\n    }\n\n    function decorateUnder(box) {\n        var width = fontSize / 12;\n        var underlinePos = box.bottom;\n        if (underlineOffset != null) {\n            underlinePos += underlineOffset;\n        } else {\n            underlinePos += width; // for \"auto\" it seems better to add line width\n        }\n        drawTextLine(width, box, underline, underlinePos);\n    }\n}\n\nfunction groupInStackingContext(element, group, zIndex) {\n    var main;\n    if (zIndex != \"auto\") {\n        // use the current stacking context\n        main = nodeInfo._stackingContext.group;\n        zIndex = parseFloat(zIndex);\n    } else {\n        // normal flow — use given container.  we still have to\n        // figure out where should we insert this element with the\n        // assumption that its z-index is zero, as the group might\n        // already contain elements with higher z-index.\n        main = group;\n        zIndex = 0;\n    }\n    var a = main.children;\n    for (var i = 0; i < a.length; ++i) {\n        if (a[i]._dom_zIndex != null && a[i]._dom_zIndex > zIndex) {\n            break;\n        }\n    }\n\n    var tmp = new Group();\n    main.insert(i, tmp);\n    tmp._dom_zIndex = zIndex;\n\n    if (main !== group) {\n        // console.log(\"Placing\", element, \"in\", nodeInfo._stackingContext.element, \"at position\", i, \" / \", a.length);\n        // console.log(a.slice(i+1));\n\n        // if (nodeInfo._matrix) {\n        //     tmp.transform(nodeInfo._matrix);\n        // }\n        if (nodeInfo._clipbox) {\n            var m = nodeInfo._matrix.invert();\n            var r = nodeInfo._clipbox.transformCopy(m);\n            setClipping(tmp, Path.fromRect(r));\n            // console.log(r);\n            // tmp.append(Path.fromRect(r));\n            // tmp.append(new Text(element.className || element.id, r.topLeft()));\n        }\n    }\n\n    return tmp;\n}\n\nfunction renderElement(element, container) {\n    var style = getComputedStyle$1(element);\n\n    updateCounters(style);\n\n    if (/^(style|script|link|meta|iframe|col|colgroup)$/i.test(element.tagName)) {\n        return;\n    }\n\n    if (nodeInfo._clipbox == null) {\n        return;\n    }\n\n    var opacity = parseFloat(getPropertyValue(style, \"opacity\"));\n    var visibility = getPropertyValue(style, \"visibility\");\n    var display = getPropertyValue(style, \"display\");\n\n    if (opacity === 0 || visibility == \"hidden\" || display == \"none\") {\n        return;\n    }\n\n    var tr = getTransform(style);\n    var group;\n\n    var zIndex = getPropertyValue(style, \"z-index\");\n    if ((tr || opacity < 1) && zIndex == \"auto\") {\n        zIndex = 0;\n    }\n    group = groupInStackingContext(element, container, zIndex);\n\n    // XXX: remove at some point\n    // group._pdfElement = element;\n    // group.options._pdfDebug = \"\";\n    // if (element.id) {\n    //     group.options._pdfDebug = \"#\" + element.id;\n    // }\n    // if (element.className) {\n    //     group.options._pdfDebug += \".\" + element.className.split(\" \").join(\".\");\n    // }\n\n    if (opacity < 1) {\n        group.opacity(opacity * group.opacity());\n    }\n\n    pushNodeInfo(element, style, group);\n\n    if (!tr) {\n        _renderWithPseudoElements(element, group);\n    }\n    else {\n        saveStyle(element, function(){\n            // must clear transform, so getBoundingClientRect returns correct values.\n            pleaseSetPropertyValue(element.style, \"transform\", \"none\", \"important\");\n\n            // must also clear transitions, so correct values are returned *immediately*\n            pleaseSetPropertyValue(element.style, \"transition\", \"none\", \"important\");\n\n            // the presence of any transform makes it behave like it had position: relative,\n            // because why not.\n            // http://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/\n            if (getPropertyValue(style, \"position\") == \"static\") {\n                // but only if it's not already positioned. :-/\n                pleaseSetPropertyValue(element.style, \"position\", \"relative\", \"important\");\n            }\n\n            // must translate to origin before applying the CSS\n            // transformation, then translate back.\n            var bbox = element.getBoundingClientRect();\n            var x = bbox.left + tr.origin[0];\n            var y = bbox.top + tr.origin[1];\n            var m = [ 1, 0, 0, 1, -x, -y ];\n            m = mmul(m, tr.matrix);\n            m = mmul(m, [ 1, 0, 0, 1, x, y ]);\n            m = setTransform(group, m);\n\n            nodeInfo._matrix = nodeInfo._matrix.multiplyCopy(m);\n\n            _renderWithPseudoElements(element, group);\n        });\n    }\n\n    popNodeInfo();\n\n    //drawDebugBox(element.getBoundingClientRect(), container);\n}\n\n// function drawDebugBox(box, group, color) {\n//     var path = Path.fromRect(new geo.Rect([ box.left, box.top ], [ box.width, box.height ]));\n//     if (color) {\n//         path.stroke(color);\n//     }\n//     group.append(path);\n// }\n\n// function dumpTextNode(node) {\n//     var txt = node.data.replace(/^\\s+/, \"\");\n//     if (txt.length < 100) {\n//         console.log(node.data.length + \": |\" + txt);\n//     } else {\n//         console.log(node.data.length + \": |\" + txt.substr(0, 50) + \"|...|\" + txt.substr(-50));\n//     }\n// }\n\nfunction mmul(a, b) {\n    var a1 = a[0], b1 = a[1], c1 = a[2], d1 = a[3], e1 = a[4], f1 = a[5];\n    var a2 = b[0], b2 = b[1], c2 = b[2], d2 = b[3], e2 = b[4], f2 = b[5];\n    return [\n        a1*a2 + b1*c2,          a1*b2 + b1*d2,\n        c1*a2 + d1*c2,          c1*b2 + d1*d2,\n        e1*a2 + f1*c2 + e2,     e1*b2 + f1*d2 + f2\n    ];\n}\n\nexport { Arc$1 as A, Rect as B, Color as C, drawText as D, LRUCache as E, TextMetrics as F, Group as G, objectKey as H, Image$1 as I, hashKey as J, normalizeText as K, LinearGradient as L, Matrix as M, encodeBase64 as N, pdf as O, Point as P, drawing as Q, Rect$1 as R, Segment as S, Text as T, geometry as U, exportPDF as V, drawDOM as W, getFontFaces as X, limitValue as Y, namedColors as Z, Class as a, Path as b, Animation as c, defined as d, dotsPattern as e, crosshatchPattern as f, diagonalStripesPattern as g, gridPattern as h, Circle as i, Circle$1 as j, MultiPath as k, logToConsole as l, RadialGradient as m, measureText as n, AnimationFactory as o, Layout as p, parseColor$2 as q, round as r, support$1 as s, transform as t, util as u, verticalStripesPattern as v, Surface as w, throttle as x, Arc as y, Size as z };\nexport { __meta__ };"]}