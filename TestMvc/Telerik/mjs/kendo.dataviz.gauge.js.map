{"version":3,"sources":["raw-mjs/kendo.dataviz.gauge.js"],"names":["RadialGauge","LinearGauge","ArcGauge","CircularGauge","LinearScale","RadialScale","RadialPointer","LinearPointer","BarLinearPointer","ArrowLinearPointer","$","window","kendo","dataviz","Widget","ui","draw","drawing","themeOptions","options","themes","themeName","theme","lowerName","toLowerCase","SASS_THEMES","indexOf","autoTheme","gauge","Gauge","extend","init","element","userOptions","destroy","empty","fn","call","this","deepExtend","wrapper","_createInstance","addClass","notify","renderAs","pointer","scale","gaugeArea","background","transitions","setOptions","_instance","_copyFields","redraw","gaugeType","_gaugeType","_originalOptions","surface","bbox","pointers","_resize","resize","proxyMembers","createProxyMember","name","apply","arguments","idx","length","ExportMixin","RadialGaugeWidget","LinearGaugeWidget","vertical","ArcGaugeWidget","css","_centerTemplate","value","instance","_centerElement","exportVisual","centerTemplate","template","centerElement","_getCenterElement","html","color","currentColor","position","centerLabelPosition","width","height","remove","append","CircularGaugeWidget","createExportMethod","method","drawDOM","then","visual","exportMethods","plugin","jQuery","__meta__","id","category","description","depends","kendo$1"],"mappings":"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","file":"kendo.dataviz.gauge.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.dataviz.core.js';\nimport { R as RadialGauge, L as LinearGauge, A as ArcGauge, n as CircularGauge, o as LinearScale, p as RadialScale, q as RadialPointer, t as LinearPointer, u as BarLinearPointer, v as ArrowLinearPointer } from './kendo.charts.cmn.chunk.js';\nimport './kendo.dataviz.themes.js';\n\n(function($) {\n    window.kendo.dataviz = window.kendo.dataviz || {};\n\n    var kendo = window.kendo;\n    var Widget = kendo.ui.Widget;\n    var dataviz = kendo.dataviz;\n    var draw = kendo.drawing;\n\n    function themeOptions(options) {\n        var themes = dataviz.ui.themes || {};\n        var themeName = options.theme || \"\";\n        var lowerName = themeName.toLowerCase();\n\n        if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n            return dataviz.autoTheme().gauge;\n        }\n\n        return (themes[themeName] || themes[lowerName] || {}).gauge;\n    }\n\n    var Gauge = Widget.extend({\n        init: function(element, userOptions) {\n            kendo.destroy(element);\n            $(element).empty();\n\n            Widget.fn.init.call(this, element);\n\n            this.options = kendo.deepExtend(this.options, userOptions);\n\n            this.wrapper = this.element;\n            this._createInstance();\n\n            this.element.addClass('k-gauge');\n\n            kendo.notify(this, dataviz.ui);\n        },\n\n        options: {\n            theme: \"sass\",\n            renderAs: \"\",\n            pointer: {},\n            scale: {},\n            gaugeArea: {\n                background: \"\"\n            },\n            transitions: true\n        },\n\n        setOptions: function(options) {\n            this._instance.setOptions(options, themeOptions(options));\n\n            this._copyFields();\n        },\n\n        redraw: function() {\n            this._instance.redraw();\n            this._copyFields();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this._instance.destroy();\n        },\n\n        _createInstance: function() {\n            var gaugeType = this._gaugeType();\n            this._instance = new gaugeType(this.element[0], this.options, themeOptions(this.options));\n            this._copyFields();\n        },\n\n        _copyFields: function() {\n            this._originalOptions = this._instance._originalOptions;\n            this.options = this._instance.options;\n            this.surface = this._instance.surface;\n            this.bbox = this._instance.bbox;\n            this.gaugeArea = this._instance.gaugeArea;\n            this.pointers = this._instance.pointers;\n            this.scale = this._instance.scale;\n        },\n\n        _resize: function() {\n            this._instance.resize();\n        }\n    });\n\n    var proxyMembers = [\"getSize\", \"value\", \"allValues\", \"exportVisual\"];\n\n    function createProxyMember(name) {\n        Gauge.fn[name] = function() {\n            return this._instance[name].apply(this._instance, arguments);\n        };\n    }\n\n    for (var idx = 0; idx < proxyMembers.length; idx++) {\n        createProxyMember(proxyMembers[idx]);\n    }\n\n    dataviz.ExportMixin.extend(Gauge.fn);\n\n    var RadialGaugeWidget = Gauge.extend({\n\n        options: {\n            name: \"RadialGauge\"\n        },\n\n        _gaugeType: function() {\n            return RadialGauge;\n        }\n    });\n\n    var LinearGaugeWidget = Gauge.extend({\n\n        options: {\n            name: \"LinearGauge\",\n            scale: {\n                vertical: true\n            }\n        },\n\n        _gaugeType: function() {\n            return LinearGauge;\n        }\n    });\n\n    var ArcGaugeWidget = Gauge.extend({\n        init: function(element, userOptions) {\n            Gauge.fn.init.call(this, element, userOptions);\n\n            this.element.css('position', 'relative');\n            this.element.addClass('k-arcgauge');\n\n            this._centerTemplate();\n        },\n\n        options: {\n            name: \"ArcGauge\"\n        },\n\n        setOptions: function(options) {\n            Gauge.fn.setOptions.call(this, options);\n            this._centerTemplate();\n        },\n\n        redraw: function() {\n            Gauge.fn.redraw.call(this);\n            this._centerTemplate();\n        },\n\n        value: function(value) {\n            var instance = this._instance;\n            if (arguments.length === 0) {\n                return instance.value();\n            }\n\n            instance.value(value);\n\n            this._centerTemplate();\n        },\n\n        destroy: function() {\n            Gauge.fn.destroy.call(this);\n            delete this._centerElement;\n        },\n\n        exportVisual: function() {\n            if (this._centerElement) {\n                return false;\n            }\n\n            return Gauge.fn.exportVisual.call(this);\n        },\n\n        _resize: function() {\n            this._instance.resize();\n\n            this._centerTemplate();\n        },\n\n        _centerTemplate: function() {\n            if (this.options.centerTemplate) {\n                var template = kendo.template(this.options.centerTemplate);\n\n                var instance = this._instance;\n                var centerElement = this._getCenterElement();\n\n                centerElement.html(template({ color: instance.currentColor(), value: instance.value() }));\n\n                var position = instance.centerLabelPosition(centerElement.width(), centerElement.height());\n\n                centerElement.css(position);\n            } else if (this._centerElement) {\n                this._centerElement.remove();\n                this._centerElement = null;\n            }\n        },\n\n        _getCenterElement: function() {\n            var centerElement = this._centerElement;\n            if (!centerElement) {\n                centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                this.element.append(centerElement);\n            }\n\n            return centerElement;\n        },\n\n        _gaugeType: function() {\n            return ArcGauge;\n        }\n    });\n\n    var CircularGaugeWidget = ArcGaugeWidget.extend({\n        options: {\n            name: \"CircularGauge\"\n        },\n\n        _gaugeType: function() {\n            return CircularGauge;\n        }\n    });\n\n    function createExportMethod(name) {\n        ArcGaugeWidget.fn[name] = function(options) {\n            var gauge = this;\n            var method = draw[name];\n\n            if (!gauge._centerElement) {\n                return method(gauge.exportVisual(), options);\n            }\n\n            return draw.drawDOM(gauge.element).then(function(visual) {\n                return method(visual, options);\n            });\n        };\n    }\n\n    var exportMethods = ['exportSVG', 'exportImage', 'exportPDF'];\n\n    for (idx = 0; idx < exportMethods.length; idx++) {\n        createExportMethod(exportMethods[idx]);\n    }\n\n    dataviz.ui.plugin(LinearGaugeWidget);\n    dataviz.ui.plugin(RadialGaugeWidget);\n    dataviz.ui.plugin(ArcGaugeWidget);\n    dataviz.ui.plugin(CircularGaugeWidget);\n\n    kendo.deepExtend(dataviz, {\n        Gauge: Gauge,\n        LinearScale: LinearScale,\n        RadialScale: RadialScale,\n        RadialPointer: RadialPointer,\n        LinearPointer: LinearPointer,\n        BarLinearPointer: BarLinearPointer,\n        ArrowLinearPointer: ArrowLinearPointer,\n        LinearGauge: LinearGaugeWidget,\n        RadialGauge: RadialGaugeWidget,\n        ArcGauge: ArcGaugeWidget,\n        CircularGauge: CircularGaugeWidget\n    });\n\n})(window.kendo.jQuery);\n\nconst __meta__ = {\n    id: \"dataviz.gauge\",\n    name: \"Gauge\",\n    category: \"dataviz\",\n    description: \"Linear, Radial and Arc gauges.\",\n    depends: [\"dataviz.core\", \"dataviz.themes\", \"charts.cmn.chunk\"]\n};\n\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}