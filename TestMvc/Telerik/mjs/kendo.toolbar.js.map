{"version":3,"sources":["raw-mjs/kendo.toolbar.js"],"names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","isFunction","keys","outerWidth","_outerWidth","ns","TOOLBAR","KBUTTON","BUTTON_GROUP","SPLIT_BUTTON","MENU_BUTTON","SPACER_CLASS","STATE_SELECTED","STATE_HIDDEN","FORCE_HIDDEN","GROUP_START","GROUP_END","MENU_LINK","MENU_ITEM","OVERFLOW_ANCHOR","TEMPLATE_ITEM","MENU_LINK_TOGGLE","DROPDOWNLIST","INPUT_BUTTON","KFOCUS","TABINDEX_MINUS_1","TOOLBAR_TOOL","ARIA_CHECKED","ARIA_LABEL","CHANGE","CLICK","TOGGLE","OPEN","CLOSE","FOCUS","KEYDOWN","SPACER","ROLE","ITEM_REF","SEPARATOR","OVERFLOW","TABINDEX","INPUT","SELECT","GROUP","DATA_UID","DATA_ROLE_SELECTOR","DATA_TOGGLE_SELECTOR","DATA_ROLE_BUTTONMENU","ITEM_REF_SELECTOR","KENDO_FOCUSABLE","OVERFLOW_OPEN","OVERFLOW_CLOSE","OVERFLOW_NEVER","OVERFLOW_AUTO","OVERFLOW_ALWAYS","KENDO_UID_ATTR","attr","NOTHING","DASH","EMPTY","DOT","COMMA","ID","UID","K_DROP_DOWN_BUTTON","K_SPLIT_BUTTON","K_TOGGLE_BUTTON","K_BUTTON_GROUP","toolbar","WIDGET_TYPES","button","splitButton","dropDownButton","buttonGroup","popupButton","open","TOOLBAR_TOOLS_CLASSES","Button","ToggleButton","SplitButton","DropDownButton","ButtonGroup","ColorPicker","Switch","SAFE_COMPONENTS","POPUP_BUTTON_TEMPLATE","icon","ToolBar","extend","init","element","options","fn","call","this","_isRtl","support","isRtl","uid","guid","wrapper","addClass","resizable","_resizable","tools","length","items","_extendToolsOptions","_items","_attachEvents","_tabIndex","_applyCssClasses","_shrink","innerWidth","overflowAnchor","appendTo","_toggleOverflowAnchor","notify","events","navigateOnTab","evaluateTemplates","size","fillMode","destroy","that","unbindResize","_resizeHandler","overflowMenu","find","each","i","el","popup","popupWrapper","chooser","getKendoButton","remove","children","add","_add","resize","enable","candidate","focused","_getUid","item","_getItem","component","hasClass","is","removeAttr","trigger","buttonsPopupItem","widgetInstance","closest","menuItem","getSelectedFromGroup","groupName","filter","hide","elements","parentGroupEl","templateEl","toolbarEl","parent","data","_groupVisibleButtons","addBack","_resetTabIndex","_getAllItems","first","siblings","show","removeClass","toggle","checked","parentGroup","group","_toggleIndex","index","toggleClass","toggleTools","conditions","focusable","not","elm","tool","widget","condition","toToggle","processed","_processOptions","template","overflowTemplate","type","_addTemplate","_addCustomWidget","_addDefaultTool","_addSpacer","_addSeparator","insertBefore","_addAttributes","attributes","classes","hidden","align","class","overflow","forEach","groupClass","result","overflowComponent","_addMenuItem","componentOptions","indexOf","wrap","op","_addToolbarTool","menuitem","selected","showIcon","imageUrl","showText","text","encoded","append","last","prepend","togglable","menuButtons","buttons","click","bind","e","_onMenuItemSelect","_addPopupButton","widgetElement","popupComponent","kendoPopup","anchor","on","preventDefault","commandOn","target","value","close","separator","overflowSeparator","spacer","inputsInTemplate","html","popupRef","hasButtons","primary","themeColor","url","preventKeyNav","_attachWidgetEvents","_resetOpen","extensions","_keydown","_focusIn","_focusOut","_onClick","_onToggle","_onSelect","_onOpen","_onClose","$el","originalEvent","event","_childrenWidth","gap","parseInt","css","childrenWidth","Math","ceil","flatMap","_mapTool","parentMessages","defaultTools","style","visibility","knownUid","uidSelector","buttonsPopups","_getNextElement","direction","itemIndex","parentElement","focusableItem","visibleBtns","_hideItem","eq","menu","list","_showMenuItem","_hideMenuItem","keyCode","templateItem","isOverflowAnchor","ESC","stopPropagation","_keyDeactivateTemplate","ENTER","_keyActivateTemplate","altKey","DOWN","SPACEBAR","_keyOpenOverflow","HOME","_keyFocusFirst","END","_keyFocusLast","RIGHT","LEFT","_keyFocusNext","innerFocusable","pagerTool","innerWidget","visible","width","next","_mapAttributes","toolOptions","messages","property","title","command","dialog","toggleCondition","_mapComponent","componentMessages","componentPlaceholder","placeholder","dataSource","default","Object","JSON","stringify","key","ev","sender","map","isBuiltInTool","originalTool","isArray","Array","isPlainObjectTool","isPlainObject","toolKeysCount","t","deepExtend","_menuItemSelect","shouldSelect","twin","replace","current","select","setTimeout","menuEl","overflowItem","_processInner","parentUid","rootUid","some","b","every","selection","enabled","_renderOverflow","horizontalDirection","kendoButton","ContextMenu","showOn","origin","position","alignToAnchor","uploadWrapper","input","one","files","off","toFocus","onResize","_resize","containerWidth","popupBtnElements","_stretch","commandElement","visibleCommands","activeElement","_showItem","itemOuterWidth","hiddenCommands","focusableItems","firstFocusable","Item","Class","OverflowButton","TemplateItem","ToolBarButton","registerComponent","cssProperties","registerPrefix","registerValues","prop","values","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.toolbar.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.splitbutton.js';\nimport './kendo.dropdownbutton.js';\nimport './kendo.buttongroup.js';\nimport './kendo.menu.js';\nimport './kendo.icons.js';\n\nconst __meta__ = {\n    id: \"toolbar\",\n    name: \"ToolBar\",\n    category: \"web\",\n    description: \"The ToolBar widget displays one or more command buttons divided into groups.\",\n    depends: [ \"core\", \"splitbutton\", \"dropdownbutton\", \"buttongroup\", \"menu\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        isFunction = kendo.isFunction,\n        keys = kendo.keys,\n        outerWidth = kendo._outerWidth,\n        ns = \".kendoToolBar\",\n        TOOLBAR = \"toolbar\",\n        KTOOLBAR = \"k-toolbar\",\n        KBUTTON = \"k-button\",\n        BUTTON_GROUP = \"k-button-group\",\n        SPLIT_BUTTON = \"k-split-button\",\n        MENU_BUTTON = \"k-menu-button\",\n        POPUP_BUTTON = \"k-popup-button\",\n        KSEPARATOR = \"k-separator\",\n        SPACER_CLASS = \"k-spacer\",\n        UPLOAD_BUTTON = \"k-upload-button\",\n        POPUP = \"k-popup\",\n        RESIZABLE_TOOLBAR = \"k-toolbar-resizable\",\n        STATE_SELECTED = \"k-selected\",\n        STATE_DISABLED = \"k-disabled\",\n        STATE_HIDDEN = \"k-hidden\",\n        FORCE_HIDDEN = \"k-force-hidden\",\n        GROUP_START = \"k-group-start\",\n        GROUP_END = \"k-group-end\",\n        MENU_LINK = \"k-menu-link\",\n        MENU_ITEM = \"k-menu-item\",\n        OVERFLOW_ANCHOR = \"k-toolbar-overflow-button\",\n        TEMPLATE_ITEM = \"k-toolbar-item\",\n        MENU_LINK_TOGGLE = \"k-menu-link-toggle\",\n        DROPDOWNLIST = \"k-dropdownlist\",\n        INPUT_BUTTON = \"k-input-button\",\n        MENU_POPUP = \"k-menu-popup\",\n        KFOCUS = \"k-focus\",\n        SINGLE = \"single\",\n        MULTIPLE = \"multiple\",\n        NONE = \"none\",\n        TABINDEX_MINUS_1 = \"[tabindex=-1]\",\n        TOOLBAR_TOOL = \"toolbar-tool\",\n\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_LABEL = \"aria-label\",\n\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        TOGGLE = \"toggle\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        FOCUS = \"focus\",\n        FOCUSIN = \"focusin\",\n        FOCUSOUT = \"focusout\",\n        KEYDOWN = \"keydown\",\n\n        SPACER = \"spacer\",\n        PRIMARY = \"primary\",\n        ROLE = \"role\",\n        ITEM_REF = \"ref-\",\n        SEPARATOR = \"separator\",\n        OVERFLOW = \"overflow\",\n        TABINDEX = \"tabindex\",\n        INPUT = \"input\",\n        SELECT = \"select\",\n        HIDDEN = \"hidden\",\n        GROUP = \"group\",\n        DATA_UID = \"data-uid\",\n        DATA_PARENTUID = \"data-parentuid\",\n        DATA_ROLE_SELECTOR = \"[data-role]\",\n        DATA_TOGGLE_SELECTOR = \"[data-toggle]\",\n        DATA_ROLE_BUTTONMENU = \"[data-role=buttonmenu]\",\n        ITEM_REF_SELECTOR = \"[ref-toolbar-tool]\",\n        KENDO_FOCUSABLE = \":kendoFocusable:not([class*='pager'])\",\n\n        OVERFLOW_OPEN = \"overflowOpen\",\n        OVERFLOW_CLOSE = \"overflowClose\",\n        OVERFLOW_NEVER = \"never\",\n        OVERFLOW_AUTO = \"auto\",\n        OVERFLOW_ALWAYS = \"always\",\n\n        KENDO_UID_ATTR = kendo.attr(\"uid\"),\n\n        NOTHING = \"\",\n        DASH = \"_\",\n        EMPTY = \" \",\n        DOT = \".\",\n        COMMA = \",\",\n        ID = \"id\",\n        UID = \"uid\",\n        NBSP = \"&nbsp;\",\n\n        K_DROP_DOWN_BUTTON = \"kendoDropDownButton\",\n        K_SPLIT_BUTTON = \"kendoSplitButton\",\n        K_TOGGLE_BUTTON = \"kendoToggleButton\",\n        K_BUTTON_GROUP = \"kendoButtonGroup\";\n\n        kendo.toolbar = {};\n\n    var WIDGET_TYPES = {\n        button: \"Button\",\n        splitButton: \"SplitButton\",\n        dropDownButton: \"DropDownButton\",\n        buttonGroup: \"ButtonGroup\",\n        popupButton: \"Button\",\n        open: \"Button\"\n    };\n\n    var TOOLBAR_TOOLS_CLASSES = {\n        Button: \"k-toolbar-button\",\n        ToggleButton: \"k-toolbar-toggle-button\",\n        SplitButton: \"k-toolbar-split-button\",\n        DropDownButton: \"k-toolbar-menu-button\",\n        ButtonGroup: \"k-toolbar-button-group\",\n        ColorPicker: \"k-toolbar-color-picker\",\n        Switch: \"k-toolbar-switch\"\n    };\n\n    var SAFE_COMPONENTS = [ \"Button\", \"SplitButton\", \"DropDownButton\", \"ButtonGroup\", \"Switch\", \"ColorPicker\" ];\n\n    var POPUP_BUTTON_TEMPLATE = `<button class=\"k-popup-button\"><span class=\"k-button-icon k-icon\"></span><span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`;\n    var TEMPLATE_WRAPPER = \"<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>\";\n    var CUSTOM_WIDGET_WRAP = \"<span class='k-toolbar-item' tabindex='0' ref-toolbar-tool >\";\n    var SEPARATOR_OVERFLOW_EL = \"<li role='separator' class='k-separator k-menu-separator k-hidden'></li>\";\n    var SEPARATOR_EL = '<div role=\"separator\">&nbsp;</div>';\n    var SPACER_EL = '<div>&nbsp;</div>';\n\n    var ToolBar = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            options = this.options;\n\n            this._isRtl = kendo.support.isRtl(element);\n            this.uid = kendo.guid();\n\n            element = this.wrapper = this.element;\n            element.attr(KENDO_UID_ATTR, this.uid);\n            element.addClass(KTOOLBAR);\n            element.attr(ROLE, TOOLBAR);\n\n            if (options.resizable) {\n                this._resizable();\n            }\n\n            if (options.tools && options.tools.length > 0) {\n                options.items = this._extendToolsOptions();\n            }\n\n            if (options.items && options.items.length) {\n                this._items();\n            }\n\n            this._attachEvents();\n            this._tabIndex();\n            this._applyCssClasses();\n\n            if (options.resizable) {\n                this._shrink(this.element.innerWidth());\n                this.overflowAnchor.appendTo(this.wrapper);\n                this._toggleOverflowAnchor();\n            }\n\n            kendo.notify(this);\n        },\n\n        events: [\n            CLICK,\n            TOGGLE,\n            OPEN,\n            CLOSE,\n            OVERFLOW_OPEN,\n            OVERFLOW_CLOSE,\n            CHANGE\n        ],\n\n        options: {\n            name: \"ToolBar\",\n            items: [],\n            resizable: true,\n            navigateOnTab: false,\n            evaluateTemplates: false,\n            size: \"medium\",\n            fillMode: \"solid\"\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.options.resizable) {\n                kendo.unbindResize(that._resizeHandler);\n                that.overflowMenu.destroy();\n            }\n\n            that.element.find(DOT + POPUP_BUTTON).each((i, el) => {\n                var button = $(el).getKendoButton(),\n                    popup, popupWrapper, chooser;\n\n                if (button) {\n                    chooser = button.chooser;\n                    popup = button.popup;\n                    popupWrapper = popup.wrapper;\n\n                    chooser.destroy();\n                    popup.destroy();\n                    popupWrapper.remove();\n                }\n            });\n\n            kendo.destroy(that.element.children());\n\n            Widget.fn.destroy.call(that);\n        },\n\n        add: function(options) {\n            this._add(options);\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        enable: function(candidate, enable) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                component = item.component,\n                buttonPopup, children, focused, wrapper;\n\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            if (item.component) {\n                wrapper = component.wrapper;\n                focused = wrapper.hasClass(KFOCUS) || wrapper.is(\":focus\");\n                component.enable(enable);\n                wrapper.find(\"[disabled]\").removeAttr(\"disabled\");\n                wrapper.removeAttr(\"disabled\");\n\n                if (focused) {\n                    wrapper.addClass(KFOCUS).trigger(FOCUS);\n                }\n            } else if (item.buttonsPopupItem.length > 0) {\n                buttonPopup = kendo.widgetInstance(item.buttonsPopupItem.closest(DOT + MENU_POPUP));\n                buttonPopup.enable(enable, item.buttonsPopupItem);\n            }\n\n            if (this.overflowMenu) {\n                this.overflowMenu.enable(item.menuItem, enable);\n\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    that.overflowMenu.enable($(el), enable);\n                });\n            }\n        },\n\n        getSelectedFromGroup: function(groupName) {\n            return this.element.find(\"[data-group='\" + groupName + \"']\").filter(DOT + STATE_SELECTED);\n        },\n\n        hide: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = that._getItem(candidate, uid),\n                elements, parentButtonGroup, children, parentGroupEl;\n\n            if (!item) {\n                return;\n            }\n\n            elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem).add(item.menuItem);\n\n            elements.addClass(STATE_HIDDEN);\n            elements.addClass(FORCE_HIDDEN);\n\n            if (this.overflowMenu) {\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    $(el).addClass(FORCE_HIDDEN);\n                    $(el).addClass(STATE_HIDDEN);\n                });\n            }\n\n            parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n            parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n            if (parentButtonGroup) {\n                if (parentGroupEl.children(\":not(.k-hidden)\").length === 0) {\n                    that.hide(parentGroupEl);\n                } else {\n                    that._groupVisibleButtons(parentGroupEl);\n                }\n            }\n\n            if (elements.find(\"[tabindex=0]\").addBack(\"[tabindex=0]\").length > 0) {\n                this._resetTabIndex(that._getAllItems().first());\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        remove: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                buttonGroup, children;\n\n            if (!item) {\n                return;\n            }\n\n            if (item.component) {\n                buttonGroup = item.toolbarEl.closest('[data-role=\"buttongroup\"]');\n                if (buttonGroup.length > 0 && item.toolbarEl.siblings().length === 0) {\n                    buttonGroup.data(K_BUTTON_GROUP).destroy();\n                    buttonGroup.remove();\n\n                    item.toolbarEl = $(NOTHING);\n                } else {\n                    item.component.destroy();\n                }\n            }\n\n            if (item.templateEl.length > 0) {\n                item.templateEl.remove();\n            } else if (item.toolbarEl.length > 0) {\n                item.toolbarEl.remove();\n            }\n\n            if (item.buttonsPopupItem.length > 0) {\n                item.buttonsPopupItem.remove();\n            }\n\n            if (this.overflowMenu) {\n                this.overflowMenu.remove(item.menuItem);\n\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    that.overflowMenu.remove($(el));\n                });\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        show: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                elements, parentButtonGroup, children, parentGroupEl;\n\n            if (!item) {\n                return;\n            }\n\n            elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem);\n            elements.removeClass(FORCE_HIDDEN);\n            elements.removeClass(STATE_HIDDEN);\n\n            item.menuItem.removeClass(FORCE_HIDDEN);\n\n            if (this.overflowMenu) {\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    $(el).removeClass(FORCE_HIDDEN);\n                });\n            }\n\n            parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n            parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n            if (parentButtonGroup) {\n                if (parentGroupEl.hasClass(\"k-hidden\") && parentGroupEl.children(\":not(.k-hidden)\").length > 0) {\n                    that.show(parentGroupEl);\n                } else {\n                    that._groupVisibleButtons(parentGroupEl);\n                }\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        toggle: function(candidate, checked) {\n            var item = this._getItem(candidate),\n                element = item.toolbarEl,\n                menuItem = item.menuItem,\n                button, parentGroup, group, groupButtons;\n\n            if (checked === undefined$1) {\n                checked = true;\n            }\n\n            button = element.data(K_TOGGLE_BUTTON);\n\n            if (!item.component && menuItem.find(DOT + MENU_LINK_TOGGLE).length === 0) {\n                return;\n            }\n\n            group = element.data(GROUP);\n\n            if (item.component) {\n                parentGroup = element.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n\n                if (parentGroup) {\n                    if (element.hasClass(STATE_SELECTED) !== checked) {\n                        parentGroup._toggleIndex(element.index());\n                    }\n                }\n\n                button.toggle(checked);\n\n                if (checked) {\n                    groupButtons = this.element.find(\"[data-group=\" + group + \"]\");\n\n                    groupButtons.each((i, el) => {\n                        if (el !== element[0]) {\n                            $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                        }\n                    });\n                }\n            }\n\n            if (menuItem) {\n                menuItem\n                    .attr(ARIA_CHECKED, checked)\n                    .find(DOT + MENU_LINK_TOGGLE)\n                    .toggleClass(STATE_SELECTED, checked);\n\n                if (checked && this.overflowMenu) {\n                    groupButtons = this.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                    groupButtons.each((i, el) => {\n                        if (el !== menuItem[0]) {\n                            $(el)\n                                .attr(ARIA_CHECKED, false)\n                                .find(DOT + MENU_LINK_TOGGLE)\n                                .removeClass(STATE_SELECTED);\n                        }\n                    });\n                }\n            }\n        },\n\n        toggleTools: function(conditions) {\n            var that = this,\n                tools = that.element.find(DATA_TOGGLE_SELECTOR),\n                focusable = that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1);\n\n            tools.each(function(index, elm) {\n                var tool = $(elm),\n                    widget = null,\n                    condition = tool.data(TOGGLE),\n                    toToggle = conditions && conditions[condition];\n\n                if (tool.is(DATA_ROLE_SELECTOR)) {\n                    widget = kendo.widgetInstance(tool);\n                }\n\n                if (widget && widget.enable) {\n                    widget.enable(toToggle || false);\n                } else {\n                    that.enable(tool, toToggle);\n                }\n            });\n\n            that.element.find(DATA_TOGGLE_SELECTOR + \"[disabled]\").removeAttr(\"disabled\");\n\n            that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1).attr(\"tabindex\", -1);\n            focusable.attr(TABINDEX, 0);\n        },\n\n        _add: function(options) {\n            var processed = this._processOptions(options),\n                template = processed.template,\n                overflowTemplate = processed.overflowTemplate,\n                type = WIDGET_TYPES[processed.type],\n                element;\n\n            if (template || overflowTemplate) {\n                element = this._addTemplate(processed);\n            } else if (kendo.ui[processed.component]) {\n                element = this._addCustomWidget(processed);\n            } else if (type) {\n                element = this._addDefaultTool(type, processed);\n            } else if (processed.type === SPACER) {\n                this._addSpacer();\n            } else if (processed.type === SEPARATOR) {\n                this._addSeparator(processed);\n            }\n\n            if (element) {\n                if (this.overflowAnchor) {\n                    element.insertBefore(this.overflowAnchor);\n                } else {\n                    element.appendTo(this.element);\n                }\n\n                element.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                if (element.is(\"[disabled]\")) {\n                    element.removeAttr(\"disabled\");\n                }\n            }\n        },\n\n        _addAttributes: function(options, element) {\n            var attributes = options.attributes,\n                classes = NOTHING;\n\n            if (!attributes) {\n                attributes = {};\n            }\n\n            if (options.hidden) {\n                classes = STATE_HIDDEN + EMPTY + FORCE_HIDDEN;\n            }\n\n            if (options.align) {\n                classes = classes + \" k-align-\" + options.align;\n            }\n\n            if (attributes) {\n                if (attributes.class) {\n                    classes = classes + EMPTY + attributes.class;\n                    delete attributes.class;\n                }\n\n                element.attr(attributes);\n            }\n\n            element.addClass(classes);\n            element.attr(KENDO_UID_ATTR, options.uid);\n\n            if (options.id) {\n                element.attr(ID, options.id);\n            }\n            if (options.overflow === OVERFLOW_NEVER) {\n                element.attr(\"data-overflow\", OVERFLOW_NEVER);\n            }\n\n            if (options.items) {\n                options.items.forEach(item => {\n                    if (item && item.groupClass && !element.hasClass(item.groupClass)) {\n                        element.addClass(item.groupClass);\n                    }\n                });\n            }\n        },\n\n        _addCustomWidget: function(options) {\n            var element = $(options.element || \"<input>\"),\n                widget, result, classes;\n\n            if (options.overflowComponent) {\n                this._addMenuItem(options.overflowComponent.type, $.extend({}, options, options.overflowComponent));\n            }\n\n            if (options.attributes) {\n                classes = options.attributes.class;\n                delete options.attributes[\"class\"];\n                element.attr(options.attributes);\n                delete options.attributes[ARIA_LABEL];\n            }\n\n            if (!options.componentOptions) {\n                options.componentOptions = {};\n            }\n\n            options.componentOptions.size = this.options.size;\n\n            widget = new kendo.ui[options.component](element, options.componentOptions);\n\n            if (SAFE_COMPONENTS.indexOf(options.component) > -1) {\n                widget.wrapper.addClass(TOOLBAR_TOOLS_CLASSES[options.component]).attr(ITEM_REF + TOOLBAR_TOOL, '');\n                result = widget.wrapper;\n            } else {\n                result = (widget.wrapper || widget.element).wrap(CUSTOM_WIDGET_WRAP).parent();\n            }\n\n            if (options.attributes) {\n                options.attributes.class = classes;\n            }\n\n            this._addAttributes(options, result);\n\n            return result;\n        },\n\n        _addDefaultTool: function(component, options) {\n            var element, op;\n\n            if (options.overflow !== OVERFLOW_ALWAYS) {\n                element = this._addToolbarTool(component, $.extend(true, {}, options));\n            }\n\n            if (this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                if (options.overflowComponent) {\n                    op = $.extend(true, {}, options, options.overflowComponent);\n                    delete op[\"data-command\"];\n                    this._addMenuItem(\"Button\", op);\n                } else {\n                    this._addMenuItem(component, $.extend(true, {}, options));\n                }\n            }\n\n            return element;\n        },\n\n        _addMenuItem: function(component, options) {\n            var that = this,\n                selected = options.selected,\n                menuitem;\n\n            delete options.selected;\n\n            if (options.id) {\n                options.id = options.id + DASH + OVERFLOW;\n            }\n            if (options.showIcon === TOOLBAR) {\n                delete options.imageUrl;\n                delete options.icon;\n            }\n\n            if (options.showText === TOOLBAR) {\n                if (!options.attributes) {\n                    options.attributes = {};\n                }\n\n                options.attributes[ARIA_LABEL] = options.text;\n\n                options.text = NOTHING;\n            } else if (options.text === undefined$1 || options.text === NOTHING) {\n                options.text = NBSP;\n                options.encoded = false;\n            }\n\n            that.overflowMenu.append(options);\n            menuitem = that.overflowMenu.element.find(DOT + MENU_ITEM).last();\n\n            if (options.icon) {\n                menuitem.find(DOT + MENU_LINK).prepend(kendo.ui.icon(options.icon));\n            }\n\n            if (component === \"ToggleButton\" || (component === \"Button\" && options.togglable === true)) {\n                menuitem.find(DOT + MENU_LINK).addClass(MENU_LINK_TOGGLE);\n\n                if (selected) {\n                    menuitem.find(DOT + MENU_LINK).addClass(STATE_SELECTED);\n                }\n\n                if (options.group) {\n                    menuitem.attr(\"data-group\", options.group);\n                }\n            } else if (options.menuButtons) {\n                options.menuButtons.forEach((i) => {\n                    i.overflow = options.overflow;\n                    that._addMenuItem(null, i);\n                });\n            } else if (options.buttons) {\n                menuitem.remove();\n                menuitem = null;\n\n                options.buttons.forEach((i) => {\n                    var attributes = i.attributes;\n                    i.overflow = options.overflow;\n                    i.attributes = $.extend(attributes, options.attributes);\n\n                    that._addMenuItem(\"Button\", i);\n                });\n            }\n\n            if (component === \"DropDownButton\") {\n                menuitem.addClass(STATE_DISABLED);\n                menuitem.attr(ARIA_DISABLED, true);\n            }\n\n            if (menuitem) {\n                that._addAttributes(options, menuitem);\n\n                if (options.overflow === OVERFLOW_AUTO) {\n                    menuitem.addClass(STATE_HIDDEN);\n                }\n\n                if (options.click || options.toggle) {\n                    that.overflowMenu.bind(SELECT, (e) => {\n                        if (e.item === menuitem[0]) {\n                            this._onMenuItemSelect(e, options.click, options.toggle);\n                        }\n                    });\n                }\n            }\n\n            return menuitem;\n        },\n\n        _addPopupButton: function(options) {\n            var that = this,\n                widgetElement = $(POPUP_BUTTON_TEMPLATE),\n                component = options.popupComponent,\n                popup, chooser;\n\n            widgetElement.attr(ARIA_LABEL, options.text);\n\n            popup = $(\"<div/>\").appendTo($(\"<body>\")).kendoPopup({\n                anchor: widgetElement\n            }).data(\"kendoPopup\");\n\n            widgetElement.on(CLICK + \" touchend\", (e) => {\n                popup.toggle();\n                e.preventDefault();\n            });\n\n            chooser = new component(popup.element);\n\n            chooser.bind(options.commandOn, (e) => {\n                that.trigger(CHANGE, { target: widgetElement, value: e.value || e });\n                popup.close();\n            });\n\n            return { widgetElement, chooser, popup };\n        },\n\n        _addSeparator: function(options) {\n            var separator = $(SEPARATOR_EL),\n                overflowSeparator = $(SEPARATOR_OVERFLOW_EL);\n\n            separator.addClass(KSEPARATOR);\n            separator.attr(ROLE, SEPARATOR);\n\n            if (this.overflowAnchor) {\n                separator.insertBefore(this.overflowAnchor);\n            } else {\n                separator.appendTo(this.element);\n            }\n\n            this._addAttributes(options, separator);\n\n            if (options.id) {\n                options.id = options.id + DASH + OVERFLOW;\n            }\n\n            this._addAttributes(options, overflowSeparator);\n\n            if (this.overflowMenu) {\n                this.overflowMenu.element.append(overflowSeparator);\n            }\n        },\n\n        _addSpacer: function() {\n            var spacer = $(SPACER_EL);\n            spacer.addClass(SPACER_CLASS);\n\n            if (this.overflowAnchor) {\n                spacer.insertBefore(this.overflowAnchor);\n            } else {\n                spacer.appendTo(this.element);\n            }\n        },\n\n        _addTemplate: function(options) {\n            var template = options.template,\n                overflowTemplate = options.overflowTemplate,\n                element, menuitem, inputsInTemplate = $(NOTHING);\n\n            if (overflowTemplate && this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                overflowTemplate = isFunction(overflowTemplate) ? overflowTemplate(options)[0] : overflowTemplate;\n                this.overflowMenu.append({});\n                menuitem = this.overflowMenu.element\n                    .find(DOT + MENU_ITEM)\n                    .last()\n                    .find(DOT + MENU_LINK)\n                    .html(overflowTemplate)\n                    .parent();\n            }\n\n            if (template && options.overflow !== OVERFLOW_ALWAYS) {\n                if (this.options.evaluateTemplates) {\n                    template = kendo.template(template);\n                }\n\n                template = isFunction(template) ? template(options) : template;\n\n                element = $(TEMPLATE_WRAPPER);\n                element.html(template);\n\n                if (menuitem) {\n                    menuitem.addClass(STATE_HIDDEN);\n                }\n            }\n\n            if (element) {\n                inputsInTemplate = element.find(INPUT + COMMA + SELECT);\n                this._addAttributes(options, element);\n            }\n\n            if (menuitem) {\n                inputsInTemplate.add(menuitem.find(INPUT + COMMA + SELECT));\n                this._addAttributes(options, menuitem);\n            }\n\n            if (!this.options.navigateOnTab && inputsInTemplate.length > 0) {\n                element.attr(TABINDEX, 0);\n                element.attr(ITEM_REF + TOOLBAR_TOOL, '');\n                inputsInTemplate.attr(TABINDEX, -1);\n            }\n\n            return element;\n        },\n\n        _addToolbarTool: function(component, options) {\n            var widgetElement = $(\"<button>\"),\n                hasButtons = false,\n                widget, element, popupRef;\n\n            if (options.primary === true) {\n                options.themeColor = PRIMARY;\n            }\n            if (options.url) {\n                widgetElement = $(\"<a href='\" + options.url + \"'>\");\n            }\n            if (options.showIcon === OVERFLOW) {\n                delete options.imageUrl;\n                delete options.icon;\n            }\n            if (options.showText !== OVERFLOW) {\n                widgetElement.text(options.text);\n            } else {\n                widgetElement.attr(ARIA_LABEL, options.text);\n            }\n\n            if (options.type === \"popupButton\") {\n                popupRef = this._addPopupButton(options);\n                widgetElement = popupRef.widgetElement;\n            } else if (component === \"Button\" && options.togglable === true) {\n                component = \"ToggleButton\";\n            } else if (options.menuButtons) {\n                options.items = options.menuButtons;\n                delete options.menuButtons;\n\n                if (options.attributes && options.attributes.class) {\n                    widgetElement.addClass(options.attributes.class);\n                }\n\n                widgetElement.attr(DATA_UID, options.uid);\n                delete options.uid;\n            } else if (options.buttons) {\n                widgetElement = $(\"<span></span>\");\n                hasButtons = true;\n                options.items = options.buttons;\n                delete options.buttons;\n\n                options.preventKeyNav = true;\n\n                options.items.forEach(i => {\n                    if (i.showIcon === OVERFLOW) {\n                        delete i.imageUrl;\n                        delete i.icon;\n                    }\n\n                    if (i.showText === OVERFLOW) {\n                        if (!i.attributes) {\n                            i.attributes = {};\n                        }\n\n                        i.attributes[ARIA_LABEL] = i.text;\n\n                        delete i.text;\n                    }\n                });\n            }\n\n            if (options.id) {\n                widgetElement.attr(ID, options.id);\n                delete options.id;\n            }\n\n            // Remove the name property. Otherwise the default component name will be overriden.\n            // This will cause us to init an element with data-role=${name} instead of the correct data-role of the component.\n            if (options.name) {\n                delete options.name;\n            }\n\n            options.size = this.options.size;\n\n            widget = new kendo.ui[component]($(widgetElement), options);\n            element = widget.wrapper || widget.element;\n            element.addClass(TOOLBAR_TOOLS_CLASSES[component]);\n            this._addAttributes(options, element);\n\n            if (options.url) {\n                widgetElement.removeAttr(ROLE);\n            }\n\n            if (hasButtons) {\n                element.find(DOT + KBUTTON).attr(ITEM_REF + TOOLBAR_TOOL, '');\n                this._groupVisibleButtons(element);\n            } else {\n                widget.element.attr(ITEM_REF + TOOLBAR_TOOL, '');\n            }\n\n            if (options.type !== \"popupButton\" && options.type !== \"open\") {\n                this._attachWidgetEvents(widget);\n            } else if (options.type === \"open\") {\n                widgetElement.addClass(UPLOAD_BUTTON);\n                this._resetOpen(widgetElement, options.extensions);\n                element = widgetElement.parent();\n            } else {\n                widget.chooser = popupRef.chooser;\n                widget.popup = popupRef.popup;\n            }\n\n            return element;\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.element.on(KEYDOWN + ns, that._keydown.bind(that))\n                .on(FOCUSIN + ns, that._focusIn.bind(that))\n                .on(FOCUSOUT + ns, that._focusOut.bind(that));\n        },\n\n        _attachWidgetEvents: function(widget) {\n            var that = this;\n\n            widget.bind(CLICK, that._onClick.bind(that));\n            widget.bind(TOGGLE, that._onToggle.bind(that));\n            widget.bind(SELECT, that._onSelect.bind(that));\n            widget.bind(OPEN, that._onOpen.bind(that));\n            widget.bind(CLOSE, that._onClose.bind(that));\n\n            widget.wrapper.find(DOT + KBUTTON).each((i, el) => {\n                var $el = $(el);\n\n                if ($el.data(\"kendoButton\")) {\n                    $el.data(\"kendoButton\").bind(CLICK, (e) => {\n                        that.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                    });\n                }\n            });\n        },\n\n        _childrenWidth: function() {\n            var gap = parseInt(this.element.css('gap'), 10) || 0;\n            var childrenWidth = gap;\n\n            this.element.children(\":visible:not(\" + DOT + SPACER_CLASS + \")\").each(function() {\n                childrenWidth += outerWidth($(this), false) + gap;\n            });\n\n            return Math.ceil(childrenWidth);\n        },\n\n        _extendToolsOptions: function() {\n            var options = this.options,\n                items = options.tools.flatMap((tool) => this._mapTool(tool, options.parentMessages, options.defaultTools));\n\n            this.options.items = items;\n\n            return items;\n        },\n\n        _focusIn: function(e) {\n            var target = $(e.target),\n                button = target.closest(DOT + KBUTTON);\n\n            if (button.length > 0) {\n                this._resetTabIndex(button);\n                button.addClass(KFOCUS);\n            }\n        },\n\n        _focusOut: function(e) {\n            this.wrapper.find(DOT + KBUTTON + DOT + KFOCUS).removeClass(KFOCUS);\n        },\n\n        _getAllItems: function() {\n            return this.wrapper.find(ITEM_REF_SELECTOR)\n                .filter(\":visible\")\n                .filter((i, el) => {\n                    if (el.style.visibility === HIDDEN) {\n                        return false;\n                    }\n\n                    return true;\n                });\n        },\n\n        _getItem: function(candidate, knownUid) {\n            var uid = knownUid || this._getUid(candidate),\n                buttonsPopups = $(DATA_ROLE_BUTTONMENU),\n                uidSelector, toolbarEl;\n\n            if (!uid) {\n                return {\n                    toolbarEl: this.element.find(candidate),\n                    templateEl: $(NOTHING),\n                    menuItem: this.overflowMenu ? this.overflowMenu.element.find(candidate) : $(NOTHING),\n                    buttonsPopupItem: $(NOTHING)\n                };\n            }\n\n            uidSelector = \"[data-uid=\" + uid + \"]\";\n            toolbarEl = this.element.find(uidSelector);\n\n            return {\n                toolbarEl: toolbarEl,\n                templateEl: toolbarEl.closest(DOT + TEMPLATE_ITEM + COMMA + DOT + SPLIT_BUTTON),\n                component: kendo.widgetInstance(toolbarEl),\n                menuItem: this.overflowMenu ? this.overflowMenu.element.find(uidSelector) : $(NOTHING),\n                buttonsPopupItem: buttonsPopups.find(uidSelector)\n            };\n        },\n\n        _getNextElement: function(item, direction) {\n            var items = this._getAllItems(),\n                itemIndex = items.index(item) === -1 ? items.index(item.parentElement) : items.index(item),\n                focusableItem = items[itemIndex + direction];\n\n            if (!focusableItem) {\n                if (direction === -1) {\n                    focusableItem = items.last();\n                } else {\n                    focusableItem = items.first();\n                }\n            }\n\n            return focusableItem;\n        },\n\n        _getUid: function(candidate) {\n            var element;\n\n            // find toolbar item by jQuery selector\n            element = this.element.find(candidate);\n\n            // if not found find in in the DropDown-/SplitButton popups\n            if (!element.length) {\n                element = $(DATA_ROLE_BUTTONMENU).find(candidate);\n            }\n\n            // if not, find it in the OverflowMenu\n            if (!element.length && this.overflowMenu) {\n                element = this.overflowMenu.element.find(candidate);\n            }\n\n            if (!element.length) {\n                return null;\n            } else {\n                return element.data(UID) || element.closest(ITEM_REF_SELECTOR).data(UID);\n            }\n        },\n\n        _groupVisibleButtons: function(el) {\n            var buttons = el.children(),\n                visibleBtns;\n\n            buttons.removeClass(GROUP_END).removeClass(GROUP_START);\n            visibleBtns = buttons.filter(\":not('.\" + STATE_HIDDEN + \"')\");\n            visibleBtns.first().addClass(GROUP_START);\n            visibleBtns.last().addClass(GROUP_END);\n        },\n\n        _hideItem: function(item) {\n            var that = this,\n                widget;\n\n            item.addClass(STATE_HIDDEN);\n\n            if (that.overflowMenu) {\n                if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                    if (item.hasClass(SPLIT_BUTTON)) {\n                        item = item.children().eq(0);\n                        widget = item.data(K_SPLIT_BUTTON);\n                    } else {\n                        widget = item.data(K_DROP_DOWN_BUTTON);\n                    }\n\n                    widget.menu.list.children().each((i, el) => {\n                        that._showMenuItem($(el));\n                    });\n\n                    that._showMenuItem(item);\n                } else if (item.hasClass(BUTTON_GROUP)) {\n                    item.children().each((i, el) => {\n                        that._showMenuItem($(el));\n                    });\n                } else {\n                    that._showMenuItem(item);\n                }\n            }\n        },\n\n        _hideMenuItem: function(item) {\n            this.overflowMenu.element\n                .find(\">li[data-uid='\" + item.data(UID) + \"']\")\n                .addClass(STATE_HIDDEN);\n        },\n\n        _items: function() {\n            let options = this.options;\n\n            for (var i = 0; i < options.items.length; i++) {\n                this._add(options.items[i]);\n            }\n        },\n\n        _keydown: function(e) {\n            var target = $(e.target),\n                keyCode = e.keyCode,\n                templateItem = target.closest(DOT + TEMPLATE_ITEM),\n                isOverflowAnchor = target.is(DOT + OVERFLOW_ANCHOR);\n\n            if (!this.options.navigateOnTab && !target.is(ITEM_REF_SELECTOR) && keyCode === keys.ESC && templateItem.length > 0) {\n                e.stopPropagation();\n                this._keyDeactivateTemplate(templateItem);\n                return;\n            }\n\n            if (!target.is(ITEM_REF_SELECTOR)) {\n                return;\n            }\n\n            if (!this.options.navigateOnTab && keyCode === keys.ENTER && target.hasClass(TEMPLATE_ITEM)) {\n                this._keyActivateTemplate(target);\n            } else if (isOverflowAnchor && (e.altKey && keyCode === keys.DOWN || keyCode === keys.SPACEBAR)) {\n                this._keyOpenOverflow(e, keyCode);\n            } else if (keyCode === keys.HOME) {\n                this._keyFocusFirst(target, e);\n            } else if (keyCode === keys.END) {\n                this._keyFocusLast(target, e);\n            } else if (!this.options.navigateOnTab && (keyCode === keys.RIGHT || keyCode === keys.LEFT)) {\n                this._keyFocusNext(keyCode, e);\n            }\n        },\n\n        _keyActivateTemplate: function(target) {\n            var innerFocusable = target.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST);\n            const pagerTool = target.find('.k-pager');\n\n            if (pagerTool.length > 0) {\n                pagerTool.trigger(FOCUS);\n            } else if (innerFocusable.length > 0) {\n                target.attr(TABINDEX, -1);\n\n                innerFocusable.attr(TABINDEX, 0);\n                innerFocusable.first().trigger(FOCUS);\n            }\n        },\n\n        _keyDeactivateTemplate: function(templateItem) {\n            var innerWidget = templateItem.find(DATA_ROLE_SELECTOR),\n                innerFocusable = templateItem.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST),\n                widgetInstance;\n\n            if (innerWidget.length > 0) {\n                widgetInstance = kendo.widgetInstance(innerWidget);\n\n                if (widgetInstance) {\n                    if (widgetInstance.overflowMenu && widgetInstance.overflowMenu.visible()) {\n                        return;\n                    } else {\n                        templateItem.attr(TABINDEX, 0);\n                        templateItem.trigger(FOCUS);\n                        templateItem.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    }\n                }\n            }\n\n            if (innerFocusable.length > 0) {\n                templateItem.attr(TABINDEX, 0);\n                templateItem.trigger(FOCUS);\n                innerFocusable.attr(TABINDEX, -1);\n            }\n        },\n\n        _keyFocusFirst: function(target, e) {\n            var items = this._getAllItems();\n\n            if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                return;\n            }\n\n            this._resetTabIndex(items.first());\n            items.first().trigger(FOCUS);\n            e.preventDefault();\n        },\n\n        _keyFocusLast: function(target, e) {\n            var items = this._getAllItems(),\n                last;\n\n            if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                return;\n            }\n\n            last = items.last();\n\n            if (last.width() === 0) {\n                last = items.eq(items.length - 2);\n            }\n\n            this._resetTabIndex(last);\n            last.trigger(FOCUS);\n            e.preventDefault();\n        },\n\n        _keyFocusNext: function(keyCode, e) {\n            var direction = this._isRtl ? -1 : 1,\n                next;\n\n            if (keyCode === keys.LEFT) {\n                direction = -1 * direction;\n            }\n\n            next = $(this._getNextElement(e.target, direction));\n            this._resetTabIndex(next);\n            next.trigger(FOCUS);\n\n            e.preventDefault();\n        },\n\n        _keyOpenOverflow: function(e, keyCode) {\n            if (keyCode === keys.SPACEBAR) {\n                e.preventDefault();\n            }\n\n            this.overflowMenu.open();\n        },\n\n        _mapAttributes: function(toolOptions, messages) {\n            return {\n                \"aria-label\": messages[toolOptions.name || toolOptions.property],\n                \"title\": messages[toolOptions.name || toolOptions.property],\n                \"data-command\": toolOptions.command,\n                \"data-options\": toolOptions.options,\n                \"data-dialog\": toolOptions.dialog,\n                \"data-property\": toolOptions.property,\n                \"data-value\": toolOptions.value,\n                \"data-toggle\": toolOptions.toggleCondition\n            };\n        },\n\n        _mapComponent: function(component, messages) {\n            var that = this,\n                componentOptions = component.componentOptions,\n                componentMessages = componentOptions.messages,\n                componentPlaceholder = componentOptions.placeholder,\n                attributes = $.extend({}, that._mapAttributes(component, messages), component.attributes),\n                options;\n\n            if (component.overflowComponent) {\n                options = component.options || {};\n\n                if (component.componentOptions.dataSource) {\n                    options.options = component.componentOptions.dataSource;\n                }\n                if (component.componentOptions.value) {\n                    options.default = component.componentOptions.value;\n                }\n\n                if (Object.keys(options).length > 0) {\n                    component.overflowComponent.options = JSON.stringify(options);\n                }\n\n                component.overflowComponent = that._mapTool(component.overflowComponent, messages);\n            }\n\n            if (componentMessages) {\n                Object.keys(componentMessages).forEach((key) => {\n                    component.componentOptions.messages[key] = messages[componentMessages[key]] || componentMessages[key];\n                });\n            }\n\n            if (componentPlaceholder) {\n                component.componentOptions.placeholder = messages[componentPlaceholder] || componentPlaceholder;\n            }\n\n            Object.keys(componentOptions).forEach((key) => {\n                if (key === \"commandOn\") {\n                    component.componentOptions[componentOptions[key]] = (ev) => {\n                        that.trigger(CHANGE, { target: ev.target || ev.sender.element });\n                    };\n                }\n            });\n\n            if (componentOptions.dataSource && componentOptions.dataSource.length) {\n                component.componentOptions.dataSource = componentOptions.dataSource.map(i => {\n                    if (i.name && messages[i.name]) {\n                        i.text = messages[i.name];\n                    }\n\n                    return i;\n                });\n            }\n\n            component.attributes = attributes;\n\n            return component;\n        },\n\n        _mapTool: function(tool, messages, defaultTools) {\n            let that = this,\n                isArray = Array.isArray(tool),\n                isPlainObjectTool = $.isPlainObject(tool),\n                toolKeysCount = isPlainObjectTool && Object.keys(tool).length,\n                isBuiltInTool, toolOptions, attributes, originalTool;\n\n            if (isArray) {\n                return {\n                    type: \"buttonGroup\",\n                    buttons: tool.map(t => that._mapTool(t, messages, defaultTools))\n                };\n            }\n\n            isBuiltInTool = isPlainObjectTool && (toolKeysCount === 1 || toolKeysCount === 2) && tool.name;\n            originalTool = isBuiltInTool ? tool : {};\n            tool = isBuiltInTool ? tool.name : tool;\n            toolOptions = $.isPlainObject(tool) ? tool : $.extend({}, defaultTools[tool]);\n\n            attributes = $.extend({}, that._mapAttributes(toolOptions, messages), toolOptions.attributes);\n\n            kendo.deepExtend(toolOptions, {\n                text: originalTool.text || messages[toolOptions.name || toolOptions.property],\n                attributes: attributes,\n            });\n\n            if (toolOptions.type === \"component\") {\n                if (toolOptions.items) {\n                    return toolOptions.items.map(t => that._mapComponent(t, messages));\n                } else {\n                    return that._mapComponent(toolOptions, messages);\n                }\n            } else if (toolOptions.type === \"buttonGroup\") {\n                delete toolOptions.attributes[ARIA_LABEL];\n                toolOptions.buttons = toolOptions.buttons.map(t => that._mapTool(t, messages, defaultTools));\n            } else if (toolOptions.type === \"splitButton\") {\n                delete toolOptions.attributes[ARIA_LABEL];\n                toolOptions.menuButtons = toolOptions.menuButtons.flatMap(t => that._mapTool(t, messages, defaultTools));\n            } else if (toolOptions.type === \"popupButton\" && toolOptions.overflowComponent) {\n                toolOptions.overflowComponent = that._mapTool(toolOptions.overflowComponent, messages);\n            }\n\n            delete toolOptions.name;\n\n            return toolOptions;\n        },\n\n        _menuItemSelect: function(e) {\n            var item = $(e.item),\n                id = item.attr(ID),\n                togglable = item.find(DOT + MENU_LINK_TOGGLE),\n                groupName = item.data(GROUP),\n                shouldSelect, twin, group;\n\n            if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                id = id.replace(DASH + OVERFLOW, NOTHING);\n            }\n\n            if (togglable.length) {\n                if (groupName) {\n                    this.overflowMenu.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                        var current = $(el);\n\n                        current.attr(ARIA_CHECKED, false);\n                        current.find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                    });\n                }\n\n                shouldSelect = groupName ? true : !togglable.hasClass(STATE_SELECTED);\n\n                togglable.toggleClass(STATE_SELECTED, shouldSelect);\n                item.attr(ARIA_CHECKED, shouldSelect);\n\n                twin = this.element.find(\"[data-uid=\" + item.data(UID) + \"]\");\n\n                if (twin.length) {\n                    if (twin.closest(DOT + BUTTON_GROUP).length) {\n                        group = twin.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n                        group.select(twin);\n                    } else {\n                        if (groupName) {\n                            this.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                                $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                            });\n                        }\n\n                        twin.data(K_TOGGLE_BUTTON).toggle(true);\n                    }\n                }\n\n                this.trigger(TOGGLE, {\n                    id: item.attr(ID),\n                    target: item,\n                    checked: shouldSelect\n                });\n            } else {\n                this.trigger(CLICK, {\n                    id: id,\n                    target: item,\n                });\n            }\n        },\n\n        _onClick: function(e) {\n            var el = e.target,\n                togglable = el.hasClass(\"k-toolbar-toggle-button\"),\n                group = el.data(GROUP);\n\n            if (!togglable) {\n                this.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n            }\n\n            if (group && this.element.find(\"[data-group=\" + group + \"]\").length > 1) {\n                if (el.hasClass(STATE_SELECTED)) {\n                    e.preventDefault();\n                }\n            }\n        },\n\n        _onClose: function(e) {\n            if (this.trigger(CLOSE, { widget: e.sender })) {\n                e.preventDefault();\n            }\n        },\n\n        _onMenuItemSelect: function(e, click, toggle) {\n            var item = $(e.item),\n                togglable = item.find(DOT + MENU_LINK_TOGGLE).length > 0,\n                id = item.attr(ID);\n\n            if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                id = id.replace(DASH + OVERFLOW, NOTHING);\n            }\n\n            if (click) {\n                click.bind(this)({\n                    event: e.event,\n                    id: id,\n                    target: item\n                });\n            }\n\n            if (togglable && toggle) {\n                setTimeout(() => {\n                    toggle.bind(this)({\n                        event: e.event,\n                        id: id,\n                        target: item,\n                        checked: item.find(DOT + STATE_SELECTED).length > 0\n                    });\n                });\n            }\n        },\n\n        _onOpen: function(e) {\n            if (this.trigger(OPEN, { widget: e.sender })) {\n                e.preventDefault();\n            }\n        },\n\n        _onSelect: function(e) {\n            var menuEl = this.overflowMenu ? this.overflowMenu.element : $(NOTHING);\n\n            e.sender.element.children().each((i, el) => {\n                var current = $(el),\n                    uid = current.data(UID),\n                    selected = current.hasClass(STATE_SELECTED);\n\n                menuEl\n                    .find(\"[data-uid=\" + uid + \"]\")\n                    .attr(ARIA_CHECKED, selected)\n                    .find(DOT + MENU_LINK_TOGGLE)\n                    .toggleClass(STATE_SELECTED, selected);\n            });\n\n            this.trigger(TOGGLE, {\n                id: e.target.attr(ID),\n                target: e.target,\n                checked: e.target.hasClass(STATE_SELECTED)\n            });\n        },\n\n        _onToggle: function(e) {\n            var that = this,\n                el = e.target,\n                group = el.data(GROUP),\n                overflowItem,\n                overflowGroup;\n\n            if (that.overflowMenu) {\n                overflowItem = that.overflowMenu.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                overflowGroup = that.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                overflowGroup.attr(ARIA_CHECKED, false).find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                overflowItem.attr(ARIA_CHECKED, true).find(DOT + MENU_LINK_TOGGLE).addClass(STATE_SELECTED);\n            }\n\n            if (group) {\n                that.element.find(\"[data-group=\" + group + \"]\").each((i, item) => {\n                    if (item !== el[0]) {\n                        $(item).data(K_TOGGLE_BUTTON).toggle(false);\n                    }\n                });\n            }\n\n            this.trigger(TOGGLE, { id: e.id, target: e.target, checked: e.checked, originalEvent: e.originalEvent || e.event });\n        },\n\n        _processInner(items, parentUid) {\n            var attributes, current;\n\n            for (var i = 0; i < items.length; i++) {\n                current = items[i];\n                attributes = current.attributes;\n\n                if (!attributes) {\n                    items[i].attributes = {};\n                }\n\n                items[i].attributes[DATA_UID] = kendo.guid();\n                items[i].attributes[DATA_PARENTUID] = parentUid;\n\n                if (current.id) {\n                    items[i].attributes[ID] = items[i].id;\n                }\n\n                if (current.hidden) {\n                    if (!items[i].attributes.class) {\n                        items[i].attributes.class = NOTHING;\n                    }\n\n                    items[i].attributes.class += (EMPTY + STATE_HIDDEN + EMPTY + FORCE_HIDDEN);\n                }\n            }\n\n            return items;\n        },\n\n        _processOptions: function(options) {\n            let that = this,\n                template = options.template,\n                overflowTemplate = options.overflowTemplate,\n                uid = kendo.guid(),\n                groupName;\n\n            $.extend(options, {\n                uid: uid,\n                fillMode: options.fillMode ? options.fillMode : that.options.fillMode,\n                rootUid: this.uid\n            });\n\n            if (options.menuButtons) {\n                options.menuButtons = this._processInner(options.menuButtons, uid);\n            } else if (options.buttons && options.buttons.length) {\n                options.buttons = this._processInner(options.buttons, uid);\n\n                if (options.buttons.some(b => b.togglable)) {\n                    groupName = options.buttons[0].group;\n\n                    if (!!groupName && options.buttons.every(b => b.group === groupName)) {\n                        options.selection = SINGLE;\n                    } else {\n                        options.selection = MULTIPLE;\n                    }\n                } else {\n                    options.selection = NONE;\n                }\n            }\n\n            if ((template && !overflowTemplate) || options.type === SPACER) {\n                options.overflow = OVERFLOW_NEVER;\n            } else if (!options.overflow) {\n                options.overflow = OVERFLOW_AUTO;\n            }\n\n            if (options.enable !== undefined$1) {\n                options.enabled = options.enable;\n            }\n\n            return options;\n        },\n\n        _renderOverflow: function() {\n            var that = this,\n                isRtl = that._isRtl,\n                horizontalDirection = isRtl ? \"left\" : \"right\";\n\n            that.overflowAnchor = $(\"<button class='k-toolbar-overflow-button' title='More tools'>\");\n            that.overflowAnchor.attr(ITEM_REF + TOOLBAR_TOOL, '');\n            that.element.append(that.overflowAnchor);\n            that.overflowAnchor.kendoButton({\n                icon: \"more-vertical\",\n                fillMode: \"flat\",\n                size: that.options.size\n            });\n\n            if (!that.options.navigateOnTab) {\n                that.overflowAnchor.attr(TABINDEX, -1);\n            }\n\n            that.overflowMenu = new kendo.ui.ContextMenu($(\"<ul>\"), {\n                size: that.options.size,\n                showOn: \"click tap\",\n                origin: \"bottom \" + horizontalDirection,\n                position: \"top \" + horizontalDirection,\n                alignToAnchor: true,\n                target: that.overflowAnchor,\n                open: function(e) {\n                    if (that.trigger(OVERFLOW_OPEN)) {\n                        e.preventDefault();\n                    }\n                },\n                close: function(e) {\n                    if (that.trigger(OVERFLOW_CLOSE)) {\n                        e.preventDefault();\n                    } else {\n                        that._resetTabIndex(that.overflowAnchor);\n                        that.overflowAnchor.trigger(FOCUS);\n                    }\n                }\n            });\n\n            that.overflowMenu.element.attr(KENDO_UID_ATTR, this.uid);\n\n            setTimeout(() => {\n                that.overflowMenu.bind(SELECT, that._menuItemSelect.bind(that));\n            });\n        },\n\n        _resetOpen: function(element, extensions) {\n            var that = this,\n                uploadWrapper,\n                input;\n\n            element.closest(\".k-upload-button-wrap\").find(\"input\").remove();\n            uploadWrapper = element.wrap(\"<div class='k-upload-button-wrap'></span>\").parent();\n\n            input = $(\"<input type='file' autocomplete='off' accept='\" + extensions + \"'/>\")\n                .attr(\"aria-hidden\", true)\n                .one(\"change\", (e) => {\n                    that.trigger(CHANGE, {\n                        target: element,\n                        value: e.target.files[0]\n                    });\n\n                    that._resetOpen(element, extensions);\n                })\n                .appendTo(uploadWrapper);\n\n            element.off(KEYDOWN).on(KEYDOWN, (e) => {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    input.trigger(CLICK);\n                }\n            });\n        },\n\n        _resetTabIndex: function(toFocus) {\n            if (this.options.navigateOnTab !== true) {\n                this.wrapper.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                toFocus.attr(TABINDEX, 0);\n            }\n        },\n\n        _resizable: function() {\n            var that = this,\n                element = that.element;\n\n            that._renderOverflow();\n            element.addClass(RESIZABLE_TOOLBAR);\n\n            that._resizeHandler = kendo.onResize(function() {\n                that.resize();\n            });\n        },\n\n        _resize: function(e) {\n            var containerWidth = e.width,\n                wrapper = this.element,\n                popupBtnElements = wrapper.find('[data-role=\"splitbutton\"]').add(wrapper.find('[data-role=\"dropdownbutton\"]'));\n\n            if (!this.options.resizable) {\n                return;\n            }\n\n            this.overflowMenu.close();\n\n            if (popupBtnElements.length > 0) {\n                popupBtnElements.each((i, el) => {\n                    kendo.widgetInstance($(el)).close();\n                });\n            }\n\n            this._shrink(containerWidth);\n            this._stretch(containerWidth);\n            this._toggleOverflowAnchor();\n        },\n\n        _shrink: function(containerWidth) {\n            var commandElement,\n                visibleCommands,\n                activeElement;\n\n            if (containerWidth < this._childrenWidth()) {\n                visibleCommands = this.element.children(\":visible:not([data-overflow='never'], .\" + OVERFLOW_ANCHOR + \")\");\n\n                for (var i = visibleCommands.length - 1; i >= 0; i--) {\n                    commandElement = visibleCommands.eq(i);\n\n                    if (containerWidth > this._childrenWidth()) {\n                        break;\n                    } else {\n                        activeElement = commandElement.find(\"[tabindex=0]\") || commandElement.is(\"[tabindex=0]\") ? commandElement : $(NOTHING);\n\n                        if (activeElement.length > 0) {\n                            activeElement.attr(TABINDEX, -1);\n                            this.element.children(DOT + OVERFLOW_ANCHOR).attr(TABINDEX, 0);\n                        }\n\n                        this._hideItem(commandElement);\n                    }\n                }\n            }\n        },\n\n        _showItem: function(item, containerWidth) {\n            var that = this,\n                gap = parseInt(this.element.css('gap'), 10) || 0,\n                widget;\n\n            item.removeClass(STATE_HIDDEN);\n            var itemOuterWidth = outerWidth(item, true) + gap;\n            item.addClass(STATE_HIDDEN);\n\n            if (item.length && (item.hasClass(SPACER_CLASS) || containerWidth > this._childrenWidth() + itemOuterWidth)) {\n                item.removeClass(STATE_HIDDEN);\n\n                if (this.options.navigateOnTab !== true) {\n                    item.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                } else {\n                    if (item.is(\"[tabindex=-1]\")) {\n                        item.removeAttr(TABINDEX);\n                    }\n                }\n\n                if (this.overflowMenu) {\n                    if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                        if (item.hasClass(SPLIT_BUTTON)) {\n                            item = item.children().eq(0);\n                            widget = item.data(K_SPLIT_BUTTON);\n                        } else {\n                            widget = item.data(K_DROP_DOWN_BUTTON);\n                        }\n\n                        widget.menu.list.children().each((i, el) => {\n                            that._hideMenuItem($(el));\n                        });\n\n                        that._hideMenuItem(item);\n                    } else if (item.hasClass(BUTTON_GROUP)) {\n                        item.children().each((i, el) => {\n                            that._hideMenuItem($(el));\n                        });\n                    } else {\n                        that._hideMenuItem(item);\n                    }\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        _showMenuItem: function(item) {\n            var menuItem = this.overflowMenu.element.find(\">li[data-uid='\" + item.data(UID) + \"']\");\n\n            if (!menuItem.hasClass(FORCE_HIDDEN)) {\n                menuItem.removeClass(STATE_HIDDEN);\n            }\n        },\n\n        _stretch: function(containerWidth) {\n            var overflowAnchor = this.element.children(DOT + OVERFLOW_ANCHOR),\n                commandElement,\n                hiddenCommands;\n\n            if (containerWidth > this._childrenWidth()) {\n                hiddenCommands = this.element.children(DOT + STATE_HIDDEN + \":not(\" + DOT + FORCE_HIDDEN + \")\");\n\n                for (var i = 0; i < hiddenCommands.length; i++) {\n                    commandElement = hiddenCommands.eq(i);\n\n                    if (containerWidth < this._childrenWidth() || !this._showItem(commandElement, containerWidth)) {\n                        break;\n                    }\n                }\n            }\n\n            if (!this.options.navigateOnTab && overflowAnchor.is(\"[tabindex=0]\")) {\n                overflowAnchor.attr(TABINDEX, -1);\n                this._resetTabIndex(this._getAllItems().first());\n            }\n        },\n\n        _tabIndex: function() {\n            var focusableItems = this.wrapper.find(KENDO_FOCUSABLE + \":not('\" + TABINDEX_MINUS_1 + \"')\"),\n                firstFocusable = focusableItems.first();\n\n            if (this.options.navigateOnTab !== true) {\n                focusableItems.attr(TABINDEX, -1);\n                firstFocusable.attr(TABINDEX, 0);\n            } else {\n                this.wrapper.find(\".k-toolbar-item\").removeAttr(TABINDEX);\n            }\n        },\n\n        _toggleOverflowAnchor: function() {\n            var hasVisibleChildren = false;\n\n            hasVisibleChildren = this.overflowMenu.element.children(\":not(.\" + STATE_HIDDEN + \", .\" + POPUP + \")\").length > 0;\n\n            if (hasVisibleChildren) {\n                this.overflowAnchor.removeClass(STATE_HIDDEN);\n            } else {\n                this.overflowAnchor.addClass(STATE_HIDDEN);\n            }\n        }\n    });\n\n    kendo.toolbar = {\n        Item: kendo.Class,\n        OverflowButton: kendo.Class,\n        TemplateItem: kendo.Class,\n        ToolBarButton: kendo.Class,\n        registerComponent: () => null\n    };\n\n    kendo.cssProperties.registerPrefix(\"ToolBar\", \"k-toolbar-\");\n\n    kendo.cssProperties.registerValues(\"ToolBar\", [{\n        prop: \"fillMode\",\n        values: ['solid', 'flat']\n    }]);\n\n    kendo.ui.plugin(ToolBar);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}