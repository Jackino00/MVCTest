{"version":3,"sources":["raw-mjs/kendo.circularprogressbar.js"],"names":["Arc","limitValue","Group","Animation","Circle","Circle$1","Arc$1","Surface","interpolateValue","round","__meta__","id","name","category","description","depends","$","window","kendo","dataviz","ui","Widget","Arc$2","limitValue$1","DrawingGroup","PointerAnimation","constructor","super","arguments","animationOptions","this","options","color","endColor","startColor","duration","Math","abs","newAngle","oldAngle","Color","step","pos","that","angle","element","geometry","setEndAngle","r","g","b","stroke","toHex","CircularProgressBar","extend","init","userOptions","fn","call","theme","themes","themeName","lowerName","toLowerCase","SASS_THEMES","indexOf","autoTheme","gauge","themeOptions","_value","value","addClass","redraw","_centerTemplate","_aria","ariaRole","centerTemplate","colors","transitions","pointerWidth","indeterminate","label","labelId","events","_restrictValue","_centerSvgElements","_pointerChange","_updateProgress","_initSurface","_buildVisual","_draw","resize","destroy","announce","remove","wrapper","attr","role","appendTo","text","center","_getCenter","circle","_geometry","x","y","arc","geometryChange","position","template","centerElement","_getCenterElement","html","_getColor","_centerTemplatePosition","width","height","css","_centerElement","append","oldValue","newValue","animation","_slotAngle","play","surface","clear","draw","_visuals","find","innerHTML","format","visuals","pointer","radius","min","circleGeometry","fill","scale","rangePlaceholderColor","_createArc","currentValue","isNumber","idx","length","range","rangeColor","from","to","endAngle","rangeRadius","rangeSize","rangeGeom","radiusX","radiusY","startAngle","opacity","right","bottom","size","_getSize","left","top","max","Point","defaultSize","offsetWidth","offsetHeight","_surfaceElement","surfaceElement","document","createElement","appendChild","elementSize","create","type","renderAs","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.circularprogressbar.js","sourcesContent":["import './kendo.dataviz.themes.js';\nimport { y as Arc, Y as limitValue, G as Group, c as Animation, j as Circle, i as Circle$1, A as Arc$1, w as Surface } from './kendo.drawing.cmn.chunk.js';\nimport { i as interpolateValue, r as round } from './kendo.charts.cmn.chunk.js';\n\nconst __meta__ = {\n    id: \"circularprogressBar\",\n    name: \"CircularProgressBar\",\n    category: \"web\",\n    description: \"The Circular ProgressBar component represents an SVG loader\",\n    depends: [\"core\", \"dataviz.themes\", \"drawing.cmn.chunk\", \"charts.cmn.chunk\"]\n};\n\n(function($, undefined$1) {\n\n    window.kendo.dataviz = window.kendo.dataviz || {};\n    var dataviz = kendo.dataviz;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var Arc$2 = Arc;\n    var limitValue$1 = limitValue;\n    var DrawingGroup = Group;\n    var DEFAULT_HEIGHT = 200;\n    var GEO_ARC_ADJUST_ANGLE = 180;\n    var MINVALUE = 0;\n    var MAXVALUE = 100;\n    var DEFAULT_MARGIN = 5;\n    var ANGULAR_SPEED = 150;\n    var DEFAULT_WIDTH = 200;\n    var MAX_DURATION = 800;\n    var announceElement = '<span aria-live=\"polite\" class=\"k-sr-only k-progress-announce\"></span>';\n\n    class PointerAnimation extends Animation {\n        constructor() {\n            super(...arguments);\n            var animationOptions = this.options;\n            var color = this.options.endColor;\n            var startColor = this.options.startColor;\n            var duration = (Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000;\n            animationOptions.duration = limitValue$1(duration, ANGULAR_SPEED, MAX_DURATION);\n\n            if (startColor !== color) {\n                this.startColor = new kendo.Color(startColor);\n                this.color = new kendo.Color(color);\n            }\n        }\n\n        step(pos) {\n            var that = this;\n            var options = that.options;\n            var startColor = that.startColor;\n            var color = that.color;\n            var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n\n            this.element.geometry().setEndAngle(angle);\n\n            if (color) {\n                var r = round(interpolateValue(startColor.r, color.r, pos));\n                var g = round(interpolateValue(startColor.g, color.g, pos));\n                var b = round(interpolateValue(startColor.b, color.b, pos));\n\n                this.element.stroke(new kendo.Color(r, g, b).toHex());\n            }\n        }\n    }\n\n    var CircularProgressBar = Widget.extend({\n        init: function(element, userOptions) {\n\n            var that = this;\n            Widget.fn.init.call(that, element, userOptions);\n            this.theme = themeOptions(this.options);\n            this._value = this.options.value;\n            this.element.addClass(\"k-gauge\");\n\n            this.redraw();\n            this._centerTemplate();\n            this._aria();\n        },\n\n        options: {\n            name: \"CircularProgressBar\",\n            ariaRole: false,\n            theme: \"sass\",\n            centerTemplate: '',\n            color: \"\",\n            colors: [],\n            transitions: true,\n            pointerWidth: 5,\n            indeterminate: false,\n            label: null,\n            labelId: null\n        },\n\n        events: [ ],\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._restrictValue(value);\n\n            that._centerSvgElements();\n            that._pointerChange(that._value, value);\n            that._value = value;\n            that._centerTemplate();\n            that._updateProgress();\n        },\n\n        redraw: function() {\n            this._initSurface();\n            this._buildVisual();\n            this._draw();\n        },\n\n        resize: function() {\n            var transitions = this.options.transitions;\n\n            this.options.transitions = false;\n            this._initSurface();\n            this._buildVisual();\n            this._draw();\n            this._centerTemplate();\n            this.options.transitions = transitions;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.announce) {\n                that.announce.remove();\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        _aria: function() {\n            var that = this,\n                options = that.options,\n                value = that.value() || 0,\n                wrapper = that.element;\n\n            if (!options.ariaRole) {\n                return;\n            }\n\n            wrapper.attr({\n                \"role\": \"progressbar\"\n            });\n\n            if (!options.indeterminate) {\n                wrapper.attr({\n                    \"aria-valuemin\": 0,\n                    \"aria-valuemax\": 100\n                });\n            }\n\n            if (!!options.labelId) {\n                wrapper.attr(\"aria-labelledby\", options.labelId);\n            } else if (!!options.label) {\n                wrapper.attr(\"aria-label\", options.label);\n            }\n\n            that.announce = $(announceElement);\n            that.announce.appendTo($(\"body\"));\n\n            if (!options.indeterminate) {\n                wrapper.attr(\"aria-valuenow\", value);\n\n                that.announce.text(value + \"%\");\n            } else {\n                that.announce.text(\"Loading...\");\n            }\n        },\n\n        _restrictValue: function(value) {\n\n            if (value < MINVALUE) {\n                return MINVALUE;\n            }\n\n            if (value > MAXVALUE) {\n                return MAXVALUE;\n            }\n\n            return value;\n        },\n\n        _updateProgress: function() {\n            var that = this;\n            var options = that.options;\n            var value = that.value() || 0;\n\n            if (options.ariaRole && !options.indeterminate) {\n                that.element.attr(\"aria-valuenow\", value);\n\n                if (that.announce) {\n                    that.announce.text(value + \"%\");\n                }\n            }\n        },\n\n        _centerSvgElements: function() {\n            var center = this._getCenter();\n\n            if (this.circle._geometry.center.x !== center.x ||\n                this.circle._geometry.center.y !== center.y) {\n\n                    this.circle._geometry.center.x = center.x;\n                    this.circle._geometry.center.y = center.y;\n                    this.arc._geometry.center.x = center.x;\n                    this.arc._geometry.center.y = center.y;\n                    this.circle.geometryChange();\n                    this.arc.geometryChange();\n            }\n        },\n\n        _centerTemplate: function() {\n            var position;\n            var template;\n            var centerElement;\n\n            if (this.options.centerTemplate) {\n                template = kendo.template(this.options.centerTemplate);\n\n                centerElement = this._getCenterElement();\n\n                centerElement.html(template({ color: this._getColor(this.value()), value: this.value() }));\n\n                position = this._centerTemplatePosition(centerElement.width(), centerElement.height());\n\n                centerElement.css(position);\n            } else if (this._centerElement) {\n                this._centerElement.remove();\n                this._centerElement = null;\n            }\n        },\n\n        _getCenterElement: function() {\n            var centerElement = this._centerElement;\n            if (!centerElement) {\n                centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                this.element.append(centerElement);\n            }\n\n            return centerElement;\n        },\n\n        _pointerChange: function(oldValue, newValue) {\n            let animation;\n\n            if (this.options.transitions) {\n                animation = new PointerAnimation(this.arc, {\n                    oldAngle: this._slotAngle(oldValue),\n                    startColor: this._getColor(oldValue),\n                    newAngle: this._slotAngle(newValue),\n                    endColor: this._getColor(newValue)\n                });\n                animation.play();\n            } else {\n                this.arc.stroke(this._getColor(newValue));\n                this.arc.geometry().setEndAngle(this._slotAngle(newValue));\n            }\n        },\n\n        _draw: function() {\n            let arc;\n            let center;\n            let animation;\n            let surface = this.surface;\n\n            surface.clear();\n            surface.draw(this._visuals);\n\n            if (this.options.indeterminate) {\n                arc = $(surface.element).find(\"path\");\n                center = this._getCenter();\n                arc[0].innerHTML = kendo.format('<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 {0} {1}\" to=\"360 {0} {1}\" dur=\"1s\" repeatCount=\"indefinite\" />', center.x, center.y);\n            } else if (this.options.transitions) {\n                animation = new PointerAnimation(this.arc, {\n                    oldAngle: this._slotAngle(0),\n                    startColor: this._getColor(0),\n                    newAngle: this._slotAngle(this.value()),\n                    endColor: this._getColor(this.value()),\n                });\n                animation.play();\n            }\n        },\n\n\n        _buildVisual: function() {\n            var visuals = this._visuals = new DrawingGroup();\n            var center = this._getCenter();\n            var color = this._getColor(this.value()) || this.theme.pointer.color;\n            var radius = Math.min(center.x, center.y) - DEFAULT_MARGIN - this.options.pointerWidth;\n\n            var circleGeometry = new Circle([center.x, center.y], radius + (this.options.pointerWidth / 2));\n            var circle = this.circle = new Circle$1(circleGeometry, {\n                fill: { color: \"none\" },\n                stroke: { color: this.theme.scale.rangePlaceholderColor, width: this.options.pointerWidth }\n            });\n\n            visuals.append(circle);\n\n            if (this.options.indeterminate) {\n                this.arc = this._createArc(360, radius, center, color);\n            } else {\n                this.arc = this._createArc(this._slotAngle(this.value()), radius, center, color);\n            }\n\n            visuals.append(this.arc);\n        },\n\n        _slotAngle: function(value) {\n            var result;\n\n            result = ((value - MINVALUE) / (MAXVALUE) * 360) + 90;\n\n            return result + GEO_ARC_ADJUST_ANGLE;\n        },\n\n        _getColor: function(value) {\n            var options = this.options;\n            var colors = options.colors;\n            var color = options.color;\n            var currentValue = dataviz.isNumber(value) ? value : 0;\n\n            if (colors) {\n                for (var idx = 0; idx < colors.length; idx++) {\n                    var range = colors[idx];\n                    var rangeColor = range.color;\n                    var from = range.from; if (from === void 0) { from = 0; }\n                    var to = range.to; if (to === void 0) { to = 100; }\n\n                    if (from <= currentValue && currentValue <= to) {\n                        return rangeColor;\n                    }\n                }\n            }\n\n            return color;\n        },\n\n        _createArc: function(endAngle, rangeRadius, center, color) {\n            var rangeSize = this.options.pointerWidth;\n            var rangeGeom = new Arc$1([center.x, center.y], {\n                radiusX: rangeRadius + (rangeSize / 2),\n                radiusY: rangeRadius + (rangeSize / 2),\n                startAngle: 270,\n                endAngle: endAngle\n            });\n\n            return new Arc$2(rangeGeom, {\n                stroke: {\n                    width: rangeSize,\n                    color: this.options.color || color,\n                    opacity: this.options.opacity\n                }\n            });\n        },\n\n        _centerTemplatePosition: function(width, height) {\n            var size = this._getSize();\n            var center = this._getCenter();\n\n            var left = center.x - width / 2;\n            var top = center.y - height / 2;\n            var right;\n            var bottom;\n\n            if (width < size.width) {\n                right = left + width;\n\n                left = Math.max(left, 0);\n\n                if (right > size.width) {\n                    left -= right - size.width;\n                }\n            }\n\n            if (height < size.height) {\n                bottom = top + height;\n\n                if (bottom > size.height) {\n                    top -= bottom - size.height;\n                }\n            }\n\n            return {\n                left: left,\n                top: top\n            };\n        },\n\n        _getCenter: function() {\n            var size = this._getSize();\n            return new dataviz.Point(size.width / 2, size.height / 2);\n        },\n\n        _getSize: function() {\n            var element = this.element;\n            var defaultSize = {\n                width: DEFAULT_WIDTH,\n                height: DEFAULT_HEIGHT\n            };\n            var width = element[0].offsetWidth;\n            var height = element[0].offsetHeight;\n\n            if (!width) {\n                width = defaultSize.width;\n            }\n\n            if (!height) {\n                height = defaultSize.height;\n            }\n\n            return { width: width, height: height };\n        },\n\n        _surfaceElement: function() {\n            if (!this.surfaceElement) {\n                this.surfaceElement = document.createElement('div');\n                this.element[0].appendChild(this.surfaceElement);\n            }\n\n            return this.surfaceElement;\n        },\n\n        _initSurface: function() {\n            var that = this;\n            var options = that.options;\n            var surface = that.surface;\n            var element = this._surfaceElement();\n            var size = this._getSize();\n\n            dataviz.elementSize(element, size);\n\n            if (!surface) {\n                this.surface = Surface.create(element, {\n                    type: options.renderAs\n                });\n            } else {\n                this.surface.clear();\n                this.surface.resize();\n            }\n        }\n\n    });\n\n    function themeOptions(options) {\n        var themes = dataviz.ui.themes || {};\n        var themeName = options.theme || \"\";\n        var lowerName = themeName.toLowerCase();\n\n        if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n            return dataviz.autoTheme().gauge;\n        }\n\n        return (themes[themeName] || themes[lowerName] || {}).gauge;\n    }\n\n    ui.plugin(CircularProgressBar);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}