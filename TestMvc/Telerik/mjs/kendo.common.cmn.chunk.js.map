{"version":3,"sources":["raw-mjs/kendo.common.cmn.chunk.js"],"names":["__meta__","id","name","category","description","depends","hidden","chunk","isWindowAvailable$1","window","agentRxs$1","wp","fire","android","iphone","ipad","meego","webos","blackberry","playbook","windows","tizen","sailfish","ffos","osRxs$1","ios","flat","desktopBrowserRxs$1","edge","webkit","safari","opera","msie","mozilla","mobileBrowserRxs$1","omini","omobile","firefox","mobilesafari","ie","chrome","testRx$1","agent","rxs","dflt","rx","hasOwnProperty","test","undefined","detectMobileOS$1","ua","minorVersion","match","navigator","os","device","browser","majorVersion","replace","substr","flatVersion","Array","length","join","cordova","PhoneGap","appMode","standalone","location","protocol","detectDesktopBrowser$1","browserInfo","toLowerCase","split","version","parseInt","document","documentMode","userAgent$1","userAgent","browser$1","mobileOS$1","touch$1","msPointers$1","MSPointerEvent","pointers$1","PointerEvent","touchEnabled$1","FIELD_REGEX$1","fieldList$1","field","fields","_match","index","indexAccessor","fieldName","push","getterCache$1","getter$1","obj","result","idx","setterCache$1","defaultValue$1","nextField","options","arrays","isNaN","Number","setter$1","value","root","depth","reComment","reDeclaration","reDoubleQuoted","reSingleQuoted","doubleQuote","singleQuote","empty","replaceQuoteEntities","str","parseInlineStyles","styleString","property","styleObject","input","exec","trim","isWindowAvailable","agentRxs","osRxs","desktopBrowserRxs","mobileBrowserRxs","testRx","detectMobileOS","detectDesktopBrowser","mobileOS","touch","msPointers","pointers","touchEnabled","FIELD_REGEX","fieldList","getterCache","getter","setterCache","defaultValue","setter"],"mappings":"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","file":"kendo.common.cmn.chunk.js","sourcesContent":["\n\nconst __meta__ = {\n    id: \"common.cmn.chunk\",\n    name: \"CommonCmnChunk\",\n    category: \"web\",\n    description: \"A reusable outputed chunk of code\",\n    depends: [],\n    hidden: true,\n    chunk: true\n};\n\n/**\n * @hidden\n */\nvar isWindowAvailable$1 = function () {\n    return typeof window !== 'undefined';\n};\n\n/* tslint:disable:object-literal-sort-keys max-line-length */\nvar agentRxs$1 = {\n    wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)(\\.(\\d+(\\.\\d+)?))?/,\n    iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n    ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n    meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n    webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n    sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n    ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n};\nvar osRxs$1 = {\n    ios: /^i(phone|pad|pod)$/i,\n    android: /^android|fire$/i,\n    blackberry: /^blackberry|playbook/i,\n    windows: /windows/,\n    wp: /wp/,\n    flat: /sailfish|ffos|tizen/i,\n    meego: /meego/\n};\nvar desktopBrowserRxs$1 = {\n    edge: /(edge)[ \\/]([\\w.]+)/i,\n    webkit: /(chrome)[ \\/]([\\w.]+)/i,\n    safari: /(webkit)[ \\/]([\\w.]+)/i,\n    opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n    msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n    mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\nvar mobileBrowserRxs$1 = {\n    omini: /Opera\\sMini/i,\n    omobile: /Opera\\sMobi/i,\n    firefox: /Firefox|Fennec/i,\n    mobilesafari: /version\\/.*safari/i,\n    ie: /MSIE|Windows\\sPhone/i,\n    chrome: /chrome|crios/i,\n    webkit: /webkit/i\n};\nvar testRx$1 = function (agent, rxs, dflt) {\n    for (var rx in rxs) {\n        if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n            return rx;\n        }\n    }\n    return dflt !== undefined ? dflt : agent;\n};\n/**\n * A function that detects the mobile browser based on the given UserAgent.\n *\n * @param ua - The user agent string.\n * @returns - A browser info object containing the browser type and version.\n *\n * @example\n * ```ts-no-run\n * const userAgent = 'Mozilla/5.0 (Linux; Android 8.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.3 Chrome/61.0.3163.81 Mobile Safari/537.36';\n * detectMobileOS(userAgent); // { android: true };\n * ```\n */\nvar detectMobileOS$1 = function (ua) {\n    var minorVersion;\n    var match = [];\n    for (var agent in agentRxs$1) {\n        if (agentRxs$1.hasOwnProperty(agent)) {\n            match = ua.match(agentRxs$1[agent]);\n            if (!match) {\n                continue;\n            }\n            if (agent === 'windows' && 'plugins' in window.navigator) {\n                return null;\n            } // Break if not Metro/Mobile Windows\n            var os = {};\n            os.device = agent;\n            os.browser = testRx$1(ua, mobileBrowserRxs$1, 'default');\n            os.name = testRx$1(agent, osRxs$1);\n            os[os.name] = true;\n            os.majorVersion = match[2];\n            os.minorVersion = match[3] ? match[3].replace('_', '.') : '.0';\n            minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n            os.flatVersion = os.majorVersion + minorVersion +\n                (new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0'));\n            os.cordova = typeof window.PhoneGap !== undefined\n                || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n            os.appMode = window.navigator.standalone\n                || (/file|local|wmapp/).test(window.location.protocol)\n                || os.cordova; // Use file protocol to detect appModes.\n            return os;\n        }\n    }\n    return null;\n};\n/**\n * A function that detects the desktop browser based on the given UserAgent.\n *\n * @param ua - The user agent string.\n * @returns - A browser info object containing the browser type and version.\n *\n * @example\n * ```ts-no-run\n * const userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19';\n * detectDesktopBrowser(userAgent); // { chrome: true, webkit: true };\n * ```\n */\nvar detectDesktopBrowser$1 = function (ua) {\n    var browserInfo = null;\n    var match = [];\n    for (var agent in desktopBrowserRxs$1) {\n        if (desktopBrowserRxs$1.hasOwnProperty(agent)) {\n            match = ua.match(desktopBrowserRxs$1[agent]);\n            if (match) {\n                browserInfo = {};\n                browserInfo[agent] = true;\n                browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n                browserInfo.version = parseInt(document.documentMode || match[2], 10);\n                break;\n            }\n        }\n    }\n    return browserInfo;\n};\nvar userAgent$1 = isWindowAvailable$1() && window.navigator ? window.navigator.userAgent : null;\n/**\n * A constant holding the desktop browser info. The variable persists the result of the detectDesktopBrowser(window.navigator.userAgent) call.\n * If no desktop browser is detected, the constant will be `null`.\n */\nvar browser$1 = userAgent$1 ? detectDesktopBrowser$1(userAgent$1) : null;\n/**\n * A constant holding the mobile OS info. The variable persists the result of the detectMobileOS(window.navigator.userAgent) call.\n * If no mobile OS is detected, the constant will be `null`.\n */\nvar mobileOS$1 = userAgent$1 ? detectMobileOS$1(userAgent$1) : null;\n/**\n * A constant reporting the browser `touch` events support.\n */\nvar touch$1 = isWindowAvailable$1() && 'ontouchstart' in window;\n/**\n * @hidden\n * A constant reporting the browser `msPointers` events support.\n */\nvar msPointers$1 = browser$1 && !browser$1.chrome && window.MSPointerEvent;\n/**\n * A constant reporting the browser `pointers` events support.\n */\nvar pointers$1 = browser$1 && !browser$1.chrome && window.PointerEvent;\n/**\n * A constant reporting whether the browser is touch enabled.\n */\nvar touchEnabled$1 = mobileOS$1 && (touch$1 || msPointers$1 || pointers$1);\n\nvar FIELD_REGEX$1 = /\\[(?:(\\d+)|['\"](.*?)['\"])\\]|((?:(?!\\[.*?\\]|\\.).)+)/g;\n/**\n * @hidden\n */\nfunction fieldList$1(field) {\n    var fields = [];\n    field.replace(FIELD_REGEX$1, function (_match, index, indexAccessor, fieldName) {\n        fields.push(index !== undefined ? index : (indexAccessor || fieldName));\n    });\n    return fields;\n}\n\nvar getterCache$1 = {};\n// tslint:disable-next-line:no-string-literal\ngetterCache$1['undefined'] = function (obj) { return obj; };\n/**\n * @hidden\n */\nfunction getter$1(field) {\n    if (getterCache$1[field]) {\n        return getterCache$1[field];\n    }\n    var fields = fieldList$1(field);\n    getterCache$1[field] = function (obj) {\n        var result = obj;\n        for (var idx = 0; idx < fields.length && result; idx++) {\n            result = result[fields[idx]];\n        }\n        return result;\n    };\n    return getterCache$1[field];\n}\n\nvar setterCache$1 = {};\n// tslint:disable-next-line:no-string-literal\nsetterCache$1['undefined'] = function (obj) { return obj; };\nvar defaultValue$1 = function (nextField, options) {\n    return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n};\n/**\n * @hidden\n */\nfunction setter$1(field) {\n    if (setterCache$1[field]) {\n        return setterCache$1[field];\n    }\n    var fields = fieldList$1(field);\n    setterCache$1[field] = function (obj, value, options) {\n        var root = obj;\n        var depth = fields.length - 1;\n        for (var idx = 0; idx < depth && root; idx++) {\n            root = root[fields[idx]] = root[fields[idx]] || defaultValue$1(fields[idx + 1], options);\n        }\n        root[fields[depth]] = value;\n    };\n    return setterCache$1[field];\n}\n\nvar reComment = /\\/\\*[\\s\\S]*?\\*\\//g;\n/*\n([^\\s:;]+?)\\s*:\\s*         # Property name and colon\n(\n  (?:\n    (?:                    # Begin alternation\n      url\\(                # Match 'url('\n        \\s*\n        (?:\n          (?:[^\"')\\\\]|\\\\.)*  # Content inside url(), excluding quotes and closing parenthesis\n          |\n          \"(?:[^\"\\\\]|\\\\.)*\"  # Double-quoted strings, handling escaped characters\n          |\n          '(?:[^'\\\\]|\\\\.)*'  # Single-quoted strings, handling escaped characters\n        )\n        \\s*\n      \\)\n      |\n      \"(?:[^\"\\\\]|\\\\.)*\"     # Double-quoted strings, handling escaped characters\n      |\n      '(?:[^'\\\\]|\\\\.)*'     # Single-quoted strings, handling escaped characters\n      |\n      [^;\"']                # Any character except ';', double or single quotes\n    )*?                     # Repeat zero or more times, non-greedy\n    \\s*\n  )\n)\n(?=;|$)                     # Lookahead for ';' or end of string\n*/\nvar reDeclaration = /([^\\s:;]+?)\\s*:\\s*((?:(?:url\\(\\s*(?:(?:[^\"')\\\\]|\\\\.)*|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')\\s*\\)|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|[^;\"'])*?)\\s*)(?=;|$)/gi;\nvar reDoubleQuoted = /&quot;|&#34;|&#x22;/gi;\nvar reSingleQuoted = /&apos;|&#39;|&#x27;/gi;\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\nvar empty = '';\nfunction replaceQuoteEntities(str) {\n    return str.replace(reDoubleQuoted, doubleQuote)\n        .replace(reSingleQuoted, singleQuote);\n}\n/**\n * Parse inline styles string into object.\n *\n * @param styleString - inline styles string\n * @returns object with styles\n */\nfunction parseInlineStyles(styleString) {\n    var styleObject = {};\n    var input = replaceQuoteEntities((styleString || empty).replace(reComment, empty));\n    var match = reDeclaration.exec(input), property, value;\n    while (match !== null) {\n        property = match[1].trim();\n        value = match[2].trim();\n        styleObject[property] = value;\n        match = reDeclaration.exec(input);\n    }\n    return styleObject;\n}\n\n/**\n * @hidden\n */\nvar isWindowAvailable = function () {\n    return typeof window !== 'undefined';\n};\n\n/* tslint:disable:object-literal-sort-keys max-line-length */\nvar agentRxs = {\n    wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)(\\.(\\d+(\\.\\d+)?))?/,\n    iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n    ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n    meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n    webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n    sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n    ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n};\nvar osRxs = {\n    ios: /^i(phone|pad|pod)$/i,\n    android: /^android|fire$/i,\n    blackberry: /^blackberry|playbook/i,\n    windows: /windows/,\n    wp: /wp/,\n    flat: /sailfish|ffos|tizen/i,\n    meego: /meego/\n};\nvar desktopBrowserRxs = {\n    edge: /(edge)[ \\/]([\\w.]+)/i,\n    webkit: /(chrome)[ \\/]([\\w.]+)/i,\n    safari: /(webkit)[ \\/]([\\w.]+)/i,\n    opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n    msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n    mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\nvar mobileBrowserRxs = {\n    omini: /Opera\\sMini/i,\n    omobile: /Opera\\sMobi/i,\n    firefox: /Firefox|Fennec/i,\n    mobilesafari: /version\\/.*safari/i,\n    ie: /MSIE|Windows\\sPhone/i,\n    chrome: /chrome|crios/i,\n    webkit: /webkit/i\n};\nvar testRx = function (agent, rxs, dflt) {\n    for (var rx in rxs) {\n        if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n            return rx;\n        }\n    }\n    return dflt !== undefined ? dflt : agent;\n};\n/**\n * A function that detects the mobile browser based on the given UserAgent.\n *\n * @param ua - The user agent string.\n * @returns - A browser info object containing the browser type and version.\n *\n * @example\n * ```ts-no-run\n * const userAgent = 'Mozilla/5.0 (Linux; Android 8.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.3 Chrome/61.0.3163.81 Mobile Safari/537.36';\n * detectMobileOS(userAgent); // { android: true };\n * ```\n */\nvar detectMobileOS = function (ua) {\n    var minorVersion;\n    var match = [];\n    for (var agent in agentRxs) {\n        if (agentRxs.hasOwnProperty(agent)) {\n            match = ua.match(agentRxs[agent]);\n            if (!match) {\n                continue;\n            }\n            if (agent === 'windows' && 'plugins' in window.navigator) {\n                return null;\n            } // Break if not Metro/Mobile Windows\n            var os = {};\n            os.device = agent;\n            os.browser = testRx(ua, mobileBrowserRxs, 'default');\n            os.name = testRx(agent, osRxs);\n            os[os.name] = true;\n            os.majorVersion = match[2];\n            os.minorVersion = match[3] ? match[3].replace('_', '.') : '.0';\n            minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n            os.flatVersion = os.majorVersion + minorVersion +\n                (new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0'));\n            os.cordova = typeof window.PhoneGap !== undefined\n                || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n            os.appMode = window.navigator.standalone\n                || (/file|local|wmapp/).test(window.location.protocol)\n                || os.cordova; // Use file protocol to detect appModes.\n            return os;\n        }\n    }\n    return null;\n};\n/**\n * A function that detects the desktop browser based on the given UserAgent.\n *\n * @param ua - The user agent string.\n * @returns - A browser info object containing the browser type and version.\n *\n * @example\n * ```ts-no-run\n * const userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19';\n * detectDesktopBrowser(userAgent); // { chrome: true, webkit: true };\n * ```\n */\nvar detectDesktopBrowser = function (ua) {\n    var browserInfo = null;\n    var match = [];\n    for (var agent in desktopBrowserRxs) {\n        if (desktopBrowserRxs.hasOwnProperty(agent)) {\n            match = ua.match(desktopBrowserRxs[agent]);\n            if (match) {\n                browserInfo = {};\n                browserInfo[agent] = true;\n                browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n                browserInfo.version = parseInt(document.documentMode || match[2], 10);\n                break;\n            }\n        }\n    }\n    return browserInfo;\n};\nvar userAgent = isWindowAvailable() && window.navigator ? window.navigator.userAgent : null;\n/**\n * A constant holding the desktop browser info. The variable persists the result of the detectDesktopBrowser(window.navigator.userAgent) call.\n * If no desktop browser is detected, the constant will be `null`.\n */\nvar browser = userAgent ? detectDesktopBrowser(userAgent) : null;\n/**\n * A constant holding the mobile OS info. The variable persists the result of the detectMobileOS(window.navigator.userAgent) call.\n * If no mobile OS is detected, the constant will be `null`.\n */\nvar mobileOS = userAgent ? detectMobileOS(userAgent) : null;\n/**\n * A constant reporting the browser `touch` events support.\n */\nvar touch = isWindowAvailable() && 'ontouchstart' in window;\n/**\n * @hidden\n * A constant reporting the browser `msPointers` events support.\n */\nvar msPointers = browser && !browser.chrome && window.MSPointerEvent;\n/**\n * A constant reporting the browser `pointers` events support.\n */\nvar pointers = browser && !browser.chrome && window.PointerEvent;\n/**\n * A constant reporting whether the browser is touch enabled.\n */\nvar touchEnabled = mobileOS && (touch || msPointers || pointers);\n\nvar FIELD_REGEX = /\\[(?:(\\d+)|['\"](.*?)['\"])\\]|((?:(?!\\[.*?\\]|\\.).)+)/g;\n/**\n * @hidden\n */\nfunction fieldList(field) {\n    var fields = [];\n    field.replace(FIELD_REGEX, function (_match, index, indexAccessor, fieldName) {\n        fields.push(index !== undefined ? index : (indexAccessor || fieldName));\n    });\n    return fields;\n}\n\nvar getterCache = {};\n// tslint:disable-next-line:no-string-literal\ngetterCache['undefined'] = function (obj) { return obj; };\n/**\n * @hidden\n */\nfunction getter(field) {\n    if (getterCache[field]) {\n        return getterCache[field];\n    }\n    var fields = fieldList(field);\n    getterCache[field] = function (obj) {\n        var result = obj;\n        for (var idx = 0; idx < fields.length && result; idx++) {\n            result = result[fields[idx]];\n        }\n        return result;\n    };\n    return getterCache[field];\n}\n\nvar setterCache = {};\n// tslint:disable-next-line:no-string-literal\nsetterCache['undefined'] = function (obj) { return obj; };\nvar defaultValue = function (nextField, options) {\n    return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n};\n/**\n * @hidden\n */\nfunction setter(field) {\n    if (setterCache[field]) {\n        return setterCache[field];\n    }\n    var fields = fieldList(field);\n    setterCache[field] = function (obj, value, options) {\n        var root = obj;\n        var depth = fields.length - 1;\n        for (var idx = 0; idx < depth && root; idx++) {\n            root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options);\n        }\n        root[fields[depth]] = value;\n    };\n    return setterCache[field];\n}\n\nexport { detectMobileOS as a, browser$1 as b, detectDesktopBrowser as d, parseInlineStyles as p };\nexport { __meta__ };"]}