{"version":3,"sources":["raw-mjs/kendo.virtuallist.js"],"names":["valueMapperOptions","__meta__","id","name","category","depends","hidden","$","undefined$1","kendo","window","ui","encode","htmlEncode","Widget","DataBoundWidget","percentageUnitsRegex","LIST_ITEM","TABLE_ITEM","GROUPITEM","SELECTED","FOCUSED","HOVER","CHANGE","CLICK","LISTBOUND","ITEMCHANGE","ACTIVATE","DEACTIVATE","GROUP_ROW_SEL","VIRTUAL_LIST_NS","lastFrom","array","length","toArray","value","Array","isPrimitive","dataItem","appendChild","parent","className","tagName","element","document","createElement","render","data","templates","itemTemplate","template","hasColumns","this","options","columns","altRow","index","item","placeholderTemplate","header","group","html","fixedGroupTemplate","attr","uid","addClass","removeClass","renderedColumns","i","currentWidth","width","currentWidthInt","parseInt","widthStyle","widthValue","test","renderColumns","applyStylesFromKendoAttributes","empty","append","find","remove","toggleClass","current","selected","newGroup","isLastGroupedItem","groupTemplate","appendTo","top","y","style","webkitTransform","transform","position","isActivePromise","promise","state","VirtualList","extend","init","listSize","lineHeight","mockList","that","contentClasses","bound","_fetching","fn","call","itemHeight","css","left","visibility","body","parseFloat","getComputedStyles","height","contentSelector","split","join","wrapper","closest","content","wrap","thead","row","TABLE_LIST","before","prev","ariaLabel","ariaLabelledBy","on","_values","_selectedDataItems","_selectedIndexes","_rangesList","_promisesList","_optionID","guid","_templates","setDataSource","dataSource","throttle","_renderItems","_triggerListBound","delay","_selectable","autoBind","listScreens","threshold","oppositeBuffer","type","selectable","dataValueField","mapValueTo","valueMapper","events","setOptions","itemClass","_selectProxy","off","refresh","items","_items","destroy","unbind","_refreshHandler","source","isArray","DataSource","create","_clean","_deferValueSet","mute","bind","setDSFilter","filter","view","fetch","skip","currentRangeStart","_selectingValue","_skip","trigger","_getValues","dataItems","getter","_valueGetter","map","_highlightSelectedItems","_getElementByDataItem","e","result","action","isItemChange","filtered","isFiltered","_mute","focus","_createList","skipUpdateOnBind","_emptySearch","done","itemsToMatch","found","j","itemsLength","selectedLength","changed","unchanged","push","mapChangedItems","removeAt","splice","_removeSelectedDataItem","valueGetter","idx","setValue","_forcePrefetch","slice","_valueDeferred","Deferred","select","_prefetchByValue","_checkValuesOrder","_removedAddedIndexes","newValue","dataView","_dataView","forSelection","callback","mapValueToIndex","mapValueToDataItem","indexes","removed","_deselect","_triggerChange","added","_getIndecies","resolve","deferredRange","take","itemCount","ranges","defs","low","Math","floor","high","ceil","pages","each","_","deferred","end","existingRange","_multiplePrefetch","when","apply","prefetch","isEmptyList","_activeDeferred","_getSkip","_findDataItem","_getRange","_findRange","min","total","dataItemByIndex","progress","range","selectedDataItems","scrollWith","scrollTop","scrollTo","scrollToIndex","candidate","triggerEvent","flatView","isNaN","_getElementByIndex","_focusedIndex","hasClass","removeAttr","_getElementLocation","_screenHeight","focusIndex","focusFirst","focusLast","lastIndex","heightContainer","offsetHeight","focusPrev","focusNext","indices","initialIndices","isAlreadySelected","singleSelection","prefetchStarted","_selectDeferred","_deselectCurrentValues","_select","_listCreated","_lastDSFilter","Query","compareFilters","skipUpdate","noop","_lastScrollTop","_height","hasData","setScreenHeight","screenHeight","yPosition","yDownPostion","screenEnd","key","forEach","column","templateText","field","toString","_generateItems","count","text","tabIndex","setAttribute","minHeight","_saveInitialRanges","_ranges","start","reorder","get","_buildValueGetter","_setHeight","hide","show","_getter","_onScroll","force","getList","_listItems","_fixedHeader","_whenChanged","_reorderList","list","_calculateGroupPadding","_calculateColumnsHeaderPadding","currentHeight","innerHTML","padHeight","lastRequestedRange","lastRangeStart","pageSize","flatGroups","rangeStart","inRange","flatGroup","groups","len","groupLength","_getterDeferred","reject","then","firstItemIndex","_indexConstraint","currentVisibleGroup","firstVisibleDataItemIndex","firstVisibleDataItem","firstVisibleGroup","fixedGroupText","_itemMapper","listType","currentIndex","_currentGroup","_range","_view","_getDataItemsCollection","lastScrollTop","_listIndex","theValidator","downThreshold","upThreshold","listValidator","theNew","currentOffset","Infinity","arr1","arr2","ns","list2","offset","range2","diff","abs","unshift","reshift","_bufferSizes","opposite","down","up","max","buffers","_clickHandler","getElementIndex","jQuery","elementIndex","selectedIndex","selectedIndexes","removedindexesCounter","inArray","_deselectSingleItem","children","values","oldSkip","currentTarget","isDefaultPrevented","firstItem","first","groupHeader","padding","display","support","scrollbar","isRtl","columnsHeader","plugin","kendo$1"],"mappings":"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","file":"kendo.virtuallist.js","sourcesContent":["import './kendo.data.js';\nimport { v as valueMapperOptions } from './kendo.valueMapper.chunk.js';\n\nconst __meta__ = {\n    id: \"virtuallist\",\n    name: \"VirtualList\",\n    category: \"framework\",\n    depends: [\"data\", \"valueMapper.chunk\"],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Widget = ui.Widget,\n        DataBoundWidget = ui.DataBoundWidget,\n        percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n        LIST_CONTENT = \"k-list-content k-virtual-content\",\n        TABLE_CONTENT = \"k-table-body k-table-scroller\",\n        HEADER = \"k-list-group-sticky-header\",\n        LIST_ITEM = \"k-list-item\",\n        TABLE_ITEM = \"k-table-row\",\n        HEIGHTCONTAINER = \"k-height-container\",\n        GROUPITEM = \"k-list-item-group-label\",\n        LIST_UL = \"k-list-ul\",\n        TABLE_LIST = \"k-table-list\",\n\n        SELECTED = \"k-selected\",\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        LISTBOUND = \"listBound\",\n        ITEMCHANGE = \"itemChange\",\n\n        ACTIVATE = \"activate\",\n        DEACTIVATE = \"deactivate\",\n\n        GROUP_ROW_SEL = \".k-table-group-row\",\n\n        VIRTUAL_LIST_NS = \".VirtualList\";\n\n    function lastFrom(array) {\n        return array[array.length - 1];\n    }\n\n    function toArray(value) {\n        return value instanceof Array ? value : [value];\n    }\n\n    function isPrimitive(dataItem) {\n        return typeof dataItem === \"string\" || typeof dataItem === \"number\" || typeof dataItem === \"boolean\";\n    }\n\n    function getItemCount(screenHeight, listScreens, itemHeight) {\n        return Math.ceil(screenHeight * listScreens / itemHeight);\n    }\n\n    function appendChild(parent, className, tagName) {\n        var element = document.createElement(tagName || \"div\");\n        if (className) {\n            element.className = className;\n        }\n        parent.appendChild(element);\n\n        return element;\n    }\n\n    function getDefaultItemHeight(listSize) {\n        var mockList = $('<div class=\"k-list ' + listSize + ' k-virtual-list\">' +\n                '<div class=\"k-list-content k-virtual-content\">' +\n                    '<ul class=\"k-list-ul\">' +\n                        '<li class=\"k-list-item\">' +\n                            '<span class=\"k-list-item-text\">test</span>' +\n                        '</li>' +\n                    '</ul>' +\n                '</div>' +\n            '</div>');\n        var lineHeight;\n\n        mockList.css({\n            position: \"absolute\",\n            left: \"-200000px\",\n            visibility: \"hidden\"\n        });\n        mockList.appendTo(document.body);\n        lineHeight = parseFloat(kendo.getComputedStyles(mockList.find(\".k-list-item\")[0], [\"height\"]).height);\n        mockList.remove();\n\n        return lineHeight;\n    }\n\n    function bufferSizes(screenHeight, listScreens, opposite) { //in pixels\n        return {\n            down: screenHeight * opposite,\n            up: screenHeight * (listScreens - 1 - opposite)\n        };\n    }\n\n    function listValidator(options, screenHeight) {\n        var downThreshold = (options.listScreens - 1 - options.threshold) * screenHeight;\n        var upThreshold = options.threshold * screenHeight;\n\n        return function(list, scrollTop, lastScrollTop) {\n            if (scrollTop > lastScrollTop) {\n                return scrollTop - list.top < downThreshold;\n            } else {\n                return list.top === 0 || scrollTop - list.top > upThreshold;\n            }\n        };\n    }\n\n    function scrollCallback(element, callback) {\n        return function(force) {\n            return callback(element.scrollTop, force);\n        };\n    }\n\n    function syncList(reorder) {\n        return function(list, force) {\n            reorder(list.items, list.index, force);\n            return list;\n        };\n    }\n\n    function position(element, y) {\n        element.style.webkitTransform = 'translateY(' + y + \"px)\";\n        element.style.transform = 'translateY(' + y + \"px)\";\n    }\n\n    function map2(callback, templates) {\n        return function(arr1, arr2) {\n            for (var i = 0, len = arr1.length; i < len; i++) {\n                callback(arr1[i], arr2[i], templates);\n                if (arr2[i].item) {\n                    this.trigger(ITEMCHANGE, { item: $(arr1[i]), data: arr2[i].item, ns: kendo.ui });\n                }\n            }\n        };\n    }\n\n    function reshift(items, diff) {\n        var range;\n\n        if (diff > 0) { // down\n            range = items.splice(0, diff);\n            items.push.apply(items, range);\n        } else { // up\n            range = items.splice(diff, -diff);\n            items.unshift.apply(items, range);\n        }\n\n        return range;\n    }\n\n    function render(element, data, templates) {\n        var itemTemplate = templates.template,\n            hasColumns = this.options.columns && this.options.columns.length,\n            altRow = data.index % 2 === 1 ? \"k-table-alt-row\" : \"\";\n\n        element = $(element);\n\n        if (!data.item) {\n            itemTemplate = templates.placeholderTemplate;\n        }\n\n        if (data.index === 0 && this.header && data.group) {\n            this.header.html(templates.fixedGroupTemplate(data.group));\n        }\n\n        element\n            .attr(\"data-uid\", data.item ? data.item.uid : \"\")\n            .attr(\"data-offset-index\", data.index);\n\n        if (hasColumns && data.item) {\n            if (altRow.length > 0) {\n                element.addClass(altRow);\n            } else {\n                element.removeClass(\"k-table-alt-row\");\n            }\n\n            let renderedColumns = $(renderColumns(this.options, data.item, templates));\n            kendo.applyStylesFromKendoAttributes(renderedColumns, [\"width\", \"max-width\"]);\n            element.empty().append(renderedColumns);\n        } else {\n            element.find(\".\" + GROUPITEM).remove();\n            element.find(\".k-list-item-text\").html(itemTemplate(data.item || {}));\n        }\n\n        element.toggleClass(FOCUSED, data.current);\n        element.toggleClass(SELECTED, data.selected);\n        element.toggleClass(\"k-first\", data.newGroup);\n        element.toggleClass(\"k-last\", data.isLastGroupedItem);\n        element.toggleClass(\"k-loading-item\", !data.item);\n\n        if (data.index !== 0 && data.newGroup) {\n            if (hasColumns) {\n                $('<span class=\"k-table-td k-table-group-td\"><span>' + templates.groupTemplate(data.group) + '</span></span>')\n                    .appendTo(element);\n            } else {\n                $(\"<div class=\" + GROUPITEM + \"></div>\")\n                    .appendTo(element)\n                    .html(templates.groupTemplate(data.group));\n            }\n        } else if (data.group && hasColumns) {\n            element.append($('<span class=\"k-table-td k-table-spacer-td\"></span>'));\n        }\n\n        if (data.top !== undefined$1) {\n            position(element[0], data.top);\n        }\n    }\n\n    function renderColumns(options, dataItem, templates) {\n        var item = \"\";\n\n        for (var i = 0; i < options.columns.length; i++) {\n            var currentWidth = options.columns[i].width;\n            var currentWidthInt = parseInt(currentWidth, 10);\n            var widthStyle = '';\n\n            if (currentWidth) {\n                let widthValue = `${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}`;\n                widthStyle = `${kendo.attr(\"style-width\")}=\"${widthValue}\" ${kendo.attr(\"style-max-width\")}=\"${widthValue}\"`;\n            }\n\n            item += \"<span class='k-table-td' \" + widthStyle + \">\";\n            item += templates[\"column\" + i](dataItem);\n            item += \"</span>\";\n        }\n\n        return item;\n    }\n\n    function mapChangedItems(selected, itemsToMatch) {\n        var itemsLength = itemsToMatch.length;\n        var selectedLength = selected.length;\n        var dataItem;\n        var found;\n        var i, j;\n\n        var changed = [];\n        var unchanged = [];\n\n        if (selectedLength) {\n            for (i = 0; i < selectedLength; i++) {\n                dataItem = selected[i];\n                found = false;\n\n                for (j = 0; j < itemsLength; j++) {\n                    if (dataItem === itemsToMatch[j]) {\n                        found = true;\n                        changed.push({ index: i, item: dataItem });\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    unchanged.push(dataItem);\n                }\n            }\n        }\n\n        return {\n            changed: changed,\n            unchanged: unchanged\n        };\n    }\n\n    function isActivePromise(promise) {\n        return promise && promise.state() !== \"resolved\";\n    }\n\n    var VirtualList = DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this,\n                contentClasses = options.columns && options.columns.length ? TABLE_CONTENT : LIST_CONTENT;\n\n            that.bound(false);\n            that._fetching = false;\n\n            Widget.fn.init.call(that, element, options);\n\n            if (!that.options.itemHeight) {\n                that.options.itemHeight = getDefaultItemHeight(options.listSize);\n            }\n\n            options = that.options;\n\n            that.element.attr(\"role\", \"listbox\");\n\n            var contentSelector = \".\" + contentClasses.split(' ').join('.');\n            var wrapper = that.element.closest(contentSelector);\n\n            that.content = that.wrapper = wrapper.length ? wrapper : that.element.wrap(\"<div unselectable='on' class='\" + contentClasses + \"'></div>\").parent();\n\n            if (that.options.columns && that.options.columns.length) {\n                var thead = that.element.closest(\".k-data-table\").find('.k-table-thead');\n                var row = $('<tr class=\"k-table-group-row\">' +\n                    '<th class=\"k-table-th\" colspan=\"' + that.options.columns.length + '\"></th>' +\n                '</tr>');\n\n                thead.append(row);\n\n                that.header = row.find(\".k-table-th\");\n                that.element.addClass(TABLE_LIST + \" k-virtual-table\");\n            } else {\n                that.header = that.content.before(\"<div class='\" + HEADER + \"'></div>\").prev();\n                that.element.addClass(LIST_UL);\n            }\n\n            if (options.ariaLabel) {\n                this.element.attr(\"aria-label\", options.ariaLabel);\n            } else if (options.ariaLabelledBy) {\n                this.element.attr(\"aria-labelledby\", options.ariaLabelledBy);\n            }\n\n            that.element.on(\"mouseenter\" + VIRTUAL_LIST_NS, \"li:not(.k-loading-item)\", function() { $(this).addClass(HOVER); })\n                        .on(\"mouseleave\" + VIRTUAL_LIST_NS, \"li\", function() { $(this).removeClass(HOVER); });\n\n            that._values = toArray(that.options.value);\n            that._selectedDataItems = [];\n            that._selectedIndexes = [];\n            that._rangesList = {};\n            that._promisesList = [];\n            that._optionID = kendo.guid();\n\n            that._templates();\n\n            that.setDataSource(options.dataSource);\n\n            that.content.on(\"scroll\" + VIRTUAL_LIST_NS, kendo.throttle(function() {\n                that._renderItems();\n                that._triggerListBound();\n            }, options.delay));\n\n            that._selectable();\n        },\n\n        options: {\n            name: \"VirtualList\",\n            autoBind: true,\n            delay: 100,\n            height: null,\n            listScreens: 4,\n            threshold: 0.5,\n            itemHeight: null,\n            oppositeBuffer: 1,\n            type: \"flat\",\n            selectable: false,\n            value: [],\n            dataValueField: null,\n            template: (data) => encode(data),\n            placeholderTemplate: () => \"loading...\",\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            mapValueTo: \"index\",\n            valueMapper: null,\n            ariaLabel: null,\n            ariaLabelledBy: null\n        },\n\n        events: [\n            CHANGE,\n            CLICK,\n            LISTBOUND,\n            ITEMCHANGE,\n            ACTIVATE,\n            DEACTIVATE\n        ],\n\n        setOptions: function(options) {\n            var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            Widget.fn.setOptions.call(this, options);\n\n            if (this._selectProxy && this.options.selectable === false) {\n                this.element.off(CLICK, \".\" + itemClass, this._selectProxy);\n            } else if (!this._selectProxy && this.options.selectable) {\n                this._selectable();\n            }\n\n            this._templates();\n            this.refresh();\n        },\n\n        items: function() {\n            return $(this._items);\n        },\n\n        destroy: function() {\n            this.wrapper.off(VIRTUAL_LIST_NS);\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            Widget.fn.destroy.call(this);\n        },\n\n        setDataSource: function(source) {\n            var that = this;\n            var dataSource = source || {};\n            var value;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n            dataSource = kendo.data.DataSource.create(dataSource);\n\n            if (that.dataSource) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n\n                that._clean();\n                that.bound(false);\n\n                that._deferValueSet = true;\n                value = that.value();\n\n                that.value([]);\n                that.mute(function() {\n                    that.value(value);\n                });\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            that.dataSource = dataSource.bind(CHANGE, that._refreshHandler);\n\n            that.setDSFilter(dataSource.filter());\n\n            if (dataSource.view().length !== 0) {\n                that.refresh();\n            } else if (that.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        skip: function() {\n            return this.dataSource.currentRangeStart();\n        },\n\n        _triggerListBound: function() {\n            var that = this;\n            var skip = that.skip();\n\n            if (that.bound() && !that._selectingValue && that._skip !== skip) {\n                that._skip = skip;\n                that.trigger(LISTBOUND);\n            }\n        },\n\n        _getValues: function(dataItems) {\n            var getter = this._valueGetter;\n\n            return $.map(dataItems, function(dataItem) {\n                return getter(dataItem);\n            });\n        },\n\n        _highlightSelectedItems: function() {\n            for (var i = 0; i < this._selectedDataItems.length; i++) {\n                var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                if (item.length) {\n                    item.addClass(SELECTED);\n                }\n            }\n        },\n\n        refresh: function(e) {\n            var that = this;\n            var action = e && e.action;\n            var isItemChange = action === \"itemchange\";\n            var filtered = this.isFiltered();\n            var result;\n\n            if (that._mute) { return; }\n\n            that._deferValueSet = false;\n\n            if (!that._fetching) {\n                if (filtered) {\n                    that.focus(0);\n                }\n\n                that._createList();\n                if (!action && that._values.length && !filtered &&\n                     !that.options.skipUpdateOnBind && !that._emptySearch) {\n                    that._selectingValue = true;\n\n                    that.bound(true);\n                    that.value(that._values, true).done(function() {\n                        that._selectingValue = false;\n                        that._triggerListBound();\n                    });\n                } else {\n                    that.bound(true);\n                    that._highlightSelectedItems();\n                    that._triggerListBound();\n                }\n            } else {\n                if (that._renderItems) {\n                    that._renderItems(true);\n                }\n\n                that._triggerListBound();\n            }\n\n            if (isItemChange || action === \"remove\") {\n                result = mapChangedItems(that._selectedDataItems, e.items);\n                if (result.changed.length) {\n                    if (isItemChange) {\n                        that.trigger(\"selectedItemChange\", {\n                            items: result.changed\n                        });\n                    } else {\n                        that.value(that._getValues(result.unchanged));\n                    }\n                }\n            }\n\n            that._fetching = false;\n        },\n\n        removeAt: function(position) {\n            var value = this._values.splice(position, 1)[0];\n\n            return {\n                position: position,\n                dataItem: this._removeSelectedDataItem(value)\n            };\n        },\n\n        _removeSelectedDataItem: function(value) {\n            var that = this,\n                valueGetter = that._valueGetter;\n\n            for (var idx in that._selectedDataItems) {\n                if (valueGetter(that._selectedDataItems[idx]) === value) {\n                    that._selectedIndexes.splice(idx, 1);\n                    return that._selectedDataItems.splice(idx, 1)[0];\n                }\n            }\n        },\n\n        setValue: function(value) {\n            this._values = toArray(value);\n        },\n\n        value: function(value, _forcePrefetch) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._values.slice();\n            }\n\n            if (value === null) {\n                value = [];\n            }\n\n            value = toArray(value);\n\n            if (!that._valueDeferred || that._valueDeferred.state() === \"resolved\") {\n                that._valueDeferred = $.Deferred();\n            }\n\n            var shouldClear = that.options.selectable === \"multiple\" && that.select().length && value.length;\n\n            if (shouldClear || !value.length) {\n                that.select(-1);\n            }\n\n            that._values = value;\n\n            if ((that.bound() && !that._mute && !that._deferValueSet) || _forcePrefetch) {\n                that._prefetchByValue(value);\n            }\n\n            return that._valueDeferred;\n        },\n\n        _checkValuesOrder: function(value) {\n            if (this._removedAddedIndexes &&\n                this._removedAddedIndexes.length === value.length) {\n                    var newValue = this._removedAddedIndexes.slice();\n                    this._removedAddedIndexes = null;\n                return newValue;\n            }\n\n            return value;\n        },\n\n        _prefetchByValue: function(value) {\n            var that = this,\n                dataView = that._dataView,\n                valueGetter = that._valueGetter,\n                mapValueTo = that.options.mapValueTo,\n                item, match = false,\n                forSelection = [];\n\n            //try to find the items in the loaded data\n            for (var i = 0; i < value.length; i++) {\n                for (var idx = 0; idx < dataView.length; idx++) {\n                    item = dataView[idx].item;\n                    if (item) {\n                        match = isPrimitive(item) ? value[i] === item : value[i] === valueGetter(item);\n\n                        if (match) {\n                            forSelection.push(dataView[idx].index);\n                        }\n                    }\n                }\n            }\n\n            if (forSelection.length === value.length) {\n                that._values = [];\n                that.select(forSelection);\n                return;\n            }\n\n            //prefetch the items\n            if (typeof that.options.valueMapper === \"function\") {\n                const callback = mapValueTo === 'index' ? that.mapValueToIndex : that.mapValueToDataItem;\n                that.options.valueMapper(valueMapperOptions(this.options, value, callback.bind(that)));\n            } else {\n                 if (!that.value()[0]) {\n                     that.select([-1]);\n                 } else {\n                    that._selectingValue = false;\n                    that._triggerListBound();\n                 }\n            }\n        },\n\n        mapValueToIndex: function(indexes) {\n            if (indexes === undefined$1 || indexes === -1 || indexes === null) {\n                indexes = [];\n            } else {\n                indexes = toArray(indexes);\n            }\n\n            if (!indexes.length) {\n                indexes = [-1];\n            } else {\n                var removed = this._deselect([]).removed;\n                if (removed.length) {\n                    this._triggerChange(removed, []);\n                }\n            }\n\n            this.select(indexes);\n        },\n\n        mapValueToDataItem: function(dataItems) {\n            var removed, added;\n\n            if (dataItems === undefined$1 || dataItems === null) {\n                dataItems = [];\n            } else {\n                dataItems = toArray(dataItems);\n            }\n\n            if (!dataItems.length) {\n                this.select([-1]);\n            } else {\n                removed = $.map(this._selectedDataItems, function(item, index) {\n                    return { index: index, dataItem: item };\n                });\n\n                added = $.map(dataItems, function(item, index) {\n                    return { index: index, dataItem: item };\n                });\n\n                this._selectedDataItems = dataItems;\n\n                this._selectedIndexes = [];\n\n                for (var i = 0; i < this._selectedDataItems.length; i++) {\n                    var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                    this._selectedIndexes.push(this._getIndecies(item)[0]);\n                    item.addClass(SELECTED);\n                }\n\n                this._triggerChange(removed, added);\n\n                if (this._valueDeferred) {\n                    this._valueDeferred.resolve();\n                }\n            }\n        },\n\n        deferredRange: function(index) {\n            var dataSource = this.dataSource;\n            var take = this.itemCount;\n            var ranges = this._rangesList;\n            var result = $.Deferred();\n            var defs = [];\n\n            var low = Math.floor(index / take) * take;\n            var high = Math.ceil(index / take) * take;\n\n            var pages = high === low ? [ high ] : [ low, high ];\n\n            $.each(pages, function(_, skip) {\n                var end = skip + take;\n                var existingRange = ranges[skip];\n                var deferred;\n\n                if (!existingRange || (existingRange.end !== end)) {\n                    deferred = $.Deferred();\n                    ranges[skip] = { end: end, deferred: deferred };\n\n                    dataSource._multiplePrefetch(skip, take, function() {\n                        deferred.resolve();\n                    });\n                } else {\n                    deferred = existingRange.deferred;\n                }\n\n                defs.push(deferred);\n            });\n\n            $.when.apply($, defs).done(function() {\n                result.resolve();\n            });\n\n            return result;\n        },\n\n        prefetch: function(indexes) {\n            var that = this,\n                take = this.itemCount,\n                isEmptyList = !that._promisesList.length;\n\n            if (!isActivePromise(that._activeDeferred)) {\n                that._activeDeferred = $.Deferred();\n                that._promisesList = [];\n            }\n\n            $.each(indexes, function(_, index) {\n                that._promisesList.push(that.deferredRange(that._getSkip(index, take)));\n            });\n\n            if (isEmptyList) {\n                $.when.apply($, that._promisesList).done(function() {\n                    that._promisesList = [];\n                    that._activeDeferred.resolve();\n                });\n            }\n\n            return that._activeDeferred;\n        },\n\n        _findDataItem: function(view, index) {\n            var group;\n\n            //find in grouped view\n            if (this.options.type === \"group\") {\n                for (var i = 0; i < view.length; i++) {\n                    group = view[i].items;\n                    if (group.length <= index) {\n                        index = index - group.length;\n                    } else {\n                        return group[index];\n                    }\n                }\n            }\n\n            //find in flat view\n            return view[index];\n        },\n\n        _getRange: function(skip, take) {\n            return this.dataSource._findRange(skip, Math.min(skip + take, this.dataSource.total()));\n        },\n\n        dataItemByIndex: function(index) {\n            var that = this;\n            var take = that.itemCount;\n            var skip = that._getSkip(index, take);\n            var view = this._getRange(skip, take);\n\n            //should not return item if data is not loaded\n            if (!that._getRange(skip, take).length) {\n                return null;\n            }\n\n            if (that.options.type === \"group\") {\n                kendo.ui.progress($(that.wrapper), true);\n                that.mute(function() {\n                    that.dataSource.range(skip, take, function() {\n                        kendo.ui.progress($(that.wrapper), false);\n                    });\n                    view = that.dataSource.view();\n                });\n            }\n\n            return that._findDataItem(view, [index - skip]);\n        },\n\n        selectedDataItems: function() {\n            return this._selectedDataItems.slice();\n        },\n\n        scrollWith: function(value) {\n            this.content.scrollTop(this.content.scrollTop() + value);\n        },\n\n        scrollTo: function(y) {\n            this.content.scrollTop(y); //works only if the element is visible\n        },\n\n        scrollToIndex: function(index) {\n            this.scrollTo(index * this.options.itemHeight);\n        },\n\n        focus: function(candidate) {\n            var element,\n                index,\n                data,\n                current,\n                itemHeight = this.options.itemHeight,\n                id = this._optionID,\n                triggerEvent = true;\n\n            if (candidate === undefined$1) {\n                current = this.element.find(\".\" + FOCUSED);\n                return current.length ? current : null;\n            }\n\n            if (typeof candidate === \"function\") {\n                data = this.dataSource.flatView();\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        candidate = idx;\n                        break;\n                    }\n                }\n            }\n\n            if (candidate instanceof Array) {\n                candidate = lastFrom(candidate);\n            }\n\n            if (isNaN(candidate)) {\n                element = $(candidate);\n                index = parseInt($(element).attr(\"data-offset-index\"), 10);\n            } else {\n                index = candidate;\n                element = this._getElementByIndex(index);\n            }\n\n            if (index === -1) {\n                this.element.find(\".\" + FOCUSED).removeClass(FOCUSED);\n                this._focusedIndex = undefined$1;\n                return;\n            }\n\n            if (element.length) { /*focus rendered item*/\n                if (element.hasClass(FOCUSED)) {\n                    triggerEvent = false;\n                }\n                if (this._focusedIndex !== undefined$1) {\n                    current = this._getElementByIndex(this._focusedIndex);\n                    current\n                        .removeClass(FOCUSED)\n                        .removeAttr(\"id\");\n\n                    if (triggerEvent) {\n                        this.trigger(DEACTIVATE);\n                    }\n                }\n\n                this._focusedIndex = index;\n\n                element\n                    .addClass(FOCUSED)\n                    .attr(\"id\", id);\n\n                var position = this._getElementLocation(index);\n\n                if (position === \"top\") {\n                    this.scrollTo(index * itemHeight);\n                } else if (position === \"bottom\") {\n                    this.scrollTo((index * itemHeight + itemHeight) - this._screenHeight);\n                } else if (position === \"outScreen\") {\n                    this.scrollTo(index * itemHeight);\n                }\n\n                if (triggerEvent) {\n                    this.trigger(ACTIVATE);\n                }\n            } else { /*focus non rendered item*/\n                this._focusedIndex = index;\n                this.items().removeClass(FOCUSED);\n                this.scrollToIndex(index);\n            }\n        },\n\n        focusIndex: function() {\n            return this._focusedIndex;\n        },\n\n        focusFirst: function() {\n            this.scrollTo(0);\n            this.focus(0);\n        },\n\n        focusLast: function() {\n            var lastIndex = this.dataSource.total();\n            this.scrollTo(this.heightContainer.offsetHeight);\n            this.focus(lastIndex - 1);\n        },\n\n        focusPrev: function() {\n            var index = this._focusedIndex;\n            var current;\n\n            if (!isNaN(index) && index > 0) {\n                index -= 1;\n                this.focus(index);\n\n                current = this.focus();\n                if (current && current.hasClass(\"k-loading-item\")) {\n                    index += 1;\n                    this.focus(index);\n                }\n\n                return index;\n            } else {\n                index = this.dataSource.total() - 1;\n                this.focus(index);\n                return index;\n            }\n        },\n\n        focusNext: function() {\n            var index = this._focusedIndex;\n            var lastIndex = this.dataSource.total() - 1;\n            var current;\n\n            if (!isNaN(index) && index < lastIndex) {\n                index += 1;\n                this.focus(index);\n\n                current = this.focus();\n                if (current && current.hasClass(\"k-loading-item\")) {\n                    index -= 1;\n                    this.focus(index);\n                }\n\n                return index;\n            } else {\n                index = 0;\n                this.focus(index);\n                return index;\n            }\n        },\n\n        _triggerChange: function(removed, added) {\n            removed = removed || [];\n            added = added || [];\n\n            if (removed.length || added.length) {\n                 this.trigger(CHANGE, {\n                    removed: removed,\n                    added: added\n                });\n            }\n        },\n\n        select: function(candidate) {\n            var that = this,\n                indices,\n                initialIndices,\n                singleSelection = that.options.selectable !== \"multiple\",\n                prefetchStarted = isActivePromise(that._activeDeferred),\n                filtered = this.isFiltered(),\n                isAlreadySelected,\n                deferred,\n                result,\n                removed = [];\n\n            if (candidate === undefined$1) {\n                return that._selectedIndexes.slice();\n            }\n\n            if (!that._selectDeferred || that._selectDeferred.state() === \"resolved\") {\n                that._selectDeferred = $.Deferred();\n            }\n\n            indices = that._getIndecies(candidate);\n            isAlreadySelected = singleSelection && !filtered && lastFrom(indices) === lastFrom(this._selectedIndexes);\n            removed = that._deselectCurrentValues(indices);\n\n            if (removed.length || !indices.length || isAlreadySelected) {\n                that._triggerChange(removed);\n\n                if (that._valueDeferred) {\n                    that._valueDeferred.resolve().promise();\n                }\n\n                return that._selectDeferred.resolve().promise();\n            }\n\n            if (indices.length === 1 && indices[0] === -1) {\n                indices = [];\n            }\n\n            initialIndices = indices;\n            result = that._deselect(indices);\n            removed = result.removed;\n            indices = result.indices;\n\n            if (singleSelection) {\n                prefetchStarted = false;\n                if (indices.length) {\n                    indices = [lastFrom(indices)];\n                }\n            }\n\n            var done = function() {\n                var added = that._select(indices);\n\n                if (initialIndices.length === indices.length || singleSelection) {\n                    that.focus(indices);\n                }\n\n                that._triggerChange(removed, added);\n\n                if (that._valueDeferred) {\n                    that._valueDeferred.resolve();\n                }\n\n                that._selectDeferred.resolve();\n            };\n\n            deferred = that.prefetch(indices);\n\n            if (!prefetchStarted) {\n                if (deferred) {\n                    deferred.done(done);\n                } else {\n                    done();\n                }\n            }\n\n            return that._selectDeferred.promise();\n        },\n\n        bound: function(bound) {\n            if (bound === undefined$1) {\n                return this._listCreated;\n            }\n\n            this._listCreated = bound;\n        },\n\n        mute: function(callback) {\n            this._mute = true;\n            callback();\n            this._mute = false;\n        },\n\n        setDSFilter: function(filter) {\n            this._lastDSFilter = $.extend({}, filter);\n        },\n\n        isFiltered: function() {\n            if (!this._lastDSFilter) {\n                this.setDSFilter(this.dataSource.filter());\n            }\n\n            return !kendo.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);\n        },\n\n        skipUpdate: $.noop,\n\n        _getElementByIndex: function(index) {\n            return this.items().filter(function(idx, element) {\n                return index === parseInt($(element).attr(\"data-offset-index\"), 10);\n            });\n        },\n\n        _getElementByDataItem: function(dataItem) {\n            var dataView = this._dataView,\n            valueGetter = this._valueGetter,\n                element, match;\n\n            for (var i = 0; i < dataView.length; i++) {\n                match = dataView[i].item && isPrimitive(dataView[i].item) ? dataView[i].item === dataItem : dataView[i].item && dataItem && valueGetter(dataView[i].item) == valueGetter(dataItem);\n                if (match) {\n                    element = dataView[i];\n                    break;\n                }\n            }\n\n            return element ? this._getElementByIndex(element.index) : $();\n        },\n\n        _clean: function() {\n            this.result = undefined$1;\n            this._lastScrollTop = undefined$1;\n            this._skip = undefined$1;\n            $(this.heightContainer).remove();\n            this.heightContainer = undefined$1;\n            this.element.empty();\n        },\n\n        _height: function() {\n            var hasData = !!this.dataSource.view().length,\n                height = this.options.height,\n                itemHeight = this.options.itemHeight,\n                total = this.dataSource.total();\n\n            if (!hasData) {\n                height = 0;\n            } else if (height / itemHeight > total) {\n                height = total * itemHeight;\n            }\n\n            return height;\n        },\n\n        setScreenHeight: function() {\n            var height = this._height();\n\n            this.content.height(height);\n            this._screenHeight = height;\n        },\n\n        screenHeight: function() {\n            return this._screenHeight;\n        },\n\n        _getElementLocation: function(index) {\n            var scrollTop = this.content.scrollTop(),\n                screenHeight = this._screenHeight,\n                itemHeight = this.options.itemHeight,\n                yPosition = index * itemHeight,\n                yDownPostion = yPosition + itemHeight,\n                screenEnd = scrollTop + screenHeight,\n                position;\n\n            if (yPosition === (scrollTop - itemHeight) || (yDownPostion > scrollTop && yPosition < scrollTop)) {\n                position = \"top\";\n            } else if (yPosition === screenEnd || (yPosition < screenEnd && screenEnd < yDownPostion)) {\n                position = \"bottom\";\n            } else if ((yPosition >= scrollTop) && (yPosition <= scrollTop + (screenHeight - itemHeight))) {\n                position = \"inScreen\";\n            } else {\n                position = \"outScreen\";\n            }\n\n            return position;\n        },\n\n        _templates: function() {\n            var options = this.options;\n            var templates = {\n                template: options.template,\n                placeholderTemplate: options.placeholderTemplate,\n                groupTemplate: options.groupTemplate,\n                fixedGroupTemplate: options.fixedGroupTemplate\n            };\n\n            if (options.columns) {\n                options.columns.forEach((column, i) => {\n                    var templateText = column.field ? column.field.toString() : \"text\";\n                    var templateFunc = data => encode(kendo.getter(templateText)(data));\n\n                    templates[\"column\" + i] = column.template || templateFunc;\n                });\n            }\n\n            for (var key in templates) {\n                if (typeof templates[key] !== \"function\") {\n                    templates[key] = kendo.template(templates[key] || \"\");\n                }\n            }\n\n            this.templates = templates;\n        },\n\n        _generateItems: function(element, count) {\n            var items = [],\n                item, text,\n                itemHeight = this.options.itemHeight + \"px\",\n                itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            while (count-- > 0) {\n                text = document.createElement(\"span\");\n                text.className = \"k-list-item-text\";\n\n                item = document.createElement(\"li\");\n                item.tabIndex = -1;\n                item.className = itemClass;\n                item.setAttribute(\"role\", \"option\");\n                item.style.height = itemHeight;\n                item.style.minHeight = itemHeight;\n                item.appendChild(text);\n\n                element.appendChild(item);\n\n                items.push(item);\n            }\n\n            return items;\n        },\n\n        _saveInitialRanges: function() {\n            var ranges = this.dataSource._ranges;\n            var deferred = $.Deferred();\n            deferred.resolve();\n\n            this._rangesList = {};\n            for (var i = 0; i < ranges.length; i++) {\n                this._rangesList[ranges[i].start] = { end: ranges[i].end, deferred: deferred };\n            }\n        },\n\n        _createList: function() {\n            var that = this,\n                content = that.content.get(0),\n                options = that.options,\n                dataSource = that.dataSource;\n\n            if (that.bound()) {\n                that._clean();\n            }\n\n            that._saveInitialRanges();\n            that._buildValueGetter();\n            that.setScreenHeight();\n            that.itemCount = getItemCount(that._screenHeight, options.listScreens, options.itemHeight);\n\n            if (that.itemCount > dataSource.total()) {\n                that.itemCount = dataSource.total();\n            }\n\n            that._items = that._generateItems(that.element[0], that.itemCount);\n\n            that._setHeight(options.itemHeight * dataSource.total());\n            that.options.type = (dataSource.group() || []).length ? \"group\" : \"flat\";\n\n            if (that.options.type === \"flat\") {\n                if (that.header.closest(GROUP_ROW_SEL).length) {\n                    that.header.closest(GROUP_ROW_SEL).hide();\n                } else {\n                    that.header.hide();\n                }\n            } else {\n                if (that.header.closest(GROUP_ROW_SEL).length) {\n                    that.header.closest(GROUP_ROW_SEL).show();\n                } else {\n                    that.header.show();\n                }\n            }\n\n            that.getter = that._getter(function() {\n                that._renderItems(true);\n            });\n\n            that._onScroll = function(scrollTop, force) {\n                var getList = that._listItems(that.getter);\n                return that._fixedHeader(scrollTop, getList(scrollTop, force));\n            };\n\n            that._renderItems = that._whenChanged(\n                scrollCallback(content, that._onScroll),\n                syncList(that._reorderList(that._items, render.bind(that)))\n            );\n\n            that._renderItems();\n            that._calculateGroupPadding(that._screenHeight);\n            that._calculateColumnsHeaderPadding();\n        },\n\n        _setHeight: function(height) {\n            var currentHeight,\n                heightContainer = this.heightContainer;\n\n            if (!heightContainer) {\n                heightContainer = this.heightContainer = appendChild(this.content[0], HEIGHTCONTAINER);\n            } else {\n                currentHeight = heightContainer.offsetHeight;\n            }\n\n            if (height !== currentHeight) {\n                heightContainer.innerHTML = \"\";\n\n                while (height > 0) {\n                    var padHeight = Math.min(height, 250000); //IE workaround, should not create elements with height larger than 250000px\n                    appendChild(heightContainer).style.height = padHeight + \"px\";\n                    height -= padHeight;\n                }\n            }\n        },\n\n        _getter: function() {\n            var lastRequestedRange = null,\n                dataSource = this.dataSource,\n                lastRangeStart = dataSource.skip(),\n                type = this.options.type,\n                pageSize = this.itemCount,\n                flatGroups = {};\n\n            if (dataSource.pageSize() < pageSize) {\n                this.mute(function() {\n                    dataSource.pageSize(pageSize);\n                });\n            }\n\n            return function(index, rangeStart) {\n                var that = this;\n                if (!dataSource.inRange(rangeStart, pageSize)) {\n                    if (lastRequestedRange !== rangeStart) {\n                        lastRequestedRange = rangeStart;\n                        lastRangeStart = rangeStart;\n\n                        if (that._getterDeferred) {\n                            that._getterDeferred.reject();\n                        }\n\n                        that._getterDeferred = that.deferredRange(rangeStart);\n                        that._getterDeferred.then(function() {\n                            var firstItemIndex = that._indexConstraint(that.content[0].scrollTop);\n\n                            that._getterDeferred = null;\n\n                            if (rangeStart <= firstItemIndex && firstItemIndex <= (rangeStart + pageSize)) {\n                                that._fetching = true;\n                                dataSource.range(rangeStart, pageSize);\n                            }\n                        });\n                    }\n\n                    return null;\n                } else {\n                    if (lastRangeStart !== rangeStart) {\n                        this.mute(function() {\n                            dataSource.range(rangeStart, pageSize);\n                            lastRangeStart = rangeStart;\n                        });\n                    }\n\n                    var result;\n                    if (type === \"group\") { //grouped list\n                        if (!flatGroups[rangeStart]) {\n                            var flatGroup = flatGroups[rangeStart] = [];\n                            var groups = dataSource.view();\n                            for (var i = 0, len = groups.length; i < len; i++) {\n                                var group = groups[i];\n                                for (var j = 0, groupLength = group.items.length; j < groupLength; j++) {\n                                    flatGroup.push({ item: group.items[j], group: group.value });\n                                }\n                            }\n                        }\n\n                        result = flatGroups[rangeStart][index - rangeStart];\n                    } else { //flat list\n                        result = dataSource.view()[index - rangeStart];\n                    }\n\n                    return result;\n                }\n            };\n        },\n\n        _fixedHeader: function(scrollTop, list) {\n            var group = this.currentVisibleGroup,\n                itemHeight = this.options.itemHeight,\n                firstVisibleDataItemIndex = Math.floor((scrollTop - list.top) / itemHeight),\n                firstVisibleDataItem = list.items[firstVisibleDataItemIndex];\n\n            if (firstVisibleDataItem && firstVisibleDataItem.item) {\n                var firstVisibleGroup = firstVisibleDataItem.group;\n\n                if (firstVisibleGroup !== group) {\n                    var fixedGroupText = firstVisibleGroup || \"\";\n                    this.header.html(this.templates.fixedGroupTemplate(fixedGroupText));\n                    this.currentVisibleGroup = firstVisibleGroup;\n                }\n            }\n\n            return list;\n        },\n\n        _itemMapper: function(item, index, value) {\n            var listType = this.options.type,\n                itemHeight = this.options.itemHeight,\n                currentIndex = this._focusedIndex,\n                selected = false,\n                current = false,\n                newGroup = false,\n                group = null,\n                match = false,\n                valueGetter = this._valueGetter;\n\n            if (listType === \"group\") {\n                if (item) {\n                    newGroup = index === 0 || (this._currentGroup !== false && this._currentGroup !== item.group);\n                    this._currentGroup = item.group;\n                }\n\n                group = item ? item.group : null;\n                item = item ? item.item : null;\n            }\n\n            if (this.options.mapValueTo === \"dataItem\" && this._selectedDataItems.length && item) {\n                for (var i = 0; i < this._selectedDataItems.length; i++) {\n                    match = valueGetter(this._selectedDataItems[i]) === valueGetter(item);\n                    if (match) {\n                        selected = true;\n                        break;\n                    }\n                }\n            } else if (!this.isFiltered() && value.length && item) {\n                for (var j = 0; j < value.length; j++) {\n                    match = isPrimitive(item) ? value[j] === item : value[j] === valueGetter(item);\n                    if (match) {\n                        value.splice(j , 1);\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n\n            if (currentIndex === index) {\n                current = true;\n            }\n\n            return {\n                item: item ? item : null,\n                group: group,\n                newGroup: newGroup,\n                selected: selected,\n                current: current,\n                index: index,\n                top: index * itemHeight\n            };\n        },\n\n        _range: function(index) {\n            var itemCount = this.itemCount,\n                value = this._values.slice(),\n                items = [],\n                item;\n\n            this._view = {};\n            this._currentGroup = false;\n\n            for (var i = index, length = index + itemCount; i < length; i++) {\n                item = this._itemMapper(this.getter(i, index), i, value);\n                if (items[items.length - 1]) {\n                    items[items.length - 1].isLastGroupedItem = item.newGroup;\n                }\n                items.push(item);\n                this._view[item.index] = item;\n            }\n\n            this._dataView = items;\n            return items;\n        },\n\n        _getDataItemsCollection: function(scrollTop, lastScrollTop) {\n            var items = this._range(this._listIndex(scrollTop, lastScrollTop));\n            return {\n                index: items.length ? items[0].index : 0,\n                top: items.length ? items[0].top : 0,\n                items: items\n            };\n        },\n\n        _listItems: function() {\n            var screenHeight = this._screenHeight,\n                options = this.options;\n\n            var theValidator = listValidator(options, screenHeight);\n\n            return (function(value, force) {\n                var result = this.result,\n                    lastScrollTop = this._lastScrollTop;\n\n                if (force || !result || !theValidator(result, value, lastScrollTop)) {\n                    result = this._getDataItemsCollection(value, lastScrollTop);\n                }\n\n                this._lastScrollTop = value;\n                this.result = result;\n\n                return result;\n            }).bind(this);\n        },\n\n        _whenChanged: function(getter, callback) {\n            var current;\n\n            return function(force) {\n                var theNew = getter(force);\n\n                if (theNew !== current) {\n                    current = theNew;\n                    callback(theNew, force);\n                }\n            };\n        },\n\n        _reorderList: function(list, reorder) {\n            var that = this;\n            var length = list.length;\n            var currentOffset = -Infinity;\n            reorder = map2(reorder, this.templates).bind(this);\n\n            return function(list2, offset, force) {\n                var diff = offset - currentOffset;\n                var range, range2;\n\n                if (force || Math.abs(diff) >= length) { // full reorder\n                    range = list;\n                    range2 = list2;\n                } else { // partial reorder\n                    range = reshift(list, diff);\n                    range2 = diff > 0 ? list2.slice(-diff) : list2.slice(0, -diff);\n                }\n\n                reorder(range, range2, that.bound());\n\n                currentOffset = offset;\n            };\n        },\n\n        _bufferSizes: function() {\n            var options = this.options;\n\n            return bufferSizes(this._screenHeight, options.listScreens, options.oppositeBuffer);\n        },\n\n        _indexConstraint: function(position) {\n            var itemCount = this.itemCount,\n                itemHeight = this.options.itemHeight,\n                total = this.dataSource.total();\n\n            return Math.min(Math.max(total - itemCount, 0), Math.max(0, Math.floor(position / itemHeight )));\n        },\n\n        _listIndex: function(scrollTop, lastScrollTop) {\n            var buffers = this._bufferSizes(),\n                position;\n\n            position = scrollTop - ((scrollTop > lastScrollTop) ? buffers.down : buffers.up);\n\n            return this._indexConstraint(position);\n        },\n\n        _selectable: function() {\n            var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            if (this.options.selectable) {\n                this._selectProxy = this._clickHandler.bind(this);\n                this.element.on(CLICK + VIRTUAL_LIST_NS, \".\" + itemClass, this._selectProxy);\n            }\n        },\n\n        getElementIndex: function(element) {\n            if (!(element instanceof jQuery)) {\n                return undefined$1;\n            }\n\n            return parseInt(element.attr(\"data-offset-index\"), 10);\n        },\n\n        _getIndecies: function(candidate) {\n            var result = [], data;\n\n            if (typeof candidate === \"function\") {\n                data = this.dataSource.flatView();\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        result.push(idx);\n                        break;\n                    }\n                }\n            }\n\n            if (typeof candidate === \"number\") {\n                result.push(candidate);\n            }\n\n            var elementIndex = this.getElementIndex(candidate);\n            if (!isNaN(elementIndex)) {\n                result.push(elementIndex);\n            }\n\n            if (candidate instanceof Array) {\n                result = candidate;\n            }\n\n            return result;\n        },\n\n        _deselect: function(indices) {\n            var removed = [],\n                selectedIndex,\n                dataItem,\n                selectedIndexes = this._selectedIndexes,\n                selectedDataItems = this._selectedDataItems,\n                position = 0,\n                selectable = this.options.selectable,\n                removedindexesCounter = 0,\n                valueGetter = this._valueGetter,\n                item, match,\n                result = null;\n\n            indices = indices.slice();\n\n            if (selectable === true || !indices.length) { //deselect everything\n                for (var idx = 0; idx < selectedIndexes.length; idx++) {\n                    if (selectedIndexes[idx] !== undefined$1) {\n                        this._getElementByIndex(selectedIndexes[idx]).removeClass(SELECTED);\n                    } else if (selectedDataItems[idx]) {\n                        this._getElementByDataItem(selectedDataItems[idx]).removeClass(SELECTED);\n                    }\n\n                    removed.push({\n                        index: selectedIndexes[idx],\n                        position: idx,\n                        dataItem: selectedDataItems[idx]\n                    });\n                }\n\n                this._values = [];\n                this._selectedDataItems = [];\n                this._selectedIndexes = [];\n            } else if (selectable === \"multiple\") {\n                let i = 0;\n                while (i < indices.length) {\n                    result = null;\n                    position = $.inArray(indices[i], selectedIndexes);\n                    dataItem = this.dataItemByIndex(indices[i]);\n\n                    if (position === -1 && dataItem) {\n                        for (var j = 0; j < selectedDataItems.length; j++) {\n                            match = isPrimitive(dataItem) ? selectedDataItems[j] === dataItem : valueGetter(selectedDataItems[j]) === valueGetter(dataItem);\n                            if (match) {\n                                item = this._getElementByIndex(indices[i]);\n                                result = this._deselectSingleItem(item, j, indices[i], removedindexesCounter);\n                            }\n                        }\n                    } else {\n                        selectedIndex = selectedIndexes[position];\n\n                        if (selectedIndex !== undefined$1) {\n                            item = this._getElementByIndex(selectedIndex);\n                            result = this._deselectSingleItem(item, position, selectedIndex, removedindexesCounter);\n                        }\n                    }\n\n                    if (result) {\n                        indices.splice(i, 1);\n                        removed.push(result);\n\n                        removedindexesCounter++;\n                        i--;\n                    }\n                    i++;\n                }\n            }\n\n            return {\n                indices: indices,\n                removed: removed\n            };\n        },\n\n        _deselectSingleItem: function(item, position, selectedIndex, removedindexesCounter) {\n            var dataItem;\n\n            if (!item.hasClass(SELECTED)) {\n                return;\n            }\n\n            item.removeClass(SELECTED);\n            this._values.splice(position, 1);\n            this._selectedIndexes.splice(position, 1);\n            dataItem = this._selectedDataItems.splice(position, 1)[0];\n\n            return {\n                index: selectedIndex,\n                position: position + removedindexesCounter,\n                dataItem: dataItem\n            };\n        },\n\n        _deselectCurrentValues: function(indices) {\n            var children = this.element[0].children;\n            var value, index, position;\n            var values = this._values;\n            var removed = [];\n            var idx = 0;\n            var j;\n\n            if (this.options.selectable !== \"multiple\" || !this.isFiltered()) {\n                return [];\n            }\n\n            if (indices[0] === -1) {\n                $(children).removeClass(SELECTED);\n                removed = $.map(this._selectedDataItems.slice(0), function(dataItem, idx) {\n                   return {\n                      dataItem: dataItem,\n                      position: idx\n                   };\n                });\n                this._selectedIndexes = [];\n                this._selectedDataItems = [];\n                this._values = [];\n                return removed;\n            }\n\n            for (; idx < indices.length; idx++) {\n                position = -1;\n                index = indices[idx];\n                if (this.dataItemByIndex(index)) {\n                    value = this._valueGetter(this.dataItemByIndex(index));\n                }\n\n                for (j = 0; j < values.length; j++) {\n                    if (value == values[j]) {\n                        position = j;\n                        break;\n                    }\n                }\n\n                if (position > -1) {\n                    removed.push(this.removeAt(position));\n                    $(children[index]).removeClass(SELECTED);\n                }\n            }\n\n            return removed;\n        },\n\n        _getSkip: function(index, take) {\n            var page = index < take ? 1 : Math.floor(index / take) + 1;\n\n            return (page - 1) * take;\n        },\n\n        _select: function(indexes) {\n            var that = this,\n                singleSelection = this.options.selectable !== \"multiple\",\n                dataSource = this.dataSource,\n                dataItem, oldSkip,\n                take = this.itemCount,\n                valueGetter = this._valueGetter,\n                added = [];\n\n            if (singleSelection) {\n                that._selectedIndexes = [];\n                that._selectedDataItems = [];\n                that._values = [];\n            }\n\n            oldSkip = dataSource.skip();\n\n            $.each(indexes, function(_, index) {\n                var skip = that._getSkip(index, take);\n\n                that.mute(function() {\n                    dataSource.range(skip, take); //switch the range to get the dataItem\n\n                    dataItem = that._findDataItem(dataSource.view(), [index - skip]);\n                    that._selectedIndexes.push(index);\n                    that._selectedDataItems.push(dataItem);\n                    that._values.push(isPrimitive(dataItem) ? dataItem : valueGetter(dataItem));\n\n                    added.push({\n                        index: index,\n                        dataItem: dataItem\n                    });\n\n                    that._getElementByIndex(index).addClass(SELECTED);\n\n                    dataSource.range(oldSkip, take); //switch back the range\n                });\n            });\n\n            that._values = that._checkValuesOrder(that._values);\n\n            return added;\n        },\n\n        _clickHandler: function(e) {\n            var item = $(e.currentTarget);\n\n            if (!e.isDefaultPrevented() && item.attr(\"data-uid\")) {\n                this.trigger(CLICK, { item: item });\n            }\n        },\n\n        _buildValueGetter: function() {\n            this._valueGetter = kendo.getter(this.options.dataValueField);\n        },\n\n        _calculateGroupPadding: function(height) {\n            var firstItem = this.items().first(),\n                groupHeader = this.header,\n                padding = 0;\n\n            if (groupHeader[0] && groupHeader[0].style.display !== \"none\") {\n                if (height !== \"auto\") {\n                    padding = kendo.support.scrollbar();\n                }\n\n                padding += parseFloat(firstItem.css(\"border-right-width\"), 10) + parseFloat(firstItem.children(\".k-group\").css(\"right\"), 10);\n\n                groupHeader.css(\"padding-right\", padding);\n            }\n        },\n\n        _calculateColumnsHeaderPadding: function() {\n            if (this.options.columns && this.options.columns.length) {\n                var isRtl = kendo.support.isRtl(this.wrapper);\n                var scrollbar = kendo.support.scrollbar();\n                var columnsHeader = this.content.parent().parent().find(\".k-table-header\");\n                var total = this.dataSource.total();\n\n                columnsHeader.css((isRtl ? \"padding-left\" : \"padding-right\"), total ? scrollbar : 0);\n            }\n        }\n\n    });\n\n    kendo.ui.VirtualList = VirtualList;\n    kendo.ui.plugin(VirtualList);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}