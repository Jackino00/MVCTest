{"version":3,"sources":["raw-mjs/kendo.dataviz.sankey.js"],"names":["Sankey","defined","createSankeyData","kendo","window","Widget","ui","encode","htmlEncode","styleAttr","tooltipContentWrapStyle","TootipText","text","Square","color","TooltipTemplates","node","dataItem","value","label","link","rtl","source","target","icon","SankeyTooltip","extend","init","element","options","this","fn","call","addClass","append","size","width","outerWidth","height","outerHeight","setContent","content","find","html","each","i","el","getAttribute","split","filter","s","forEach","parts","style","trim","removeAttribute","setPosition","popupAlign","popupOffset","offsetOption","offset","left","horizontal","vertical","top","css","show","hide","destroy","remove","deepExtend","dataviz","Tooltip","ContentTemplates","jQuery","__meta__","id","name","category","description","depends","features","$","template","isRtl","support","Sankey$1","userOptions","empty","_parseAriaLabelTemplates","wrapper","_initSankey","_attachEvents","notify","_showWatermarkOverlay","setOptions","currentOptions","events","eventName","unbind","resultOptions","_instance","bind","themeOptions","_getThemeOptions","seriesColors","nodeColors","axisDefaults","seriesDefaults","legend","title","line","links","labels","strokeColor","background","_createSankey","stroke","themeName","theme","SASS_THEMES","indexOf","toLowerCase","autoTheme","chart","themes","nodes","ariaTemplate","event","_events","handler","undefined","tooltipShow","tooltipHide","e","tooltip","nodeTemplate","linkTemplate","_tooltip","doc","ownerDocument","createElement","appendTo","body","currentTemplate","targetType","format","messages","tooltipUnits","nodeValue","tooltipData","exportVisual","exportOptions","ExportMixin","PDFMixin","plugin","kendo$1"],"mappings":"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","file":"kendo.dataviz.sankey.js","sourcesContent":["import { k as Sankey, e as defined, l as createSankeyData } from './kendo.charts.cmn.chunk.js';\nimport './kendo.dataviz.core.js';\nimport './kendo.dataviz.themes.js';\n\n(function($) {\n    var kendo = window.kendo;\n    var Widget = kendo.ui.Widget;\n\n    var encode = kendo.htmlEncode;\n    var styleAttr = '__style';\n    var tooltipContentWrapStyle = `${styleAttr}=\"display: flex; align-items: center;\"`;\n    var space = 3;\n    var TootipText = (text) => `<span ${styleAttr}=\"margin: 0 ${space}px\">${text}</span>`;\n    var Square = (color) => `<div ${styleAttr}=\"width: 15px; height: 15px; background-color: ${color}; display: inline-flex; margin-left: ${space}px\"></div>`;\n    var TooltipTemplates = {\n        node: function({ dataItem, value }) {\n            const { color, label } = dataItem;\n            return (\n                `<div ${tooltipContentWrapStyle}>\n                    ${Square(color)}\n                    ${TootipText(encode(label.text))}\n                    ${TootipText(value)}\n                </div>`\n            );\n        },\n        link: function({ dataItem, value, rtl }) {\n            const { source, target } = dataItem;\n            return (\n                `<div ${tooltipContentWrapStyle}>\n                    ${Square(source.color)}\n                    ${TootipText(encode(source.label.text))}\n                    ${TootipText(kendo.ui.icon({ icon: rtl ? \"arrow-left\" : \"arrow-right\" }))}\n                    ${Square(target.color)}\n                    ${TootipText(encode(target.label.text))}\n                    ${TootipText(value)}\n                </div>`\n            );\n        }\n    };\n\n    var SankeyTooltip = Widget.extend({\n        init: function(element, options) {\n            this.options = options;\n\n            Widget.fn.init.call(this, element);\n\n            if (options.rtl) {\n                this.element.addClass('k-rtl');\n            }\n\n            this.element.addClass('k-tooltip k-chart-tooltip k-chart-shared-tooltip')\n                .append('<div class=\"k-tooltip-content\"></div>');\n        },\n\n        size: function() {\n            return {\n                width: this.element.outerWidth(),\n                height: this.element.outerHeight()\n            };\n        },\n\n        setContent: function(content) {\n            this.element.find('.k-tooltip-content').html(content);\n            this.element.find(`[${styleAttr}]`).each((i, el) => {\n                el.getAttribute(styleAttr)\n                    .split(';')\n                    .filter(s => s !== '')\n                    .forEach(s => {\n                        const parts = s.split(':');\n                        el.style[parts[0].trim()] = parts[1].trim();\n                    });\n                el.removeAttribute(styleAttr);\n            });\n        },\n\n        setPosition: function(popupAlign, popupOffset, offsetOption) {\n            const size = this.size();\n            const offset = { ...popupOffset };\n\n            offset.left += (popupAlign.horizontal === 'left') ? offsetOption : (-1 * offsetOption);\n            if (popupAlign.horizontal === 'right') {\n                offset.left -= size.width;\n            }\n\n            if (popupAlign.vertical === 'bottom') {\n                offset.top -= size.height + offsetOption;\n            } else {\n                offset.top += offsetOption;\n            }\n\n            this.element.css(offset);\n        },\n\n        show: function() {\n            this.element.show();\n        },\n\n        hide: function() {\n            this.element.hide();\n        },\n\n        destroy: function() {\n            this.element.remove();\n        }\n    });\n\n    kendo.deepExtend(kendo.dataviz, {\n        SankeyTooltip: {\n            Tooltip: SankeyTooltip,\n            ContentTemplates: TooltipTemplates\n        }\n    });\n})(window.kendo.jQuery);\n\nconst __meta__ = {\n    id: \"dataviz.sankey\",\n    name: \"Sankey\",\n    category: \"dataviz\",\n    description: \"The Sankey widget uses modern browser technologies to render high-quality data visualizations in the browser.\",\n    depends: [\"data\", \"userevents\", \"drawing\", \"dataviz.core\", \"dataviz.themes\", \"charts.cmn.chunk\"],\n    features: [{\n        id: \"dataviz.sankey-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export Sankey as PDF\",\n        depends: [ \"pdf\" ]\n    }]\n};\n\n(function($) {\n    window.kendo.dataviz = window.kendo.dataviz || {};\n\n    const kendo = window.kendo;\n    const template = kendo.template;\n    const Widget = kendo.ui.Widget;\n    const dataviz = kendo.dataviz;\n    const encode = kendo.htmlEncode;\n    const isRtl = kendo.support.isRtl;\n    const NODE_CLICK = \"nodeClick\";\n    const LINK_CLICK = \"linkClick\";\n    const NODE_ENTER = \"nodeEnter\";\n    const NODE_LEAVE = \"nodeLeave\";\n    const LINK_ENTER = \"linkEnter\";\n    const LINK_LEAVE = \"linkLeave\";\n    const TOOLTIP_SHOW = \"tooltipShow\";\n    const TOOLTIP_HIDE = \"tooltipHide\";\n    const NODE = 'node';\n\n    const { Tooltip, ContentTemplates } = dataviz.SankeyTooltip;\n\n    const Sankey$1 = Widget.extend({\n        init: function(element, userOptions) {\n            kendo.destroy(element);\n            $(element).empty();\n\n            this.options = kendo.deepExtend({}, this.options, userOptions, { rtl: isRtl(element) });\n\n            this._parseAriaLabelTemplates(this.options);\n\n            Widget.fn.init.call(this, element);\n\n            this.wrapper = this.element;\n            this._initSankey();\n\n            this._attachEvents();\n\n            kendo.notify(this, dataviz.ui);\n\n            if (this._showWatermarkOverlay) {\n                this._showWatermarkOverlay(this.wrapper[0]);\n            }\n        },\n\n        setOptions: function(options) {\n            var currentOptions = this.options;\n\n            this.events.forEach(eventName => {\n                if (currentOptions[eventName]) {\n                    this.unbind(eventName, currentOptions[eventName]);\n                }\n            });\n\n            const resultOptions = kendo.deepExtend(options, { rtl: isRtl(this.element) });\n            this._parseAriaLabelTemplates(resultOptions);\n            this._instance.setOptions(resultOptions);\n\n            this.bind(this.events, this._instance.options);\n        },\n\n        _initSankey: function() {\n            const themeOptions = this._getThemeOptions(this.options);\n            const { seriesColors: nodeColors, axisDefaults, seriesDefaults, legend, title } = themeOptions;\n            const { line: links, labels } = axisDefaults;\n            const strokeColor = seriesDefaults.labels.background;\n\n            this._createSankey(this.options, { nodeColors, links, labels: { ...labels, stroke: { color: strokeColor } }, legend, title });\n            this.options = this._instance.options;\n        },\n\n        _createSankey: function(options, themeOptions) {\n            this._instance = new Sankey(this.element[0], options, themeOptions);\n        },\n\n        _getThemeOptions: function(userOptions) {\n            var themeName = (userOptions || {}).theme;\n\n            if (themeName && dataviz.SASS_THEMES.indexOf(themeName.toLowerCase()) !== -1) {\n                return dataviz.autoTheme().chart;\n            }\n\n            if (defined(themeName)) {\n                var themes = dataviz.ui.themes || {};\n                var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                return theme.chart || {};\n            }\n        },\n\n        _parseAriaLabelTemplates: function(options) {\n            const { nodes, links } = options;\n\n            if (nodes && nodes.labels && nodes.labels.ariaTemplate) {\n                nodes.labels.ariaTemplate = template(nodes.labels.ariaTemplate);\n            }\n\n            if (links && links.labels && links.labels.ariaTemplate) {\n                links.labels.ariaTemplate = template(links.labels.ariaTemplate);\n            }\n        },\n\n        _attachEvents: function() {\n            this.events.forEach(eventName => {\n                this._instance.bind(eventName, event => {\n                    if (this._events[eventName]) {\n                        this._events[eventName].forEach(handler => handler.call(undefined, event));\n                    }\n                });\n            });\n\n            this._instance.bind(TOOLTIP_SHOW, this.tooltipShow.bind(this));\n            this._instance.bind(TOOLTIP_HIDE, this.tooltipHide.bind(this));\n        },\n\n        tooltipShow: function(e) {\n            const { tooltip, rtl } = this.options;\n            const { nodeTemplate, linkTemplate, offset } = tooltip;\n\n            if (!this._tooltip) {\n                const doc = this.element[0].ownerDocument;\n                this._tooltip = new Tooltip(doc.createElement('div'), { rtl });\n                const { appendTo = doc.body } = this.options.tooltip;\n                this._tooltip.element.appendTo($(appendTo));\n            }\n\n            const currentTemplate = template((e.targetType === NODE ? nodeTemplate : linkTemplate) || ContentTemplates[e.targetType]);\n            const value = encode(kendo.format(this.options.messages.tooltipUnits, defined(e.nodeValue) ? e.nodeValue : e.dataItem.value));\n\n            this._tooltip.setContent(currentTemplate({ dataItem: e.dataItem, value, rtl }));\n            this._tooltip.setPosition(e.tooltipData.popupAlign, e.tooltipData.popupOffset, offset);\n            this._tooltip.show();\n        },\n\n        tooltipHide: function() {\n            if (this._tooltip) {\n                this._tooltip.destroy();\n                this._tooltip = null;\n            }\n        },\n\n        exportVisual: function(exportOptions) {\n            return this._instance.exportVisual(exportOptions);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this.tooltipHide();\n            this._instance.destroy();\n            this._instance = null;\n        },\n\n        events: [\n            NODE_CLICK,\n            LINK_CLICK,\n            NODE_ENTER,\n            NODE_LEAVE,\n            LINK_ENTER,\n            LINK_LEAVE\n        ],\n        options: {\n            name: \"Sankey\",\n            theme: \"default\",\n            tooltip: {\n                offset: 12\n            },\n            messages: {\n                tooltipUnits: \"({0} Units)\"\n            }\n        }\n    });\n\n    dataviz.ExportMixin.extend(Sankey$1.fn);\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(Sankey$1.fn);\n    }\n\n    dataviz.ui.plugin(Sankey$1);\n\n    kendo.deepExtend(dataviz, {\n        Sankey: Sankey$1,\n        createSankeyData: createSankeyData\n    });\n\n})(window.kendo.jQuery);\n\n\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}