{"version":3,"sources":["raw-mjs/kendo.dataviz.stock.js"],"names":["NAVIGATOR_AXIS","NAVIGATOR_PANE","StockChart","InstanceObserver","defined","inArray","constants","Navigator","NavigatorHint","__meta__","id","name","category","description","depends","window","kendo","dataviz","Chart","ui","deepExtend","NAVIGATOR_AXIS$1","NAVIGATOR_PANE$1","CHANGE","StockChart$1","extend","options","dateField","axisDefaults","categoryAxis","type","baseUnit","justified","valueAxis","narrowRange","labels","format","navigator","select","seriesDefaults","markers","visible","tooltip","template","toString","line","width","hint","legend","persistSeriesVisibility","_createChart","themeOptions","this","_initNavigatorOptions","_instance","element","observer","showTooltip","hideTooltip","legendItemClick","render","init","drilldown","navigatorFilter","navigatorCreated","sender","rtl","_isRtl","navigatorOptions","support","isTouch","touch","isFirefox","browser","mozilla","autoBindElements","dataSource","partialRedraw","liveDrag","_initDataSource","userOptions","hasServerFiltering","serverFiltering","mainAxis","concat","hasSelect","from","to","filter","parseDate","dummyAxis","DateCategoryAxis","categories","buildFilter","range","min","fn","call","_onNavigatorCreated","e","_navigator","_initNavigatorDataSource","autoBind","dsOptions","_navigatorDataChangedHandler","_onNavigatorDataChanged","bind","_navigatorDataSource","data","DataSource","create","fetch","_bindNavigatorSeries","series","seriesIx","currentSeries","seriesLength","length","axis","_isBindable","axisIx","currentAxis","naviCategories","chart","instance","categoryAxes","axesLength","view","_sourceSeries","pane","_bindCategoryAxis","_model","redraw","setRange","_dataBound","redrawSlaves","_bindCategories","copyNavigatorCategories","_onDataChanged","setOptions","_removeNavigatorDataSource","destroyNavigator","_onNavigatorFilter","requiresHandlers","names","navigatorDataSource","unbind","destroy","field","operator","value","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.dataviz.stock.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.dataviz.chart.js';\nimport { N as NAVIGATOR_AXIS, x as NAVIGATOR_PANE, y as StockChart, I as InstanceObserver, e as defined, j as inArray, z as constants, E as Navigator, F as NavigatorHint } from './kendo.charts.cmn.chunk.js';\n\nconst __meta__ = {\n    id: \"dataviz.stockchart\",\n    name: \"StockChart\",\n    category: \"dataviz\",\n    description: \"StockChart widget and associated financial series.\",\n    depends: [\"dataviz.chart\", \"charts.cmn.chunk\"]\n};\n\n(function($) {\n    window.kendo.dataviz = window.kendo.dataviz || {};\n\n    var kendo = window.kendo;\n    var dataviz = kendo.dataviz;\n    var Chart = dataviz.ui.Chart;\n    var deepExtend = kendo.deepExtend;\n    var NAVIGATOR_AXIS$1 = NAVIGATOR_AXIS;\n    var NAVIGATOR_PANE$1 = NAVIGATOR_PANE;\n    var CHANGE = \"change\";\n\n    var StockChart$1 = Chart.extend({\n\n        options: {\n            name: \"StockChart\",\n            dateField: \"date\",\n            axisDefaults: {\n                categoryAxis: {\n                    type: \"date\",\n                    baseUnit: \"fit\",\n                    justified: true\n                },\n                valueAxis: {\n                    narrowRange: true,\n                    labels: {\n                        format: \"C\"\n                    }\n                }\n            },\n            navigator: {\n                select: {},\n                seriesDefaults: {\n                    markers: {\n                        visible: false\n                    },\n                    tooltip: {\n                        visible: true,\n                        template: ({ category }) => kendo.toString(category, 'd')\n                    },\n                    line: {\n                        width: 2\n                    }\n                },\n                hint: {},\n                visible: true\n            },\n            tooltip: {\n                visible: true\n            },\n            legend: {\n                visible: false\n            },\n            persistSeriesVisibility: true\n        },\n\n        _createChart: function(options, themeOptions) {\n            this._initNavigatorOptions(options);\n            this._instance = new StockChart(this.element[0], options, themeOptions, {\n                observer: new InstanceObserver(this, {\n                    showTooltip: '_showTooltip',\n                    hideTooltip: '_hideTooltip',\n                    legendItemClick: '_onLegendItemClick',\n                    render: '_onRender',\n                    init: '_onInit',\n                    drilldown: '_onDrilldown',\n                    navigatorFilter: '_onNavigatorFilter',\n                    navigatorCreated: '_onNavigatorCreated'\n                }),\n                sender: this,\n                rtl: this._isRtl()\n            });\n        },\n\n        _initNavigatorOptions: function(options) {\n            var navigatorOptions = options.navigator || {};\n            var support = kendo.support;\n            var isTouch = support.touch;\n            var isFirefox = support.browser.mozilla;\n\n            deepExtend(navigatorOptions, {\n                autoBindElements: !navigatorOptions.dataSource,\n                partialRedraw: navigatorOptions.dataSource,\n                liveDrag: !isTouch && !isFirefox\n            });\n        },\n\n        _initDataSource: function(userOptions) {\n            var options = userOptions || {},\n                dataSource = options.dataSource,\n                hasServerFiltering = dataSource && dataSource.serverFiltering,\n                mainAxis = [].concat(options.categoryAxis)[0],\n                naviOptions = options.navigator || {},\n                select = naviOptions.select,\n                hasSelect = select && select.from && select.to;\n\n            if (hasServerFiltering && hasSelect) {\n                var filter = [].concat(dataSource.filter || []);\n\n                var from = kendo.parseDate(select.from);\n                var to = kendo.parseDate(select.to);\n                var dummyAxis = new dataviz.DateCategoryAxis(deepExtend({\n                    baseUnit: \"fit\"\n                }, mainAxis, {\n                    categories: [from, to]\n                }), kendo);\n\n                dataSource.filter = buildFilter(dummyAxis.range().min, to).concat(filter);\n            }\n\n            Chart.fn._initDataSource.call(this, userOptions);\n        },\n\n        _onNavigatorCreated: function(e) {\n            this._instance = e.sender;\n            this.options = e.sender.options;\n            this._navigator = this.navigator = e.navigator;\n            this._initNavigatorDataSource();\n        },\n\n        _initNavigatorDataSource: function() {\n            var navigatorOptions = this.options.navigator;\n            var autoBind = navigatorOptions.autoBind;\n            var dsOptions = navigatorOptions.dataSource;\n\n            if (dsOptions) {\n                this._navigatorDataChangedHandler = this._navigatorDataChangedHandler || this._onNavigatorDataChanged.bind(this);\n                this._navigatorDataSource = kendo.data.DataSource\n                    .create(dsOptions)\n                    .bind(CHANGE, this._navigatorDataChangedHandler);\n\n                if (!defined(autoBind)) {\n                   autoBind = this.options.autoBind;\n                }\n\n                if (autoBind) {\n                    this._navigatorDataSource.fetch();\n                }\n            }\n        },\n\n        _bindNavigatorSeries: function(series, data) {\n            var seriesIx, currentSeries,\n                seriesLength = series.length;\n\n            for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                currentSeries = series[seriesIx];\n\n                if (currentSeries.axis == NAVIGATOR_AXIS$1 && this._isBindable(currentSeries)) {\n                    currentSeries.data = data;\n                }\n            }\n        },\n\n        _onNavigatorDataChanged: function() {\n            var chart = this,\n                instance = chart._instance,\n                categoryAxes = chart.options.categoryAxis,\n                axisIx,\n                axesLength = categoryAxes.length,\n                data = chart._navigatorDataSource.view(),\n                currentAxis,\n                naviCategories;\n\n            this._bindNavigatorSeries(chart.options.series, data);\n            if (chart._sourceSeries) {\n                this._bindNavigatorSeries(chart._sourceSeries, data);\n            }\n\n            for (axisIx = 0; axisIx < axesLength; axisIx++) {\n                currentAxis = categoryAxes[axisIx];\n\n                if (currentAxis.pane == NAVIGATOR_PANE$1) {\n                    if (currentAxis.name == NAVIGATOR_AXIS$1) {\n                        chart._bindCategoryAxis(currentAxis, data, axisIx);\n                        naviCategories = currentAxis.categories;\n                    } else {\n                        currentAxis.categories = naviCategories;\n                    }\n                }\n            }\n\n            if (instance._model) {\n                var navigator = this.navigator;\n                navigator.redraw();\n                navigator.setRange();\n\n                if (!chart.options.dataSource || (chart.options.dataSource && chart._dataBound)) {\n                    navigator.redrawSlaves();\n                }\n            }\n        },\n\n        _bindCategories: function() {\n            Chart.fn._bindCategories.call(this);\n            if (this._instance) {\n                this._instance.copyNavigatorCategories();\n            }\n        },\n\n        _onDataChanged: function() {\n            Chart.fn._onDataChanged.call(this);\n\n            this._dataBound = true;\n        },\n\n        setOptions: function(options) {\n            this._removeNavigatorDataSource();\n            this._initNavigatorOptions(options);\n            this._instance.destroyNavigator();\n            Chart.fn.setOptions.call(this, options);\n        },\n\n        _onNavigatorFilter: function(e) {\n            this.dataSource.filter(buildFilter(e.from, e.to));\n        },\n\n        requiresHandlers: function(names) {\n            if (inArray('navigatorFilter', names)) {\n                var dataSource = this.dataSource;\n                var hasServerFiltering = dataSource && dataSource.options.serverFiltering;\n                return hasServerFiltering && this.options.navigator.dataSource;\n            }\n\n            return Chart.fn.requiresHandlers.call(this, names);\n        },\n\n        _removeNavigatorDataSource: function() {\n            var navigatorDataSource = this._navigatorDataSource;\n            if (navigatorDataSource) {\n                navigatorDataSource.unbind(CHANGE, this._navigatorDataChangedHandler);\n                delete this._navigatorDataSource;\n            }\n        },\n\n        destroy: function() {\n            Chart.fn.destroy.call(this);\n            this._removeNavigatorDataSource();\n        }\n    });\n\n    kendo.deepExtend(kendo.dataviz, {\n        constants: constants,\n        Navigator: Navigator,\n        NavigatorHint: NavigatorHint,\n        StockChart: StockChart$1\n    });\n\n    dataviz.ui.plugin(StockChart$1);\n\n    function buildFilter(from, to) {\n        return [{\n            field: \"Date\", operator: \"gte\", value: from\n        }, {\n            field: \"Date\", operator: \"lt\", value: to\n        }];\n    }\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}