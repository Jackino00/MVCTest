{"version":3,"sources":["raw-mjs/kendo.textarea.js"],"names":["addInputPrefixSuffixContainers","__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","isPlainObject","NS","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","STATEREADONLY","ARIA_DISABLED","TextArea","extend","init","element","options","that","this","fn","call","value","val","readonly","Boolean","attr","enable","placeholder","maxLength","replace","length","_wrapper","_label","_editable","disable","_applyAttributes","_applyCssClasses","widget","wrapper","floatingLabel","refresh","notify","events","attributes","label","resizable","cols","rows","rounded","size","fillMode","resize","overflow","layoutFlow","prefixOptions","separator","suffixOptions","action","cssProperties","getValidClass","propName","property","_value","focus","destroy","_inputLabel","remove","style","cssText","off","unwrap","setOptions","toggleClass","prop","removeClass","on","_focusin","bind","_focusout","floating","labelText","content","_floatingLabelContainer","wrap","parent","FloatingLabel","addClass","isFunction","guid","newValue","trigger","DOMElement","width","className","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1"],"mappings":"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","file":"kendo.textarea.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.floatinglabel.js';\nimport { a as addInputPrefixSuffixContainers } from './kendo.prefix-suffix-containers.chunk.js';\n\nconst __meta__ = {\n    id: \"textarea\",\n    name: \"TextArea\",\n    category: \"web\",\n    description: \"The TextArea widget represents a multi-line plain-text editing control which enables you to style and provide a floating label functionality to textarea elements\",\n    depends: [\"core\", \"floatinglabel\", \"prefix-suffix-containers.chunk\"]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        ui = kendo.ui,\n        isPlainObject = $.isPlainObject,\n        NS = \".kendoTextArea\",\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        INPUT = \"k-input-inner\",\n        FOCUSED = \"k-focus\",\n        LABELCLASSES = \"k-label k-input-label\",\n        FLOATINGLABELCLASS = \"k-floating-label\",\n        STATEDISABLED = \"k-disabled\",\n        STATEREADONLY = \"k-readonly\",\n        ARIA_DISABLED = \"aria-disabled\",\n        TEXTAREACONTAINER = \"k-textarea-container\";\n\n    var TextArea = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n\n            that.options.value = options.value || that.element.val();\n            that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n            that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n            that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n            that.options.maxLength = options.maxLength || that.element.attr(\"maxlength\");\n\n            if (!that.options.value.replace(/\\s/g, '').length) {\n                that.options.value = '';\n                that.element.val('');\n            }\n\n            that.value(that.options.value);\n            that._wrapper();\n            that._label();\n            that._editable({\n                readonly: that.options.readonly,\n                disable: !(that.options.enable)\n            });\n            that._applyAttributes();\n            that._applyCssClasses();\n            that.element.attr(\"autocomplete\", \"off\");\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        attributes: [\n            \"maxLength\",\n            \"rows\",\n            \"placeholder\"\n        ],\n\n        options: {\n            name: 'TextArea',\n            value: '',\n            readonly: false,\n            enable: true,\n            placeholder: '',\n            label: null,\n            resizable: \"none\",\n            maxLength: null,\n            cols: 20,\n            rows: 1,\n            rounded: \"medium\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            resize: \"none\",\n            overflow: \"auto\",\n            layoutFlow: \"vertical\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n\n        _applyCssClasses: function(action) {\n            var that = this,\n                options = that.options,\n                resize = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"resize\",\n                    value: options.resize\n                }),\n                overflow = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"overflow\",\n                    value: options.overflow\n                }),\n                layoutFlow = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"layoutFlow\",\n                    value: options.layoutFlow\n                });\n\n            Widget.fn._applyCssClasses.call(that);\n\n            if (!resize && options.resize === \"none\") {\n                resize = \"k-resize-none\";\n            }\n\n            if (overflow) {\n                overflow = \"!\" + overflow;\n            }\n\n            action = action || \"addClass\";\n\n            that.element[action](resize);\n            that.element[action](overflow);\n            that.element[action](INPUT);\n            that.wrapper[action](layoutFlow);\n            if (options.layoutFlow == \"vertical\") {\n                that.element[action](\"!k-flex-none\");\n            }\n        },\n\n        _applyAttributes: function() {\n            var that = this;\n            var property;\n            var attributes = {};\n\n            for (property in that.attributes) {\n                attributes[that.attributes[property]] = that.options[that.attributes[property]];\n            }\n\n            that.element.attr(attributes);\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            that._value = value;\n            that.element.val(value);\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        focus: function() {\n            var that = this;\n\n            that.element[0].focus();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that._applyCssClasses(\"removeClass\");\n\n            if (that.floatingLabel) {\n                that.floatingLabel.destroy();\n            }\n\n            if (that._inputLabel) {\n                that._inputLabel.remove();\n                that._inputLabel = null;\n            }\n\n            // Move the styles back to the element.\n            that.element[0].style.cssText = that.wrapper[0].style.cssText;\n\n            that.element.off(NS);\n            that.element.unwrap();\n            that.wrapper = null;\n            Widget.fn.destroy.call(that);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            that.destroy();\n            that.init(that.element, options);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var wrapper = that.wrapper;\n            var disable = options.disable;\n            var readonly = options.readonly;\n\n            element.off(NS);\n\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false)\n                       .attr(ARIA_DISABLED, false);\n\n                wrapper.removeClass(STATEDISABLED)\n                        .removeClass(STATEREADONLY);\n\n                element.on(\"focusin\" + NS, that._focusin.bind(that));\n                element.on(\"focusout\" + NS, that._focusout.bind(that));\n            } else {\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable);\n\n                wrapper.toggleClass(STATEDISABLED, disable)\n                        .toggleClass(STATEREADONLY, readonly);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    that._floatingLabelContainer.addClass(TEXTAREACONTAINER);\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n            }\n        },\n\n        _focusin: function() {\n            var that = this;\n\n            that.wrapper.addClass(FOCUSED);\n        },\n\n        _focusout: function() {\n            var that = this;\n            var value = that._value;\n            var newValue = that.element.val();\n\n            that.wrapper.removeClass(FOCUSED);\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            if (value !== newValue) {\n                that._value = newValue;\n\n                that.trigger(CHANGE);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n            var wrapper;\n\n            wrapper = element.wrap(\"<span class='k-input k-textarea'></span>\").parent();\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"\";\n\n            that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"TextArea\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"TextArea\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(TextArea);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}