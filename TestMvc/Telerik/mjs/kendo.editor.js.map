{"version":3,"sources":["raw-mjs/kendo.editor.js"],"names":["kendo","UndoRedoStack","Observable","extend","init","options","fn","call","this","clear","events","push","command","stack","slice","currentCommandIndex","undo","canUndo","trigger","redo","canRedo","length","deepExtend","util","$","undefined$1","window","Class","Widget","ui","os","support","mobileOS","browser","keys","outerWidth","_outerWidth","outerHeight","_outerHeight","FORMATTING_MARKS_STYLE_ID","FORMATTING_MARKS_OVERLAY_ID","FORMATTING_MARKS_OVERLAY_WRAPPER_ID","SELECT","PLACEHOLDER_CLASS","PLACEHOLDER_TAG_ID","NATIVE_TOOLS","EditorUtils","editorWrapperTemplate","formatByName","name","format","i","inArray","tags","getToolCssClass","icon","cssClass","superscript","subscript","justifyLeft","justifyCenter","justifyRight","justifyFull","insertUnorderedList","insertOrderedList","insertUpperRomanList","insertLowerRomanList","import","indent","outdent","createLink","unlink","insertImage","insertFile","viewHtml","foreColor","backColor","createTable","addColumnLeft","addColumnRight","addRowAbove","addRowBelow","deleteRow","deleteColumn","mergeCellsHorizontally","mergeCellsVertically","splitCellHorizontally","splitCellVertically","tableProperties","tableCellProperties","tableWizardInsert","tableAlignLeft","tableAlignCenter","tableAlignRight","cleanFormatting","copyFormat","applyFormat","pdf","nameToKebab","replace","toLowerCase","registerTool","toolName","tool","Editor","defaultTools","registerFormat","formatName","formats","cacheComments","content","comments","index","retrieveComments","supportedContentEditable","document","documentElement","toolGroups","basic","scripts","alignment","lines","symbols","links","lists","dent","tablesWizard","tablesInsert","tablesAddDelete","tablesMerge","tablesPosition","formatPainter","__suppressEditableCheck","element","toolbarContainer","type","domElement","that","editorNS","editor","dom","Dom","_registerHandler","closest","update","bind","_setupType","_initToolbar","_setupHeight","_resizable","_initializeContentElement","_setupKeyboard","clipboard","Clipboard","undoRedoStack","_populateValue","mousedown","_endTyping","mouseup","e","_mouseup","_handleSpaceAndNewLines","_initializeImmutables","_ariaLabel","wrapper","find","toolbar","resize","_initInlineOverflowWrapper","notify","_showWatermarkOverlay","messages","auto","bold","italic","underline","strikethrough","fitToCell","lineHeight","formattingMarks","insertHtml","fontName","fontNameInherit","fontSize","fontSizeInherit","formatBlock","formatting","style","emptyFolder","editAreaTitle","uploadFile","overflowAnchor","orderBy","orderBySize","orderByName","invalidFileType","deleteFile","overwriteFile","directoryNotFound","imageWebAddress","imageAltText","imageWidth","imageHeight","fileWebAddress","fileTitle","fileText","linkWebAddress","linkText","linkToolTip","linkOpenInNewWindow","dialogUpdate","dialogInsert","dialogOk","dialogCancel","createTableHint","tableWizard","tableTab","cellTab","accessibilityTab","caption","summary","width","height","units","cellSpacing","cellPadding","topPadding","leftPadding","bottomPadding","rightPadding","independentCellPaddings","cellMargin","captionAlignment","position","background","tableBackground","id","border","borderStyle","borderWidth","borderColor","collapseBorders","wrapText","associateCellsWithHeaders","alignLeft","alignCenter","alignRight","alignLeftTop","alignCenterTop","alignRightTop","alignLeftMiddle","alignCenterMiddle","alignRightMiddle","alignLeftBottom","alignCenterBottom","alignRightBottom","alignRemove","columns","rows","selectAllCells","applyToColumn","applyToRow","exportAs","print","headerRows","headerColumns","tableSummaryPlaceholder","associateNone","associateScope","associateIds","borderNone","placeholder","nonce","unsafeInline","encoded","formattingMarksRefreshDelay","domain","resizable","deserialization","custom","serialization","entities","semantic","optimizeTags","keepEOL","pasteCleanup","all","css","keepNewLines","msAllFormatting","msConvertLists","msTags","none","span","stylesheets","dialogOptions","modal","draggable","animation","imageBrowser","fileBrowser","navigateOnTab","text","value","tools","destroy","_deregisterHandlers","clearTimeout","_spellCorrectTimeout","_focusOutside","windowInstance","tablePopup","_destroyUploadWidget","interSectionObserver","disconnect","resizeObserver","_destroyResizings","_destroyFormattingMarksOverlay","setOptions","_setOptionsTools","_initializePlaceholder","createRange","RangeUtils","encodedValue","encode","exec","params","range","Error","body","getAttribute","keyboard","isTypingInProgress","_focusBody","selectRange","_range","getRange","Object","map","key","immutables","test","execCommand","async","change","_commandChange","_selectionChange","managesUndoRedo","focus","restoreSelection","selection","getSelection","rangeCount","getRangeAt","doc","startContainer","endContainer","startOffset","endOffset","setStart","collapse","SelectionUtils","selectionFromDocument","paste","html","InsertHtmlCommand","refresh","textarea","val","remove","selectionRestorePoint","toRange","saveSelection","container","commonAncestorContainer","contains","RestorePoint","selectedHtml","Serializer","domToXhtml","cloneContents","removeAllRanges","addRange","state","textNodes","finder","collapsed","getFormat","isFormatted","_togglePlaceholder","trim","_oldValue","currentHtml","htmlToDom","_refreshTools","_bindTools","unbind","filter","el","each","initialize","_blur","old","_containsRange","isAncestorOrSelf","_createContentElement","iframe","wnd","lang","specifiedDomain","domainScript","src","hide","title","frameBorder","addClass","attr","tabIndex","insertBefore","location","hostname","contentWindow","contentDocument","observer","IntersectionObserver","entries","entry","isIntersecting","_decorateFormatting","unobserve","observe","getElementsByTagName","open","write","isRtl","ios","edge","chrome","href","join","close","_deleteSavedRange","component","dataSource","items","tag","className","formattingElement","getKendoDropDownList","data","list","getEffectiveBackground","inlineStyle","_appendFormattingMarksStyles","elementId","$head","head","append","_appendFormattingMarksOverlay","_formattingMarksOverlayWrapper","_formattingMarksOverlay","appendTo","_bodyTopBottomPaddings","parseFloat","_isInlineEditor","insertAfter","_updateFormattingMarksOverlayHeight","scrollHeight","inlineHeight","_inlineOverflowWrapper","wrap","parent","handlers","_handlers","h","off","handler","_uploadWidget","endTyping","scrollTop","activeElement","_activeElement","clientHeight","msie","left","top","opacity","_handleToolbarClick","target","_immutablesContext","Immutables","immutablesContext","editableTextNodes","blurTrigger","mousedownTrigger","createElement","setAttribute","appendChild","interval","setInterval","last","clearInterval","setTimeout","_mousedown","touch","keydown","_spellCorrect","parentElement","nodeName","_cachedHeight","restoreHeight","keyCode","BACKSPACE","DELETE","F10","first","preventPopupHide","preventDefault","LEFT","RIGHT","offset","next","nextChar","nodeType","nodeValue","toolFromShortcut","toolOptions","keyPressCommand","_runPostContentKeyCommands","keypress","_showElementResizeHandles","keyup","selectionCodes","TAB","PAGEUP","PAGEDOWN","END","HOME","UP","DOWN","INSERT","ctrlKey","altKey","shiftKey","_refreshInterval","click","selectNode","focusin","hasAttribute","_showWindow","focusout","active","popup","toolbarContainerElement","get","_toolbarFocused","hasClass","removeClass","_hideWindow","_initializeColumnResizing","_initializeRowResizing","_initializeElementResizing","defaults","toolbarOptions","_processToolbarItems","_setNativeTools","parentMessages","toggle","evaluateTemplates","ToolBar","on","is","_initToolbarWindow","toolbarEl","prepend","kendoWindow","dragHandle","effects","minHeight","visible","autoFocus","actions","dragend","_moved","_selectionStarted","parents","stopPropagation","gecko","which","tagName","defaultValue","deserializedRoot","getAllComments","innerHTML","_resetGroups","current","result","optionsTools","j","t","guidGroupName","flatDefaultTools","processedObject","currentGroups","Array","isArray","guid","_processToolOptions","gr","includes","values","group","g","to","_processDefaultTool","isPlainObject","view","shortcuts","uiOptions","originalOptions","palette","template","showText","showIcon","tooltip","attributes","ColorTool","componentOptions","views","preview","input","buttons","_shortcutSequence","nodes","filterBy","htmlIndentSpace","_updateImmutablesState","eventNames","NS","hasOwnProperty","applyEventMap","split","toolsFromShortcut","o","changesContent","refreshDelay","applyFormattingMarks","clearFormattingMarksOverlay","_toggledFormattingMarks","children","_formattingMarksTimeout","empty","heightStyle","expectedHeight","parseInt","actualHeight","indexOf","isNaN","Keyboard","BackspaceHandler","TypingHandler","SystemHandler","SelectAllHandler","_wrapTextarea","res","ctrl","shift","alt","beforeCorrection","falseTrigger","contextmenu","one","mozilla","_finishUpdate","show","$body","toggleClass","overflowPopup","uiElement","trackImmutables","toolsToBeUpdated","w","editorWrap","editArea","isResizable","resizableMin","min","resizableMax","max","maxHeight","minWidth","maxWidth","ResizeObserver","_resizeTimeOut","_destroyElementResizing","ElementResizingFactory","dispose","_destroyRowResizing","RowResizing","_destroyColumnResizing","ColumnResizing","create","_showElementResizeHandlesProxy","elementResizing","parentNode","showResizeHandles","columnResizing","rowResizing","_getWindowWidth","editorElement","_overlapsWindow","box","toolbarWrapper","toolbarWrapperOffset","toolbarWrapperLeft","toolbarWrapperTop","boxOffset","boxOffsetLeft","boxOffsetTop","editorOffset","Math","plugin","Tool","commandArguments","noop","UndoTool","enable","removeAttr","emptyElementContent","emptyTableCellContent","PDFMixin","prototype","_drawPDF","drawing","drawDOM","saveAsPDF","progress","Deferred","promise","args","then","root","exportPDF","done","dataURI","saveAs","fileName","proxyURL","proxyTarget","forceProxy","resolve","fail","err","reject","jQuery","STYLE","FLOAT","CSSFLOAT","STYLEFLOAT","CLASS","KMARKER","makeMap","len","obj","nonListBlockElements","blockElements","concat","block","selfClosing","inlineElements","inline","fillAttrs","nonEmptyNonTextContentElements","normalize","node","version","firstChild","prev","nextSibling","persistedScrollTop","whitespace","emptyspace","rgb","bom","whitespaceOrBom","cssAttributes","htmlRe","entityRe","entityTable","findNodeIndex","skipText","previousSibling","isDataNode","isAncestorOf","findClosestAncestor","rootElem","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","FILTER_ACCEPT","curNode","nextNode","getNodeLength","childNodes","splitDataNode","temp","newNode","cloneNode","denormalizedText","deleteData","attrEquals","cssFloat","blockParentOrBody","parentOfType","ownerDocument","blockParents","blocks","windowFromDocument","defaultView","parentWindow","nodeTypes","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","toHex","color","matches","x","toString","encodableChars","c","charCode","charCodeAt","entity","isBom","stripBom","stripBomNode","removeChild","insignificant","_moz_dirty","_moz_editor_bogus_node","tableCell","significantNodes","grep","child","emptyTextNode","emptyNode","significantChildNodes","isWhitespace","getTextNodes","lastTextNode","lastChild","isMarker","allowsTextContent","every","allWhitespaceContent","isEmptyspace","sibling","direction","isBlock","isPrevBlock","isNextBlock","isSelfClosing","isEmpty","isInline","isImg","isBr","scrollContainer","compatMode","scrollingElement","scrollTo","toStart","elementTop","elementHeight","marker","windowHeight","innerHeight","offsetHeight","ceil","persistScrollTop","offsetParent","offsetTop","offsetLeft","restoreScrollTop","undefined","insertAt","newElement","referenceElement","removeChildren","removeTextSiblings","closestBy","condition","rootCondition","ofType","changeTag","skipAttributes","attribute","specified","cssText","editableParent","contentEditable","unwrap","isChildOfBaseContainer","createEmptyNode","removeAttribute","mergeAttributes","origin","traverseCss","unstyle","backgroundStyle","innerText","classNames","classes","commonAncestor","ancestors","count","arguments","paths","minPathLength","Infinity","output","reverse","closestSplittableParent","apply","editableParents","editableAncestor","closestEditable","types","editable","closestEditableOfType","invert","match","ensureTrailingBreaks","elements","ensureTrailingBreak","removeTrailingBreak","br","reMapTableColumns","table","colAttr","_mapColIndices","clearTableMappings","registeredColumns","rowIndex","cells","colIndex","cellIndex","cell","rowSpan","_mapColspan","colSpan","ci","ri","associateWithIds","theadRows","numberOfTheadRows","tableRows","numberOfTableRows","theadMatrix","tbodyMatrix","tHead","_getNumberOfHeaderRows","_generateIdsForColumns","_generateIdsForRows","_assignIds","col","colspan","rowspan","k","l","timestamp","Date","getTime","row","headers","pushHeaderId","forEach","_onlyUnique","_getNumberOfColumns","currentIndex","numberOfCols","Number","_getNumberOfHeaderColumns","numberOfHeaderRows","number","self","fontSizeMappings","quoteRe","brRe","pixelRe","emptyPRe","cssDeclaration","sizzleAttr","scriptAttr","onerrorRe","bomSpan","div","supportsLeadingWhitespace","isFunction","toEditableHtml","_toEditableImmutables","immutable","prependTo","_fillEmptyElements","p","_removeSystemElements","_resetOrderedLists","ol","originalStart","ols","_preventScriptExecution","attributesToRemove","deserialize","semanticFilter","mapStart","tagMap","start","end","skipEncoding","canOptimize","semanticAttributes","specifiedAttributes","textDecoration","font","fontFamily","size","inlineStyles","ignoredStylePrefixes","prop","startsWith","strong","em","b","u","item","styleObj","splice","face","styleAttr","properties","property","lastIndex","cssProperties","$node","htmlEncode","skip","childNode","mapper","previous","jqNode","serialize","shouldOptimize","isEmptyBomNode","runCustom","script","childrenCount","textOnly","selectionFromWindow","W3CSelection","selectionFromRange","rangeDocument","documentFromRange","W3CRange","updateRangeProperties","fixIvalidRange","setEnd","setStartBefore","setStartAfter","setEndBefore","setEndAfter","selectNodeContents","deleteContents","cloneRange","deleteSubtree","hasPartialSubtree","getSubtreeIterator","RangeIterator","cloneSubtree","frag","createDocumentFragment","extractContents","extractSubtree","originalRange","insertNode","startNodeName","endNodeName","startAncestor","endAncestor","compareBoundaries","ex","isInvalidRange","fromNode","_current","_next","_end","hasNext","traverse","callback","delta","inStartContainer","inEndContainer","nodeIndex","getSubRange","subRange","textRange","createTextRange","adoptContainer","select","duplicate","right","textRangeContainer","adoptEndPoint","compareEndPoints","movedStart","movedEnd","cursorNode","textOffset","isData","anchorNode","anchorParent","cursor","moveToElementText","setEndPoint","comparison","appended","RangeEnumerator","enumerate","visit","ImmutablesRangeIterator","ImmutablesRangeEnumerator","rootNode","getEditable","nodeToPath","serializedImmutables","removeImmutables","restoreImmutables","lastType","restoreHtml","path","toRangePoint","denormalizedOffset","Marker","caret","addCaret","removeCaret","containerIndex","textNode","add","expand","isExpandable","rangeBoundary","_removeDeadMarkers","createTextNode","_normalizedIndex","pointer","shouldNormalizeStart","shouldNormalizeEnd","isBomSelected","charAt","collapsedToStart","startParent","endParent","startIndex","endIndex","boundary","immutableParent","image","stringify","partition","partitionRange","contents","mapAll","mapped","getAll","predicate","selector","getMarkers","isStartOf","isEndOf","wrapSelectedElements","startEditable","endEditable","isEnd","beforeCaret","afterCaret","search","substring","complexBlocks","IMMUTABALE","IMMUTABALE_MARKER_SELECTOR","randomId","chars","round","random","updateToolOptions","_initOptions","_toHtml","replaceWith","isDeleting","_cancelDeleting","_cancelTyping","typingInProgress","isTypingKey","backspace","del","cancelDeleting","nextImmutable","closestSelectionLi","closestImmutableLi","_removeImmutable","forwards","commonContainer","_nextNode","startRestorePoint","expandImmutablesIn","startImmutableParent","endImmutableParent","serialized","Command","restorePoint","formatter","lockRange","releaseRange","point","createDialog","postExec","_actionButtonsTemplate","insertButtonIcon","cancelButtonIcon","renderButton","themeColor","GenericCommand","endRestorePoint","ViewHtmlCommand","cmd","dialog","_footerTemplate","_footerMessages","center","FormatCommand","FormatTool","getKendoToolBar","getKendoToggleButton","MOUSEDOWN_NS","InlineFormatFinder","numberOfSiblings","referenceNode","textNodesCount","elementNodesCount","markerCount","findSuitable","sourceNode","findFormat","InlineFormatter","activate","formatNode","formatNodes","consolidate","outerMostInline","pop","GreedyInlineFormatFinder","greedyProperty","fontAttr","getInlineCssValue","attributeValue","pair","cssIndex","propertyAndValue","getFormatInner","parentsUntil","addBack","toArray","GreedyInlineFormatter","toCamelCase","action","InlineFormatTool","DelayedExecutionTool","FontTool","cssAttr","domAttr","widget","setDataSource","sender","newRange","ENTER","_widget","getKendoColorPicker","storedRange","_inputFocused","_popup","unselectable","_value","toCssRgba","fontWeight","togglable","fontStyle","overflow","toolIcon","commandOn","closeOnSelect","dataValueField","dataTextField","valuePrimitive","HTTP_PROTOCOL","protocolRegExp","endLinkCharsRegExp","LinkFormatFinder","LinkFormatter","markers","a","ref","UnlinkCommand","LinkCommand","url","_initialText","img","_close","_form","_createForm","_apply","_keydown","linkUrl","_dialog","formElement","form","kendoForm","renderButtons","field","label","editorOptions","after","ESC","textInput","anchor","AutoLinkCommand","detectedLink","detectLink","linkMarker","linkRange","_ensureWebProtocol","startNode","traverser","LeftDomTextTraverser","cancelAtNode","DomTextLinkDetection","_hasProtocolPrefix","_prefixWithWebProtocol","UnlinkTool","isLink","DomPos","_detectEnd","blank","clone","_detectStart","_isLinkDetected","puntuationOptions","extendOptions","RightDomTextTraverser","_skipStartPuntuation","lastIndexOfRegExp","ii","r","str","DomTextTraverser","cancel","_traverse","edgeNode","subText","splitIndex","SPACEBAR","BlockFormatFinder","candidate","suitable","f","_resolveListsItems","until","ImmutablesNS","BlockFormatter","ancestor","_handleImmutables","images","imageAttributes","nonImages","applyFormatting","immutableFormat","namedFormat","GreedyBlockFormatter","formatTag","ListFormatter","blockFormatter","BlockFormatTool","listElements","textAlign","float","display","marginLeft","marginRight","listStylePosition","ListFormatFinder","altAttr","matchesType","isList","unwrapTag","li","isImmutable","containsAny","_parentLists","merge","breakable","findSuitableNode","applyOnSection","section","pushAncestor","listStyleType","lastSection","lastNodes","sections","addLastSection","ul","fragment","ListCommand","ListTool","FormattingTool","toFormattingItem","dot","context","decorate","optionLabel","dataItem","toJSON","dataBound","getFormattingValue","n","selectBox","_ancestor","operator","CleanFormatCommand","tagsToClean","clean","listFormatter","unwrapListItem","highlightFirst","autoWidth","KEDITORIMAGEURL","KEDITORIMAGETITLE","KEDITORIMAGEWIDTH","KEDITORIMAGEHEIGHT","ImageCommand","removeIEAttributes","onload","onerror","applied","isIE","showBrowser","ImageBrowser","transport","read","_imageBrowser","ev","selected","dialogHeight","loadingOverlay","ImportCommand","_initializeUploadWidget","importOptions","upload","kendoUpload","success","_onUploadSuccess","_onUploadProgress","_onUploadSelect","error","_onUploadError","complete","_onUploadComplete","showFileList","multiple","saveUrl","autoUpload","saveField","validation","allowedExtensions","maxFileSize","getKendoUpload","_trigger","clearAllFiles","_removeLoadingOverlay","response","files","validationErrors","_initLoadingOverlay","eventType","uploadEvent","_iframeWrapper","_container","postProcess","genericCommand","InsertHtmlTool","initialValue","autoSize","ExportAsCommand","exportType","postToProxy","generateForm","submit","exportAsOptions","method","valueInput","exportTypeInput","fileNameInput","antiForgeryInput","csrf_param","ExportAsTool","changeHandler","_exec","itemTemplate","valueTemplate","iconClass","indentDirection","IndentFormatter","parentList","targets","mapImmutables","siblingList","nestedList","getListTypeAttr","targetIndex","styleType","targetNode","listParent","siblings","nextAll","IndentCommand","indentFormatter","OutdentCommand","OutdentTool","isOutdentable","listParentsCount","suitableNodes","ParagraphCommand","_insertMarker","_moveFocus","focusNode","shouldTrim","startInBlock","endInBlock","_blankAfter","paragraph","heading","tableNode","rng","emptyParagraphContent","parentChildrenLength","_insertParagraphAfter","headingDomName","NewLineCommand","filler","kbrParent","oldIE","KEDITORFILEURL","KEDITORFILETEXT","KEDITORFILETITLE","FileCommand","file","FileBrowser","_fileBrowser","ACTIVESTATE","SELECTEDSTATE","SCOPE","ROW","COL","ROWGROUP","COLGROUP","COLSPAN","ROWSPAN","TABLE","THEAD","TBODY","TR","TD","TH","getTouches","columnTemplate","tableFormatFinder","TableCommand","skipCleaners","_tableHtml","columnHtml","rowHeight","insertedTable","PopupTool","btn","popupTemplate","kendoPopup","copyAnchorStyles","_open","_activate","_toggle","_editor","TableWizardTool","TableWizardCommand","insertNewTable","kendoButton","_setTableSize","InsertTableTool","cols","cellWidth","cellHeight","firstCell","eq","lastCell","getOffset","tableFromLocation","floor","clientY","clientX","scrollLeft","offsetWidth","autoApplyNS","_valid","status","initiallyVisible","button","selectedRows","selectedColumns","changed","tableSize","stopImmediatePropagation","TableModificationCommand","_clearColIndexAttr","_findRowSpanCell","_resetElementResizing","_findNextTdInRow","td","lastTd","_adjustColgroups","colgroup","colElements","colgroupElements","numberOfCells","_associateHeaderIds","InsertRowCommand","cellCount","newRow","createdCell","_appendCell","newCell","InsertColumnCommand","columnIndex","_processForColSpan","_resizeCells","selectedCell","colSpanEffect","parsedWidth","unit","calculatedWidth","DeleteRowCommand","focusElement","rowParent","_focusElement","_handleRowSpanCells","adjacentCell","nextRow","firstRow","before","_reduceRowSpan","rowSpanValue","DeleteColumnCommand","columnCount","_handleColSpanCells","_reduceColSpan","colSpanValue","MergeCellsHorizontallyCommand","nextTd","_getColspan","MergeCellsVerticallyCommand","tr","targetRow","bottomTd","_getRowspan","SplitCellCommand","emptyTd","_splitCellHorizontally","_splitCellVertically","_getRowspanValue","_getColspanValue","tdToAdd","colSpanResult","rowSpanResult","TableModificationTool","commandsMap","insert","delete","column","TableFormatCommand","_showResizeHandles","TableFormatTool","isTable","align","nonSplittableTagsOnPaste","cleaners","ScriptCleaner","TabCleaner","MSWordFormatCleaner","WebkitFormatCleaner","HtmlTagsCleaner","HtmlAttrCleaner","HtmlContentCleaner","CustomCleaner","htmlToFragment","_startModification","_inProgress","_endModification","modificationInfo","_contentModification","_removeBomNodes","_onBeforeCopy","oncopy","oncut","_fileToDataURL","blob","deferred","reader","FileReader","File","getAsFile","readAsDataURL","_triggerPaste","_handleImagePaste","clipboardData","originalEvent","_insertImages","when","results","onpaste","clipboardNode","_decoreateClipboardNode","webkit","_moveToCaretPosition","clipboardRange","containers","ondragover","ondrop","dataTransfer","margin","padding","fontVariant","lineSpacing","nodeOffset","caretOffset","_caretOffset","translate","transform","rangeChanged","isStartTextNode","prevLength","bomNode","splittableParent","preventSplit","unwrapPasted","applicable","splitter","splittable","fragmentsHtml","elm","rangeEnd","focusedTable","siblingNodes","lastSiblingIndex","lastSibling","Cleaner","replacements","customReplacements","junkReplacements","convertFontMatch","$0","$1","closing","family","stripEmptyAnchors","listType","listData","startingSymbol","matchSymbol","symbol","isNumber","trimStartText","_guessUnorderedListStyle","_guessOrderedListStyle","_convertToLi","_checkForBullet","_getHtmlNoBullet","extractListLevels","level","_createList","rootMargin","rootIndex","lastRootLi","isLastRootLi","rootList","blockChildren","lastMargin","levels","acceptedNameTags","listIndex","levelType","removeAttributes","significantStyles","addSignificantStyles","isSignificantCss","removeAttributeNode","createColGroup","convertHeaders","boldedCells","removeParagraphs","paragraphs","removeTextNodes","trs","currentNode","tables","longestRow","titles","removeFormatting","filters","DomCleaner","cleanDom","collectTags","collectAttr","TextContainer","HtmlTextLines","separators","line","inlineBlockText","resetLine","appendText","textContainer","appendInlineBlockText","flashInlineBlockText","endLine","il","il1","jl","jl1","DomEnumerator","preventDown","hasText","enumerator","buildText","getDefaultSeparators","htmlLines","thead","tbody","cleaner","cellText","PREVIOUS_SIBLING","getSibling","tableCells","tableCellsWrappers","tableElements","inTable","RemoveTableContent","cellsTypes","startCell","endCell","_removeContent","getNext","evt","Event","isDefaultPrevented","deleteSelection","startTyping","_removeBomSpan","textContent","_addCaret","_restoreCaret","_handleDelete","caretPlaceholder","_merge","_cleanBomBefore","_handleBackspace","startAtLi","liIndex","startAtNonFirstLi","rangeStartNode","previousNode","_handleSelection","parentElementOrNode","_surroundFullyContent","_surroundFullySelectedAnchor","toLocaleLowerCase","_join","startImmutable","endImmutable","_moveMarker","_root","dest","_mergeWithTextNode","appendedNode","_isCaret","systemCommandIsInProgress","createUndoCommand","isModifierKey","isSystem","_toSelectableImmutables","_selectEditorBody","isCharacter","String","fromCharCode","modifier","_getShortcutModifier","navigator","platform","toUpperCase","metaKey","found","matchKey","toolKey","onEndTyping","stopTyping","force","timeout","what","ExportPdfCommand","PrintCommand","CopyFormatCommand","blockStyles","collectStyles","rangeNodes","populateStyles","destination","styleValue","styleKey","attributeKey","styles","nodeStyles","ApplyFormatCommand","removeEmptyElementsFromRange","cleanInlineParents","applyBlockStyles","applyInlineStyles","emptyElements","blockParent","outerWrapper","previousNodes","nextNodes","prevWrapper","nextWrapper","listItems","currentStyle","createdNode","topNode","CopyFormatTool","ApplyFormatTool","LineHeightCommand","LineHeightFormatTool","getKendoComboBox","closeHandler","mouseDownHandler","keyDownHandler","currentRange","prefixOptions","DOM","createMark","character","scrollableWrapper","clonedRange","domRect","y","parentRect","getBoundingClientRect","createElementNS","setAttributeNS","appendSvgMarks","overlay","isInlineEditor","FormattingMarksCommand","global","math","REGEX_NUMBER_IN_PERCENTAGES","REGEX_NUMBER_IN_PIXELS","STRING","inPercentages","ResizingUtils","constrain","lowerBound","upperBound","getScrollBarWidth","scrollbar","calculatePercentageRatio","total","inPixels","toPercentages","toPixels","KEY_DOWN","MOUSE_LEAVE","MOUSE_UP","TableElementResizing","_attachEventHandlers","eventNamespace","rootElement","_destroyResizeHandle","rtl","handle","dataAttribute","detectElementBorderHovering","resizingInProgress","resizing","handleOptions","tableElement","currentTarget","resizeHandle","elementBorderHovered","showResizeHandle","_initResizeHandle","setResizeHandlePosition","setResizeHandleDimensions","setResizeHandleDataAttributes","_attachResizeHandleEventHandlers","_initResizable","_hideResizeMarker","markerClass","_destroyResizable","Resizable","draggableElement","onResizeStart","onResize","resizeend","onResizeEnd","_disableKeyboard","setResizeHandleDragPosition","_enableKeyboard","_forceResizing","userEvents","ResizingFactory","resizingName","_destroyResizing","_initResizing","parentTable","resizingType","abs","RESIZE_HANDLE_CLASS","RESIZE_MARKER_CLASS","BODY","COLATTR","COMMA","WIDTH","handleWidth","borderOffset","mousePosition","tableInnerElement","tBodies","scrollTopOffset","scrollLeftOffset","columnWidthOffset","scrollBarWidth","columnOffsetLeft","innerElementOffsetTop","tableHead","tableBody","fullHeight","columnWidth","columnLeftOffset","adjacentColumnWidth","resizeHandleOffsetLeft","handleOffset","newWidth","initialAdjacentColumnWidth","initialColumnWidth","nextColumn","rtlModifier","initialDeltaX","initialDelta","_setTableComputedWidth","_setColumnsComputedWidth","_resizeColumn","_resizeTopAndBottomColumns","_resizeAdjacentColumns","innerElementWidth","currentColumnsWidths","topAndBottomColumns","innerTableElement","deltaWidth","adjacentColumns","_resizeAdjacentColumn","adjacentColumn","HEIGHT","handleHeight","rowOffsetLeft","rowOffsetTop","topInnerTableElement","$row","tableTopOffset","resizeHandleOffsetTop","currentRowHeight","initialTableHeight","tableHeadHeight","tableBodyHeight","initialStyleHeight","newRowHeight","_setRowsHeightInPixels","_setTableHeight","_setRowsHeightInPercentages","currentRowsHeights","newHeight","Draggable","DRAG_START","DRAG","DRAG_END","HALF_INSIDE","MOUSE_OVER","MOUSE_OUT","EAST","NORTH","NORTHEAST","NORTHWEST","SOUTH","SOUTHEAST","SOUTHWEST","WEST","ElementResizeHandle","_addStyles","_initDraggable","_initPositioningStrategy","_initDraggingStrategy","resizableElement","_destroyDraggable","_setPosition","_positioningStrategy","getPosition","_onMouseOver","_onMouseOut","HandlePositioningStrategy","_draggable","dragstart","_onDragStart","drag","_onDrag","_onDragEnd","_draggingStrategy","adjustDragDelta","deltaX","deltaY","initialDeltaY","HandleDraggingStrategy","StrategyFactory","_items","register","itemsLength","PositioningStrategyFactory","calculatePosition","handleOffsetPosition","applyHandleOffset","applyScrollOffset","rootLeft","EastPositioningStrategy","NorthPositioningStrategy","NortheastPositioningStrategy","NorthwestPositioningStrategy","SouthPositioningStrategy","SoutheastPositioningStrategy","SouthwestPositioningStrategy","WestPositioningStrategy","DraggingStrategyFactory","adjustment","deltas","xAxisAdjustment","yAxisAdjustment","HorizontalDraggingStrategy","EastDraggingStrategy","WestDraggingStrategy","VerticalDraggingStrategy","NorthDraggingStrategy","SouthDraggingStrategy","HorizontalAndVerticalDraggingStrategy","NorthEastDraggingStrategy","NorthWestDraggingStrategy","SouthEastDraggingStrategy","SouthWestDraggingStrategy","RESIZE_HANDLE_WRAPPER_CLASS","ELEMENT_RESIZING_CLASS","MOUSE_DOWN","ELEMENT_TYPES","isUndefined","ElementResizing","handles","_destroyResizeHandles","appendHandlesTo","_resizeWidth","_resizeHeight","_getMaxDimensionValue","dimension","dimensionLowercase","parentDimension","parentScrollOffset","_initResizeHandles","_bindToResizeHandlesEvents","_onResizeHandleDragStart","_initialElementHeight","_initialElementWidth","_onResizeHandleDrag","_onResizeHandleDragEnd","TableResizing","_hasRowsInPixels","ratioValue","ratioTotalValue","constrainedWidth","styleWidth","currentWidth","parentWidth","_setColumnsWidth","constrainedHeight","styleHeight","currentHeight","parentHeight","hasRowsInPixels","parentColumn","columnsLength","isWidthInPercentages","ImageResizing","_onResizeHandleDragVertical","_onResizeHandleDragHorizontal","_onResizeHandleDragLocked","_getDeltas","initialWidth","initialHeight","MAX_SAFE_INTEGER","factory","hasImg","eventTarget","eventCurrentTarget","isResizeHandleOrChild","tableResizing","cellsFormatFinder","reUnit","COL_INDEX","isTableCellWizard","tableCellWizard","selectedTable","_sourceTable","_selectedTable","selectedCells","_selectedTableCells","_selectedCells","closeCallback","onDialogClose","parseTable","TableWizardDialog","insertTable","createNewTable","updateTable","_ensureFocusableAfterTable","lastSelectedRow","cellProp","tableProp","_lastInCollection","_deleteTableRows","_addRows","_updateColumns","_updateTableProperties","cellProperties","_updateCellProperties","_updateCaption","_updateHeadersWithThead","_updateHeadersNoThead","_updateHeaderAssociates","_isHeadingRow","_isHeadingCell","cellsWithHeadersAssociated","headingIds","checkHeader","header","headersArray","headersAttr","some","_insertCells","insertCell","createTHead","_createTableRows","createTBody","cellsWithHeaders","_addScopes","initialIndex","insertRow","cellsLength","newRowsCount","firstRowLastCell","numberOfColumns","lastCurrentCell","rowColumns","deleteCell","_getStylesData","topCellPadding","_getNumericValue","leftCellPadding","bottomCellPadding","rightCellPadding","tableData","paddingTop","paddingLeft","paddingBottom","paddingRight","captionContent","deleteCaption","createCaption","_getAlignmentData","verticalAlign","_swapToHeaderCells","deleteTHead","_removeScopes","_removeAssociates","headerCols","whiteSpace","widthUnit","heightUnit","backgroundColor","bgColor","borderCollapse","_getTablePositionData","tStyle","captionClone","tableAlignment","_getAlignment","tablePosition","_getTablePosition","numberOfHeaderColumns","tableJson","_getUnit","parseTableRows","rowData","cellData","parseCell","cStyle","horizontalOnly","hAlign","vAlign","collection","TableWizardEditTool","TableCellWizardEditTool","FORM_FIELD_CLASS","INVISIBLE_CLASS","DOT","numericTextBoxSettings","borderStyles","textWrapDropDownSettings","tablePositionDropDownSettings","tableAlignmentDropDownSettings","cellAlignmentDropDownSettings","accessibilityAlignmentDropDownSettings","tablePropertiesDialogTemplate","cellPropertiesDialogTemplate","_openTablePropertiesDialog","_dialogTemplate","collectTableDialogValues","components","_initTabStripComponent","_tablePropertiesForm","_createTablePropertiesForm","_accessibilityPropertiesForm","_createAccessibilityPropertiesForm","_openCellPropertiesDialog","collectCellDialogValues","_cellPropertiesForm","_createCellPropertiesForm","isCellProperties","tabStrip","kendoTabStrip","_collectTableViewValues","_collectAccessibilityViewValues","_collectCellViewValues","tableView","check","cellView","wrapTextValue","accessibilityView","_addUnit","_initNumericTextbox","storage","settings","kendoNumericTextBox","_initDropDownList","kendoDropDownList","_setComponentValue","_initBorderStyleDropDown","_initTablePositionDropDown","_initPositionDropDown","_initTableAlignmentDropDown","_initAlignmentDropDown","_initCellAlignmentDropDown","_initAccessibilityAlignmentDropDown","_initTextWrapDropDown","_initAssociationDropDown","_initColorPicker","kendoColorPicker","clearButton","_initInput","kendoTextBox","_initCheckbox","kendoCheckBox","_initTextArea","kendoTextArea","_destroyComponents","dialogTemplate","_onPaddingTopChange","viewType","topCellPaddingNumeric","topCellPaddingValue","leftCellPaddingNumeric","bottomCellPaddingNumeric","rightCellPaddingNumeric","_cachedPadding","_onPaddingCheckChange","checked","bottomCellPaddingValue","leftCellPaddingValue","rightCellPaddingValue","_onColumnsNumberChange","headerColumnsNumeric","currentNumberOfColumnsHeaders","_onRowsNumberChange","headerRowsNumeric","currentNumberOfRowHeaders","numberOfRows","layout","grid","gutter","layoutWrapper","hint","optional","__meta__","category","description","depends","features","kendo$1"],"mappings":"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","file":"kendo.editor.js","sourcesContent":["import './kendo.combobox.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.resizable.js';\nimport './kendo.window.js';\nimport './kendo.colorpicker.js';\nimport './kendo.imagebrowser.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.textarea.js';\nimport './kendo.core.js';\nimport './kendo.toolbar.js';\nimport './kendo.icons.js';\nimport './kendo.form.js';\nimport './kendo.filebrowser.js';\nimport './kendo.draganddrop.js';\nimport './kendo.html.button.js';\nimport './kendo.tabstrip.js';\n\n(function(kendo) {\n    var UndoRedoStack = kendo.Observable.extend({\n        init: function(options) {\n            kendo.Observable.fn.init.call(this, options);\n            this.clear();\n        },\n        events: [ \"undo\", \"redo\" ],\n        push: function (command) {\n            this.stack = this.stack.slice(0, this.currentCommandIndex + 1);\n            this.currentCommandIndex = this.stack.push(command) - 1;\n        },\n        undo: function () {\n            if (this.canUndo()) {\n                var command = this.stack[this.currentCommandIndex--];\n                command.undo();\n                this.trigger(\"undo\", { command: command });\n            }\n        },\n        redo: function () {\n            if (this.canRedo()) {\n                var command = this.stack[++this.currentCommandIndex];\n                command.redo();\n                this.trigger(\"redo\", { command: command });\n            }\n        },\n        clear: function() {\n            this.stack = [];\n            this.currentCommandIndex = -1;\n        },\n        canUndo: function () {\n            return this.currentCommandIndex >= 0;\n        },\n        canRedo: function () {\n            return this.currentCommandIndex != this.stack.length - 1;\n        }\n    });\n\n    kendo.deepExtend(kendo, {\n        util: {\n            UndoRedoStack: UndoRedoStack\n        }\n    });\n})(kendo);\n\n(function($,undefined$1) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        Widget = kendo.ui.Widget,\n        os = kendo.support.mobileOS,\n        browser = kendo.support.browser,\n        extend = $.extend,\n        deepExtend = kendo.deepExtend,\n        keys = kendo.keys,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        NS = \".kendoEditor\";\n\n    const FORMATTING_MARKS_STYLE_ID = \"formatting-marks-style\",\n          FORMATTING_MARKS_OVERLAY_ID = \"formatting-marks-overlay\",\n          FORMATTING_MARKS_OVERLAY_WRAPPER_ID = \"formatting-marks-overlay-wrapper\";\n\n    var SELECT = \"select\";\n    var SELECT_OVERLAY_SELECTOR = \"select.k-select-overlay\";\n    var PLACEHOLDER_CLASS = \"k-placeholder\";\n    var PLACEHOLDER_TAG_ID = \"placeholder\";\n    var REFRESH_INTERVAL = 200;\n    var DEFAULT_LANGUAGE = \"en\";\n\n    var NATIVE_TOOLS = [\n        \"insertLineBreak\",\n        \"insertParagraph\",\n        \"redo\",\n        \"undo\",\n        \"autoLink\"\n    ];\n\n    const TOOLBAR_ALLOWED_CLOSE_SELECTORS = \".k-icon,.k-svg-icon,svg,path,.k-editor-window,.k-editor-toolbar,.k-editortoolbar-dragHandle,[ref-toolbar-tool],[ref-toolbar-tool] *\";\n\n    var EditorUtils = {\n        editorWrapperTemplate: () =>\n            '<div class=\"k-editor\">' +\n                '<div class=\"k-editor-toolbar\" role=\"toolbar\"></div>' +\n                '<div class=\"k-editable-area k-editor-content\"></div>' +\n            '</div>',\n\n        formatByName: function(name, format) {\n            for (var i = 0; i < format.length; i++) {\n                if ($.inArray(name, format[i].tags) >= 0) {\n                    return format[i];\n                }\n            }\n        },\n\n        getToolCssClass: function(name, icon) {\n            var toolCssClassNames = {\n                superscript: \"supscript\",\n                subscript: \"subscript\",\n                justifyLeft: \"align-left\",\n                justifyCenter: \"align-center\",\n                justifyRight: \"align-right\",\n                justifyFull: \"align-justify\",\n                insertUnorderedList: \"list-unordered\",\n                insertOrderedList: \"list-ordered\",\n                insertUpperRomanList: \"list-roman-upper\",\n                insertLowerRomanList: \"list-roman-lower\",\n                \"import\": \"import\",\n                indent: \"indent\",\n                outdent: \"outdent\",\n                createLink: \"link\",\n                unlink: \"unlink\",\n                insertImage: \"image\",\n                insertFile: \"file-add\",\n                viewHtml: \"code\",\n                foreColor: \"foreground-color\",\n                backColor: \"droplet\",\n                createTable: \"table-add\",\n                addColumnLeft: \"table-column-insert-left\",\n                addColumnRight: \"table-column-insert-right\",\n                addRowAbove: \"table-row-insert-above\",\n                addRowBelow: \"table-row-insert-below\",\n                deleteRow: \"table-row-delete\",\n                deleteColumn: \"table-column-delete\",\n                mergeCellsHorizontally: \"cells-merge-horizontally\",\n                mergeCellsVertically: \"cells-merge-vertically\",\n                splitCellHorizontally: \"cell-split-horizontally\",\n                splitCellVertically: \"cell-split-vertically\",\n                tableProperties: \"table-properties\",\n                tableCellProperties: \"table-cell-properties\",\n                tableWizardInsert: \"table-wizard\",\n                tableAlignLeft: \"table-position-start\",\n                tableAlignCenter: \"table-position-center\",\n                tableAlignRight: \"table-position-end\",\n                cleanFormatting: \"clear-css\",\n                copyFormat: \"copy-format\",\n                applyFormat: \"apply-format\",\n                pdf: \"file-pdf\"\n            };\n\n            var cssClass = toolCssClassNames[name];\n\n            if (cssClass) {\n                return cssClass;\n            }\n\n            if (icon) {\n                return icon;\n            }\n\n            return EditorUtils.nameToKebab(name);\n        },\n\n        nameToKebab: function(name) {\n            return name.replace(/([a-z])([A-Z])/g, \"$1-$2\")\n                .replace(/[\\s_]+/g, '-')\n                .toLowerCase();\n        },\n\n        registerTool: function(toolName, tool) {\n            if (!tool.name) {\n                tool.options.name = toolName;\n                tool.name = toolName.toLowerCase();\n            }\n\n            if (!tool.options.ui) {\n                tool.options.ui = {};\n            }\n\n            tool.options.ui.command = toolName;\n\n            Editor.defaultTools[toolName] = tool;\n        },\n\n        registerFormat: function(formatName, format) {\n            Editor.fn.options.formats[formatName] = format;\n        },\n\n        cacheComments: function(content, comments) {\n            for (var index in comments) {\n                content = content.replace(comments[index], \"{\" + index + \"}\");\n            }\n            return content;\n        },\n\n        retrieveComments: function(content, comments) {\n            for (var index in comments) {\n                content = content.replace(\"{\" + index + \"}\", comments[index]);\n            }\n            return content;\n        }\n    };\n\n    var messages = {\n        auto: \"Auto\",\n        bold: \"Bold\",\n        italic: \"Italic\",\n        underline: \"Underline\",\n        strikethrough: \"Strikethrough\",\n        superscript: \"Superscript\",\n        subscript: \"Subscript\",\n        fitToCell: \"Fit to cell\",\n        justifyCenter: \"Center text\",\n        justifyLeft: \"Align text left\",\n        justifyRight: \"Align text right\",\n        justifyFull: \"Justify\",\n        insertUnorderedList: \"Insert unordered list\",\n        insertOrderedList: \"Insert ordered list\",\n        lineHeight: \"Set line height\",\n        formattingMarks: \"Toggle formatting marks\",\n        indent: \"Indent\",\n        outdent: \"Outdent\",\n        createLink: \"Insert hyperlink\",\n        unlink: \"Remove hyperlink\",\n        insertImage: \"Insert image\",\n        insertFile: \"Insert file\",\n        insertHtml: \"Insert HTML\",\n        viewHtml: \"View HTML\",\n        fontName: \"Select font family\",\n        fontNameInherit: \"(inherited font)\",\n        fontSize: \"Select font size\",\n        fontSizeInherit: \"(inherited size)\",\n        formatBlock: \"Format\",\n        formatting: \"Format\",\n        foreColor: \"Color\",\n        backColor: \"Background color\",\n        style: \"Styles\",\n        emptyFolder: \"Empty Folder\",\n        editAreaTitle: \"Editable area. Press F10 for toolbar.\",\n        uploadFile: \"Upload\",\n        overflowAnchor: \"More tools\",\n        orderBy: \"Arrange by:\",\n        orderBySize: \"Size\",\n        orderByName: \"Name\",\n        invalidFileType: \"The selected file {0} is not valid. Supported file types are {1}.\",\n        deleteFile: 'Are you sure you want to delete {0}?',\n        overwriteFile: 'A file with name {0} already exists in the current directory. Do you want to overwrite it?',\n        directoryNotFound: \"A directory with this name was not found.\",\n        imageWebAddress: \"Web address\",\n        imageAltText: \"Alternate text\",\n        imageWidth: \"Width (px)\",\n        imageHeight: \"Height (px)\",\n        fileWebAddress: \"Web address\",\n        fileTitle: \"Title\",\n        fileText: \"Text\",\n        linkWebAddress: \"Web address\",\n        linkText: \"Text\",\n        linkToolTip: \"ToolTip\",\n        linkOpenInNewWindow: \"Open link in new window\",\n        dialogUpdate: \"Update\",\n        dialogInsert: \"Insert\",\n        dialogOk: \"Confirm\",\n        dialogCancel: \"Cancel\",\n        cleanFormatting: \"Clean formatting\",\n        createTable: \"Create a table\",\n        createTableHint: \"Create a {0} x {1} table\",\n        addColumnLeft: \"Add column on the left\",\n        addColumnRight: \"Add column on the right\",\n        addRowAbove: \"Add row above\",\n        addRowBelow: \"Add row below\",\n        deleteRow: \"Delete row\",\n        deleteColumn: \"Delete column\",\n        mergeCellsHorizontally: \"Merge cells horizontally\",\n        mergeCellsVertically: \"Merge cells vertically\",\n        splitCellHorizontally: \"Split cells horizontally\",\n        splitCellVertically: \"Split cells vertically\",\n        tableAlignLeft: \"Table Align Left\",\n        tableAlignCenter: \"Table Align Center\",\n        tableAlignRight: \"Table Align Right\",\n        tableWizard: \"Table Wizard\",\n        tableProperties: \"Table Properties\",\n        tableCellProperties: \"Cell Properties\",\n        tableTab: \"General\",\n        cellTab: \"Cell\",\n        accessibilityTab: \"Advanced\",\n        caption: \"Caption\",\n        summary: \"Summary\",\n        width: \"Width\",\n        height: \"Height\",\n        units: \"Units\",\n        cellSpacing: \"Cell Spacing\",\n        cellPadding: \"Cell Padding\",\n        topPadding: \"Top\",\n        leftPadding: \"Left\",\n        bottomPadding: \"Bottom\",\n        rightPadding: \"Right\",\n        independentCellPaddings: \"Independent Cell Paddings\",\n        cellMargin: \"Cell Margin\",\n        alignment: \"Alignment\",\n        captionAlignment: \"Caption alignment\",\n        position: \"Position\",\n        background: \"Background\",\n        tableBackground: \"Table background\",\n        cssClass: \"CSS Class\",\n        id: \"ID\",\n        border: \"Border\",\n        borderStyle: \"Border Style\",\n        borderWidth: \"Border Width\",\n        borderColor: \"Border Color\",\n        collapseBorders: \"Collapse borders\",\n        wrapText: \"Wrap text\",\n        associateCellsWithHeaders: \"Associate headers\",\n        alignLeft: \"Align Left\",\n        alignCenter: \"Align Center\",\n        alignRight: \"Align Right\",\n        alignLeftTop: \"Align Left Top\",\n        alignCenterTop: \"Align Center Top\",\n        alignRightTop: \"Align Right Top\",\n        alignLeftMiddle: \"Align Left Middle\",\n        alignCenterMiddle: \"Align Center Middle\",\n        alignRightMiddle: \"Align Right Middle\",\n        alignLeftBottom: \"Align Left Bottom\",\n        alignCenterBottom: \"Align Center Bottom\",\n        alignRightBottom: \"Align Right Bottom\",\n        alignRemove: \"Remove Alignment\",\n        columns: \"Columns\",\n        rows: \"Rows\",\n        selectAllCells: \"Apply to all cells\",\n        applyToColumn: \"apply to column\",\n        applyToRow: \"apply to row\",\n        exportAs: \"Export As\",\n        \"import\": \"Import\",\n        print: \"Print\",\n        headerRows: \"Header Rows\",\n        headerColumns: \"Header Cols\",\n        tableSummaryPlaceholder: \"Summary attribute is not HTML5 compatible.\",\n        associateNone: \"None\",\n        associateScope: \"Associate using 'scope' attribute\",\n        associateIds: \"Associate using Ids\",\n        copyFormat: \"Copy format\",\n        applyFormat: \"Apply format\",\n        borderNone: \"None\",\n        undo: \"Undo\",\n        redo: \"Redo\"\n    };\n\n    var supportedContentEditable = typeof(document.documentElement.contentEditable) != 'undefined';\n\n    var toolGroups = {\n        basic: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n        undo: [\"undo\", \"redo\"],\n        scripts: [\"subscript\", \"superscript\" ],\n        alignment: [\"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\" ],\n        lines: [\"lineHeight\"],\n        symbols: [\"formattingMarks\"],\n        links: [\"insertImage\", \"insertFile\", \"createLink\", \"unlink\"],\n        lists: [\"insertUnorderedList\", \"insertOrderedList\", \"insertUpperRomanList\", \"insertLowerRomanList\",],\n        dent: [\"indent\", \"outdent\"],\n        tablesWizard: [\"tableProperties\", \"tableCellProperties\"],\n        tablesInsert: [\"createTable\"],\n        tablesAddDelete: [ \"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\" ],\n        tablesMerge: [ \"mergeCellsHorizontally\", \"mergeCellsVertically\", \"splitCellHorizontally\", \"splitCellVertically\" ],\n        tablesPosition: [ \"tableAlignLeft\", \"tableAlignCenter\", \"tableAlignRight\" ],\n        formatPainter: [ \"copyFormat\", \"applyFormat\" ]\n    };\n\n    var Editor = Widget.extend({\n        __suppressEditableCheck: false,\n        init: function(element, options) {\n            var that = this,\n                editorNS = kendo.ui.editor,\n                dom = editorNS.Dom,\n                toolbarContainer,\n                type, domElement;\n\n\n            /* suppress initialization in devices w/o proper contenteditable support */\n            if (!supportedContentEditable && !that.__suppressEditableCheck) {\n                return;\n            }\n\n            Widget.fn.init.call(that, element, options);\n\n            that.options = deepExtend({}, that.options, options);\n\n            element = that.element;\n            domElement = element[0];\n            type = dom.name(domElement);\n\n            this._registerHandler(\n                element.closest(\"form\"), \"submit\", that.update.bind(that, undefined$1)\n            );\n\n            toolbarContainer = that._setupType(element);\n\n            that._initToolbar(toolbarContainer);\n            that._setupHeight(type);\n            that._resizable();\n            that._initializeContentElement(that);\n            that._setupKeyboard();\n\n            that.clipboard = new editorNS.Clipboard(this);\n            that.undoRedoStack = new kendo.util.UndoRedoStack();\n\n            that._populateValue(options, domElement);\n\n            that._registerHandler(document, {\n                \"mousedown\": function() { that._endTyping(); },\n                \"mouseup\": function(e) { that._mouseup(e); }\n            });\n\n            that._registerHandler(window, \"resize\", that._handleSpaceAndNewLines.bind(that));\n\n            that._initializeImmutables();\n\n            if (type == \"textarea\") {\n                that._ariaLabel(that.wrapper.find(\"iframe\"));\n            }\n\n            that.toolbar.resize();\n\n            that._initInlineOverflowWrapper();\n\n            kendo.notify(that);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay((that.wrapper && that.wrapper[0]) || that.element[0]);\n            }\n        },\n\n        events: [\n            \"select\",\n            \"change\",\n            \"execute\",\n            \"error\",\n            \"paste\",\n            \"keydown\",\n            \"keyup\"\n        ],\n\n        options: {\n            name: \"Editor\",\n            messages: messages,\n            placeholder: \"\",\n            nonce: \"\",\n            unsafeInline: true,\n            formats: {},\n            encoded: true,\n            formattingMarksRefreshDelay: 250,\n            domain: null,\n            resizable: false,\n            deserialization: {\n                custom: null\n            },\n            serialization: {\n                entities: true,\n                semantic: true,\n                scripts: false,\n                optimizeTags: false,\n                keepEOL: false\n            },\n            pasteCleanup: {\n                all: false,\n                css: false,\n                custom: null,\n                keepNewLines: false,\n                msAllFormatting: false,\n                msConvertLists: true,\n                msTags: true,\n                none: false,\n                span: false\n            },\n            stylesheets: [],\n            dialogOptions: {\n                modal: true, resizable: false, draggable: true,\n                animation: false\n            },\n            imageBrowser: null,\n            fileBrowser: null,\n            navigateOnTab: false,\n            fontName: [\n                { text: \"Arial\", value: \"Arial, Helvetica, sans-serif\" },\n                { text: \"Courier New\", value: \"\\\"Courier New\\\", Courier, monospace\" },\n                { text: \"Georgia\", value: \"Georgia, serif\" },\n                { text: \"Impact\", value: \"Impact, Charcoal, sans-serif\" },\n                { text: \"Lucida Console\", value: \"\\\"Lucida Console\\\", Monaco, monospace\" },\n                { text: \"Tahoma\", value: \"Tahoma, Geneva, sans-serif\" },\n                { text: \"Times New Roman\", value: \"\\\"Times New Roman\\\", Times, serif\" },\n                { text: \"Trebuchet MS\", value: \"\\\"Trebuchet MS\\\", Helvetica, sans-serif\" },\n                { text: \"Verdana\", value: \"Verdana, Geneva, sans-serif\" }\n            ],\n            fontSize: [\n                { text: \"1 (8pt)\", value: \"xx-small\" },\n                { text: \"2 (10pt)\", value: \"x-small\" },\n                { text: \"3 (12pt)\", value: \"small\" },\n                { text: \"4 (14pt)\", value: \"medium\" },\n                { text: \"5 (18pt)\", value: \"large\" },\n                { text: \"6 (24pt)\", value: \"x-large\" },\n                { text: \"7 (36pt)\", value: \"xx-large\" }\n            ],\n            formatBlock: [\n                { text: \"Paragraph\", value: \"p\" },\n                { text: \"Quotation\", value: \"blockquote\" },\n                { text: \"Heading 1\", value: \"h1\" },\n                { text: \"Heading 2\", value: \"h2\" },\n                { text: \"Heading 3\", value: \"h3\" },\n                { text: \"Heading 4\", value: \"h4\" },\n                { text: \"Heading 5\", value: \"h5\" },\n                { text: \"Heading 6\", value: \"h6\" }\n            ],\n            tools: [\n                \"formatting\",\n                \"bold\",\n                \"italic\",\n                \"underline\",\n                \"undo\",\n                \"redo\",\n                \"justifyLeft\",\n                \"justifyCenter\",\n                \"justifyRight\",\n                \"copyFormat\",\n                \"applyFormat\",\n                \"insertUnorderedList\",\n                \"insertOrderedList\",\n                \"indent\",\n                \"outdent\",\n                \"createLink\",\n                \"unlink\",\n                \"insertImage\",\n                \"tableProperties\",\n                \"tableCellProperties\",\n                \"createTable\",\n                \"addRowAbove\",\n                \"addRowBelow\",\n                \"addColumnLeft\",\n                \"addColumnRight\",\n                \"deleteRow\",\n                \"deleteColumn\",\n                \"mergeCellsHorizontally\",\n                \"mergeCellsVertically\",\n                \"splitCellHorizontally\",\n                \"splitCellVertically\",\n                \"tableAlignLeft\",\n                \"tableAlignCenter\",\n                \"tableAlignRight\"\n            ]\n        },\n\n        destroy: function() {\n            var editor = this;\n\n            Widget.fn.destroy.call(this);\n\n            this._endTyping(true);\n\n            this._deregisterHandlers();\n\n            clearTimeout(this._spellCorrectTimeout);\n\n            this._focusOutside();\n\n            this.toolbar.destroy();\n\n            if (this.windowInstance) {\n                this.windowInstance.destroy();\n            }\n            if (this.tablePopup) {\n                this.tablePopup.destroy();\n            }\n\n            editor._destroyUploadWidget();\n\n            if (this.interSectionObserver) {\n                this.interSectionObserver.disconnect();\n                this.interSectionObserver = null;\n            }\n\n            if (this.resizeObserver) {\n                this.resizeObserver.disconnect();\n                this.resizeObserver = null;\n                this.wrapper.css(\"min-height\", \"\");\n                this.wrapper.css(\"max-height\", \"\");\n            }\n\n            editor._destroyResizings();\n\n            editor._destroyFormattingMarksOverlay();\n\n            kendo.destroy(this.wrapper);\n        },\n\n        setOptions: function(options) {\n            var editor = this;\n\n            Widget.fn.setOptions.call(editor, options);\n\n            if (options.tools) {\n                this._setOptionsTools(options.tools);\n            }\n\n            this._initializePlaceholder();\n        },\n\n        createRange: function(document) {\n            return kendo.ui.editor.RangeUtils.createRange(document || this.document);\n        },\n\n        encodedValue: function() {\n            return kendo.ui.editor.Dom.encode(this.value());\n        },\n\n        exec: function(name, params) {\n            var that = this;\n            var command = null;\n            var defaultTools = kendo.ui.Editor.defaultTools;\n            var range, tool, prevented;\n\n            if (!name) {\n                throw new Error(\"kendoEditor.exec(): `name` parameter cannot be empty\");\n            }\n\n            if (that.body.getAttribute(\"contenteditable\") !== \"true\" &&\n                name !== \"print\" &&\n                name !== \"pdf\" &&\n                name !== \"exportAs\") {\n                return false;\n            }\n\n            if (!that.keyboard.isTypingInProgress()) {\n                that._focusBody();\n                that.selectRange(that._range || that.getRange());\n            }\n\n            tool = that.tools[name] || defaultTools[name];\n\n            if (!tool) {\n                Object.keys(defaultTools).map(key => {\n                    if (key.toLowerCase() === name) {\n                        tool = defaultTools[key];\n                    }\n                });\n            }\n\n            if (tool) {\n                range = that.getRange();\n\n                if (tool.command) {\n                    command = tool.command(extend({ range: range, body: that.body, immutables: !!that.immutables }, params));\n                }\n\n                prevented = that.trigger(\"execute\", { name: name, command: command });\n\n                if (prevented) {\n                    return;\n                }\n\n                if (/^(undo|redo)$/i.test(name)) {\n                    that.undoRedoStack[name]();\n                } else if (command) {\n                    that.execCommand(command);\n\n                    if (command.async) {\n                        command.change = that._commandChange.bind(that);\n                        return;\n                    }\n                }\n\n                // Prevent double execution when the formatting marks tool is used.\n                if (name !== \"formattingMarks\") {\n                    that._handleSpaceAndNewLines();\n                }\n                that._selectionChange();\n            }\n        },\n\n        _commandChange: function() {\n            const that = this;\n            that._selectionChange();\n            that._handleSpaceAndNewLines();\n        },\n\n        execCommand: function(command) {\n            if (!command.managesUndoRedo) {\n                this.undoRedoStack.push(command);\n            }\n\n            command.editor = this;\n            command.exec();\n        },\n\n        focus: function() {\n            this.restoreSelection();\n        },\n\n        getRange: function() {\n            var selection = this.getSelection(),\n                range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : this.createRange(),\n                doc = this.document;\n\n            if (range.startContainer == doc && range.endContainer == doc && !range.startOffset && !range.endOffset) {\n                range.setStart(this.body, 0);\n                range.collapse(true);\n            }\n\n            return range;\n        },\n\n        getSelection: function() {\n            return kendo.ui.editor.SelectionUtils.selectionFromDocument(this.document);\n        },\n\n        paste: function(html, options) {\n            this.focus();\n\n            var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n                range: this.getRange(),\n                html: html\n            }, options));\n\n            command.editor = this;\n\n            command.exec();\n        },\n\n        refresh: function() {\n            var that = this;\n\n            if (that.textarea) {\n                that._destroyResizings();\n                // preserve updated value before re-initializing\n                // don't use update() to prevent the editor from encoding the content too early\n                var value = that.value();\n                that.textarea.val(value);\n                that.wrapper.find(\"iframe\").remove();\n                that._initializeContentElement(that);\n                that.value(value);\n            }\n        },\n\n        restoreSelection: function() {\n            this._focusBody();\n\n            if (this.selectionRestorePoint) {\n                this.selectRange(this.selectionRestorePoint.toRange());\n            }\n        },\n\n        saveSelection: function(range) {\n            range = range || this.getRange();\n            var container = range.commonAncestorContainer,\n                body = this.body;\n\n            if (container == body || $.contains(body, container)) {\n                this.selectionRestorePoint = new kendo.ui.editor.RestorePoint(range, body);\n            }\n        },\n\n        selectedHtml: function() {\n            return kendo.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());\n        },\n\n        selectRange: function(range) {\n            this._focusBody();\n            var selection = this.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n            this.saveSelection(range);\n        },\n\n        state: function(toolName) {\n            var tool = kendo.ui.Editor.defaultTools[toolName];\n            var finder = tool && (tool.options.finder || tool.finder);\n            var RangeUtils = kendo.ui.editor.RangeUtils;\n            var range, textNodes;\n\n            if (finder) {\n                range = this.getRange();\n\n                textNodes = RangeUtils.textNodes(range);\n\n                if (!textNodes.length && range.collapsed) {\n                    textNodes = [range.startContainer];\n                }\n\n                return finder.getFormat ? finder.getFormat(textNodes) : finder.isFormatted(textNodes);\n            }\n\n            return false;\n        },\n\n        update: function(value) {\n            value = value || this.options.encoded ? this.encodedValue() : this.value();\n\n            if (this.textarea) {\n                this.textarea.val(value);\n                this._togglePlaceholder(!value.trim());\n            } else {\n                this._oldValue = value;\n            }\n        },\n\n        value: function(html) {\n            var body = this.body,\n                editorNS = kendo.ui.editor,\n                options = this.options,\n                currentHtml = editorNS.Serializer.domToXhtml(body, options.serialization);\n\n            if (html === undefined$1) {\n                return currentHtml;\n            }\n\n            if (html == currentHtml) {\n                return;\n            }\n\n            editorNS.Serializer.htmlToDom(html, body, options.deserialization);\n\n            this.selectionRestorePoint = null;\n            this.update();\n            this._refreshTools();\n        },\n\n        _bindTools: function() {\n            var that = this,\n                defaultTools = this.tools;\n\n            that.unbind(\"select\", that.toolbar.resize.bind(that.toolbar));\n\n            that.toolbar.element.find(\"[data-command]\")\n                .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                .each((i, el) => {\n                    var toolName = el.getAttribute(\"data-command\"),\n                        tool = defaultTools[toolName];\n\n                    if (tool && tool.initialize) {\n                        tool.initialize($(el), that);\n                    }\n                });\n\n            that.bind(\"select\", that.toolbar.resize.bind(that.toolbar));\n        },\n\n        _blur: function() {\n            var textarea = this.textarea;\n            var old = textarea ? textarea.val() : this._oldValue;\n            var value = this.options.encoded ? this.encodedValue() : this.value();\n\n            this.update();\n\n            if (textarea) {\n                textarea.trigger(\"blur\");\n            }\n\n            if (value != old) {\n                this.trigger(\"change\");\n                if (textarea) {\n                    textarea.trigger(\"change\");\n                }\n            }\n        },\n\n        _containsRange: function(range) {\n            var dom = kendo.ui.editor.Dom;\n            var body = this.body;\n            return range && dom.isAncestorOrSelf(body, range.startContainer) &&\n                dom.isAncestorOrSelf(body, range.endContainer);\n        },\n\n        _createContentElement: function(stylesheets) {\n            var editor = this;\n            var iframe, wnd, doc;\n            var textarea = editor.textarea;\n            var specifiedDomain = editor.options.domain;\n            var domain = specifiedDomain || document.domain;\n            var domainScript = \"\";\n            var src = 'javascript:\"\"';\n            var lang = \"\";\n\n            textarea.hide();\n\n            iframe = $(\"<iframe />\", { title: editor.options.messages.editAreaTitle, frameBorder: \"0\" })[0];\n\n            $(iframe)\n                .css(\"display\", \"\")\n                .addClass(\"k-content k-iframe\")\n                .attr(\"tabindex\", textarea[0].tabIndex)\n                .insertBefore(textarea);\n\n            // automatically relax same-origin policy if document.domain != location.hostname,\n            // or forcefully relax if options.domain is specified (for document.domain = document.domain scenario)\n            if (specifiedDomain || domain != location.hostname) {\n                // relax same-origin policy\n                domainScript = `<script ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>document.domain=\"${domain}\"</script>`;\n                src = \"javascript:document.write('\" + domainScript + \"')\";\n                iframe.src = src;\n            }\n\n            if (!iframe.src) {\n                iframe.src = \"\";\n            }\n\n            wnd = iframe.contentWindow || iframe;\n            doc = wnd.document || iframe.contentDocument;\n\n            // https://github.com/telerik/kendo-ui-core/issues/7561\n            const observer = editor.interSectionObserver = new IntersectionObserver(entries => {\n                for (const entry of entries) {\n                    if (entry.isIntersecting) {\n                        editor._decorateFormatting(doc.body);\n                        observer.unobserve(iframe);\n                    }\n                }\n            });\n            observer.observe(iframe);\n\n            lang = document.getElementsByTagName(\"html\")[0].getAttribute(\"lang\") || DEFAULT_LANGUAGE;\n\n            doc.open();\n            doc.write(\n                \"<!DOCTYPE html><html lang='\" + lang + \"'><head>\" +\n                \"<meta charset='utf-8' />\" +\n                \"<title>Kendo UI Editor content</title>\" +\n                `<style ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>` +\n                    \"html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}\" +\n                    \"body{padding:0;margin:0;}\" +\n                    \"body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;\" +\n                    \"word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;\" +\n                    (kendo.support.isRtl(textarea) ? \"direction:rtl;\" : \"\") +\n                    (os.ios ? \"word-break:keep-all;\" : \"\") +\n                    (browser.edge || browser.chrome ? \"height:100%;\" : \"\") +\n                    \"}\" +\n                    \"h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}\" +\n                    \"p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}\" +\n                    \"ul,ol{padding-left:2.5em}\" +\n                    \"span{-ms-high-contrast-adjust:none;}\" +\n                    \"a{color:#00a}\" +\n                    \"code{font-size:1.23em}\" +\n                    \"telerik\\\\3Ascript{display: none;}\" +\n                    \".k-table{width:100%;border-spacing:0;margin: 0 0 1em;}\" +\n                    \".k-table td{min-width:1px;padding:.2em .3em;}\" +\n                    \".k-table,.k-table td{outline:0;border: 1px dotted #ccc;}\" +\n                    \".k-table th{outline:0;border: 1px dotted #999;}\" +\n                    \".k-table p{margin:0;padding:0;}\" +\n                    \".k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}\" +\n                    \".k-column-resize-handle {width: 100%; height: 100%;}\" +\n                    \".k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}\" +\n                    \".k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}\" +\n                    \".k-row-resize-handle {display: table; width: 100%; height: 100%;}\" +\n                    \".k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}\" +\n                    \".k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}\" +\n                    \".k-element-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}\" +\n                    \".k-element-resize-handle {width: 100%; height: 100%;}\" +\n                    \".k-element-resize-handle.k-resize-east{cursor:e-resize;}\" +\n                    \".k-element-resize-handle.k-resize-north{cursor:n-resize;}\" +\n                    \".k-element-resize-handle.k-resize-northeast{cursor:ne-resize;}\" +\n                    \".k-element-resize-handle.k-resize-northwest{cursor:nw-resize;}\" +\n                    \".k-element-resize-handle.k-resize-south{cursor:s-resize;}\" +\n                    \".k-element-resize-handle.k-resize-southeast{cursor:se-resize;}\" +\n                    \".k-element-resize-handle.k-resize-southwest{cursor:sw-resize;}\" +\n                    \".k-element-resize-handle.k-resize-west{cursor:w-resize;}\" +\n                    \".k-table.k-element-resizing{opacity:0.6;}\" +\n                    \".k-placeholder{color:grey}\" +\n                    \"k\\\\:script{display:none;}\" +\n                \"</style>\" +\n                domainScript +\n                $.map(stylesheets, function(href) {\n                    return `<link rel='stylesheet' href='${href}' ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\" }>`;\n                }).join(\"\") +\n                `</head><body id='${editor.element.attr(\"id\")}' autocorrect='off' contenteditable='true'></body></html>`\n            );\n            doc.close();\n\n            return wnd;\n        },\n\n        _deleteSavedRange: function() {\n            if (\"_range\" in this) {\n                delete this._range;\n            }\n        },\n\n        _decorateFormatting: function(body) {\n            var formattingElement = this.toolbar.element.find(\"input[data-command=formatting]\"),\n                dom = kendo.ui.editor.Dom,\n                component, dataSource, items, i, tag, className, style;\n\n            if (formattingElement.length) {\n                component = formattingElement.getKendoDropDownList();\n                if (!component) {\n                    return;\n                }\n                dataSource = component.dataSource;\n                items = dataSource.data();\n\n                if (body) {\n                    component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n                }\n\n                if (this.options.unsafeInline !== false) {\n\n                    for (i = 0; i < items.length; i++) {\n                        tag = items[i].tag || \"span\";\n                        className = items[i].className;\n\n                        style = dom.inlineStyle(body, tag, { className: className });\n                        style = style.replace(/\"/g, \"'\");\n\n                        items[i].style = style + \";display:inline-block\";\n                    }\n                }\n\n                dataSource.trigger(\"change\");\n            }\n        },\n\n        _appendFormattingMarksStyles: function() {\n            const that = this,\n                elementId = that.element.attr(\"id\");\n\n            let style, $head;\n\n            style = `<style id='${FORMATTING_MARKS_STYLE_ID + \"-\" + elementId}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >\n                #${elementId} p::after,\n                #${elementId} li::after,\n                #${elementId} h1::after,\n                #${elementId} h2::after,\n                #${elementId} h3::after,\n                #${elementId} h4::after,\n                #${elementId} h5::after,\n                #${elementId} h6::after {content: '\\\\00B6'; color: #6098f2;}\n                #${FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId} {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    z-index: 9999;\n                    pointer-events: none;\n                }\n                #${FORMATTING_MARKS_OVERLAY_ID + \"-\" + elementId} {\n                    width: 100%;\n                    height: 100%;\n                  }\n            </style>`;\n\n            $head = $(that.document.head);\n            $head.find(\"#\" + FORMATTING_MARKS_STYLE_ID + \"-\" + elementId).remove();\n            $head.append(style);\n        },\n\n        _appendFormattingMarksOverlay: function() {\n            const that = this,\n                elementId = that.element.attr(\"id\");\n\n            that._formattingMarksOverlayWrapper = $(`<div id='${FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId}'></div>`);\n            that._formattingMarksOverlay = $(`<svg id='${FORMATTING_MARKS_OVERLAY_ID + \"-\" + elementId}'></svg>`).appendTo(that._formattingMarksOverlayWrapper);\n            that._bodyTopBottomPaddings = parseFloat($(that.body).css(\"padding-top\")) + parseFloat($(that.body).css(\"padding-bottom\"));\n\n            if (that._isInlineEditor()) {\n                that._formattingMarksOverlayWrapper.insertAfter(that.element);\n            } else {\n                that._formattingMarksOverlayWrapper.appendTo($(that.document).find(\"html\"));\n            }\n        },\n\n        _destroyFormattingMarksOverlay: function() {\n            const that = this,\n                elementId = that.element.attr(\"id\");\n\n            $(that.document).find(\"#\" + FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId).remove();\n            $(that.document.head).find(\"#\" + FORMATTING_MARKS_STYLE_ID + \"-\" + elementId).remove();\n        },\n\n        _updateFormattingMarksOverlayHeight: function() {\n            const that = this;\n\n            if (that._isInlineEditor()) {\n                that._formattingMarksOverlayWrapper.height($(that.body).outerHeight());\n            } else {\n                that._formattingMarksOverlayWrapper.height(that.body.scrollHeight - that._bodyTopBottomPaddings);\n            }\n        },\n\n        _initInlineOverflowWrapper: function() {\n            const that = this,\n                inlineHeight = that.options.inlineHeight;\n\n            if (that._isInlineEditor() && inlineHeight > -1) {\n                that._inlineOverflowWrapper = that.element.wrap(`<div class='k-inline-editor-overflow-wrapper k-pos-relative k-overflow-auto'></div>`).parent();\n                that._inlineOverflowWrapper.height(inlineHeight);\n            }\n        },\n\n        _deregisterHandlers: function() {\n            var handlers = this._handlers;\n\n            for (var i = 0; i < handlers.length; i++) {\n                var h = handlers[i];\n                h.element.off(h.type, h.handler);\n            }\n\n            this._handlers = [];\n        },\n\n        _destroyUploadWidget: function() {\n            var editor = this;\n            if (editor._uploadWidget) {\n                editor._uploadWidget.destroy();\n                editor._uploadWidget = null;\n            }\n        },\n\n        _endTyping: function() {\n            var keyboard = this.keyboard;\n\n            try {\n                if (keyboard.isTypingInProgress()) {\n                    keyboard.endTyping(true);\n                    this.saveSelection();\n                }\n            } catch (e) { }\n        },\n\n        _focusBody: function() {\n            var body = this.body;\n            var iframe = this.wrapper && this.wrapper.find(\"iframe\")[0];\n            var documentElement = this.document.documentElement;\n            var activeElement = kendo._activeElement();\n            var scrollTop;\n\n\n            if (!iframe && body.scrollHeight > body.clientHeight) {\n                scrollTop = body.scrollTop;\n                body.focus();\n                body.scrollTop = scrollTop;\n\n            } else if (activeElement != body && activeElement != iframe) {\n                scrollTop = documentElement.scrollTop;\n                body.focus();\n                documentElement.scrollTop = scrollTop;\n            }\n        },\n\n        _focusOutside: function() {\n            // move focus outside the Editor, see https://github.com/telerik/kendo/issues/3673\n            if (kendo.support.browser.msie && this.textarea) {\n                var tempInput = $(\"<input />\")\n                    .css({\n                        position: \"fixed\",\n                        left: \"1px\",\n                        top: \"1px\",\n                        width: \"1px\",\n                        height: \"1px\",\n                        \"font-size\": \"0\",\n                        border: \"0\",\n                        opacity: \"0\"\n                })\n                .appendTo(document.body).trigger(\"focus\");\n                tempInput.trigger(\"blur\").remove();\n            }\n        },\n\n        _handleToolbarClick: function(e) {\n            var toolName = e.target.data(\"command\");\n\n            if (toolName && toolName !== \"createTable\") {\n                this.exec(toolName);\n            }\n        },\n\n        _immutablesContext: function(range) {\n            var editorNS = kendo.ui.editor;\n\n            if (this.options.immutables) {\n                if (range.collapsed) {\n                    return editorNS.Immutables.immutablesContext(range);\n                } else {\n                    return editorNS.RangeUtils.editableTextNodes(range).length === 0;\n                }\n            }\n        },\n\n        _initializeContentElement: function() {\n            var editor = this;\n            var doc;\n            var blurTrigger;\n            var mousedownTrigger;\n\n            if (editor.textarea) {\n                editor.window = editor._createContentElement(editor.options.stylesheets);\n                doc = editor.document = editor.window.contentDocument || editor.window.document;\n\n                // Ensure that body exists as various Firefox plugins can cause a delay of the body creation\n                // https://github.com/telerik/kendo-ui-core/issues/3515\n                if (!doc.body) {\n                    var body = doc.createElement(\"body\");\n                    body.setAttribute(\"contenteditable\", \"true\");\n                    body.setAttribute(\"autocorrect\", \"off\");\n                    doc.getElementsByTagName(\"html\")[0].appendChild(body);\n\n                    var interval = setInterval(function() {\n                        if ($(editor.document).find(\"body\").length > 1) {\n                            $(editor.document).find(\"body\").last().remove();\n                            window.clearInterval(interval);\n                        }\n                    },10);\n                }\n\n                editor.body = doc.body;\n\n                blurTrigger = editor.window;\n                mousedownTrigger = doc;\n\n                this._registerHandler(doc, \"mouseup\", this._mouseup.bind(this));\n            } else {\n                editor.window = window;\n                doc = editor.document = document;\n                editor.body = editor.element[0];\n\n                blurTrigger = editor.body;\n                mousedownTrigger = editor.body;\n\n                setTimeout(() => {\n                    editor._decorateFormatting(editor.body);\n                });\n            }\n\n            this._registerHandler(blurTrigger, \"blur\", this._blur.bind(this));\n            editor._registerHandler(mousedownTrigger, \"down\", editor._mousedown.bind(editor));\n\n            try {\n                doc.execCommand(\"enableInlineTableEditing\", null, false);\n            } catch (e) { }\n\n            if (kendo.support.touch) {\n                this._registerHandler(doc, {\n                    \"keydown\": function() {\n                        // necessary in iOS when touch events are bound to the page\n                        if (kendo._activeElement() != doc.body) {\n                            editor.window.focus();\n                        }\n                    }\n                });\n            }\n\n            this._initializePlaceholder();\n\n            this._spellCorrect(editor);\n\n            this._registerHandler(editor.document, {\n                \"mouseover dragenter\": function(e) {\n                    var height = $(editor.body).height();\n                    var htmlHeight = $(editor.body.parentElement).height();\n\n                    if (htmlHeight > height && e.target.nodeName.toLowerCase() === \"html\") {\n                        editor._cachedHeight = \"\" + editor.body.style.height;\n                        editor.body.style.height = \"100%\";\n                    }\n                },\n                \"mouseout dragleave drop contextmenu\": function(e) {\n                    var restoreHeight = function() {\n                        if (editor._cachedHeight !== undefined$1 && e.target === editor.body) {\n                            editor.body.style.height = editor._cachedHeight;\n                            delete editor._cachedHeight;\n                        }\n                    };\n\n                    if (e.type === \"contextmenu\") {\n                        setTimeout(function() {\n                            restoreHeight();\n                        }, 10);\n                    } else {\n                        restoreHeight();\n                    }\n\n                }\n            });\n\n            this._registerHandler(editor.body, {\n                \"keydown\": function(e) {\n                    var range;\n\n                    if ((e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) && editor.body.getAttribute(\"contenteditable\") !== \"true\") {\n                        return false;\n                    }\n\n                    if (e.keyCode === keys.F10) {\n                        editor.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                        editor.toolbar.preventPopupHide = true;\n                        e.preventDefault();\n                        return;\n                    } else if (e.keyCode == keys.LEFT || e.keyCode == keys.RIGHT) {\n                        // skip bom nodes when navigating with arrows\n                        range = editor.getRange();\n                        var left = e.keyCode == keys.LEFT;\n                        var container = range[left ? \"startContainer\" : \"endContainer\"];\n                        var offset = range[left ? \"startOffset\" : \"endOffset\"];\n                        var direction = left ? -1 : 1;\n\n                        var next = offset + direction;\n                        var nextChar = left ? next : offset;\n\n                        if (container.nodeType == 3 && container.nodeValue[nextChar] == \"\\ufeff\") {\n                            range.setStart(container, next);\n                            range.collapse(true);\n                            editor.selectRange(range);\n                        }\n                    }\n\n                    var tools = editor.tools;\n                    var toolName = editor.keyboard.toolFromShortcut(tools, e);\n                    var toolOptions = toolName ? tools[toolName].options : {};\n\n                    if (toolName && !toolOptions.keyPressCommand) {\n                        e.preventDefault();\n\n                        if (!/^(undo|redo)$/.test(toolName)) {\n                            editor.keyboard.endTyping(true);\n                        }\n\n                        editor.trigger(\"keydown\", e);\n                        editor.exec(toolName);\n                        editor._runPostContentKeyCommands(e);\n\n                        return false;\n                    }\n\n                    editor.keyboard.clearTimeout();\n\n                    editor.keyboard.keydown(e);\n                },\n                \"keypress\": function(e) {\n                    setTimeout(function() {\n                        editor._runPostContentKeyCommands(e);\n                        editor._showElementResizeHandles();\n                    }, 0);\n                },\n                \"keyup\": function(e) {\n                    var selectionCodes = [\n                       keys.BACKSPACE,\n                       keys.TAB,\n                       keys.PAGEUP,\n                       keys.PAGEDOWN,\n                       keys.END,\n                       keys.HOME,\n                       keys.LEFT,\n                       keys.UP,\n                       keys.RIGHT,\n                       keys.DOWN,\n                       keys.INSERT,\n                       keys.DELETE\n                    ];\n\n                    if ($.inArray(e.keyCode, selectionCodes) > -1 || (e.keyCode == 65 && e.ctrlKey && !e.altKey && !e.shiftKey)) {\n                        window.clearTimeout(this._refreshInterval);\n                        this._refreshInterval = window.setTimeout(function() {\n                            editor._selectionChange();\n                        }, REFRESH_INTERVAL);\n                    }\n\n                    if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                        editor._handleSpaceAndNewLines();\n                    }\n\n                    editor.keyboard.keyup(e);\n                },\n                \"click\": function(e) {\n                    var dom = kendo.ui.editor.Dom, range;\n\n                    if (dom.name(e.target) === \"img\") {\n                        range = editor.createRange();\n                        range.selectNode(e.target);\n                        editor.selectRange(range);\n                    }\n                },\n                \"cut copy paste drop dragover\": function(e) {\n                    editor.clipboard[\"on\" + e.type](e);\n                    editor._handleSpaceAndNewLines();\n                },\n                \"focusin\": function() {\n                    if (editor.body.hasAttribute(\"contenteditable\")) {\n                        $(this).addClass(\"k-active\");\n                        // To be moved to the Editor\n                        editor._showWindow();\n                        editor._togglePlaceholder(false);\n                    }\n                },\n                \"focusout\": function() {\n                    setTimeout(function() {\n                        var active = kendo._activeElement();\n                        var body = editor.body;\n                        // All below to be moved to the Editor\n                        var toolbar = editor.toolbar;\n\n                        if (toolbar.options.popup) {\n                            var toolbarContainerElement = editor.windowInstance.element.get(0);\n                            if (toolbarContainerElement && !($.contains(toolbarContainerElement, active) || toolbarContainerElement == active)) {\n                                toolbar.preventPopupHide = false;\n                            }\n                        }\n\n                        if (active != body && !$.contains(body, active) && !editor._toolbarFocused() && !toolbar.preventPopupHide && !$(active).hasClass(\"k-context-menu\") && !$(active).hasClass(\"k-colorpalette\")) {\n                            $(body).removeClass(\"k-active\");\n                            editor._hideWindow();\n                        }\n\n                        editor._togglePlaceholder(!editor.value().trim());\n                    }, 10);\n                }\n            });\n\n            editor._initializeColumnResizing();\n            editor._initializeRowResizing();\n            editor._initializeElementResizing();\n        },\n\n        _initializeImmutables: function() {\n            var that = this,\n                editorNS = kendo.ui.editor;\n\n            if (that.options.immutables) {\n                that.immutables = new editorNS.Immutables(that);\n            }\n        },\n\n        _initializePlaceholder: function() {\n            var that = this,\n                placeholder = that.options.placeholder,\n                style, $head;\n\n            if (!that.textarea || !placeholder) {\n                return;\n            }\n\n            style = `<style id='${PLACEHOLDER_TAG_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\" } >.` +\n                        PLACEHOLDER_CLASS + \":before { content: '\" + placeholder + \"'; }\" +\n                    \"</style>\";\n\n            $head = $(that.document.head);\n            $head.find(\"#\" + PLACEHOLDER_TAG_ID).remove();\n            $head.append(style);\n\n            that._togglePlaceholder(!that.value().trim());\n        },\n\n        _initToolbar: function(toolbarContainer) {\n            var that = this,\n                tools, defaults, toolbarOptions;\n\n            that.tools = [];\n            [tools, defaults] = that._processToolbarItems(that.options.tools);\n            that._setNativeTools();\n\n            toolbarOptions = {\n                tools: tools,\n                defaultTools: defaults,\n                parentMessages: that.options.messages,\n                resizable: that.options.resizable && that.options.resizable.toolbar,\n                toggle: that._handleToolbarClick.bind(this),\n                click: that._handleToolbarClick.bind(this),\n                navigateOnTab: that.options.navigateOnTab,\n                evaluateTemplates: true\n            };\n\n            that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n            that._bindTools();\n            that.bind(\"select\", that._refreshTools.bind(that));\n\n            toolbarContainer.on(\"mousedown\" + NS, \"[ref-toolbar-tool]\", function(e) {\n                if (!$(e.target).is(\"input\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if (!that.textarea) {\n                that._initToolbarWindow(toolbarContainer);\n            }\n        },\n\n        _initToolbarWindow: function(toolbarEl) {\n            var that = this;\n\n            this.windowInstance = toolbarEl\n                .wrap(\"<div class='editorToolbarWindow k-editor-window' />\")\n                .parent()\n                .prepend(\"<span class='k-editortoolbar-dragHandle'>\" + kendo.ui.icon(\"handle-drag\") + \"</span>\")\n                .kendoWindow({\n                    title: false,\n                    resizable: false,\n                    draggable: {\n                        dragHandle: \".k-editortoolbar-dragHandle\"\n                    },\n                    animation: {\n                        open: { effects: \"fade:in\" },\n                        close: { effects: \"fade:out\" }\n                    },\n                    minHeight: 42,\n                    visible: false,\n                    autoFocus: false,\n                    actions: [],\n                    dragend: function() {\n                        this._moved = true;\n                    }\n                })\n                .on(\"mousedown\", function(e) {\n                    if (!$(e.target).is(TOOLBAR_ALLOWED_CLOSE_SELECTORS)) {\n                        that.toolbar.preventPopupHide = true;\n                    }\n                })\n                .on(\"focusout\", function() {\n                    that.element.focusout();\n                })\n                .data(\"kendoWindow\");\n        },\n\n        _mousedown: function(e) {\n            var editor = this;\n            editor._selectionStarted = true;\n\n            if ($(editor.body).parents('.k-window').length) {\n                e.stopPropagation();\n            }\n\n            // handle middle-click and ctrl-click on links\n            if (browser.gecko) {\n                return;\n            }\n\n            var target = $(e.target).closest(\"a[href]\");\n\n            if ((e.which == 2 || (e.which == 1 && e.ctrlKey)) && target && target.is(\"a[href]\")) {\n                window.open(target.attr(\"href\"), \"_new\");\n            }\n\n            if (e.target.tagName && e.target.tagName.toLowerCase() === \"html\") {\n                setTimeout(function() {\n                    editor.body.focus();\n                }, 0);\n            }\n        },\n\n        _mouseup: function(e) {\n            var that = this;\n\n            if (kendo.support.mobileOS.ios && e && $(e.target).is(SELECT_OVERLAY_SELECTOR)) {\n                return;\n            }\n\n            if (that._selectionStarted) {\n                setTimeout(function() {\n                    that._selectionChange();\n                }, 1);\n            }\n        },\n\n        _populateValue: function(options, domElement) {\n            var that = this,\n                editorNS = kendo.ui.editor,\n                dom = editorNS.Dom,\n                value, comments;\n\n            if (options && options.value) {\n                value = options.value;\n            } else if (that.textarea) {\n                // indented HTML introduces problematic ranges in IE\n                value = domElement.value;\n\n                if (!value.replace(/\\s/g, '').length) {\n                    value = value.replace(/\\s/g, '');\n                }\n\n                // revert encoding of value when content is fetched from cache\n                if (that.options.encoded && domElement.defaultValue && domElement.defaultValue.trim().length) {\n                    value = domElement.defaultValue;\n                }\n\n                var deserializedRoot = editorNS.Serializer.htmlToDom(value, $(\"<div></div>\")[0], that.options.deserialization);\n                comments = dom.getAllComments(deserializedRoot);\n                value = EditorUtils.cacheComments(value, comments);\n                value = value.replace(/[\\r\\n\\v\\f\\t ]+/ig, \" \");\n                value = EditorUtils.retrieveComments(value, comments);\n            } else {\n                value = domElement.innerHTML;\n            }\n\n            that.value(value || '\\ufeff');\n        },\n\n        _resetGroups: function(current) {\n            var result = {};\n\n            Object.keys(current).map(key => {\n                result[key + \"_\"] = current[key];\n            });\n\n            return result;\n        },\n\n        _processToolbarItems: function(optionsTools) {\n            var flatDefaultTools = {},\n                processedObject = {},\n                tools = [],\n                currentGroups = $.extend(true, {}, toolGroups),\n                i, j, t, name, guidGroupName;\n\n            for (i = 0; i < optionsTools.length; i++) {\n                t = optionsTools[i];\n\n                if (Array.isArray(t)) {\n                    guidGroupName = kendo.guid();\n\n                    for (j = 0; j < t.length; j++) {\n                        [flatDefaultTools, name] = this._processToolOptions(t[j], flatDefaultTools);\n\n                        if (!name) {\n                            continue;\n                        }\n\n                        flatDefaultTools[name].gr = guidGroupName;\n                    }\n                } else {\n                    [flatDefaultTools, name] = this._processToolOptions(t, flatDefaultTools);\n\n                    if (!name) {\n                        continue;\n                    } else if (name === \"separator\") {\n                        currentGroups = this._resetGroups(currentGroups);\n                    }\n\n                    Object.keys(currentGroups).map(key => {\n                        var group = currentGroups[key];\n\n                        if (group.includes(name)) {\n                            flatDefaultTools[name].gr = key;\n                        }\n                    });\n                }\n            }\n\n            Object.values(flatDefaultTools).map((tool) => {\n                var group = tool.gr;\n\n                delete tool.gr;\n\n                if (group === undefined$1) {\n                    processedObject[tool.name] = tool;\n                } else {\n                    if (!processedObject[group]) {\n                        processedObject[group] = [];\n                    }\n\n                    processedObject[group].push(tool);\n                }\n            });\n\n            tools = Object.values(processedObject).map((g) => {\n                var result;\n\n                if (g.length) {\n                    result = g.map((to) => to.name);\n                } else {\n                    result = g.name;\n                }\n\n                if (result.length === 1) {\n                    result = result[0];\n                }\n\n                return result;\n            });\n\n            return [tools, flatDefaultTools];\n        },\n\n        _processDefaultTool: function(tool, defaultTools) {\n            var name = tool.name,\n                result = {},\n                options;\n\n            if ($.isPlainObject(tool)) {\n                if (name && defaultTools[name]) {\n                    // configured tool\n                    result = extend({}, defaultTools[name]);\n                    extend(result.options, tool);\n                } else {\n                    // custom tool\n                    options = extend({ icon: \"gear\", type: \"button\" }, tool);\n\n                    if (!options.name) {\n                        options.name = \"custom\";\n                    }\n\n                    options.cssClass = \"k-\" + options.name;\n\n                    result = {\n                        options: options\n                    };\n\n                    name = options.name;\n                }\n            } else if (defaultTools[tool]) {\n                name = tool;\n                result = defaultTools[name];\n            } else {\n                return null;\n            }\n\n            this.tools[name] = result;\n\n            return result;\n        },\n\n        _processToolOptions: function(t, flatDefaultTools) {\n            var that = this,\n                defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                tool, name, view, shortcuts, options, uiOptions, icon, toolOptions, originalOptions, palette;\n\n            tool = this._processDefaultTool(t, defaultTools);\n\n            if (!tool) {\n                return [flatDefaultTools, null];\n            }\n\n            options = tool.options;\n            name = options.name;\n            uiOptions = options.ui || {};\n            icon = EditorUtils.getToolCssClass(options.name, options.icon);\n\n            // We want to preserve any custom properties from the original tool object.\n            originalOptions = $.isPlainObject(t) ? $.extend({}, t) : {};\n            delete originalOptions.items;\n\n            toolOptions = $.extend({\n                name: options.name,\n                command: options.command,\n                template: options.template,\n                type: \"button\",\n                icon: icon,\n                showText: \"overflow\",\n                showIcon: \"both\"\n            }, uiOptions, originalOptions);\n\n            if (options.tooltip) {\n                if (!toolOptions.attributes) {\n                    toolOptions.attributes = {};\n                }\n\n                toolOptions.attributes.title = options.tooltip;\n            }\n            if (options.exec) {\n                toolOptions.click = options.exec.bind(that);\n                delete toolOptions.exec;\n            }\n\n            if (toolOptions.component === \"ColorPicker\") {\n                if (options.palette !== undefined$1 || uiOptions.palette !== kendo.ui.editor.ColorTool.fn.options.palette) {\n                    palette = options.palette || kendo.ui.editor.ColorTool.fn.options.palette;\n                    view = options.palette !== undefined$1 && !options.palette ? \"gradient\" : \"palette\";\n                    toolOptions.componentOptions.palette = view === \"palette\" ? palette : undefined$1;\n                    toolOptions.componentOptions.views = [view];\n                    toolOptions.componentOptions.preview = view === \"gradient\";\n                    toolOptions.componentOptions.input = view === \"gradient\";\n                    toolOptions.componentOptions.buttons = view === \"gradient\";\n\n                    if (view === \"gradient\") {\n                        delete toolOptions.componentOptions.columns;\n                    }\n                }\n                if (view === \"palette\" && options.columns) {\n                    toolOptions.componentOptions.columns = options.columns;\n                }\n            }\n\n            if (toolOptions.component === \"DropDownList\" || toolOptions.component === \"ComboBox\") {\n                if (!toolOptions.componentOptions) {\n                    toolOptions.componentOptions = {};\n                }\n\n                if (!toolOptions.componentOptions.dataSource) {\n                    if (that.options[name] && Array.isArray(that.options[name])) {\n                        toolOptions.componentOptions.dataSource = that.options[name];\n                    } else {\n                        toolOptions.componentOptions.dataSource = options.items;\n                    }\n                }\n            }\n            if (toolOptions.template) {\n                delete toolOptions.type;\n            }\n\n            shortcuts = this._shortcutSequence(name);\n\n            if (shortcuts !== \"\") {\n                if (!toolOptions.attributes) {\n                    toolOptions.attributes = {};\n                }\n\n                toolOptions.attributes[\"aria-keyshortcuts\"] = shortcuts;\n            }\n\n            flatDefaultTools[name] = toolOptions;\n\n            return [flatDefaultTools, name];\n        },\n\n        _refreshTools: function() {\n            var that = this,\n                range = that.getRange(),\n                editorNS = kendo.ui.editor,\n                rangeUtils = editorNS.RangeUtils,\n                nodes = rangeUtils.textNodes(range),\n                immutables = that.options.immutables,\n                immutablesContext = that._immutablesContext(range),\n                defaultTools = that.tools;\n\n            nodes = editorNS.Dom.filterBy(nodes, editorNS.Dom.htmlIndentSpace, true);\n\n            if (!nodes.length) {\n                nodes = [range.startContainer];\n            }\n\n            that.toolbar.element.find(\"[data-command]\")\n                .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                .each(function() {\n                    var toolName = this.getAttribute(\"data-command\"),\n                        tool = defaultTools[toolName],\n                        ui;\n\n                    if (tool) {\n                        ui = $(this);\n\n                        if (tool.update) {\n                            tool.update(ui, nodes, that.undoRedoStack);\n                        }\n\n                        if (immutables) {\n                            that._updateImmutablesState(tool, ui, immutablesContext);\n                        }\n                    }\n                });\n        },\n\n        _registerHandler: function(element, type, handler) {\n            var editor = this;\n            var NS = \".kendoEditor\";\n            var eventNames;\n            var i;\n\n            element = $(element);\n\n            if (!this._handlers) {\n                this._handlers = [];\n            }\n\n            if (element.length) {\n                if ($.isPlainObject(type)) {\n                    for (var t in type) {\n                        if (type.hasOwnProperty(t)) {\n                            this._registerHandler(element, t, type[t]);\n                        }\n                    }\n                } else {\n                    //map the original event to handle interaction on mobile platforms\n                    eventNames = kendo.applyEventMap(type).split(\" \");\n\n                    for (i = 0; i < eventNames.length; i++) {\n                        editor._handlers.push({\n                            element: element,\n                            type: eventNames[i] + NS,\n                            handler: handler\n                        });\n\n                        element.on(eventNames[i] + NS, handler);\n                    }\n                }\n            }\n        },\n\n        _runPostContentKeyCommands: function(e) {\n            var range = this.getRange();\n            var tools = this.keyboard.toolsFromShortcut(this.tools, e);\n\n            for (var i = 0; i < tools.length; i++) {\n                var tool = tools[i];\n                var o = tool.options;\n                if (!o.keyPressCommand) {\n                    continue;\n                }\n\n                var cmd = new o.command({ range: range });\n                if (cmd.changesContent()) {\n                    this.keyboard.endTyping(true);\n                    this.exec(tool.name);\n                }\n            }\n\n            this._handleSpaceAndNewLines();\n        },\n\n        _handleSpaceAndNewLines: function() {\n            const that = this,\n                refreshDelay = that.options.formattingMarksRefreshDelay,\n                editorNS = kendo.ui.editor,\n                applyFormattingMarks = editorNS.applyFormattingMarks,\n                clearFormattingMarksOverlay = editorNS.clearFormattingMarksOverlay;\n\n            if (that._toggledFormattingMarks) {\n                if (that._formattingMarksOverlay.children().length) {\n                    clearFormattingMarksOverlay(that);\n                }\n\n                if (refreshDelay) {\n                    clearTimeout(that._formattingMarksTimeout);\n                    that._formattingMarksTimeout = setTimeout(() => applyFormattingMarks(that), refreshDelay);\n                } else {\n                    applyFormattingMarks(that);\n                }\n\n            }\n        },\n\n        _selectionChange: function() {\n            this._selectionStarted = false;\n            this.saveSelection();\n            this.trigger(\"select\", {});\n        },\n\n        _setOptionsTools: function(optionsTools) {\n            var that = this,\n                toolbar = that.toolbar,\n                toolbarContainer = toolbar.element,\n                tools, defaults, toolbarOptions;\n\n            toolbar.destroy();\n            toolbarContainer.empty();\n\n            that.tools = [];\n            [tools, defaults] = that._processToolbarItems(optionsTools);\n            that._setNativeTools();\n\n            toolbarOptions = {\n                tools: tools,\n                defaultTools: defaults,\n                parentMessages: that.options.messages,\n                resizable: that.options.resizable && that.options.resizable.toolbar,\n                toggle: that._handleToolbarClick.bind(this),\n                click: that._handleToolbarClick.bind(this)\n            };\n\n            that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n            that._bindTools();\n        },\n\n        _setNativeTools: function() {\n            var defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                i;\n\n            for (i = 0; i < NATIVE_TOOLS.length; i++) {\n                if (!this.tools[NATIVE_TOOLS[i]]) {\n                    this.tools[NATIVE_TOOLS[i]] = defaultTools[NATIVE_TOOLS[i]];\n                }\n            }\n        },\n\n        _setupHeight: function(type) {\n            var that = this;\n\n            if (type == \"textarea\") {\n                setTimeout(function() {\n                    var heightStyle = that.wrapper[0].style.height;\n                    var expectedHeight = parseInt(heightStyle, 10);\n                    var actualHeight = that.wrapper.height();\n                    if (heightStyle.indexOf(\"px\") > 0 && !isNaN(expectedHeight) && actualHeight > expectedHeight) {\n                        that.wrapper.height(expectedHeight - (actualHeight - expectedHeight));\n                    }\n                });\n            }\n        },\n\n        _setupKeyboard: function() {\n            var that = this,\n                editorNS = kendo.ui.editor;\n\n            that.keyboard = new editorNS.Keyboard([\n                new editorNS.BackspaceHandler(that),\n                new editorNS.TypingHandler(that),\n                new editorNS.SystemHandler(that),\n                new editorNS.SelectAllHandler(that)\n            ]);\n        },\n\n        _setupType: function(element) {\n            var domElement = element[0],\n                type = kendo.ui.editor.Dom.name(domElement),\n                id = domElement.id,\n                toolbarContainer;\n\n            if (!id) {\n                id = kendo.guid();\n                domElement.setAttribute(\"id\", id);\n            }\n\n            if (type == \"textarea\") {\n                this._wrapTextarea();\n\n                toolbarContainer = this.wrapper.find(\".k-editor-toolbar\");\n                toolbarContainer.attr(\"aria-controls\", id);\n            } else {\n                $(domElement).attr(\"contenteditable\", true).addClass(\"k-editor k-editor-inline\");\n                toolbarContainer = $('<div class=\"k-editor-toolbar\"/>').insertBefore(element);\n            }\n\n            return toolbarContainer;\n        },\n\n        _isInlineEditor: function() {\n            return this.element.hasClass(\"k-editor-inline\");\n        },\n\n        _shortcutSequence: function(name) {\n            var tool = kendo.ui.Editor.defaultTools[name],\n                res = \"\",\n                options;\n\n            if (!tool || !tool.options) {\n                return res;\n            }\n\n            options = tool.options;\n\n            if (options.ctrl) {\n                res += \"Ctrl+\";\n            }\n\n            if (options.shift) {\n                res += \"Shift+\";\n            }\n\n            if (options.alt) {\n                res += \"Alt+\";\n            }\n\n            if (options.key) {\n                res += options.key;\n            }\n\n            return res;\n        },\n\n        _spellCorrect: function(editor) {\n            var beforeCorrection;\n            var falseTrigger = false;\n\n            this._registerHandler(editor.body, {\n                \"contextmenu\": function() {\n                    editor.one(\"select\", function() {\n                        beforeCorrection = null;\n                    });\n\n                    editor._spellCorrectTimeout = setTimeout(function() {\n                        beforeCorrection = new kendo.ui.editor.RestorePoint(editor.getRange(), editor.body);\n                        falseTrigger = false;\n                    }, 10);\n                },\n                \"input\": function() {\n                    if (!beforeCorrection) {\n                        return;\n                    }\n\n                    if (kendo.support.browser.mozilla && !falseTrigger) {\n                        falseTrigger = true;\n                        return;\n                    }\n\n                    kendo.ui.editor._finishUpdate(editor, beforeCorrection);\n                }\n            });\n        },\n\n        _togglePlaceholder: function(show) {\n            var that = this,\n                body = that.body,\n                $body = $(body),\n                placeholder = that.options.placeholder;\n\n            if (!that.textarea || !placeholder) {\n                return;\n            }\n\n            $body.attr('aria-label', function() {\n                return show ? placeholder : \"\";\n            });\n\n            $body.toggleClass(PLACEHOLDER_CLASS, show);\n        },\n\n        _toolbarFocused: function() {\n            var active = kendo._activeElement(),\n                popup = this.windowInstance,\n                overflowPopup = this.overflowPopup;\n\n            return (popup && $(active).closest(popup.wrapper).length) ||\n                (overflowPopup && overflowPopup.visible());\n        },\n\n        _updateImmutablesState: function(tool, ui, immutablesContext) {\n            var toolbar = this.toolbar,\n                name = tool.name,\n                uiElement = ui.closest(\"[ref-toolbar-tool]\"),\n                trackImmutables = tool.options.trackImmutables,\n                editorNS = kendo.ui.editor;\n\n            if (trackImmutables === undefined$1) {\n                trackImmutables = $.inArray(name, editorNS.Immutables.toolsToBeUpdated) > -1;\n            }\n\n            if (trackImmutables) {\n                if (immutablesContext) {\n                    toolbar.hide(uiElement);\n                } else {\n                    toolbar.show(uiElement);\n                }\n            }\n        },\n\n        _wrapTextarea: function() {\n            var that = this,\n                textarea = that.element,\n                w = textarea[0].style.width,\n                h = textarea[0].style.height,\n                template = EditorUtils.editorWrapperTemplate(),\n                editorWrap = $(template).insertBefore(textarea),\n                editArea = editorWrap.find(\".k-editable-area\");\n\n            editorWrap.css({\n                \"width\": w,\n                \"height\": h\n            });\n\n            textarea.attr(\"autocomplete\", \"off\")\n                .appendTo(editArea).addClass(\"k-content k-raw-content\").css(\"display\", \"none\");\n\n            that.textarea = textarea;\n            that.wrapper = editorWrap;\n        },\n\n        // Resizing methods\n        _resizable: function() {\n            let that = this;\n            let resizable = this.options.resizable;\n            let isResizable = $.isPlainObject(resizable) ? (resizable.content === undefined$1 || resizable.content === true) : resizable;\n            let resizableMin = $.isPlainObject(resizable.min) ? resizable.min : { minHeight: resizable.min };\n            let resizableMax = $.isPlainObject(resizable.max) ? resizable.max : { maxHeight: resizable.max };\n\n            if (isResizable && this.textarea) {\n                that.wrapper.addClass('k-editor-resizable');\n\n                if (resizableMin.minHeight) {\n                    that.wrapper.css(\"min-height\", resizableMin.minHeight);\n                }\n\n                if (resizableMax.maxHeight) {\n                    that.wrapper.css(\"max-height\", resizableMax.maxHeight);\n                }\n\n                if (resizableMin.minWidth) {\n                    that.wrapper.css(\"min-width\", resizableMin.minWidth);\n                }\n\n                if (resizableMax.maxWidth) {\n                    that.wrapper.css(\"max-width\", resizableMax.maxWidth);\n                }\n\n                that.resizeObserver = new ResizeObserver(() => {\n                    clearTimeout(that._resizeTimeOut);\n\n                    that._resizeTimeOut = setTimeout(function() {\n                        that.toolbar.resize();\n                        that._handleSpaceAndNewLines();\n                    }, 50);\n\n                });\n                that.resizeObserver.observe(that.wrapper[0]);\n            }\n        },\n\n        _destroyResizings: function() {\n            var editor = this;\n\n            editor._destroyElementResizing();\n            kendo.ui.editor.ElementResizingFactory.current.dispose(editor);\n            editor._destroyRowResizing();\n            kendo.ui.editor.RowResizing.dispose(editor);\n            editor._destroyColumnResizing();\n            kendo.ui.editor.ColumnResizing.dispose(editor);\n        },\n\n        _initializeElementResizing: function() {\n            var editor = this;\n\n            kendo.ui.editor.ElementResizingFactory.current.create(editor);\n\n            editor._showElementResizeHandlesProxy = editor._showElementResizeHandles.bind(editor);\n            editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n        },\n\n        _destroyElementResizing: function() {\n            var editor = this;\n            var elementResizing = editor.elementResizing;\n\n            if (elementResizing) {\n                elementResizing.destroy();\n                editor.elementResizing = null;\n            }\n\n            if (editor._showElementResizeHandlesProxy) {\n                editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n            }\n        },\n\n        _showElementResizeHandles: function() {\n            var editor = this;\n            var elementResizing = editor.elementResizing;\n\n            if (elementResizing && elementResizing.element && elementResizing.element.parentNode) {\n                elementResizing.showResizeHandles();\n            } else if (elementResizing && (!elementResizing.element || !elementResizing.element.parentNode)) {\n                editor._destroyElementResizing();\n            }\n        },\n\n        _initializeColumnResizing: function() {\n            kendo.ui.editor.ColumnResizing.create(this);\n        },\n\n        _destroyColumnResizing: function() {\n            var editor = this;\n\n            if (editor.columnResizing) {\n                editor.columnResizing.destroy();\n                editor.columnResizing = null;\n            }\n        },\n\n        _initializeRowResizing: function() {\n            kendo.ui.editor.RowResizing.create(this);\n        },\n\n        _destroyRowResizing: function() {\n            var editor = this;\n\n            if (editor.rowResizing) {\n                editor.rowResizing.destroy();\n                editor.rowResizing = null;\n            }\n        },\n\n        // ToolBar Window methods\n        _getWindowWidth: function() {\n            var that = this,\n                wrapper = that.windowInstance.wrapper,\n                editorElement = that.element;\n\n            return outerWidth(editorElement) - parseInt(wrapper.css(\"border-left-width\"), 10) - parseInt(wrapper.css(\"border-right-width\"), 10);\n        },\n\n        _hideWindow: function() {\n            if (this.windowInstance) {\n                this.windowInstance.close();\n            }\n        },\n\n        _overlapsWindow: function(box) {\n            var toolbarWrapper = this.windowInstance.wrapper,\n                toolbarWrapperOffset = toolbarWrapper.offset(),\n                toolbarWrapperLeft = toolbarWrapperOffset.left,\n                toolbarWrapperTop = toolbarWrapperOffset.top,\n                boxOffset = box.offset(),\n                boxOffsetLeft = boxOffset.left,\n                boxOffsetTop = boxOffset.top;\n\n            return !(boxOffsetLeft + box.width() < toolbarWrapperLeft ||\n                    boxOffsetLeft > toolbarWrapperLeft + toolbarWrapper.width() ||\n                    boxOffsetTop + box.height() < toolbarWrapperTop ||\n                    boxOffsetTop > toolbarWrapperTop + toolbarWrapper.height());\n        },\n\n        _showWindow: function() {\n            var that = this,\n                windowInstance = that.windowInstance,\n                wrapper, editorElement, editorOffset,\n                browser = kendo.support.browser;\n\n            if (windowInstance) {\n                wrapper = windowInstance.wrapper;\n                editorElement = that.element;\n\n                if (!wrapper.is(\":visible\") || !that.windowInstance.options.visible) {\n\n                    if (!wrapper[0].style.width) {\n                        wrapper.width(this._getWindowWidth());\n                    }\n\n                    // track content position when other parts of page change\n                    if (!windowInstance._moved) {\n                        editorOffset = editorElement.offset();\n                        wrapper.css({\n                            top: Math.max(0, parseInt(editorOffset.top, 10) - outerHeight(wrapper) - parseInt(that.windowInstance.element.css(\"padding-bottom\"), 10)),\n                            left: Math.max(0, parseInt(editorOffset.left, 10))\n                        });\n                    }\n\n                    if ((browser.msie || browser.edge) && that._overlapsWindow(editorElement)) {\n                        setTimeout(function() {\n                            windowInstance.open();\n                        }, 0);\n                    } else {\n                        windowInstance.open();\n                    }\n                }\n            }\n        }\n    });\n\n    Editor.defaultTools = {};\n\n    kendo.ui.plugin(Editor);\n\n    var Tool = Class.extend({\n        init: function(options) {\n            this.options = options;\n        },\n\n        command: function(commandArguments) {\n            return new this.options.command(commandArguments);\n        },\n\n        update: $.noop\n    });\n\n    Tool.exec = function(editor, name, value) {\n        editor.exec(name, { value: value });\n    };\n\n    var UndoTool = Tool.extend({\n        command: $.noop,\n        update: function(ui, nodes, undoRedoStack) {\n            var that = this,\n                name = that.options.name,\n                toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n            switch (name) {\n                case \"undo\":\n                    toolbar.enable(ui, undoRedoStack.canUndo());\n                    break;\n                case \"redo\":\n                    toolbar.enable(ui, undoRedoStack.canRedo());\n                    break;\n                default:\n                    break;\n            }\n\n            ui.removeAttr(\"disabled\");\n        }\n    });\n\n    EditorUtils.registerTool(\"separator\", new Tool({ ui: { type: \"separator\" } }));\n    EditorUtils.registerTool(\"undo\", new UndoTool({ key: \"Z\", ctrl: true }));\n    EditorUtils.registerTool(\"redo\", new UndoTool({ key: \"Y\", ctrl: true }));\n\n    // Exports ================================================================\n\n    var emptyElementContent = '\\ufeff';\n    var emptyTableCellContent = emptyElementContent;\n\n    if (browser.msie || browser.edge) {\n        emptyTableCellContent = emptyElementContent = \"&nbsp;\";\n    }\n\n    extend(kendo.ui, {\n        editor: {\n            EditorUtils: EditorUtils,\n            Tool: Tool,\n            emptyElementContent: emptyElementContent,\n            emptyTableCellContent: emptyTableCellContent\n        }\n    });\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(Editor.prototype);\n        Editor.prototype._drawPDF = function() {\n            return kendo.drawing.drawDOM(this.body, this.options.pdf);\n        };\n        Editor.prototype.saveAsPDF = function() {\n            var progress = new $.Deferred();\n            var promise = progress.promise();\n            var args = { promise: promise };\n\n            if (this.trigger(\"pdfExport\", args)) {\n                return;\n            }\n\n            var options = this.options.pdf;\n\n            this._drawPDF(progress)\n            .then(function(root) {\n                return kendo.drawing.exportPDF(root, options);\n            })\n            .done(function(dataURI) {\n                kendo.saveAs({\n                    dataURI: dataURI,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL,\n                    proxyTarget: options.proxyTarget,\n                    forceProxy: options.forceProxy\n                });\n                progress.resolve();\n            })\n            .fail(function(err) {\n                progress.reject(err);\n            });\n\n            return promise;\n        };\n    }\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    map = $.map,\n    extend = $.extend,\n    browser = kendo.support.browser,\n    STYLE = \"style\",\n    FLOAT = \"float\",\n    CSSFLOAT = \"cssFloat\",\n    STYLEFLOAT = \"styleFloat\",\n    CLASS = \"class\",\n    KMARKER = \"k-marker\";\n\nfunction makeMap(items) {\n    var obj = {},\n        i, len;\n\n    for (i = 0, len = items.length; i < len; i++) {\n        obj[items[i]] = true;\n    }\n    return obj;\n}\n\nvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\".split(\",\")),\n    nonListBlockElements = \"p,div,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,map,menu,noframes,noscript,object,pre,script,table,tbody,td,tfoot,th,thead,tr,header,article,nav,footer,section,aside,main,figure,figcaption\".split(\",\"),\n    blockElements = nonListBlockElements.concat([\"ul\",\"ol\",\"li\"]),\n    block = makeMap(blockElements),\n    selfClosing = makeMap(\"area,base,br,col,command,embed,hr,img,input,keygen,link,menuitem,meta,param,source,track,wbr\".split(\",\")),\n    inlineElements = \"span,em,a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,strike,strong,sub,sup,textarea,tt,u,var,data,time,mark,ruby\".split(\",\"),\n    inline = makeMap(inlineElements),\n    fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\".split(\",\")),\n    nonEmptyNonTextContentElements = [\"hgroup\",\"ol\",\"ul\",\"dl\",\"object\",\"video\",\"audio\",\"table\",\"colgroup\",\"tbody\",\"thead\",\"tfoot\",\"tr\",\"select\",\"optgroup\"];\n\nvar normalize = function(node) {\n    if (node.nodeType == 1) {\n        node.normalize();\n    }\n};\n\nif (browser.msie && browser.version >= 8) {\n    normalize = function(parent) {\n        if (parent.nodeType == 1 && parent.firstChild) {\n            var prev = parent.firstChild,\n                node = prev;\n\n            normalize(node);\n\n            while (true) {\n                node = node.nextSibling;\n\n                if (!node) {\n                    break;\n                }\n\n                normalize(node);\n\n                if (node.nodeType == 3 && prev.nodeType == 3) {\n                    node.nodeValue = prev.nodeValue + node.nodeValue;\n                    Dom.remove(prev);\n                }\n\n                prev = node;\n            }\n        }\n    };\n}\n\nvar whitespace = /^\\s+$/,\n    emptyspace = /^[\\n\\r\\t]+$/,\n    rgb = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i,\n    bom = /\\ufeff/g,\n    whitespaceOrBom = /^(\\s+|\\ufeff)$/,\n    persistedScrollTop,\n    cssAttributes =\n           (\"color,padding-left,padding-right,padding-top,padding-bottom,\" +\n            \"background-color,background-attachment,background-image,background-position,background-repeat,\" +\n            \"border-top-style,border-top-width,border-top-color,\" +\n            \"border-bottom-style,border-bottom-width,border-bottom-color,\" +\n            \"border-left-style,border-left-width,border-left-color,\" +\n            \"border-right-style,border-right-width,border-right-color,\" +\n            \"font-family,font-size,font-style,font-variant,font-weight,line-height\"\n           ).split(\",\"),\n    htmlRe = /[<>&]/g,\n    entityRe = /[\\u00A0-\\u2666<>&]/g,\n    entityTable = {\n            34: 'quot', 38: 'amp', 39: 'apos', 60: 'lt', 62: 'gt',\n            160: 'nbsp', 161: 'iexcl', 162: 'cent', 163: 'pound', 164: 'curren',\n            165: 'yen', 166: 'brvbar', 167: 'sect', 168: 'uml', 169: 'copy',\n            170: 'ordf', 171: 'laquo', 172: 'not', 173: 'shy', 174: 'reg',\n            175: 'macr', 176: 'deg', 177: 'plusmn', 178: 'sup2', 179: 'sup3',\n            180: 'acute', 181: 'micro', 182: 'para', 183: 'middot', 184: 'cedil',\n            185: 'sup1', 186: 'ordm', 187: 'raquo', 188: 'frac14', 189: 'frac12',\n            190: 'frac34', 191: 'iquest', 192: 'Agrave', 193: 'Aacute', 194: 'Acirc',\n            195: 'Atilde', 196: 'Auml', 197: 'Aring', 198: 'AElig', 199: 'Ccedil',\n            200: 'Egrave', 201: 'Eacute', 202: 'Ecirc', 203: 'Euml', 204: 'Igrave',\n            205: 'Iacute', 206: 'Icirc', 207: 'Iuml', 208: 'ETH', 209: 'Ntilde',\n            210: 'Ograve', 211: 'Oacute', 212: 'Ocirc', 213: 'Otilde', 214: 'Ouml',\n            215: 'times', 216: 'Oslash', 217: 'Ugrave', 218: 'Uacute', 219: 'Ucirc',\n            220: 'Uuml', 221: 'Yacute', 222: 'THORN', 223: 'szlig', 224: 'agrave',\n            225: 'aacute', 226: 'acirc', 227: 'atilde', 228: 'auml', 229: 'aring',\n            230: 'aelig', 231: 'ccedil', 232: 'egrave', 233: 'eacute', 234: 'ecirc',\n            235: 'euml', 236: 'igrave', 237: 'iacute', 238: 'icirc', 239: 'iuml',\n            240: 'eth', 241: 'ntilde', 242: 'ograve', 243: 'oacute', 244: 'ocirc',\n            245: 'otilde', 246: 'ouml', 247: 'divide', 248: 'oslash', 249: 'ugrave',\n            250: 'uacute', 251: 'ucirc', 252: 'uuml', 253: 'yacute', 254: 'thorn',\n            255: 'yuml', 402: 'fnof', 913: 'Alpha', 914: 'Beta', 915: 'Gamma',\n            916: 'Delta', 917: 'Epsilon', 918: 'Zeta', 919: 'Eta', 920: 'Theta',\n            921: 'Iota', 922: 'Kappa', 923: 'Lambda', 924: 'Mu', 925: 'Nu',\n            926: 'Xi', 927: 'Omicron', 928: 'Pi', 929: 'Rho', 931: 'Sigma',\n            932: 'Tau', 933: 'Upsilon', 934: 'Phi', 935: 'Chi', 936: 'Psi',\n            937: 'Omega', 945: 'alpha', 946: 'beta', 947: 'gamma', 948: 'delta',\n            949: 'epsilon', 950: 'zeta', 951: 'eta', 952: 'theta', 953: 'iota',\n            954: 'kappa', 955: 'lambda', 956: 'mu', 957: 'nu', 958: 'xi',\n            959: 'omicron', 960: 'pi', 961: 'rho', 962: 'sigmaf', 963: 'sigma',\n            964: 'tau', 965: 'upsilon', 966: 'phi', 967: 'chi', 968: 'psi',\n            969: 'omega', 977: 'thetasym', 978: 'upsih', 982: 'piv', 8226: 'bull',\n            8230: 'hellip', 8242: 'prime', 8243: 'Prime', 8254: 'oline', 8260: 'frasl',\n            8472: 'weierp', 8465: 'image', 8476: 'real', 8482: 'trade', 8501: 'alefsym',\n            8592: 'larr', 8593: 'uarr', 8594: 'rarr', 8595: 'darr', 8596: 'harr',\n            8629: 'crarr', 8656: 'lArr', 8657: 'uArr', 8658: 'rArr', 8659: 'dArr',\n            8660: 'hArr', 8704: 'forall', 8706: 'part', 8707: 'exist', 8709: 'empty',\n            8711: 'nabla', 8712: 'isin', 8713: 'notin', 8715: 'ni', 8719: 'prod',\n            8721: 'sum', 8722: 'minus', 8727: 'lowast', 8730: 'radic', 8733: 'prop',\n            8734: 'infin', 8736: 'ang', 8743: 'and', 8744: 'or', 8745: 'cap',\n            8746: 'cup', 8747: 'int', 8756: 'there4', 8764: 'sim', 8773: 'cong',\n            8776: 'asymp', 8800: 'ne', 8801: 'equiv', 8804: 'le', 8805: 'ge',\n            8834: 'sub', 8835: 'sup', 8836: 'nsub', 8838: 'sube', 8839: 'supe',\n            8853: 'oplus', 8855: 'otimes', 8869: 'perp', 8901: 'sdot', 8968: 'lceil',\n            8969: 'rceil', 8970: 'lfloor', 8971: 'rfloor', 9001: 'lang', 9002: 'rang',\n            9674: 'loz', 9824: 'spades', 9827: 'clubs', 9829: 'hearts', 9830: 'diams',\n            338: 'OElig', 339: 'oelig', 352: 'Scaron', 353: 'scaron', 376: 'Yuml',\n            710: 'circ', 732: 'tilde', 8194: 'ensp', 8195: 'emsp', 8201: 'thinsp',\n            8204: 'zwnj', 8205: 'zwj', 8206: 'lrm', 8207: 'rlm', 8211: 'ndash',\n            8212: 'mdash', 8216: 'lsquo', 8217: 'rsquo', 8218: 'sbquo', 8220: 'ldquo',\n            8221: 'rdquo', 8222: 'bdquo', 8224: 'dagger', 8225: 'Dagger', 8240: 'permil',\n            8249: 'lsaquo', 8250: 'rsaquo', 8364: 'euro'\n        };\n\nvar Dom = {\n    block: block,\n    inline: inline,\n\n    findNodeIndex: function(node, skipText) {\n        var i = 0;\n\n        if (!node) {\n            return -1;\n        }\n\n        while (true) {\n            node = node.previousSibling;\n\n            if (!node) {\n                break;\n            }\n\n            if (!(skipText && node.nodeType == 3)) {\n                i++;\n            }\n        }\n\n        return i;\n    },\n\n    isDataNode: function(node) {\n        return node && node.nodeValue !== null && node.data !== null;\n    },\n\n    isAncestorOf: function(parent, node) {\n        try {\n            return !Dom.isDataNode(parent) && ($.contains(parent, Dom.isDataNode(node) ? node.parentNode : node) || node.parentNode == parent);\n        } catch (e) {\n            return false;\n        }\n    },\n\n    isAncestorOrSelf: function(root, node) {\n        return Dom.isAncestorOf(root, node) || root == node;\n    },\n\n    findClosestAncestor: function(root, node) {\n        if (Dom.isAncestorOf(root, node)) {\n            while (node && node.parentNode != root) {\n                node = node.parentNode;\n            }\n        }\n\n        return node;\n    },\n\n    getAllComments: function(rootElem) {\n        var comments = [];\n        // Fourth argument, which is actually obsolete according to the DOM4 standard, is required in IE 11\n        var iterator = document.createNodeIterator(rootElem,\n            NodeFilter.SHOW_COMMENT,\n            function() {\n                return NodeFilter.FILTER_ACCEPT;\n            }, false);\n\n        var curNode = iterator.nextNode();\n        while (curNode) {\n            comments.push(curNode.nodeValue);\n            curNode = iterator.nextNode();\n        }\n        return comments;\n    },\n\n    getNodeLength: function(node) {\n        return Dom.isDataNode(node) ? node.length : node.childNodes.length;\n    },\n\n    splitDataNode: function(node, offset) {\n        var newNode = node.cloneNode(false);\n        var denormalizedText = \"\";\n        var iterator = node.nextSibling;\n        var temp;\n\n        while (iterator && iterator.nodeType == 3 && iterator.nodeValue) {\n            denormalizedText += iterator.nodeValue;\n            temp = iterator;\n            iterator = iterator.nextSibling;\n            Dom.remove(temp);\n        }\n\n        node.deleteData(offset, node.length);\n        newNode.deleteData(0, offset);\n        newNode.nodeValue += denormalizedText;\n        Dom.insertAfter(newNode, node);\n    },\n\n    attrEquals: function(node, attributes) {\n        for (var key in attributes) {\n            var value = node[key];\n\n            if (key == FLOAT) {\n                value = node[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT];\n            }\n\n            if (typeof value == \"object\") {\n                if (!Dom.attrEquals(value, attributes[key])) {\n                    return false;\n                }\n            } else if (value != attributes[key]) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    blockParentOrBody: function(node) {\n        return Dom.parentOfType(node, blockElements) || node.ownerDocument.body;\n    },\n\n    blockParents: function(nodes) {\n        var blocks = [],\n            i, len;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            var block = Dom.parentOfType(nodes[i], Dom.blockElements);\n            if (block && $.inArray(block, blocks) < 0) {\n                blocks.push(block);\n            }\n        }\n\n        return blocks;\n    },\n\n    windowFromDocument: function(document) {\n        return document.defaultView || document.parentWindow;\n    },\n\n    normalize: normalize,\n    blockElements: blockElements,\n    nonListBlockElements: nonListBlockElements,\n    inlineElements: inlineElements,\n    empty: empty,\n    fillAttrs: fillAttrs,\n    nodeTypes: {\n        ELEMENT_NODE: 1,\n        ATTRIBUTE_NODE: 2,\n        TEXT_NODE: 3,\n        CDATA_SECTION_NODE: 4,\n        ENTITY_REFERENCE_NODE: 5,\n        ENTITY_NODE: 6,\n        PROCESSING_INSTRUCTION_NODE: 7,\n        COMMENT_NODE: 8,\n        DOCUMENT_NODE: 9,\n        DOCUMENT_TYPE_NODE: 10,\n        DOCUMENT_FRAGMENT_NODE: 11,\n        NOTATION_NODE: 12\n    },\n\n    toHex: function(color) {\n        var matches = rgb.exec(color);\n\n        if (!matches) {\n            return color;\n        }\n\n        return \"#\" + map(matches.slice(1), function(x) {\n            x = parseInt(x, 10).toString(16);\n            return x.length > 1 ? x : \"0\" + x;\n        }).join(\"\");\n    },\n\n    encode: function(value, options) {\n        var encodableChars = (!options || options.entities) ? entityRe : htmlRe;\n        return value.replace(encodableChars, function(c) {\n            var charCode = c.charCodeAt(0);\n            var entity = entityTable[charCode];\n            return entity ? '&' + entity + ';' : c;\n        });\n    },\n    isBom: function(node) {\n        return node && node.nodeType === 3 && /^[\\ufeff]+$/.test(node.nodeValue);\n    },\n    stripBom: function(text) {\n        return (text || \"\").replace(bom, \"\");\n    },\n\n    stripBomNode: function(node) {\n        if (Dom.isBom(node)) {\n            node.parentNode.removeChild(node);\n        }\n    },\n\n    insignificant: function(node) {\n        var attr = node.attributes;\n\n        return node.className == \"k-marker\" || (Dom.is(node, 'br') && (node.className == \"k-br\" || attr._moz_dirty || attr._moz_editor_bogus_node)) || (Dom.is(node, 'span') && (node.className == \"k-br\"));\n    },\n    tableCell: function(node) {\n        return Dom.is(node, \"td\") || Dom.is(node, \"th\");\n    },\n    significantNodes: function(nodes) {\n        return $.grep(nodes, function(child) {\n            var name = Dom.name(child);\n\n            if (name == 'br' || Dom.insignificant(child) || Dom.emptyTextNode(child) || (child.nodeType == 1 && !empty[name] && Dom.emptyNode(child))) {\n                return false;\n            }\n            return true;\n        });\n    },\n\n    emptyTextNode: function(node) {\n        return node && node.nodeType == 3 && whitespaceOrBom.test(node.nodeValue);\n    },\n\n    emptyNode: function(node) {\n        return node.nodeType == 1 && !Dom.significantNodes(node.childNodes).length;\n    },\n\n    name: function(node) {\n        return node.nodeName.toLowerCase();\n    },\n\n    significantChildNodes: function(node) {\n        return $.grep(node.childNodes, function(child) {\n            return child.nodeType != 3 || !Dom.isWhitespace(child);\n        });\n    },\n\n    getTextNodes: function(body, nodes) {\n        const childNodes = body.childNodes;\n        nodes = nodes || [];\n\n        for (const node of childNodes) {\n            if (node.nodeType === this.nodeTypes.TEXT_NODE &&\n                (blockElements.includes(Dom.name(node.parentNode)) ||\n                inlineElements.includes(Dom.name(node.parentNode)) ||\n                node.parentNode === body)) {\n                nodes.push(node);\n            } else if (node.nodeType === this.nodeTypes.ELEMENT_NODE) {\n                this.getTextNodes(node, nodes);\n            }\n        }\n\n        return nodes;\n    },\n\n    lastTextNode: function(node) {\n        var result = null;\n\n        if (node.nodeType == 3) {\n            return node;\n        }\n\n        for (var child = node.lastChild; child; child = child.previousSibling) {\n            result = Dom.lastTextNode(child);\n\n            if (result) {\n                return result;\n            }\n        }\n\n        return result;\n    },\n\n    is: function(node, nodeName) {\n        return node && Dom.name(node) == nodeName;\n    },\n\n    isMarker: function(node) {\n        return node.className == KMARKER;\n    },\n\n    isWhitespace: function(node) {\n        return whitespace.test(node.nodeValue);\n    },\n\n    allowsTextContent: function(node) {\n        var result = true;\n\n        nonEmptyNonTextContentElements.every(function(name) {\n            if (Dom.is(node, name)) {\n                result = false;\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        return result;\n    },\n\n    allWhitespaceContent: function(node) {\n        var child = node.firstChild;\n        while (child && Dom.isWhitespace(child)) {\n            child = child.nextSibling;\n        }\n\n        return !child;\n    },\n\n    isEmptyspace: function(node) {\n        return emptyspace.test(node.nodeValue);\n    },\n\n    htmlIndentSpace: function(node) {\n        if (!(Dom.isDataNode(node) && Dom.isWhitespace(node))) {\n            return false;\n        }\n\n        if (emptyspace.test(node.nodeValue)) {\n            return true;\n        }\n\n        var sibling = function(el, direction) {\n            while (el[direction]) {\n                el = el[direction];\n                if (Dom.significantNodes([el]).length > 0) {\n                    return el;\n                }\n            }\n        };\n\n        var parent = node.parentNode;\n        var prev = sibling(node, \"previousSibling\");\n        var next = sibling(node, \"nextSibling\");\n\n        if (bom.test(node.nodeValue)) {\n            return !!(prev || next);\n        }\n\n        if ($(parent).is(\"tr,tbody,thead,tfoot,table,ol,ul\")) {\n            return true;\n        }\n\n        if (Dom.isBlock(parent) || Dom.is(parent, \"body\")) {\n            var isPrevBlock = prev && Dom.isBlock(prev);\n            var isNextBlock = next && Dom.isBlock(next);\n            if ((!next && isPrevBlock) || (!prev && isNextBlock) || (isPrevBlock && isNextBlock)) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n\n    isBlock: function(node) {\n        return block[Dom.name(node)];\n    },\n\n    isSelfClosing: function(node) {\n        return selfClosing[Dom.name(node)];\n    },\n\n    isEmpty: function(node) {\n        return empty[Dom.name(node)];\n    },\n\n    isInline: function(node) {\n        return inline[Dom.name(node)];\n    },\n\n    isImg: function(node) {\n        return Dom.name(node) == \"img\";\n    },\n\n    isBr: function(node) {\n        return Dom.name(node) == \"br\";\n    },\n\n    list: function(node) {\n        var name = node ? Dom.name(node) : \"\";\n        return name == \"ul\" || name == \"ol\" || name == \"dl\";\n    },\n\n    scrollContainer: function(doc) {\n        var wnd = Dom.windowFromDocument(doc),\n            scrollContainer = (wnd.contentWindow || wnd).document || wnd.ownerDocument || wnd;\n\n        if (scrollContainer.compatMode == 'BackCompat') {\n            scrollContainer = scrollContainer.body;\n        } else {\n            scrollContainer = scrollContainer.scrollingElement || scrollContainer.documentElement;\n        }\n\n        return scrollContainer;\n    },\n\n    scrollTo: function(node, toStart) {\n        var doc = node.ownerDocument;\n        var wnd = Dom.windowFromDocument(doc);\n        var windowHeight = wnd.innerHeight;\n        var scrollContainer = Dom.scrollContainer(doc);\n        var element, elementTop, elementHeight, marker;\n\n        if (Dom.isDataNode(node)) {\n            if (toStart) {\n                marker = Dom.create(doc, \"span\", { \"innerHTML\": \"&#xfeff;\" });\n                Dom.insertBefore(marker, node);\n                element = $(marker);\n            } else {\n                element = $(node.parentNode);\n            }\n        } else {\n            element = $(node);\n        }\n\n        elementTop = element.offset().top;\n        elementHeight = element[0].offsetHeight;\n\n        if (toStart || !elementHeight) {\n            elementHeight = parseInt(element.css(\"line-height\"), 10) ||\n                            Math.ceil(1.2 * parseInt(element.css(\"font-size\"), 10)) ||\n                            15;\n        }\n\n        if (marker) {\n            Dom.remove(marker);\n        }\n\n        if (elementHeight + elementTop > scrollContainer.scrollTop + windowHeight) {\n            scrollContainer.scrollTop = elementHeight + elementTop - windowHeight;\n        }\n    },\n\n    persistScrollTop: function(doc) {\n        persistedScrollTop = Dom.scrollContainer(doc).scrollTop;\n    },\n\n    offset: function(target, offsetParent) {\n        var result = { top: target.offsetTop, left: target.offsetLeft };\n        var parent = target.offsetParent;\n\n        while (parent && (!offsetParent || Dom.isAncestorOf(offsetParent, parent))) {\n            result.top += parent.offsetTop;\n            result.left += parent.offsetLeft;\n            parent = parent.offsetParent;\n        }\n\n        return result;\n    },\n\n    restoreScrollTop: function(doc) {\n        if (typeof persistedScrollTop == \"number\") {\n            Dom.scrollContainer(doc).scrollTop = persistedScrollTop;\n            persistedScrollTop = undefined;\n        }\n    },\n\n    insertAt: function(parent, newElement, position) {\n        parent.insertBefore(newElement, parent.childNodes[position] || null);\n    },\n\n    insertBefore: function(newElement, referenceElement) {\n        if (referenceElement.parentNode) {\n            return referenceElement.parentNode.insertBefore(newElement, referenceElement);\n        } else {\n            return referenceElement;\n        }\n    },\n\n    insertAfter: function(newElement, referenceElement) {\n        return referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);\n    },\n\n    remove: function(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    },\n\n    removeChildren: function(node) {\n        while (node.firstChild) {\n            node.removeChild(node.firstChild);\n        }\n    },\n\n    removeTextSiblings: function(node) {\n        var parentNode = node.parentNode;\n\n        while (node.nextSibling && node.nextSibling.nodeType == 3) {\n            parentNode.removeChild(node.nextSibling);\n        }\n\n        while (node.previousSibling && node.previousSibling.nodeType == 3) {\n            parentNode.removeChild(node.previousSibling);\n        }\n    },\n\n    trim: function(parent) {\n        for (var i = parent.childNodes.length - 1; i >= 0; i--) {\n            var node = parent.childNodes[i];\n            if (Dom.isDataNode(node)) {\n                if (!Dom.stripBom(node.nodeValue).length) {\n                    Dom.remove(node);\n                }\n            } else if (node.className != KMARKER) {\n                Dom.trim(node);\n\n                if ((!Dom.isEmpty(node) && node.childNodes.length === 0) ||\n                    (Dom.isBlock(node) && Dom.allWhitespaceContent(node))) {\n                    Dom.remove(node);\n                }\n            }\n        }\n\n        return parent;\n    },\n\n    closest: function(node, tags) {\n        if (typeof tags === \"string\") {\n            tags = [tags];\n        }\n\n        while (node && tags.indexOf(Dom.name(node)) < 0) {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    closestBy: function(node, condition, rootCondition) {\n        while (node && !condition(node)) {\n            if (rootCondition && rootCondition(node)) {\n                return null;\n            }\n            node = node.parentNode;\n        }\n        return node;\n    },\n\n    sibling: function(node, direction) {\n        do {\n            node = node[direction];\n        } while (node && node.nodeType != 1);\n\n        return node;\n    },\n\n    next: function(node) {\n        return Dom.sibling(node, \"nextSibling\");\n    },\n\n    prev: function(node) {\n        return Dom.sibling(node, \"previousSibling\");\n    },\n\n    parentOfType: function(node, tags) {\n        do {\n            node = node.parentNode;\n        } while (node && !(Dom.ofType(node, tags)));\n\n        return node;\n    },\n\n    ofType: function(node, tags) {\n        return $.inArray(Dom.name(node), tags) >= 0;\n    },\n\n    changeTag: function(referenceElement, tagName, skipAttributes) {\n        var newElement = Dom.create(referenceElement.ownerDocument, tagName),\n            attributes = referenceElement.attributes,\n            i, len, name, value, attribute;\n\n        if (!skipAttributes) {\n            for (i = 0, len = attributes.length; i < len; i++) {\n                attribute = attributes[i];\n                if (attribute.specified) {\n                    // IE < 8 cannot set class or style via setAttribute\n                    name = attribute.nodeName;\n                    value = attribute.nodeValue;\n                    if (name == CLASS) {\n                        newElement.className = value;\n                    } else if (name == STYLE) {\n                        newElement.style.cssText = referenceElement.style.cssText;\n                    } else {\n                        newElement.setAttribute(name, value);\n                    }\n                }\n            }\n        }\n\n        while (referenceElement.firstChild) {\n            newElement.appendChild(referenceElement.firstChild);\n        }\n\n        Dom.insertBefore(newElement, referenceElement);\n        Dom.remove(referenceElement);\n        return newElement;\n    },\n\n    editableParent: function(node) {\n        while (node && (node.nodeType == 3 || node.contentEditable !== 'true')) {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    wrap: function(node, wrapper) {\n        Dom.insertBefore(wrapper, node);\n        wrapper.appendChild(node);\n        return wrapper;\n    },\n\n    unwrap: function(node) {\n        var parent = node.parentNode;\n        while (node.firstChild) {\n            parent.insertBefore(node.firstChild, node);\n        }\n\n        parent.removeChild(node);\n    },\n\n    wrapper: function(node) {\n        var wrapper = Dom.closestBy(node, function(el) {\n            return el.parentNode && Dom.significantNodes(el.parentNode.childNodes).length > 1;\n        });\n\n        return $(wrapper).is(\"body,.k-editor\") ? undefined : wrapper;\n    },\n\n    isChildOfBaseContainer: function(node) {\n        return $(node).parent().is(\"body,.k-editor\");\n    },\n\n    create: function(document, tagName, attributes) {\n        return Dom.attr(document.createElement(tagName), attributes);\n    },\n\n    createEmptyNode: function(document, tagName, attributes) {\n        var node = Dom.attr(document.createElement(tagName), attributes);\n        node.innerHTML = \"\\ufeff\";\n        return node;\n    },\n\n    attr: function(element, attributes) {\n        attributes = extend({}, attributes);\n\n        if (attributes && STYLE in attributes) {\n            Dom.style(element, attributes.style);\n            delete attributes.style;\n        }\n\n        for (var attr in attributes) {\n            if (attributes[attr] === null) {\n                element.removeAttribute(attr);\n                delete attributes[attr];\n            } else if (attr == \"className\") {\n                element[attr] = attributes[attr];\n            }\n        }\n\n        return extend(element, attributes);\n    },\n\n    mergeAttributes: function(origin, target, traverseCss) {\n        if (!origin.attributes.length) {\n            return;\n        }\n\n        $.each(origin.attributes, function() {\n            if (this.name !== \"contenteditable\" && (!traverseCss || this.name !== STYLE)) {\n                $(target).attr(this.name, this.value);\n            }\n\n            if (traverseCss && this.name === STYLE) {\n                $.each(origin.style, function() {\n                    target.style[this] = origin.style[this];\n                });\n            }\n        });\n    },\n\n    style: function(node, value) {\n        $(node).css(value || {});\n    },\n\n    unstyle: function(node, value) {\n        for (var key in value) {\n            if (key == FLOAT) {\n                node.style[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT] = \"\";\n            } else {\n                node.style[key] = \"\";\n            }\n        }\n\n        if (node.style.cssText === \"\") {\n            node.removeAttribute(STYLE);\n        }\n    },\n\n    inlineStyle: function(body, name, attributes) {\n        var span = $(Dom.create(body.ownerDocument, name, attributes)),\n            style;\n\n        body.appendChild(span[0]);\n\n        style = map(cssAttributes, function(value) {\n            if (browser.msie && value == \"line-height\" && span.css(value) == \"1px\") {\n                return \"line-height:1.5\";\n            } else {\n                return value + \":\" + span.css(value);\n            }\n        }).join(\";\");\n\n        span.remove();\n\n        return style;\n    },\n\n    getEffectiveBackground: function(element) {\n        var backgroundStyle = element.css(\"background-color\") || \"\";\n\n        if (backgroundStyle.indexOf(\"rgba(0, 0, 0, 0\") < 0 && backgroundStyle !== \"transparent\") {\n            return backgroundStyle;\n        } else if (element[0].tagName.toLowerCase() === \"html\") {\n            return \"Window\";\n        } else {\n            return Dom.getEffectiveBackground(element.parent());\n        }\n    },\n\n    innerText: function(node) {\n        var text = node.innerHTML;\n        text = text.replace(/<!--(.|\\s)*?-->/gi, \"\");\n        text = text.replace(/<\\/?[^>]+?\\/?>/gm, \"\");\n\n        return text;\n    },\n\n    removeClass: function(node, classNames) {\n        var className = \" \" + node.className + \" \",\n            classes = classNames.split(\" \"),\n            i, len;\n\n        for (i = 0, len = classes.length; i < len; i++) {\n            className = className.replace(\" \" + classes[i] + \" \", \" \");\n        }\n\n        className = kendo.trim(className);\n\n        if (className.length) {\n            node.className = className;\n        } else {\n            node.removeAttribute(CLASS);\n        }\n    },\n\n    commonAncestor: function() {\n        var count = arguments.length,\n            paths = [],\n            minPathLength = Infinity,\n            output = null,\n            i, ancestors, node, first, j;\n\n        if (!count) {\n            return null;\n        }\n\n        if (count == 1) {\n            return arguments[0];\n        }\n\n        for (i = 0; i < count; i++) {\n            ancestors = [];\n            node = arguments[i];\n            while (node) {\n                ancestors.push(node);\n                node = node.parentNode;\n            }\n            paths.push(ancestors.reverse());\n            minPathLength = Math.min(minPathLength, ancestors.length);\n        }\n\n        if (count == 1) {\n            return paths[0][0];\n        }\n\n        for (i = 0; i < minPathLength; i++) {\n            first = paths[0][i];\n\n            for (j = 1; j < count; j++) {\n                if (first != paths[j][i]) {\n                    return output;\n                }\n            }\n\n            output = first;\n        }\n        return output;\n    },\n\n    closestSplittableParent: function(nodes) {\n        var result;\n\n        if (nodes.length == 1) {\n            result = Dom.parentOfType(nodes[0], [\"ul\",\"ol\"]);\n        } else {\n            result = Dom.commonAncestor.apply(null, nodes);\n        }\n\n        if (!result) {\n            result = Dom.parentOfType(nodes[0], [\"p\", \"td\"]) || nodes[0].ownerDocument.body;\n        }\n\n        if (Dom.isInline(result)) {\n            result = Dom.blockParentOrBody(result);\n        }\n\n        var editableParents = map(nodes, Dom.editableParent);\n        var editableAncestor = Dom.commonAncestor(editableParents)[0];\n\n        if ($.contains(result, editableAncestor)) {\n            result = editableAncestor;\n        }\n\n        return result;\n    },\n\n    closestEditable: function(node, types) {\n        var closest;\n        var editable = Dom.editableParent(node);\n\n        if (Dom.ofType(node, types)) {\n            closest = node;\n        } else {\n            closest = Dom.parentOfType(node, types);\n        }\n\n        if ((closest && editable && $.contains(closest, editable)) || (!closest && editable)) {\n            closest = editable;\n        }\n\n        return closest;\n    },\n\n    closestEditableOfType: function(node, types) {\n        var editable = Dom.closestEditable(node, types);\n\n        if (editable && Dom.ofType(editable, types) && !$(editable).is(\".k-editor\")) {\n            return editable;\n        }\n    },\n\n    filter: function(tagName, nodes, invert) {\n        var filterFn = function(node) {\n            return Dom.name(node) == tagName;\n        };\n\n        return Dom.filterBy(nodes, filterFn, invert);\n    },\n\n    filterBy: function(nodes, condition, invert) {\n        var i = 0;\n        var len = nodes.length;\n        var result = [];\n        var match;\n\n        for (; i < len; i++) {\n            match = condition(nodes[i]);\n            if ((match && !invert) || (!match && invert)) {\n                result.push(nodes[i]);\n            }\n        }\n\n        return result;\n    },\n\n    ensureTrailingBreaks: function(node) {\n        var elements = $(node).find(\"p,td,th\");\n        var length = elements.length;\n        var i = 0;\n\n        if (length) {\n            for (; i < length; i++) {\n                Dom.ensureTrailingBreak(elements[i]);\n            }\n        } else {\n            Dom.ensureTrailingBreak(node);\n        }\n    },\n\n    removeTrailingBreak: function(node) {\n        $(node).find(\"br[type=_moz],.k-br\").remove();\n    },\n\n    ensureTrailingBreak: function(node) {\n        Dom.removeTrailingBreak(node);\n\n        var lastChild = node.lastChild;\n        var name = lastChild && Dom.name(lastChild);\n        var br;\n\n        if (!name ||\n            (name != \"br\" && name != \"img\") ||\n            (name == \"br\" && lastChild.className != \"k-br\")) {\n            br = node.ownerDocument.createElement(\"br\");\n            br.className = \"k-br\";\n            node.appendChild(br);\n        }\n    },\n\n    // Start: Table Utilities\n\n    reMapTableColumns: function(table, colAttr) {\n        Dom._mapColIndices(table, colAttr);\n    },\n\n    clearTableMappings: function(table, colAttr) {\n        $(table).find(\"[\" + colAttr + \"]\").removeAttr(colAttr);\n    },\n\n    _mapColIndices: function(table, colAttr) {\n        var registeredColumns = {};\n\n        for (var rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n            var cells = table.rows[rowIndex].cells;\n            var colIndex = 0;\n            for (var cellIndex = 0; cellIndex < cells.length; cellIndex++) {\n                var cell = cells[cellIndex];\n\n                if (cell.rowSpan > 1) {\n                    this._mapColspan(cell, rowIndex, colIndex, registeredColumns);\n                }\n\n                if (registeredColumns[rowIndex]) {\n                    while (registeredColumns[rowIndex][colIndex]) {\n                        colIndex++;\n                    }\n                }\n\n                cell.setAttribute(colAttr, colIndex);\n\n                if (cell.colSpan > 1) {\n                    colIndex = colIndex + cell.colSpan - 1;\n                }\n                colIndex++;\n            }\n        }\n    },\n\n    _mapColspan: function(cell, rowIndex, colIndex, registeredColumns) {\n        var rowSpan = cell.rowSpan,\n            colSpan = cell.colSpan,\n            index;\n\n        for (var ci = 0; ci < colSpan; ci++) {\n            index = colIndex + ci;\n\n            for (var ri = rowIndex + 1; ri < rowIndex + rowSpan; ri++) {\n\n                if (!registeredColumns[ri]) {\n                    registeredColumns[ri] = {};\n                    registeredColumns[ri].length = 0;\n                }\n\n                if (registeredColumns[rowIndex]) {\n                    while (registeredColumns[rowIndex][index]) {\n                        index++;\n                    }\n                }\n\n                registeredColumns[ri][index] = true;\n                registeredColumns[ri].length++;\n            }\n        }\n\n    },\n\n    associateWithIds: function(table) {\n        var that = this;\n        var numberOfTheadRows = 0;\n        var tableRows = table.rows;\n        var numberOfTableRows = tableRows.length;\n        var theadMatrix = [];\n        var tbodyMatrix = [];\n        var theadRows, i;\n\n        if (table.tHead) {\n            theadRows = table.tHead.rows;\n            numberOfTheadRows = theadRows.length;\n        } else {\n            numberOfTheadRows = that._getNumberOfHeaderRows(table);\n            theadRows = [];\n            for (i = 0; i < numberOfTheadRows; i++) {\n                theadRows.push(tableRows[i]);\n            }\n        }\n        for (i = 0; i < numberOfTheadRows; i++) {\n            theadMatrix.push([]);\n        }\n        for (i = 0; i < numberOfTableRows; i++) {\n            tbodyMatrix.push([]);\n        }\n\n        that._generateIdsForColumns(theadMatrix, theadRows);\n        that._generateIdsForRows(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n        that._assignIds(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n    },\n\n    _generateIdsForColumns: function(theadMatrix, theadRows) {\n        var timestamp = new Date().getTime();\n        var numberOfTheadRows = theadRows ? theadRows.length : 0;\n        var row, cells, cell, col, id, colspan, rowspan, i, j, k, l;\n\n        for (i = 0; i < numberOfTheadRows; i++) {\n            row = theadRows[i];\n            cells = row.cells;\n            col = 0;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                id = \"table\" + i + j + (++timestamp);\n                cell.setAttribute(\"id\", id);\n                colspan = cell.getAttribute(\"colspan\") || 1;\n                rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                while (theadMatrix[i][j + col]) {\n                    col += 1;\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    for (l = 0; l < colspan; l++) {\n                        theadMatrix[i + k][j + col + l] = id;\n                    }\n                }\n            }\n        }\n    },\n\n    _generateIdsForRows: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n        var that = this;\n        var timestamp = new Date().getTime();\n        var numberOfTableRows = tableRows.length;\n        var row, cells, cell, col, id, colspan, rowspan, i, j, k, l, colIndex, headers;\n\n        var pushHeaderId = function(row) {\n            headers.push(row[colIndex]);\n        };\n\n        for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n            row = tableRows[i];\n            cells = $(row.cells).filter(\"th\");\n            col = 0;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                id = \"table\" + i + j + (++timestamp);\n                cell.setAttribute(\"id\", id);\n                colspan = cell.getAttribute(\"colspan\") || 1;\n                rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                while (tbodyMatrix[i][j + col]) {\n                    col += 1;\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    for (l = 0; l < colspan; l++) {\n                        tbodyMatrix[i + k][j + col + l] = id;\n                    }\n                }\n\n                colIndex = cell.getAttribute(\"col-index\");\n                headers = [];\n                theadMatrix.forEach(pushHeaderId);\n                headers = headers.filter(that._onlyUnique);\n                cell.setAttribute(\"headers\", headers.join(\" \").trim());\n            }\n        }\n    },\n\n    _assignIds: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n        var that = this;\n        var numberOfTableRows = tableRows.length;\n        var row, cells, cell, i, j, colIndex, headers;\n\n        var pushHeaderId = function(row) {\n            headers.push(row[colIndex]);\n        };\n\n        for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n            row = tableRows[i];\n            cells = $(row.cells).filter(\"td\");\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                colIndex = cell.getAttribute(\"col-index\");\n                headers = tbodyMatrix[i].slice();\n\n                theadMatrix.forEach(pushHeaderId);\n                headers = headers.filter(that._onlyUnique);\n                cell.setAttribute(\"headers\", headers.join(\" \").trim());\n            }\n        }\n    },\n\n    _getNumberOfColumns: function(table) {\n        var cells = $(table).find(\"th, td\");\n        var numberOfCols = 0;\n        var cell, i, currentIndex;\n\n        for (i = 0; i < cells.length; i++) {\n            cell = cells[i];\n            currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n            if (currentIndex > numberOfCols) {\n                numberOfCols = currentIndex;\n            }\n        }\n\n        return numberOfCols;\n    },\n\n    _getNumberOfHeaderColumns: function(table, numberOfHeaderRows) {\n        var rows = table.rows;\n        var numberOfCols = 0;\n        var currentIndex, row, i, j, cell;\n\n        for (i = numberOfHeaderRows; i < rows.length; i++) {\n            row = rows[i];\n\n            for (j = 0; j < row.cells.length; j++) {\n                cell = row.cells[j];\n\n                if (this.is(cell, \"th\")) {\n                    currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n                    if (currentIndex > numberOfCols) {\n                        numberOfCols = currentIndex;\n                    }\n                }\n            }\n        }\n\n        return numberOfCols;\n    },\n\n    _getNumberOfHeaderRows: function(table) {\n        var rows = table.rows;\n        var thead = table.tHead;\n        var number = thead && table.tHead.rows ? table.tHead.rows.length : 0;\n        var j, row, cell, length;\n\n        if (number === 0) {\n            row = rows[0];\n            length = row.cells && row.cells.length;\n\n            while (row && length && this.is(row.cells[0], \"th\")) {\n                for (j = 0; j < length; j++) {\n                    cell = row ? row.cells[j] : null;\n\n                    if (!this.is(cell, \"th\")) {\n                        row = null;\n                    }\n                }\n\n                if (row) {\n                    number += 1;\n                    row = this.next(row);\n                    length = row && row.cells && row.cells.length;\n                }\n            }\n        }\n\n        return number;\n    },\n\n    // End: Table Utilities\n\n    _onlyUnique: function(value, index, self) {\n        return self.indexOf(value) === index;\n    }\n};\n\nkendo.ui.editor.Dom = Dom;\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\n// Imports ================================================================\nvar kendo = window.kendo;\nvar Editor = kendo.ui.editor;\nvar dom = Editor.Dom;\nvar extend = $.extend;\n\nvar fontSizeMappings = 'xx-small,x-small,small,medium,large,x-large,xx-large'.split(',');\nvar quoteRe = /\"/g; //\"\nvar brRe = /<br[^>]*>/i;\nvar pixelRe = /^\\d+(\\.\\d*)?(px)?$/i;\nvar emptyPRe = /<p>(?:&nbsp;)?<\\/p>/i;\nvar cssDeclaration = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/g;\nvar sizzleAttr = /^sizzle-\\d+/i;\nvar scriptAttr = /^k-script-/i;\nvar onerrorRe = /\\s*onerror\\s*=\\s*(?:'|\")?([^'\">\\s]*)(?:'|\")?/i;\nvar br = '<br class=\"k-br\">';\nvar bomSpan = \"<span class='k-br'>\\ufeff</span>\";\n\nvar div = document.createElement(\"div\");\ndiv.innerHTML = \" <hr>\";\nvar supportsLeadingWhitespace = div.firstChild.nodeType === 3;\ndiv = null;\nvar isFunction = kendo.isFunction;\n\nvar TD = \"td\";\n\nvar Serializer = {\n    toEditableHtml: function(html) {\n        return (html || \"\")\n            .replace(/<!\\[CDATA\\[(.*)?\\]\\]>/g, \"<!--[CDATA[$1]]-->\")\n            .replace(/<(\\/?)script([^>]*)>/ig, \"<$1k:script$2>\")\n            .replace(/<img([^>]*)>/ig, function(match) {\n                return match.replace(onerrorRe, \"\");\n            })\n            .replace(/(<\\/?img[^>]*>)[\\r\\n\\v\\f\\t ]+/ig, \"$1\")\n            .replace(/^<(table|blockquote)/i, br + '<$1')\n            .replace(/^[\\s]*(&nbsp;|\\u00a0)/i, '$1')\n            .replace(/<\\/(table|blockquote)>$/i, '</$1>' + br);\n    },\n\n    _toEditableImmutables: function(body) {\n        var immutable = Editor.Immutables.immutable,\n            emptyTextNode = dom.emptyTextNode,\n            first = body.firstChild,\n            last = body.lastChild;\n\n        while (emptyTextNode(first)) {\n            first = first.nextSibling;\n        }\n\n        while (emptyTextNode(last)) {\n            last = last.previousSibling;\n        }\n\n        if (first && immutable(first)) {\n            $(bomSpan).prependTo(body);\n        }\n\n        if (last && immutable(last)) {\n            $(bomSpan).appendTo(body);\n        }\n    },\n\n    _fillEmptyElements: function(body) {\n        // fills empty elements to allow them to be focused\n        $(body).find(\"p,td\").each(function() {\n            var p = $(this);\n            if (/^\\s*$/g.test(p.text()) && !p.find(\"img,input\").length) {\n                var node = this;\n                while (node.children[0] && node.children[0].nodeType != 3) {\n                    node = node.children[0];\n                }\n\n                if (node.nodeType == 1 && !dom.empty[dom.name(node)]) {\n                    if (dom.is(node, \"td\")) {\n                        node.innerHTML = kendo.ui.editor.emptyTableCellContent;\n                    }\n                    else {\n                        node.innerHTML = kendo.ui.editor.emptyElementContent;\n                    }\n                }\n            }\n        });\n    },\n\n    _removeSystemElements: function(body) {\n        // removes persisted system elements\n        $(\".k-paste-container\", body).remove();\n    },\n\n    _resetOrderedLists: function(root) {\n        // fix for IE9 OL bug -- https://connect.microsoft.com/IE/feedback/details/657695/ordered-list-numbering-changes-from-correct-to-0-0\n        var ols = root.getElementsByTagName(\"ol\"), i, ol, originalStart;\n\n        for (i = 0; i < ols.length; i++) {\n            ol = ols[i];\n            originalStart = ol.getAttribute(\"start\");\n\n            ol.setAttribute(\"start\", 1);\n\n            if (originalStart) {\n                ol.setAttribute(\"start\", originalStart);\n            } else {\n                ol.removeAttribute(originalStart);\n            }\n        }\n    },\n\n    _preventScriptExecution: function(root) {\n        $(root).find(\"*\").each(function() {\n            var attributes = this.attributes;\n            var attribute, i, l, name;\n            var attributesToRemove = [];\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n\n                if (attribute.specified && /^on/i.test(name)) {\n                    this.setAttribute(\"k-script-\" + name, attribute.value);\n                    attributesToRemove.push(name);\n                }\n            }\n\n            for (i = 0, l = attributesToRemove.length; i < l; i++) {\n                this.removeAttribute(attributesToRemove[i]);\n            }\n        });\n    },\n\n    htmlToDom: function(html, root, options) {\n        var browser = kendo.support.browser;\n        var msie = browser.msie;\n        var o = options || {};\n        var immutables = o.immutables;\n\n        html = Serializer.toEditableHtml(html);\n\n        if (isFunction(o.custom)) {\n            html = o.custom(html) || html;\n        }\n        root.innerHTML = html;\n\n        if (immutables) {\n            immutables.deserialize(root);\n        }\n\n        if (msie) {\n            // unicode characters denormalize the DOM tree in IE9\n            dom.normalize(root);\n\n            Serializer._resetOrderedLists(root);\n        }\n\n        Serializer._preventScriptExecution(root);\n\n        Serializer._fillEmptyElements(root);\n\n        Serializer._removeSystemElements(root);\n\n        Serializer._toEditableImmutables(root);\n\n        // add k-table class to all tables\n        $(\"table\", root).addClass(\"k-table\");\n\n        return root;\n    },\n\n    domToXhtml: function(root, options) {\n        var result = [];\n        var immutables = options && options.immutables;\n\n        function semanticFilter(attributes) {\n            return $.grep(attributes, function(attr) {\n                return attr.name != \"style\";\n            });\n        }\n\n        function mapStart(node, tag) {\n            result.push('<' + tag);\n            attr(node);\n            result.push('>');\n        }\n\n        var tagMap = {\n            iframe: {\n                start: function(node) { mapStart(node, \"iframe\"); },\n                end: function() { result.push('</iframe>'); }\n            },\n            'k:script': {\n                start: function(node) { mapStart(node, \"script\"); },\n                end: function() { result.push('</script>'); },\n                skipEncoding: true\n            },\n            span: {\n                canOptimize: true,\n                semantic: true,\n                start: function(node) {\n                    var style = node.style;\n\n                    var attributes = specifiedAttributes(node);\n                    var semanticAttributes = semanticFilter(attributes);\n\n                    if (semanticAttributes.length) {\n                        result.push(\"<span\"); attr(node, semanticAttributes); result.push(\">\");\n                    }\n\n                    if (style.textDecoration == \"underline\") {\n                        result.push(\"<u>\");\n                    }\n\n                    var font = [];\n                    if (style.color) {\n                        font.push('color=\"' + dom.toHex(style.color) + '\"');\n                    }\n\n                    if (style.fontFamily) {\n                        font.push('face=\"' + style.fontFamily + '\"');\n                    }\n\n                    if (style.fontSize) {\n                        var size = $.inArray(style.fontSize, fontSizeMappings);\n                        font.push('size=\"' + size + '\"');\n                    }\n\n                    // Apply the rest of the inline styles back\n                    var inlineStyles = [];\n                    var ignoredStylePrefixes = [\"text-decoration\", \"color\", \"font\"];\n\n                    for (let i = 0; i < style.length; i++) {\n                        var inlineStyle = style[i];\n\n                        if (ignoredStylePrefixes.filter(prop => inlineStyle.startsWith(prop)).length <= 0) {\n                            inlineStyles.push(`${inlineStyle}: ${style[inlineStyle]}`);\n                        }\n                    }\n\n                    if (inlineStyles.length) {\n                        font.push('style=\"' + inlineStyles.join(\";\") + '\"');\n                    }\n\n                    if (font.length) {\n                        result.push(\"<font \" + font.join(\" \") + \">\");\n                    }\n                },\n                end: function(node) {\n                    var style = node.style;\n\n                    if (style.color || style.fontFamily || style.fontSize) {\n                        result.push(\"</font>\");\n                    }\n\n                    if (style.textDecoration == \"underline\") {\n                        result.push(\"</u>\");\n                    }\n\n                    if (semanticFilter(specifiedAttributes(node)).length) {\n                        result.push(\"</span>\");\n                    }\n                }\n            },\n            strong: {\n                semantic: true,\n                start: function(node) { mapStart(node, \"b\"); },\n                end: function() { result.push('</b>'); }\n            },\n            em: {\n                semantic: true,\n                start: function(node) { mapStart(node, \"i\"); },\n                end: function() { result.push('</i>'); }\n            },\n            b: {\n                semantic: false,\n                start: function(node) { mapStart(node, \"strong\"); },\n                end: function() { result.push('</strong>'); }\n            },\n            i: {\n                semantic: false,\n                start: function(node) { mapStart(node, \"em\"); },\n                end: function() { result.push('</em>'); }\n            },\n            u: {\n                semantic: false,\n                start: function(node) {\n                    result.push('<span');\n\n                    var attributes = specifiedAttributes(node);\n                    var style = $(attributes).filter(function(i, item) { return item.name == \"style\"; })[0];\n                    var styleObj = { nodeName: \"style\", value: \"text-decoration:underline;\" };\n\n                    if (style) {\n                        styleObj.value = style.value;\n                        if (!/text-decoration/i.test(styleObj.value)) {\n                            styleObj.value = \"text-decoration:underline;\" + styleObj.value;\n                        }\n                        attributes.splice($.inArray(style, attributes), 1);\n                    }\n                    attributes.push(styleObj);\n\n                    attr(node, attributes);\n                    result.push('>');\n                },\n                end: function() { result.push('</span>'); }\n            },\n            font: {\n                canOptimize: true,\n                semantic: false,\n                start: function(node) {\n                    result.push('<span style=\"');\n\n                    var color = node.getAttribute('color');\n                    var size = fontSizeMappings[node.getAttribute('size')];\n                    var face = node.getAttribute('face');\n\n                    if (color) {\n                        result.push('color:');\n                        result.push(dom.toHex(color));\n                        result.push(';');\n                    }\n\n                    if (face) {\n                        result.push('font-family:');\n                        result.push(face);\n                        result.push(';');\n                    }\n\n                    if (size) {\n                        result.push('font-size:');\n                        result.push(size);\n                        result.push(';');\n                    }\n\n                    result.push('\">');\n                },\n                end: function() {\n                    result.push('</span>');\n                }\n            }\n        };\n\n        tagMap.script = tagMap[\"k:script\"];\n\n        options = options || {};\n\n        if (typeof options.semantic == \"undefined\") {\n            options.semantic = true;\n        }\n\n        function cssProperties(cssText) {\n            var trim = kendo.trim;\n            var css = trim(cssText);\n            var match;\n            var property, value;\n            var properties = [];\n\n            cssDeclaration.lastIndex = 0;\n\n            while (true) {\n                match = cssDeclaration.exec(css);\n\n                if (!match) {\n                    break;\n                }\n\n                property = trim(match[1].toLowerCase());\n                value = trim(match[2]);\n\n                if (property == \"font-size-adjust\" || property == \"font-stretch\") {\n                    continue;\n                }\n\n                if (property.indexOf('color') >= 0) {\n                    value = dom.toHex(value);\n                } else if (property.indexOf('font') >= 0) {\n                    value = value.replace(quoteRe, \"'\");\n                } else if (/\\burl\\(/g.test(value)) {\n                    value = value.replace(quoteRe, \"\");\n                }\n\n                properties.push({ property: property, value: value });\n            }\n\n            return properties;\n        }\n\n        function styleAttr(cssText) {\n            var properties = cssProperties(cssText);\n            var i;\n\n            for (i = 0; i < properties.length; i++) {\n                result.push(properties[i].property);\n                result.push(':');\n                result.push(properties[i].value);\n                result.push(';');\n            }\n        }\n\n        function specifiedAttributes(node) {\n            var result = [];\n            var attributes = node.attributes;\n            var attribute, i, l;\n            var name, value, specified;\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n\n                name = attribute.nodeName;\n                value = attribute.value;\n                specified = attribute.specified;\n\n                // In IE < 8 the 'value' attribute is not returned as 'specified'. The same goes for type=\"text\"\n                if (name == 'value' && 'value' in node && node.value) {\n                    specified = true;\n                } else if (name == 'type' && value == 'text') {\n                    specified = true;\n                } else if (name == \"class\" && !value) {\n                    specified = false;\n                } else if (sizzleAttr.test(name)) {\n                    specified = false;\n                } else if (name == 'complete') {\n                    specified = false;\n                } else if (name == 'altHtml') {\n                    specified = false;\n                } else if (name == 'start' && dom.is(node, \"ul\")) {\n                    specified = false;\n                } else if (name == 'start' && dom.is(node, \"ol\") && value == \"1\") {\n                    specified = false;\n                } else if (name.indexOf('_moz') >= 0) {\n                    specified = false;\n                } else if (scriptAttr.test(name)) {\n                    specified = !!options.scripts;\n                } else if (name == 'data-role' && value == 'resizable' && (dom.is(node, \"tr\") || dom.is(node, \"td\"))) {\n                    specified = false;\n                }\n\n                if (specified) {\n                    result.push(attribute);\n                }\n            }\n\n            return result;\n        }\n\n        function attr(node, attributes) {\n            var i, l, attribute, name, value;\n\n            attributes = attributes || specifiedAttributes(node);\n\n            if (dom.is(node, 'img')) {\n                var width = node.style.width,\n                    height = node.style.height,\n                    $node = $(node);\n\n                if (width && pixelRe.test(width)) {\n                    $node.attr('width', parseInt(width, 10));\n                    dom.unstyle(node, { width: undefined$1 });\n                }\n\n                if (height && pixelRe.test(height)) {\n                    $node.attr('height', parseInt(height, 10));\n                    dom.unstyle(node, { height: undefined$1 });\n                }\n            }\n\n            if (!attributes.length) {\n                return;\n            }\n\n            // Remove the following if everything seems to be in order.\n            // https://github.com/telerik/kendo-ui-core/issues/3639\n            // attributes.sort(function (a, b) {\n            //     return a.nodeName > b.nodeName ? 1 : a.nodeName < b.nodeName ? -1 : 0;\n            // });\n\n            for (i = 0, l = attributes.length; i < l; i++) {\n                attribute = attributes[i];\n                name = attribute.nodeName;\n                value = attribute.value;\n\n                if (name == \"class\" && value == \"k-table\") {\n                    continue;\n                }\n\n                name = name.replace(scriptAttr, \"\");\n\n                result.push(' ');\n                result.push(name);\n                result.push('=\"');\n\n                if (name == 'style') {\n                    styleAttr(value || node.style.cssText);\n                } else if (name == 'src' || name == 'href') {\n                    result.push(kendo.htmlEncode(node.getAttribute(name, 2)));\n                } else {\n                    result.push(dom.fillAttrs[name] ? name : value);\n                }\n\n                result.push('\"');\n            }\n        }\n\n        function children(node, skip, skipEncoding) {\n            for (var childNode = node.firstChild; childNode; childNode = childNode.nextSibling) {\n                child(childNode, skip, skipEncoding);\n            }\n        }\n\n        function text(node) {\n            return node.nodeValue.replace(/\\ufeff/g, \"\");\n        }\n\n        function isEmptyBomNode(node) {\n            if (dom.isBom(node)) {\n                do {\n                    node = node.parentNode;\n\n                    if (dom.is(node, TD) && node.childNodes.length === 1) {\n                        return true;\n                    }\n\n                    if (node.childNodes.length !== 1) {\n                        return false;\n                    }\n                } while (!dom.isBlock(node));\n\n                return true;\n            }\n\n            return false;\n        }\n\n        function child(node, skip, skipEncoding) {\n            var nodeType = node.nodeType,\n                tagName, mapper,\n                parent, value, previous, jqNode;\n\n            if (immutables && Editor.Immutables.immutable(node)) {\n                result.push(immutables.serialize(node));\n            } else if (nodeType == 1) {\n                tagName = dom.name(node);\n                jqNode = $(node);\n\n                if (jqNode.hasClass(\"k-element-resize-handle-wrapper\") || jqNode.hasClass(\"k-column-resize-handle-wrapper\") || jqNode.hasClass(\"k-row-resize-handle-wrapper\")) {\n                    return;\n                }\n\n                if (!tagName || dom.insignificant(node)) {\n                    return;\n                }\n\n                if (!options.scripts && (tagName == \"script\" || tagName == \"k:script\")) {\n                    return;\n                }\n\n                mapper = tagMap[tagName];\n\n                if (mapper) {\n                    if (mapper.canOptimize &&\n                        options.optimizeTags &&\n                        shouldOptimize(node)) {\n                            children(node, false, mapper.skipEncoding);\n                        return;\n                    }\n\n                    if (typeof mapper.semantic == \"undefined\" ||\n                        (options.semantic ^ mapper.semantic)) {\n                        mapper.start(node);\n                        children(node, false, mapper.skipEncoding);\n                        mapper.end(node);\n                        return;\n                    }\n                }\n\n                result.push('<');\n                result.push(tagName);\n\n                attr(node);\n\n                if (dom.empty[tagName]) {\n                    result.push(' />');\n                } else {\n                    result.push('>');\n                    children(node, skip || dom.is(node, 'pre'));\n                    result.push('</');\n                    result.push(tagName);\n                    result.push('>');\n                }\n            } else if (nodeType == 3) {\n                if (isEmptyBomNode(node)) {\n                    result.push('&nbsp;');\n                    return;\n                }\n\n                value = text(node);\n\n                if (!skip && supportsLeadingWhitespace) {\n                    parent = node.parentNode;\n                    previous = node.previousSibling;\n\n                    if (!previous) {\n                         previous = (dom.isInline(parent) ? parent : node).previousSibling;\n                    }\n\n                    if (!previous || previous.innerHTML === \"\" || dom.isBlock(previous)) {\n                        if (options.keepEOL) {\n                            value = value.replace(/[\\r\\n\\v\\f\\t ]+/, ' ');\n                        } else {\n                            value = value.replace(/^[\\r\\n\\v\\f\\t ]+/, '');\n                        }\n                    }\n\n                    value = value.replace(/ +/, ' ');\n                }\n\n                result.push(skipEncoding ? value : dom.encode(value, options));\n\n            } else if (nodeType == 4) {\n                result.push('<![CDATA[');\n                result.push(node.data);\n                result.push(']]>');\n            } else if (nodeType == 8) {\n                if (node.data.indexOf('[CDATA[') < 0) {\n                    result.push('<!--');\n                    result.push(node.data);\n                    result.push('-->');\n                } else {\n                    result.push('<!');\n                    result.push(node.data);\n                    result.push('>');\n                }\n            }\n        }\n\n        function shouldOptimize(node) {\n            return node.attributes.length === 0;\n        }\n\n        function textOnly(root) {\n            var childrenCount = root.childNodes.length;\n            var textChild = childrenCount && root.firstChild.nodeType == 3;\n\n            return textChild && (childrenCount == 1 || (childrenCount == 2 && dom.insignificant(root.lastChild)));\n        }\n\n        function runCustom() {\n            if (kendo.isFunction(options.custom)) {\n                result = options.custom(result) || result;\n            }\n        }\n\n        if (textOnly(root)) {\n            result = dom.encode(text(root.firstChild).replace(/[\\r\\n\\v\\f\\t ]+/, ' '), options);\n            runCustom();\n\n            return result;\n        }\n\n        children(root);\n        result = result.join('');\n        runCustom();\n\n        // if serialized dom contains only whitespace elements, consider it empty (required field validation)\n        if (result.replace(brRe, \"\").replace(emptyPRe, \"\") === \"\") {\n            return \"\";\n        }\n\n        return result;\n    }\n\n};\n\nextend(Editor, {\n    Serializer: Serializer\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        browser = kendo.support.browser,\n        dom = Editor.Dom,\n        findNodeIndex = dom.findNodeIndex,\n        isDataNode = dom.isDataNode,\n        findClosestAncestor = dom.findClosestAncestor,\n        getNodeLength = dom.getNodeLength,\n        normalize = dom.normalize;\n\nvar SelectionUtils = {\n    selectionFromWindow: function(window) {\n        if (!window) {\n            return;\n        }\n\n        if (!(\"getSelection\" in window)) {\n            return new W3CSelection(window.document);\n        }\n\n        return window.getSelection();\n    },\n\n    selectionFromRange: function(range) {\n        var rangeDocument = RangeUtils.documentFromRange(range);\n        return SelectionUtils.selectionFromDocument(rangeDocument);\n    },\n\n    selectionFromDocument: function(document) {\n        return SelectionUtils.selectionFromWindow(dom.windowFromDocument(document));\n    }\n};\n\nvar W3CRange = Class.extend({\n    init: function(doc) {\n        $.extend(this, {\n            ownerDocument: doc, /* not part of the spec; used when cloning ranges, traversing the dom and creating fragments */\n            startContainer: doc,\n            endContainer: doc,\n            commonAncestorContainer: doc,\n            startOffset: 0,\n            endOffset: 0,\n            collapsed: true\n        });\n    },\n\n    // Positioning Methods\n    setStart: function(node, offset) {\n        this.startContainer = node;\n        this.startOffset = offset;\n        updateRangeProperties(this);\n        fixIvalidRange(this, true);\n    },\n\n    setEnd: function(node, offset) {\n        this.endContainer = node;\n        this.endOffset = offset;\n        updateRangeProperties(this);\n        fixIvalidRange(this, false);\n    },\n\n    setStartBefore: function(node) {\n        this.setStart(node.parentNode, findNodeIndex(node));\n    },\n\n    setStartAfter: function(node) {\n        this.setStart(node.parentNode, findNodeIndex(node) + 1);\n    },\n\n    setEndBefore: function(node) {\n        this.setEnd(node.parentNode, findNodeIndex(node));\n    },\n\n    setEndAfter: function(node) {\n        this.setEnd(node.parentNode, findNodeIndex(node) + 1);\n    },\n\n    selectNode: function(node) {\n        this.setStartBefore(node);\n        this.setEndAfter(node);\n    },\n\n    selectNodeContents: function(node) {\n        this.setStart(node, 0);\n        this.setEnd(node, node[node.nodeType === 1 ? 'childNodes' : 'nodeValue'].length);\n    },\n\n    collapse: function(toStart) {\n        var that = this;\n\n        if (toStart) {\n            that.setEnd(that.startContainer, that.startOffset);\n        } else {\n            that.setStart(that.endContainer, that.endOffset);\n        }\n    },\n\n    // Editing Methods\n\n    deleteContents: function() {\n        var that = this,\n            range = that.cloneRange();\n\n        if (that.startContainer != that.commonAncestorContainer) {\n            that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n        }\n\n        that.collapse(true);\n\n        (function deleteSubtree(iterator) {\n            while (iterator.next()) {\n                if (iterator.hasPartialSubtree()) {\n                    deleteSubtree(iterator.getSubtreeIterator());\n                } else {\n                    iterator.remove();\n                }\n            }\n        })(new RangeIterator(range));\n    },\n\n    cloneContents: function() {\n        // clone subtree\n        var document = RangeUtils.documentFromRange(this);\n        return (function cloneSubtree(iterator) {\n                var node, frag = document.createDocumentFragment();\n\n                while (node = iterator.next()) {\n                    node = node.cloneNode(!iterator.hasPartialSubtree());\n\n                    if (iterator.hasPartialSubtree()) {\n                        node.appendChild(cloneSubtree(iterator.getSubtreeIterator()));\n                    }\n\n                    frag.appendChild(node);\n                }\n\n                return frag;\n        })(new RangeIterator(this));\n    },\n\n    extractContents: function() {\n        var that = this,\n            range = that.cloneRange();\n\n        if (that.startContainer != that.commonAncestorContainer) {\n            that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n        }\n\n        that.collapse(true);\n\n        var document = RangeUtils.documentFromRange(that);\n\n        return (function extractSubtree(iterator) {\n            var node, frag = document.createDocumentFragment();\n\n            while (node = iterator.next()) {\n                if (iterator.hasPartialSubtree()) {\n                    node = node.cloneNode(false);\n                    node.appendChild(extractSubtree(iterator.getSubtreeIterator()));\n                } else {\n                    iterator.remove(that.originalRange);\n                }\n\n                frag.appendChild(node);\n            }\n\n            return frag;\n        })(new RangeIterator(range));\n    },\n\n    insertNode: function(node) {\n        var that = this;\n\n        if (isDataNode(that.startContainer)) {\n            if (that.startOffset != that.startContainer.nodeValue.length) {\n                dom.splitDataNode(that.startContainer, that.startOffset);\n            }\n\n            dom.insertAfter(node, that.startContainer);\n        } else {\n            dom.insertAt(that.startContainer, node, that.startOffset);\n        }\n\n        that.setStart(that.startContainer, that.startOffset);\n    },\n\n    cloneRange: function() {\n        // fast copy\n        return $.extend(new W3CRange(this.ownerDocument), {\n            startContainer: this.startContainer,\n            endContainer: this.endContainer,\n            commonAncestorContainer: this.commonAncestorContainer,\n            startOffset: this.startOffset,\n            endOffset: this.endOffset,\n            collapsed: this.collapsed,\n\n            originalRange: this /* not part of the spec; used to update the original range when calling extractContents() on clones */\n        });\n    },\n\n    // used for debug purposes\n    toString: function() {\n        var startNodeName = this.startContainer.nodeName,\n            endNodeName = this.endContainer.nodeName;\n\n        return [startNodeName == \"#text\" ? this.startContainer.nodeValue : startNodeName, '(', this.startOffset, ') : ',\n                endNodeName == \"#text\" ? this.endContainer.nodeValue : endNodeName, '(', this.endOffset, ')'].join('');\n    }\n});\n\nW3CRange.fromNode = function(node) {\n    return new W3CRange(node.ownerDocument);\n};\n\n/* can be used in Range.compareBoundaryPoints if we need it one day */\nfunction compareBoundaries(start, end, startOffset, endOffset) {\n    if (start == end) {\n        return endOffset - startOffset;\n    }\n\n    // end is child of start\n    var container = end;\n    while (container && container.parentNode != start) {\n        container = container.parentNode;\n    }\n\n    if (container) {\n        return findNodeIndex(container) - startOffset;\n    }\n\n    // start is child of end\n    container = start;\n    while (container && container.parentNode != end) {\n        container = container.parentNode;\n    }\n\n    if (container) {\n        return endOffset - findNodeIndex(container) - 1;\n    }\n\n    // deep traversal\n    var root = dom.commonAncestor(start, end);\n    var startAncestor = start;\n\n    while (startAncestor && startAncestor.parentNode != root) {\n        startAncestor = startAncestor.parentNode;\n    }\n\n    if (!startAncestor) {\n        startAncestor = root;\n    }\n\n    var endAncestor = end;\n    while (endAncestor && endAncestor.parentNode != root) {\n        endAncestor = endAncestor.parentNode;\n    }\n\n    if (!endAncestor) {\n        endAncestor = root;\n    }\n\n    if (startAncestor == endAncestor) {\n        return 0;\n    }\n\n    return findNodeIndex(endAncestor) - findNodeIndex(startAncestor);\n}\n\nfunction fixIvalidRange(range, toStart) {\n    function isInvalidRange(range) {\n        try {\n            return compareBoundaries(range.startContainer, range.endContainer, range.startOffset, range.endOffset) < 0;\n        } catch (ex) {\n            // range was initially invalid (e.g. when cloned from invalid range) - it must be fixed\n            return true;\n        }\n    }\n\n    if (isInvalidRange(range)) {\n        if (toStart) {\n            range.commonAncestorContainer = range.endContainer = range.startContainer;\n            range.endOffset = range.startOffset;\n        } else {\n            range.commonAncestorContainer = range.startContainer = range.endContainer;\n            range.startOffset = range.endOffset;\n        }\n\n        range.collapsed = true;\n    }\n}\n\nfunction updateRangeProperties(range) {\n    range.collapsed = range.startContainer == range.endContainer && range.startOffset == range.endOffset;\n\n    var node = range.startContainer;\n    while (node && node != range.endContainer && !dom.isAncestorOf(node, range.endContainer)) {\n        node = node.parentNode;\n    }\n\n    range.commonAncestorContainer = node;\n}\n\nvar RangeIterator = Class.extend({\n    init: function(range) {\n        $.extend(this, {\n            range: range,\n            _current: null,\n            _next: null,\n            _end: null\n        });\n\n        if (range.collapsed) {\n            return;\n        }\n\n        var root = range.commonAncestorContainer;\n\n        this._next = range.startContainer == root && !isDataNode(range.startContainer) ?\n        range.startContainer.childNodes[range.startOffset] :\n        findClosestAncestor(root, range.startContainer);\n\n        this._end = range.endContainer == root && !isDataNode(range.endContainer) ?\n        range.endContainer.childNodes[range.endOffset] :\n        findClosestAncestor(root, range.endContainer).nextSibling;\n    },\n\n    hasNext: function() {\n        return !!this._next;\n    },\n\n    next: function() {\n        var that = this,\n            current = that._current = that._next;\n        that._next = that._current && that._current.nextSibling != that._end ?\n        that._current.nextSibling : null;\n\n        if (isDataNode(that._current)) {\n            if (that.range.endContainer == that._current) {\n                current = current.cloneNode(true);\n                current.deleteData(that.range.endOffset, current.length - that.range.endOffset);\n            }\n\n            if (that.range.startContainer == that._current) {\n                current = current.cloneNode(true);\n                current.deleteData(0, that.range.startOffset);\n            }\n        }\n\n        return current;\n    },\n\n    traverse: function(callback) {\n        var that = this,\n            current;\n\n        function next() {\n            that._current = that._next;\n            that._next = that._current && that._current.nextSibling != that._end ? that._current.nextSibling : null;\n            return that._current;\n        }\n\n        while (current = next()) {\n            if (that.hasPartialSubtree()) {\n                that.getSubtreeIterator().traverse(callback);\n            } else {\n                callback(current);\n            }\n        }\n\n        return current;\n    },\n\n    remove: function(originalRange) {\n        var that = this,\n            inStartContainer = that.range.startContainer == that._current,\n            inEndContainer = that.range.endContainer == that._current,\n            start, end, delta;\n\n        if (isDataNode(that._current) && (inStartContainer || inEndContainer)) {\n            start = inStartContainer ? that.range.startOffset : 0;\n            end = inEndContainer ? that.range.endOffset : that._current.length;\n            delta = end - start;\n\n            if (originalRange && (inStartContainer || inEndContainer)) {\n                if (that._current == originalRange.startContainer && start <= originalRange.startOffset) {\n                    originalRange.startOffset -= delta;\n                }\n\n                if (that._current == originalRange.endContainer && end <= originalRange.endOffset) {\n                    originalRange.endOffset -= delta;\n                }\n            }\n\n            that._current.deleteData(start, delta);\n        } else {\n            var parent = that._current.parentNode;\n\n            if (originalRange && (that.range.startContainer == parent || that.range.endContainer == parent)) {\n                var nodeIndex = findNodeIndex(that._current);\n\n                if (parent == originalRange.startContainer && nodeIndex <= originalRange.startOffset) {\n                    originalRange.startOffset -= 1;\n                }\n\n                if (parent == originalRange.endContainer && nodeIndex < originalRange.endOffset) {\n                    originalRange.endOffset -= 1;\n                }\n            }\n\n            dom.remove(that._current);\n        }\n    },\n\n    hasPartialSubtree: function() {\n        return !isDataNode(this._current) &&\n        (dom.isAncestorOrSelf(this._current, this.range.startContainer) ||\n            dom.isAncestorOrSelf(this._current, this.range.endContainer));\n    },\n\n    getSubtreeIterator: function() {\n        return new RangeIterator(this.getSubRange());\n    },\n\n    getSubRange: function() {\n        var that = this,\n            subRange = that.range.cloneRange();\n        subRange.selectNodeContents(that._current);\n        if (dom.isAncestorOrSelf(that._current, that.range.startContainer)) {\n            subRange.setStart(that.range.startContainer, that.range.startOffset);\n        }\n        if (dom.isAncestorOrSelf(that._current, that.range.endContainer)) {\n            subRange.setEnd(that.range.endContainer, that.range.endOffset);\n        }\n\n        return subRange;\n    }\n});\n\nvar W3CSelection = Class.extend({\n    init: function(doc) {\n        this.ownerDocument = doc;\n        this.rangeCount = 1;\n    },\n\n    addRange: function(range) {\n        var textRange = this.ownerDocument.body.createTextRange();\n\n        // end container should be adopted first in order to prevent selection with negative length\n        adoptContainer(textRange, range, false);\n        adoptContainer(textRange, range, true);\n\n        textRange.select();\n    },\n\n    removeAllRanges: function() {\n        var selection = this.ownerDocument.selection;\n\n        if (selection.type != \"None\") {\n            selection.empty();\n        }\n    },\n\n    getRangeAt: function() {\n        var textRange,\n            range = new W3CRange(this.ownerDocument),\n            selection = this.ownerDocument.selection,\n            element, commonAncestor;\n\n        try {\n            textRange = selection.createRange();\n            element = textRange.item ? textRange.item(0) : textRange.parentElement();\n            if (element.ownerDocument != this.ownerDocument) {\n                return range;\n            }\n        } catch (ex) {\n            return range;\n        }\n\n        if (selection.type == \"Control\") {\n            range.selectNode(textRange.item(0));\n        } else {\n            commonAncestor = textRangeContainer(textRange);\n            adoptEndPoint(textRange, range, commonAncestor, true);\n            adoptEndPoint(textRange, range, commonAncestor, false);\n\n            if (range.startContainer.nodeType == 9) {\n                range.setStart(range.endContainer, range.startOffset);\n            }\n\n            if (range.endContainer.nodeType == 9) {\n                range.setEnd(range.startContainer, range.endOffset);\n            }\n\n            if (textRange.compareEndPoints(\"StartToEnd\", textRange) === 0) {\n                range.collapse(false);\n            }\n\n            var startContainer = range.startContainer,\n                endContainer = range.endContainer,\n                body = this.ownerDocument.body;\n\n            if (!range.collapsed && range.startOffset === 0 && range.endOffset == getNodeLength(range.endContainer) && // check for full body selection\n                !(startContainer == endContainer && isDataNode(startContainer) && startContainer.parentNode == body)) { // but not when single textnode is selected\n                var movedStart = false,\n                    movedEnd = false;\n\n                while (findNodeIndex(startContainer) === 0 && startContainer == startContainer.parentNode.firstChild && startContainer != body) {\n                    startContainer = startContainer.parentNode;\n                    movedStart = true;\n                }\n\n                while (findNodeIndex(endContainer) == getNodeLength(endContainer.parentNode) - 1 && endContainer == endContainer.parentNode.lastChild && endContainer != body) {\n                    endContainer = endContainer.parentNode;\n                    movedEnd = true;\n                }\n\n                if (startContainer == body && endContainer == body && movedStart && movedEnd) {\n                    range.setStart(startContainer, 0);\n                    range.setEnd(endContainer, getNodeLength(body));\n                }\n            }\n        }\n\n        return range;\n    }\n});\n\nfunction textRangeContainer(textRange) {\n    var left = textRange.duplicate(),\n        right = textRange.duplicate();\n\n    left.collapse(true);\n    right.collapse(false);\n\n    return dom.commonAncestor(textRange.parentElement(), left.parentElement(), right.parentElement());\n}\n\nfunction adoptContainer(textRange, range, start) {\n    // find anchor node and offset\n    var container = range[start ? \"startContainer\" : \"endContainer\"],\n        offset = range[start ? \"startOffset\" : \"endOffset\"],\n        textOffset = 0,\n        isData = isDataNode(container),\n        anchorNode = isData ? container : container.childNodes[offset] || null,\n        anchorParent = isData ? container.parentNode : container,\n        doc = range.ownerDocument,\n        cursor = doc.body.createTextRange(),\n        cursorNode;\n\n    // visible data nodes need a text offset\n    if (container.nodeType == 3 || container.nodeType == 4) {\n        textOffset = offset;\n    }\n\n    if (!anchorParent) {\n        anchorParent = doc.body;\n    }\n\n    if (anchorParent.nodeName.toLowerCase() == \"img\") {\n        cursor.moveToElementText(anchorParent);\n        cursor.collapse(false);\n        textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n    } else {\n        // create a cursor element node to position range (since we can't select text nodes)\n        cursorNode = anchorParent.insertBefore(dom.create(doc, \"a\"), anchorNode);\n\n        cursor.moveToElementText(cursorNode);\n        dom.remove(cursorNode);\n        cursor[start ? \"moveStart\" : \"moveEnd\"](\"character\", textOffset);\n        cursor.collapse(false);\n        textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n    }\n}\n\nfunction adoptEndPoint(textRange, range, commonAncestor, start) {\n    var cursorNode = dom.create(range.ownerDocument, \"a\"),\n        cursor = textRange.duplicate(),\n        comparison = start ? \"StartToStart\" : \"StartToEnd\",\n        result, parent, target,\n        previous, next,\n        args, index,\n        appended = false;\n\n    cursorNode.innerHTML = \"\\ufeff\";\n    cursor.collapse(start);\n\n    parent = cursor.parentElement();\n\n    if (!dom.isAncestorOrSelf(commonAncestor, parent)) {\n        parent = commonAncestor;\n    }\n\n    // detect range end points\n    // insert cursorNode within the textRange parent and move the cursor until it gets outside of the textRange\n    do {\n        if (appended) {\n            parent.insertBefore(cursorNode, cursorNode.previousSibling);\n        } else {\n            parent.appendChild(cursorNode);\n            appended = true;\n        }\n        cursor.moveToElementText(cursorNode);\n    } while ((result = cursor.compareEndPoints(comparison, textRange)) > 0 && cursorNode.previousSibling);\n\n    target = cursorNode.nextSibling;\n\n    if (result == -1 && isDataNode(target)) {\n        cursor.setEndPoint(start ? \"EndToStart\" : \"EndToEnd\", textRange);\n\n        dom.remove(cursorNode);\n\n        args = [target, cursor.text.length];\n    } else {\n        previous = !start && cursorNode.previousSibling;\n        next = start && cursorNode.nextSibling;\n\n        if (isDataNode(next)) {\n            args = [next, 0];\n        } else if (isDataNode(previous)) {\n            args = [previous, previous.length];\n        } else {\n            index = findNodeIndex(cursorNode);\n\n            if (parent.nextSibling && index == parent.childNodes.length - 1) {\n                args = [parent.nextSibling, 0];\n            } else {\n                args = [parent, index];\n            }\n        }\n\n        dom.remove(cursorNode);\n    }\n\n    range[start ? \"setStart\" : \"setEnd\"](...args);\n}\n\nvar RangeEnumerator = Class.extend({\n    init: function(range) {\n        this.enumerate = function() {\n            var nodes = [];\n\n            function visit(node) {\n                if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                    nodes.push(node);\n                } else {\n                    node = node.firstChild;\n                    while (node) {\n                        visit(node);\n                        node = node.nextSibling;\n                    }\n                }\n            }\n\n            new RangeIterator(range).traverse(visit);\n\n            return nodes;\n        };\n    }\n});\n\nvar ImmutablesRangeIterator = RangeIterator.extend({\n    hasPartialSubtree: function() {\n        var immutable = Editor.Immutables && Editor.Immutables.immutable;\n        return immutable && !immutable(this._current) && RangeIterator.fn.hasPartialSubtree.call(this);\n    },\n\n    getSubtreeIterator: function() {\n        return new ImmutablesRangeIterator(this.getSubRange());\n    }\n});\n\nvar ImmutablesRangeEnumerator = Class.extend({\n    init: function(range) {\n        this.enumerate = function() {\n            var nodes = [];\n            var immutable = Editor.Immutables && Editor.Immutables.immutable;\n            function visit(node) {\n                if (immutable && !immutable(node)) {\n                    if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                        nodes.push(node);\n                    } else {\n                        node = node.firstChild;\n                        while (node) {\n                            visit(node);\n                            node = node.nextSibling;\n                        }\n                    }\n                }\n            }\n\n            new ImmutablesRangeIterator(range).traverse(visit);\n\n            return nodes;\n        };\n    }\n});\n\nvar RestorePoint = Class.extend({\n    init: function(range, body, options) {\n        var that = this;\n        that.range = range;\n        that.rootNode = RangeUtils.documentFromRange(range);\n        that.body = body || that.getEditable(range);\n        if (dom.name(that.body) != \"body\") {\n            that.rootNode = that.body;\n        }\n\n        that.startContainer = that.nodeToPath(range.startContainer);\n        that.endContainer = that.nodeToPath(range.endContainer);\n        that.startOffset = that.offset(range.startContainer, range.startOffset);\n        that.endOffset = that.offset(range.endContainer, range.endOffset);\n\n        that.immutables = options && options.immutables;\n\n        if (that.immutables) {\n            that.serializedImmutables = Editor.Immutables.removeImmutables(that.body);\n        }\n\n        that.html = that.body.innerHTML;\n\n        if (that.immutables && !that.serializedImmutables.empty) {\n            Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n        }\n    },\n\n    index: function(node) {\n        var result = 0,\n            lastType = node.nodeType;\n\n        while (node = node.previousSibling) {\n            var nodeType = node.nodeType;\n\n            if (nodeType != 3 || lastType != nodeType) {\n                result ++;\n            }\n\n            lastType = nodeType;\n        }\n\n        return result;\n    },\n\n    getEditable: function(range) {\n        var root = range.commonAncestorContainer;\n\n        while (root && (root.nodeType == 3 || root.attributes && (!root.attributes.contentEditable || root.attributes.contentEditable.nodeValue.toLowerCase() == \"false\"))) {\n            root = root.parentNode;\n        }\n\n        return root;\n    },\n\n    restoreHtml: function() {\n        var that = this;\n\n        dom.removeChildren(that.body);\n        that.body.innerHTML = that.html;\n        if (that.immutables && !that.serializedImmutables.empty) {\n            Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n        }\n    },\n\n    offset: function(node, value) {\n        if (node.nodeType == 3) {\n            while ((node = node.previousSibling) && node.nodeType == 3) {\n                value += node.nodeValue.length;\n            }\n        }\n\n        return value;\n    },\n\n    nodeToPath: function(node) {\n        var path = [];\n\n        while (node != this.rootNode) {\n            path.push(this.index(node));\n            node = node.parentNode;\n        }\n\n        return path;\n    },\n\n    toRangePoint: function(range, start, path, denormalizedOffset) {\n        var node = this.rootNode,\n            length = path.length,\n            offset = denormalizedOffset;\n\n        while (length-- && node) {\n            node = node.childNodes[path[length]];\n        }\n\n        while (node && node.nodeType == 3 && node.nodeValue.length < offset) {\n            offset -= node.nodeValue.length;\n            node = node.nextSibling;\n        }\n\n        if (node && offset >= 0) {\n            range[start ? 'setStart' : 'setEnd'](node, offset);\n        }\n    },\n\n    toRange: function() {\n        var that = this,\n            result = that.range.cloneRange();\n\n        that.toRangePoint(result, true, that.startContainer, that.startOffset);\n        that.toRangePoint(result, false, that.endContainer, that.endOffset);\n\n        return result;\n    }\n\n});\n\nvar Marker = Class.extend({\n    init: function() {\n        this.caret = null;\n    },\n\n    addCaret: function(range) {\n        var that = this;\n        var caret = that.caret = dom.create(RangeUtils.documentFromRange(range), 'span', { className: 'k-marker' });\n        range.insertNode(caret);\n\n        dom.stripBomNode(caret.previousSibling);\n        dom.stripBomNode(caret.nextSibling);\n\n        range.selectNode(caret);\n        return caret;\n    },\n\n    removeCaret: function(range) {\n        var that = this,\n            previous = that.caret.previousSibling,\n            startOffset = 0;\n\n        if (previous) {\n            startOffset = isDataNode(previous) ? previous.nodeValue.length : findNodeIndex(previous);\n        }\n\n        var container = that.caret.parentNode;\n        var containerIndex = previous ? findNodeIndex(previous) : 0;\n\n        dom.remove(that.caret);\n        normalize(container);\n\n        var node = container.childNodes[containerIndex];\n\n        if (isDataNode(node)) {\n            range.setStart(node, startOffset);\n        } else if (node) {\n            var textNode = dom.lastTextNode(node);\n            if (textNode) {\n                range.setStart(textNode, textNode.nodeValue.length);\n            } else {\n                range[previous ? 'setStartAfter' : 'setStartBefore'](node);\n            }\n        } else {\n            if (!browser.msie && !container.innerHTML) {\n                container.innerHTML = '<br _moz_dirty=\"\" />';\n            }\n\n            range.selectNodeContents(container);\n        }\n        range.collapse(true);\n    },\n\n    add: function(range, expand) {\n        var that = this;\n\n        var collapsed = range.collapsed && !RangeUtils.isExpandable(range);\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (expand && range.collapsed) {\n            that.addCaret(range);\n            range = RangeUtils.expand(range);\n        }\n\n        var rangeBoundary = range.cloneRange();\n\n        rangeBoundary.collapse(false);\n        that.end = dom.create(doc, 'span', { className: 'k-marker' });\n        rangeBoundary.insertNode(that.end);\n\n        rangeBoundary = range.cloneRange();\n        rangeBoundary.collapse(true);\n        that.start = that.end.cloneNode(true);\n        rangeBoundary.insertNode(that.start);\n\n        that._removeDeadMarkers(that.start, that.end);\n\n        if (collapsed) {\n            var bom = doc.createTextNode(\"\\ufeff\");\n            dom.insertAfter(bom.cloneNode(), that.start);\n            dom.insertBefore(bom, that.end);\n        }\n\n        normalize(range.commonAncestorContainer);\n\n        range.setStartBefore(that.start);\n        range.setEndAfter(that.end);\n\n        return range;\n    },\n\n    _removeDeadMarkers: function(start, end) {\n        if (start.previousSibling && start.previousSibling.nodeValue == \"\\ufeff\") {\n            dom.remove(start.previousSibling);\n        }\n\n        if (end.nextSibling && end.nextSibling.nodeValue == \"\\ufeff\") {\n            dom.remove(end.nextSibling);\n        }\n    },\n\n    _normalizedIndex: function(node) {\n        var index = findNodeIndex(node);\n        var pointer = node;\n\n        while (pointer.previousSibling) {\n            if (pointer.nodeType == 3 && pointer.previousSibling.nodeType == 3) {\n                index--;\n            }\n\n            pointer = pointer.previousSibling;\n        }\n\n        return index;\n    },\n\n    remove: function(range) {\n        var that = this,\n            start = that.start,\n            end = that.end,\n            shouldNormalizeStart,\n            shouldNormalizeEnd,\n            shouldNormalize;\n\n        normalize(range.commonAncestorContainer);\n\n        while (!start.nextSibling && start.parentNode) {\n            start = start.parentNode;\n        }\n\n        while (!end.previousSibling && end.parentNode) {\n            end = end.parentNode;\n        }\n\n        // merely accessing the siblings will solve range issues in IE\n        shouldNormalizeStart = (start.previousSibling && start.previousSibling.nodeType == 3) &&\n                               (start.nextSibling && start.nextSibling.nodeType == 3);\n\n        shouldNormalizeEnd = (end.previousSibling && end.previousSibling.nodeType == 3) &&\n                             (end.nextSibling && end.nextSibling.nodeType == 3);\n\n        shouldNormalize = shouldNormalizeStart && shouldNormalizeEnd;\n\n        start = start.nextSibling;\n        end = end.previousSibling;\n\n        var isBomSelected = start === end && dom.isBom(start);\n        if (isBomSelected && start.length > 1) {\n            start.nodeValue = start.nodeValue.charAt(0);\n        }\n\n        var collapsed = isBomSelected;\n        var collapsedToStart = false;\n        // collapsed range\n        if (start == that.end) {\n            collapsedToStart = !!that.start.previousSibling;\n            start = end = that.start.previousSibling || that.end.nextSibling;\n            collapsed = true;\n        }\n\n        dom.remove(that.start);\n        dom.remove(that.end);\n\n        if (!start || !end) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            range.collapse(true);\n            return;\n        }\n\n        var startOffset = collapsed ? isDataNode(start) ? start.nodeValue.length : start.childNodes.length : 0;\n        var endOffset = isDataNode(end) ? end.nodeValue.length : end.childNodes.length;\n\n        if (start.nodeType == 3) {\n            while (start.previousSibling && start.previousSibling.nodeType == 3) {\n                start = start.previousSibling;\n                startOffset += start.nodeValue.length;\n            }\n        }\n\n        if (end.nodeType == 3) {\n            while (end.previousSibling && end.previousSibling.nodeType == 3) {\n                end = end.previousSibling;\n                endOffset += end.nodeValue.length;\n            }\n        }\n\n        var startParent = start.parentNode;\n        var endParent = end.parentNode;\n        var startIndex = this._normalizedIndex(start);\n        var endIndex = this._normalizedIndex(end);\n\n        normalize(startParent);\n        if (start.nodeType == 3) {\n            start = startParent.childNodes[startIndex];\n        }\n\n        normalize(endParent);\n        if (end.nodeType == 3) {\n            end = endParent.childNodes[endIndex];\n        }\n\n        if (collapsed) {\n            if (start.nodeType == 3) {\n                range.setStart(start, startOffset);\n            } else {\n                range[collapsedToStart ? 'setStartAfter' : 'setStartBefore'](start);\n            }\n\n            range.collapse(true);\n\n        } else {\n            if (start.nodeType == 3) {\n                range.setStart(start, startOffset);\n            } else {\n                range.setStartBefore(start);\n            }\n\n            if (end.nodeType == 3) {\n                range.setEnd(end, endOffset);\n            } else {\n                range.setEndAfter(end);\n            }\n        }\n\n        if (that.caret) {\n            that.removeCaret(range);\n        }\n    }\n});\n\nvar boundary = /[\\u0009-\\u000d]|\\u0020|\\u00a0|\\ufeff|\\.|,|;|:|!|\\(|\\)|\\?/;\n\nvar RangeUtils = {\n    nodes: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        if (!nodes.length) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                nodes = dom.significantChildNodes(range.commonAncestorContainer);\n            }\n        }\n        return nodes;\n    },\n\n    textNodes: function(range) {\n        var allNodes = new RangeEnumerator(range).enumerate(),\n            result = allNodes.filter(function(node) {\n                return dom.allowsTextContent(node.parentElement);\n            });\n\n        return result;\n    },\n\n    editableTextNodes: function(range) {\n        var nodes = [],\n            immutableParent = Editor.Immutables && Editor.Immutables.immutableParent,\n            result = [];\n\n        if (immutableParent && !immutableParent(range.commonAncestorContainer)) {\n            nodes = new ImmutablesRangeEnumerator(range).enumerate();\n            result = nodes.filter(function(node) {\n                return dom.allowsTextContent(node.parentElement);\n            });\n        }\n\n        return result;\n    },\n\n    documentFromRange: function(range) {\n        var startContainer = range.startContainer;\n        return startContainer.nodeType == 9 ? startContainer : startContainer.ownerDocument;\n    },\n\n    createRange: function(document) {\n        return document.createRange();\n    },\n\n    selectRange: function(range) {\n        var image = RangeUtils.image(range);\n        if (image) {\n            range.setStartAfter(image);\n            range.setEndAfter(image);\n        }\n        var selection = SelectionUtils.selectionFromRange(range);\n        selection.removeAllRanges();\n        selection.addRange(range);\n    },\n\n    stringify: function(range) {\n        return kendo.format(\n            \"{0}:{1} - {2}:{3}\",\n            dom.name(range.startContainer), range.startOffset,\n            dom.name(range.endContainer), range.endOffset\n        );\n    },\n\n    split: function(range, node, trim) {\n        function partition(start) {\n            var partitionRange = range.cloneRange();\n            partitionRange.collapse(start);\n            partitionRange[start ? 'setStartBefore' : 'setEndAfter'](node);\n            var contents = partitionRange.extractContents();\n            if (trim) {\n                contents = dom.trim(contents);\n            }\n            dom[start ? 'insertBefore' : 'insertAfter'](contents, node);\n        }\n        partition(true);\n        partition(false);\n    },\n\n    mapAll: function(range, map) {\n        var nodes = [];\n\n        new RangeIterator(range).traverse(function(node) {\n            var mapped = map(node);\n\n            if (mapped && $.inArray(mapped, nodes) < 0) {\n                nodes.push(mapped);\n            }\n        });\n\n        return nodes;\n    },\n\n    getAll: function(range, predicate) {\n        var selector = predicate;\n\n        if (typeof predicate == \"string\") {\n            predicate = function(node) {\n                return dom.is(node, selector);\n            };\n        }\n\n        return RangeUtils.mapAll(range, function(node) {\n            if (predicate(node)) {\n                return node;\n            }\n        });\n    },\n\n    getMarkers: function(range) {\n        return RangeUtils.getAll(range, function(node) {\n            return node.className == 'k-marker';\n        });\n    },\n\n    image: function(range) {\n        var nodes = RangeUtils.getAll(range, \"img\");\n\n        if (nodes.length == 1) {\n            return nodes[0];\n        }\n    },\n\n    isStartOf: function(originalRange, node) {\n        if (originalRange.startOffset !== 0) {\n            return false;\n        }\n\n        var range = originalRange.cloneRange();\n\n        while (range.startOffset === 0 && range.startContainer != node) {\n            var index = dom.findNodeIndex(range.startContainer);\n            var parent = range.startContainer.parentNode;\n\n            while (index > 0 && parent[index - 1] && dom.insignificant(parent[index - 1])) {\n                index--;\n            }\n\n            range.setStart(parent, index);\n        }\n\n        return range.startOffset === 0 && range.startContainer == node;\n    },\n\n    isEndOf: function(originalRange, node) {\n        var range = originalRange.cloneRange();\n\n        range.collapse(false);\n\n        var start = range.startContainer;\n\n        if (dom.isDataNode(start) && range.startOffset == dom.getNodeLength(start)) {\n            range.setStart(start.parentNode, dom.findNodeIndex(start) + 1);\n            range.collapse(true);\n        }\n\n        range.setEnd(node, dom.getNodeLength(node));\n\n        var nodes = [];\n\n        function visit(node) {\n            if (!dom.insignificant(node) && !(dom.isDataNode(node) && /^[\\ufeff]*$/.test(node.nodeValue))) {\n                nodes.push(node);\n            }\n        }\n\n        new RangeIterator(range).traverse(visit);\n\n        return !nodes.length;\n    },\n\n    wrapSelectedElements: function(range) {\n        var startEditable = dom.editableParent(range.startContainer);\n        var endEditable = dom.editableParent(range.endContainer);\n\n        while (range.startOffset === 0 && range.startContainer != startEditable) {\n            range.setStart(range.startContainer.parentNode, dom.findNodeIndex(range.startContainer));\n        }\n\n        function isEnd(offset, container) {\n            var length = dom.getNodeLength(container);\n\n            if (offset == length) {\n                return true;\n            }\n\n            for (var i = offset; i < length; i++) {\n                if (!dom.insignificant(container.childNodes[i])) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        while (isEnd(range.endOffset, range.endContainer) && range.endContainer != endEditable) {\n            range.setEnd(range.endContainer.parentNode, dom.findNodeIndex(range.endContainer) + 1);\n        }\n\n        return range;\n    },\n\n    expand: function(range) {\n        var result = range.cloneRange();\n\n        var startContainer = result.startContainer.childNodes[result.startOffset === 0 ? 0 : result.startOffset - 1];\n        var endContainer = result.endContainer.childNodes[result.endOffset];\n\n        if (!isDataNode(startContainer) || !isDataNode(endContainer)) {\n            return result;\n        }\n\n        var beforeCaret = startContainer.nodeValue;\n        var afterCaret = endContainer.nodeValue;\n\n        if (!beforeCaret || !afterCaret) {\n            return result;\n        }\n\n        var startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n        var endOffset = afterCaret.search(boundary);\n\n        if (!startOffset || !endOffset) {\n            return result;\n        }\n\n        endOffset = endOffset == -1 ? afterCaret.length : endOffset;\n        startOffset = startOffset == -1 ? 0 : beforeCaret.length - startOffset;\n\n        result.setStart(startContainer, startOffset);\n        result.setEnd(endContainer, endOffset);\n\n        return result;\n    },\n\n    isExpandable: function(range) {\n        var node = range.startContainer;\n        var rangeDocument = RangeUtils.documentFromRange(range);\n\n        if (node == rangeDocument || node == rangeDocument.body) {\n            return false;\n        }\n\n        var result = range.cloneRange();\n\n        var value = node.nodeValue;\n        if (!value) {\n            return false;\n        }\n\n        var beforeCaret = value.substring(0, result.startOffset);\n        var afterCaret = value.substring(result.startOffset);\n\n        var startOffset = 0, endOffset = 0;\n\n        if (beforeCaret) {\n            startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n        }\n\n        if (afterCaret) {\n            endOffset = afterCaret.search(boundary);\n        }\n\n        return startOffset && endOffset;\n    }\n};\n\nextend(Editor, {\n    SelectionUtils: SelectionUtils,\n    W3CRange: W3CRange,\n    RangeIterator: RangeIterator,\n    W3CSelection: W3CSelection,\n    RangeEnumerator: RangeEnumerator,\n    RestorePoint: RestorePoint,\n    Marker: Marker,\n    RangeUtils: RangeUtils\n});\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        Editor = kendo.ui.editor,\n        dom = Editor.Dom,\n        template = kendo.template,\n        RangeUtils = Editor.RangeUtils,\n        complexBlocks = [\"ul\", \"ol\", \"tbody\", \"thead\", \"table\"],\n        toolsToBeUpdated = [\n            \"bold\",\n            \"italic\",\n            \"underline\",\n            \"strikethrough\",\n            \"superscript\",\n            \"subscript\",\n            \"forecolor\",\n            \"backcolor\",\n            \"fontname\",\n            \"fontsize\",\n            \"createlink\",\n            \"unlink\",\n            \"autolink\",\n            \"addcolumnleft\",\n            \"addcolumnright\",\n            \"addrowabove\",\n            \"addrowbelow\",\n            \"deleterow\",\n            \"deletecolumn\",\n            \"mergecells\",\n            \"formatting\",\n            \"cleanformatting\" ],\n        IMMUTABALE = \"k-immutable\",\n        IMMUTABALE_MARKER_SELECTOR = \"[\" + IMMUTABALE + \"]\",\n        IMMUTABLE_SELECTOR = \"[contenteditable='false']\";\n\n    var rootCondition = function(node) {\n        return $(node).is(\"body,.k-editor\");\n    };\n\n    var immutable = function(node) {\n        return node.getAttribute && node.getAttribute(\"contenteditable\") == \"false\";\n    };\n\n    var immutableParent = function(node) {\n        return dom.closestBy(node, immutable, rootCondition);\n    };\n\n    var expandImmutablesIn = function(range) {\n        var startImmutableParent = immutableParent(range.startContainer);\n        var endImmutableParent = immutableParent(range.endContainer);\n\n        if (startImmutableParent || endImmutableParent) {\n            if (startImmutableParent) {\n                range.setStartBefore(startImmutableParent);\n            }\n            if (endImmutableParent) {\n                range.setEndAfter(endImmutableParent);\n            }\n        }\n    };\n\n    var immutablesContext = function(range) {\n        if (immutableParent(range.commonAncestorContainer)) {\n            return true;\n        } else if (immutableParent(range.startContainer) || immutableParent(range.endContainer)) {\n            var editableNodes = RangeUtils.editableTextNodes(range);\n            if (editableNodes.length === 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    var randomId = function(length) {\n        var result = '';\n        var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        for (var i = length || 10; i > 0; --i) {\n            result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n        }\n        return result;\n    };\n\n    var removeImmutables = function(root) {\n        var serializedImmutables = { empty: true }, nodeName, id, serialized;\n         $(root).find(IMMUTABLE_SELECTOR).each(function(i, node) {\n            nodeName = dom.name(node);\n            id = randomId();\n            serialized = \"<\" + nodeName + \" \" + IMMUTABALE + \"='\" + id + \"'></\" + nodeName + \">\";\n            serializedImmutables[id] = { node: node, style: $(node).attr(\"style\") };\n            serializedImmutables.empty = false;\n            $(node).replaceWith(serialized);\n        });\n\n        return serializedImmutables;\n    };\n\n    var restoreImmutables = function(root, serializedImmutables) {\n        var id, immutable;\n        $(root).find(IMMUTABALE_MARKER_SELECTOR).each(function(i, node) {\n            id = node.getAttribute(IMMUTABALE);\n            immutable = serializedImmutables[id];\n            $(node).replaceWith(immutable.node);\n            if (immutable.style != $(immutable.node).attr(\"style\")) {\n                $(immutable.node).removeAttr(\"style\").attr(\"style\", immutable.style);\n            }\n        });\n    };\n\n    var deletingKey = function(keyCode) {\n        var keys = kendo.keys;\n        return keyCode === keys.BACKSPACE || keyCode == keys.DELETE;\n    };\n    var updateToolOptions = function(tool) {\n        var options = tool ? tool.options : undefined$1;\n        if (options && options.finder) {\n            options.finder._initOptions({ immutables: true });\n        }\n    };\n\n    var Immutables = Class.extend({\n        init: function(editor) {\n            this.editor = editor;\n            this.serializedImmutables = {};\n            this.options = $.extend({}, editor && editor.options && editor.options.immutables);\n\n            var tools = kendo.ui.Editor.defaultTools;\n            updateToolOptions(tools.justifyLeft);\n            updateToolOptions(tools.justifyCenter);\n            updateToolOptions(tools.justifyRight);\n            updateToolOptions(tools.justifyFull);\n        },\n\n        serialize: function(node) {\n            var result = this._toHtml(node),\n                id;\n\n            if (result.indexOf(IMMUTABALE) === -1) {\n                id = this.randomId();\n                result = result.replace(/>/, ' ' + IMMUTABALE + '=\"' + id + '\">');\n            } else {\n                id = result.match(/k-immutable\\s*=\\s*['\"](.*)['\"]/)[1];\n            }\n\n            this.serializedImmutables[id] = node;\n            return result;\n        },\n\n        _toHtml: function(node) {\n            var serialization = this.options.serialization;\n            var serializationType = typeof serialization;\n            var nodeName;\n\n            switch (serializationType) {\n                case \"string\":\n                    return template(serialization)(node);\n                case \"function\":\n                    return serialization(node);\n                default:\n                    nodeName = dom.name(node);\n                    return \"<\" + nodeName + \"></\" + nodeName + \">\";\n            }\n        },\n\n        deserialize: function(node) {\n            var that = this;\n            var deserialization = this.options.deserialization;\n\n            $(IMMUTABALE_MARKER_SELECTOR, node).each(function() {\n                var id = this.getAttribute(IMMUTABALE);\n                var immutable = that.serializedImmutables[id];\n                if (kendo.isFunction(deserialization)) {\n                    deserialization(this, immutable);\n                }\n                $(this).replaceWith(immutable);\n            });\n\n            that.serializedImmutables = {};\n        },\n\n        randomId: function(length) {\n            return randomId(length);\n        },\n\n        keydown: function(e, range) {\n            var isDeleting = deletingKey(e.keyCode);\n            var shouldCancelEvent = (isDeleting && this._cancelDeleting(e, range)) ||\n                (!isDeleting && this._cancelTyping(e, range));\n\n            if (shouldCancelEvent) {\n                e.preventDefault();\n                return true;\n            }\n        },\n\n        _cancelTyping: function(e, range) {\n            var editor = this.editor;\n            var keyboard = editor.keyboard;\n\n            return range.collapsed && !keyboard.typingInProgress &&\n                keyboard.isTypingKey(e) && immutablesContext(range);\n        },\n\n        _cancelDeleting: function(e, range) {\n            var keys = kendo.keys;\n            var backspace = e.keyCode === keys.BACKSPACE;\n            var del = e.keyCode == keys.DELETE;\n\n            if (!backspace && !del) {\n                return false;\n            }\n            var cancelDeleting = false;\n            if (range.collapsed) {\n                if (immutablesContext(range)) {\n                    return true;\n                }\n                var immutable = this.nextImmutable(range, del);\n                if (immutable && backspace) {\n                    var closestSelectionLi = dom.closest(range.commonAncestorContainer, \"li\");\n                    if (closestSelectionLi) {\n                        var closestImmutableLi = dom.closest(immutable, \"li\");\n                        if (closestImmutableLi && closestImmutableLi !== closestSelectionLi) {\n                            return cancelDeleting;\n                        }\n                    }\n                }\n                if (immutable && !dom.tableCell(immutable)) {\n                    if (dom.parentOfType(immutable, complexBlocks) === dom.parentOfType(range.commonAncestorContainer, complexBlocks)) {\n                        while (immutable && immutable.parentNode.childNodes.length == 1) {\n                            immutable = immutable.parentNode;\n                        }\n                        if (dom.tableCell(immutable)) {\n                            return cancelDeleting;\n                        }\n                        this._removeImmutable(immutable, range);\n                    }\n                    cancelDeleting = true;\n                }\n            }\n            return cancelDeleting;\n        },\n\n        nextImmutable: function(range, forwards) {\n            var commonContainer = range.commonAncestorContainer;\n            if (dom.isBom(commonContainer) || ((forwards && RangeUtils.isEndOf(range, commonContainer)) || (!forwards && RangeUtils.isStartOf(range, commonContainer)))) {\n                var next = this._nextNode(commonContainer, forwards);\n                if (next && dom.isBlock(next) && !immutableParent(next)) {\n                    while (next && next.children && next.children[forwards ? 0 : next.children.length - 1]) {\n                        next = next.children[forwards ? 0 : next.children.length - 1];\n                    }\n                }\n                return immutableParent(next);\n            }\n        },\n\n        _removeImmutable: function(immutable, range) {\n            var editor = this.editor;\n            var startRestorePoint = new Editor.RestorePoint(range, editor.body);\n            dom.remove(immutable);\n            Editor._finishUpdate(editor, startRestorePoint);\n        },\n\n        _nextNode: function(node, forwards) {\n            var sibling = forwards ? \"nextSibling\" : \"previousSibling\";\n            var current = node, next;\n            while (current && !next && !dom.isChildOfBaseContainer(current)) {\n                next = current[sibling];\n                if (next && dom.isDataNode(next) && /^\\s|[\\ufeff]$/.test(next.nodeValue)) {\n                    current = next;\n                    next = current[sibling];\n                }\n                if (!next) {\n                    current = current.parentNode;\n                }\n            }\n            return next;\n        }\n    });\n\n    Immutables.immutable = immutable;\n    Immutables.immutableParent = immutableParent;\n    Immutables.expandImmutablesIn = expandImmutablesIn;\n    Immutables.immutablesContext = immutablesContext;\n    Immutables.toolsToBeUpdated = toolsToBeUpdated;\n    Immutables.removeImmutables = removeImmutables;\n    Immutables.restoreImmutables = restoreImmutables;\n\n    Editor.Immutables = Immutables;\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        editorNS = kendo.ui.editor,\n        dom = editorNS.Dom,\n        RestorePoint = editorNS.RestorePoint,\n        Marker = editorNS.Marker,\n        extend = $.extend;\n\nfunction finishUpdate(editor, startRestorePoint) {\n    var endRestorePoint = editor.selectionRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n    var command = new GenericCommand(startRestorePoint, endRestorePoint);\n    command.editor = editor;\n\n    editor.undoRedoStack.push(command);\n    editor._refreshTools();\n\n    return endRestorePoint;\n}\n\nvar Command = Class.extend({\n    init: function(options) {\n        this.options = options;\n        this.restorePoint = new RestorePoint(options.range, options.body, { immutables: options.immutables });\n        this.marker = new Marker();\n        this.formatter = options.formatter;\n    },\n\n    getRange: function() {\n        return this.restorePoint.toRange();\n    },\n\n    lockRange: function(expand) {\n        return this.marker.add(this.getRange(), expand);\n    },\n\n    releaseRange: function(range) {\n        this.marker.remove(range);\n        this.editor.selectRange(range);\n    },\n\n    undo: function() {\n        var point = this.restorePoint;\n        point.restoreHtml();\n        this.editor.selectRange(point.toRange());\n    },\n\n    redo: function() {\n        this.exec();\n    },\n\n    createDialog: function(content, options) {\n        var editor = this.editor;\n\n        return $(content).appendTo(document.body)\n            .kendoWindow(extend({}, editor.options.dialogOptions, options))\n            .closest(\".k-window\")\n            .addClass(\"k-editor-window\")\n            .toggleClass(\"k-rtl\", kendo.support.isRtl(editor.wrapper)).end();\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        this.formatter.editor = this.editor;\n        this.formatter.toggle(range);\n        this.releaseRange(range);\n    },\n\n    postExec: function() {\n        this.editor._handleSpaceAndNewLines();\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    expandImmutablesIn: function(range) {\n        if (this.immutables()) {\n            kendo.ui.editor.Immutables.expandImmutablesIn(range);\n            this.restorePoint = new RestorePoint(range, this.editor.body);\n        }\n    },\n\n    _actionButtonsTemplate: function({ messages, insertButtonIcon, cancelButtonIcon }) {\n        return '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n        kendo.html.renderButton(`<button class=\"k-dialog-insert\">${messages.dialogInsert}</button>`, { themeColor: \"primary\", icon: insertButtonIcon }) +\n        kendo.html.renderButton(`<button class=\"k-dialog-close\">${messages.dialogCancel}</button>`, { icon: cancelButtonIcon }) +\n    '</div>';\n    }\n});\n\nvar GenericCommand = Class.extend({\n    init: function(startRestorePoint, endRestorePoint) {\n        this.body = startRestorePoint.body;\n        this.startRestorePoint = startRestorePoint;\n        this.endRestorePoint = endRestorePoint;\n    },\n\n    redo: function() {\n        dom.removeChildren(this.body);\n\n        this.body.innerHTML = this.endRestorePoint.html;\n        this.editor.selectRange(this.endRestorePoint.toRange());\n    },\n\n    undo: function() {\n        dom.removeChildren(this.body);\n\n        this.body.innerHTML = this.startRestorePoint.html;\n        this.editor.selectRange(this.startRestorePoint.toRange());\n    }\n});\n\nextend(editorNS, {\n    _finishUpdate: finishUpdate,\n    Command: Command,\n    GenericCommand: GenericCommand\n});\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    dom = Editor.Dom;\n\nvar ViewHtmlCommand = Command.extend({\n    init: function(options) {\n        var cmd = this;\n        cmd.options = options;\n        Command.fn.init.call(cmd, options);\n        cmd.attributes = null;\n        cmd.async = true;\n    },\n\n    exec: function() {\n        var that = this,\n            editor = that.editor,\n            options = editor.options,\n            messages = editor.options.messages,\n            dialog = $(kendo.template(ViewHtmlCommand.template)(messages)).appendTo(document.body),\n            textarea = \".k-editor-textarea > textarea\",\n            content, comments;\n\n        options.serialization.immutables = editor.immutables;\n\n        comments = dom.getAllComments(editor.body);\n\n        content = EditorUtils.cacheComments(editor.value(), comments);\n        content = ViewHtmlCommand.indent(content);\n        content = EditorUtils.retrieveComments(content, comments);\n\n        options.serialization.immutables = undefined$1;\n\n        function apply(e) {\n            options.deserialization.immutables = editor.immutables;\n            editor.value(dialog.find(textarea).val());\n            options.deserialization.immutables = undefined$1;\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            editor.trigger(\"change\");\n        }\n\n        function close(e) {\n            e.preventDefault();\n\n            dialog.data(\"kendoWindow\").destroy();\n\n            if (editor.immutables) {\n                editor.immutables.serializedImmutables = {};\n            }\n\n            editor.focus();\n        }\n\n        let window = this.createDialog(dialog, {\n            title: messages.viewHtml,\n            _footerTemplate: ViewHtmlCommand._footerTemplate,\n            _footerMessages: messages,\n            width: 600,\n            height: 400,\n            resizable: true,\n            close: close,\n            visible: false\n        })\n            .find(textarea).val(content).end()\n            .data(\"kendoWindow\");\n\n            window.center().open();\n\n            window.wrapper.find(\".k-dialog-update\").on(\"click\", apply).end();\n            window.wrapper.find(\".k-dialog-close\").on(\"click\", close).end();\n        dialog.find(textarea).trigger(\"focus\");\n    }\n});\n\nextend(ViewHtmlCommand, {\n    template: () =>\n    '<div class=\"k-editor-dialog k-popup-edit-form k-viewhtml-dialog\">' +\n        '<span class=\"k-input k-textarea k-input-solid k-input-md k-rounded-md k-editor-textarea\"><textarea class=\"k-input-inner !k-overflow-auto !k-resize-none\"></textarea></span>' +\n    '</div>',\n    _footerTemplate: ({ dialogUpdate, dialogCancel }) =>\n    `<div class=\"k-actions k-actions-start k-actions-horizontal k-window-actions\">` +\n        kendo.html.renderButton(`<button class=\"k-dialog-update\">${kendo.htmlEncode(dialogUpdate)}</button>`, { themeColor: \"primary\", icon: \"check\" }) +\n        kendo.html.renderButton(`<button class=\"k-dialog-close\">${kendo.htmlEncode(dialogCancel)}</button>`, { icon: \"cancel-outline\" }) +\n    `</div>`,\n    indent: function(content) {\n        return content.replace(/<\\/(p|li|ul|ol|h[1-6]|table|tr|td|th)>/ig, \"</$1>\\n\")\n                      .replace(/<(ul|ol)([^>]*)><li/ig, \"<$1$2>\\n<li\")\n                      .replace(/<br \\/>/ig, \"<br />\\n\")\n                      .replace(/\\n$/, \"\");\n    }\n});\n\nkendo.ui.editor.ViewHtmlCommand = ViewHtmlCommand;\n\nEditor.EditorUtils.registerTool(\"viewHtml\", new Tool({ command: ViewHtmlCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    Command = Editor.Command,\n    EditorUtils = Editor.EditorUtils;\n\nvar FormatCommand = Command.extend({\n    init: function(options) {\n        options.formatter = options.formatter();\n        var finder = options.formatter.finder;\n        if (finder && EditorUtils.formatByName(\"immutable\", finder.format)) {\n            finder._initOptions({ immutables: options.immutables });\n            options.finder && options.finder._initOptions({ immutables: options.immutables });\n        }\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar FormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        var that = this;\n\n        return new FormatCommand(extend(commandArguments, {\n            formatter: that.options.formatter,\n            finder: that.options.finder\n        }));\n    },\n\n    update: function(ui, nodes) {\n        var isFormatted = this.options.finder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (toolbar && ui.getKendoToggleButton()) {\n            toolbar.toggle(ui, isFormatted);\n        }\n    }\n});\n\n$.extend(Editor, {\n    FormatCommand: FormatCommand,\n    FormatTool: FormatTool\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    Editor = kendo.ui.editor,\n    formats = kendo.ui.Editor.fn.options.formats,\n    Tool = Editor.Tool,\n    FormatTool = Editor.FormatTool,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    extend = $.extend,\n    registerTool = Editor.EditorUtils.registerTool,\n    registerFormat = Editor.EditorUtils.registerFormat,\n    MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n    KEYDOWN_NS = \"keydown.kendoEditor\",\n    KMARKER = \"k-marker\";\n\nvar InlineFormatFinder = Class.extend({\n    init: function(format) {\n        this.format = format;\n    },\n\n    numberOfSiblings: function(referenceNode) {\n        var textNodesCount = 0,\n            elementNodesCount = 0,\n            markerCount = 0,\n            parentNode = referenceNode.parentNode,\n            node;\n\n        for (node = parentNode.firstChild; node; node = node.nextSibling) {\n            if (node != referenceNode) {\n                if (node.className == KMARKER) {\n                    markerCount++;\n                } else if (node.nodeType == 3) {\n                    textNodesCount++;\n                } else {\n                    elementNodesCount++;\n                }\n            }\n        }\n\n        if (markerCount > 1 && parentNode.firstChild.className == KMARKER && parentNode.lastChild.className == KMARKER) {\n            // full node selection\n            return 0;\n        } else {\n            return elementNodesCount + textNodesCount;\n        }\n    },\n\n    findSuitable: function(sourceNode, skip) {\n        if (!skip && this.numberOfSiblings(sourceNode) > 0) {\n            return null;\n        }\n\n        var node = sourceNode.parentNode;\n        var tags = this.format[0].tags;\n\n        while (!dom.ofType(node, tags)) {\n            if (this.numberOfSiblings(node) > 0) {\n                return null;\n            }\n\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n\n    findFormat: function(sourceNode) {\n        var format = this.format,\n            attrEquals = dom.attrEquals,\n            i, len, node, tags, attributes;\n\n        for (i = 0, len = format.length; i < len; i++) {\n            node = sourceNode;\n            tags = format[i].tags;\n            attributes = format[i].attr;\n\n            if (node && dom.ofType(node, tags) && attrEquals(node, attributes)) {\n                return node;\n            }\n\n            while (node) {\n                node = dom.parentOfType(node, tags);\n                if (node && attrEquals(node, attributes)) {\n                    return node;\n                }\n            }\n        }\n\n        return null;\n    },\n\n    isFormatted: function(nodes) {\n        var i, len;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            if (this.findFormat(nodes[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n});\n\nvar InlineFormatter = Class.extend({\n    init: function(format, values) {\n        this.finder = new InlineFormatFinder(format);\n        this.attributes = extend({}, format[0].attr, values);\n        this.tag = format[0].tags[0];\n    },\n\n    wrap: function(node) {\n        return dom.wrap(node, dom.create(node.ownerDocument, this.tag, this.attributes));\n    },\n\n    activate: function(range, nodes) {\n        if (this.finder.isFormatted(nodes)) {\n            this.split(range);\n            this.remove(nodes);\n        } else {\n            this.apply(nodes);\n        }\n    },\n\n    toggle: function(range) {\n        var textNodes = this.immutables() ? RangeUtils.editableTextNodes : RangeUtils.textNodes;\n        var nodes = textNodes(range);\n\n        if (nodes.length > 0) {\n            this.activate(range, nodes);\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    apply: function(nodes) {\n        var formatNodes = [];\n        var i, l, node, formatNode;\n\n        if (nodes.length > 1) {\n            for (i = 0, l = nodes.length; i < l; i++) {\n                node = nodes[i];\n                formatNode = this.format(node, true);\n                formatNodes.push(formatNode);\n\n            }\n        } else {\n            node = nodes[0];\n            this.format(node, false);\n        }\n\n        this.consolidate(formatNodes);\n    },\n\n    format: function(node, outerMostInline) {\n        var formatNode = this.finder.findSuitable(node);\n        var attributes = this.attributes;\n        var styleAttr = attributes ? attributes.style || {} : {};\n\n        if (formatNode) {\n            if (dom.is(formatNode, \"font\")) {\n                if (styleAttr.color) {\n                    formatNode.removeAttribute(\"color\");\n                }\n                if (styleAttr.fontName) {\n                    formatNode.removeAttribute(\"face\");\n                }\n                if (styleAttr.fontSize) {\n                    formatNode.removeAttribute(\"size\");\n                }\n            }\n            dom.attr(formatNode, attributes);\n        } else {\n            if (outerMostInline) {\n                while (!dom.isBlock(node.parentNode) && node.parentNode.childNodes.length == 1 && node.parentNode.contentEditable !== 'true') {\n                    node = node.parentNode;\n                }\n            }\n\n            formatNode = this.wrap(node);\n        }\n\n        return formatNode;\n    },\n\n    remove: function(nodes) {\n        var i, l, formatNode;\n\n        for (i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n            if (formatNode) {\n                if (this.attributes && this.attributes.style) {\n                    dom.unstyle(formatNode, this.attributes.style);\n                    if (!formatNode.style.cssText && !formatNode.attributes[\"class\"]) {\n                        dom.unwrap(formatNode);\n                    }\n                } else {\n                    dom.unwrap(formatNode);\n                }\n            }\n        }\n    },\n\n    split: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        var l = nodes.length;\n        var i, formatNode;\n\n        if (l > 0) {\n            for (i = 0; i < l; i++) {\n                formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    RangeUtils.split(range, formatNode, true);\n                }\n            }\n        }\n    },\n\n    consolidate: function(nodes) {\n        var node, last;\n\n        while (nodes.length > 1) {\n            node = nodes.pop();\n            last = nodes[nodes.length - 1];\n\n            if (node.previousSibling && node.previousSibling.className == KMARKER) {\n                last.appendChild(node.previousSibling);\n            }\n\n            if (node.tagName == last.tagName &&\n                node.previousSibling == last &&\n                node.style.cssText == last.style.cssText &&\n                node.className === last.className) {\n\n                while (node.firstChild) {\n                    last.appendChild(node.firstChild);\n                }\n\n                dom.remove(node);\n            }\n        }\n    }\n});\n\nvar GreedyInlineFormatFinder = InlineFormatFinder.extend({\n    init: function(format, greedyProperty, fontAttr, defaultValue) {\n        this.format = format;\n        this.greedyProperty = greedyProperty;\n        this.fontAttr = fontAttr;\n        this.defaultValue = defaultValue;\n        InlineFormatFinder.fn.init.call(this, format);\n    },\n\n    getInlineCssValue: function(node) {\n        var attributes = node.attributes;\n        var trim = kendo.trim;\n        var i, l, attribute, name, attributeValue, css, pair, cssIndex, len;\n        var propertyAndValue, property, value;\n\n        if (!attributes) {\n            return;\n        }\n\n        for (i = 0, l = attributes.length; i < l; i++) {\n            attribute = attributes[i];\n            name = attribute.nodeName;\n            attributeValue = attribute.nodeValue;\n\n            if (attribute.specified && name == \"style\") {\n\n                css = trim(attributeValue || node.style.cssText).split(\";\");\n\n                for (cssIndex = 0, len = css.length; cssIndex < len; cssIndex++) {\n                    pair = css[cssIndex];\n                    if (pair.length) {\n                        propertyAndValue = pair.split(\":\");\n                        property = trim(propertyAndValue[0].toLowerCase());\n                        value = trim(propertyAndValue[1]);\n\n                        if (property != this.greedyProperty) {\n                            continue;\n                        }\n\n                        return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n                    }\n                }\n            }\n\n            if (this.fontAttr && attribute.specified && name == this.fontAttr) {\n                property = attribute.nodeValue;\n                value = attribute.nodeValue;\n\n                return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n            }\n        }\n    },\n\n    getFormatInner: function(node) {\n        var $node = $(dom.isDataNode(node) ? node.parentNode : node);\n        var parents = $node.parentsUntil(\"[contentEditable]\").addBack().toArray().reverse();\n        var i, len, value;\n\n        for (i = 0, len = parents.length; i < len; i++) {\n            value = this.greedyProperty == \"className\" ? parents[i].className : this.getInlineCssValue(parents[i]);\n\n            if (value) {\n                return value;\n            }\n        }\n\n        return this.defaultValue || \"inherit\";\n    },\n\n    getFormat: function(nodes) {\n        var result = this.getFormatInner(nodes[0]), i, len;\n\n        for (i = 1, len = nodes.length; i < len; i++) {\n            if (result != this.getFormatInner(nodes[i])) {\n                return \"\";\n            }\n        }\n\n        return result;\n    },\n\n    isFormatted: function(nodes) {\n        return this.getFormat(nodes) !== \"\";\n    }\n});\n\nvar GreedyInlineFormatter = InlineFormatter.extend({\n    init: function(format, values, greedyProperty) {\n        InlineFormatter.fn.init.call(this, format, values);\n\n        this.values = values;\n        this.finder = new GreedyInlineFormatFinder(format, greedyProperty);\n\n        if (greedyProperty) {\n            this.greedyProperty = kendo.toCamelCase(greedyProperty);\n        }\n\n    },\n\n    activate: function(range, nodes) {\n        var greedyProperty = this.greedyProperty;\n        var action = \"apply\";\n\n        this.split(range);\n\n        if (greedyProperty && this.values.style[greedyProperty] == \"inherit\") {\n            action = \"remove\";\n        }\n\n        this[action](nodes);\n    }\n});\n\nvar InlineFormatTool = FormatTool.extend({\n    init: function(options) {\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new InlineFormatFinder(options.format),\n            formatter: function() { return new InlineFormatter(options.format); }\n        }));\n    }\n});\n\nvar DelayedExecutionTool = Tool.extend({\n    update: function(ui, nodes) {\n        var list = ui.data(this.type);\n\n        list.close();\n        list.value(this.finder.getFormat(nodes));\n    }\n});\n\nvar FontTool = DelayedExecutionTool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        // IE has single selection hence we are using select box instead of combobox\n        this.type = \"kendoComboBox\";\n        this.format = [{ tags: [\"span\", \"font\"] }];\n        this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr);\n    },\n\n    command: function(commandArguments) {\n        var options = this.options,\n            format = this.format,\n            style = {};\n\n        return new Editor.FormatCommand(extend(commandArguments, {\n            formatter: function() {\n                style[options.domAttr] = commandArguments.value;\n\n                return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n            }\n        }));\n    },\n\n    initialize: function(ui, editor) {\n        var options = this.options,\n            toolName = options.name,\n            dataSource,\n            range,\n            widget = ui.data(\"kendoComboBox\"),\n            defaultValue = [];\n\n        if (!widget) {\n            return;\n        }\n\n        if (options.defaultValue) {\n           defaultValue = [{\n                text: editor.options.messages[options.defaultValue[0].text],\n                value: options.defaultValue[0].value\n           }];\n        }\n\n        dataSource = defaultValue.concat(options.items ? options.items : (editor.options[toolName] || [] ));\n        widget.setDataSource(dataSource);\n\n        widget.bind(\"change\", (e) => {\n            editor._range = range;\n            if (e.sender.value() !== \"\") {\n                Tool.exec(editor, toolName, e.sender.value());\n            }\n        });\n\n        widget.bind(\"close\", () => {\n            setTimeout(function() {\n                editor._deleteSavedRange();\n            },0);\n        });\n\n        widget.value(\"inherit\");\n\n        widget.wrapper.on(MOUSEDOWN_NS, \".k-select,.k-input-button,.k-input\", function() {\n            var newRange = editor.getRange();\n            range = editor._containsRange(newRange) ? newRange : range;\n        })\n        .on(KEYDOWN_NS, function(e) {\n            if (e.keyCode === kendo.keys.ENTER) {\n                editor._deleteSavedRange();\n                e.preventDefault();\n            }\n        });\n    }\n\n});\n\nvar ColorTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        this.format = [{ tags: [\"span\",\"font\"] }];\n        this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr);\n    },\n\n    options: {\n        palette: \"websafe\",\n        columns: 18\n    },\n\n    update: function() {\n        this._widget.close();\n    },\n\n    command: function(commandArguments) {\n        var options = this.options,\n            format = this.format,\n            style = {};\n\n        return new Editor.FormatCommand(extend(commandArguments, {\n            formatter: function() {\n                style[options.domAttr] = commandArguments.value;\n\n                return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n            }\n        }));\n    },\n\n    initialize: function(ui, editor) {\n        var that = this,\n            toolName = that.options.name,\n            component = this._widget = ui.getKendoColorPicker();\n\n        if (!component) {\n            return;\n        }\n\n        component.bind(\"change\", () => {\n            var color = component.value();\n\n            if (color) {\n                Tool.exec(editor, toolName, color);\n            }\n\n            delete that.storedRange;\n            delete that._inputFocused;\n\n            editor.focus();\n        });\n\n        component.bind(\"open\", () => {\n            that.storedRange = editor.getRange();\n\n            component._popup.element.on(MOUSEDOWN_NS, function(e) {\n                if (!$(e.target).is(\"input.k-color-value\")) {\n                    e.preventDefault();\n                }\n            });\n\n            if (!component._popup.element.is(\"[unselectable='on']\")) {\n                component._popup.element\n                    .attr({ unselectable: \"on\" })\n                    .find(\"*:not(input)\").attr(\"unselectable\", \"on\")\n                    .end().find(\"input\").on(\"focus\", function() {\n                        that._inputFocused = true;\n                    });\n            }\n\n            component._popup.one(\"activate\", () => {\n                component._popup.element.find(\".k-colorpalette\").trigger(\"focus\");\n            });\n        });\n\n        component.bind(\"close\", (e) => {\n            component._popup.element.off(MOUSEDOWN_NS);\n        });\n\n        component.unbind(\"activate\").bind(\"activate\", (e) => {\n            if (!component._value || component._value.toCssRgba() === \"rgba(255, 255, 255, 0)\") {\n                return;\n            }\n\n            component.trigger(\"change\");\n        });\n\n        component.wrapper\n            .attr({ unselectable: \"on\" })\n            .find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n\n        component.value(\"transparent\");\n    }\n});\n\nextend(Editor, {\n    InlineFormatFinder: InlineFormatFinder,\n    InlineFormatter: InlineFormatter,\n    DelayedExecutionTool: DelayedExecutionTool,\n    GreedyInlineFormatFinder: GreedyInlineFormatFinder,\n    GreedyInlineFormatter: GreedyInlineFormatter,\n    InlineFormatTool: InlineFormatTool,\n    FontTool: FontTool,\n    ColorTool: ColorTool\n});\n\nregisterFormat(\"bold\", [ { tags: [\"strong\", \"b\"] }, { tags: [\"span\"], attr: { style: { fontWeight: \"bold\" } } } ]);\nregisterTool(\"bold\", new InlineFormatTool({\n    key: \"B\",\n    ctrl: true,\n    format: formats.bold,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"italic\", [ { tags: [\"em\", \"i\"] }, { tags: [\"span\"], attr: { style: { fontStyle: \"italic\" } } } ]);\nregisterTool(\"italic\", new InlineFormatTool({\n    key: \"I\",\n    ctrl: true,\n    format: formats.italic,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"underline\", [ { tags: [\"span\"], attr: { style: { textDecoration: \"underline\" } } }, { tags: [\"u\"] } ]);\nregisterTool(\"underline\", new InlineFormatTool({\n    key: \"U\",\n    ctrl: true,\n    format: formats.underline,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"strikethrough\", [ { tags: [\"del\", \"strike\"] }, { tags: [\"span\"], attr: { style: { textDecoration: \"line-through\" } } } ]);\nregisterTool(\"strikethrough\", new InlineFormatTool({\n    format: formats.strikethrough,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"superscript\", [ { tags: [\"sup\"] } ]);\nregisterTool(\"superscript\", new InlineFormatTool({\n    format: formats.superscript,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterFormat(\"subscript\", [ { tags: [\"sub\"] } ]);\nregisterTool(\"subscript\", new InlineFormatTool({\n    format: formats.subscript,\n    ui: {\n        togglable: true\n    }\n}));\n\nregisterTool(\"foreColor\", new ColorTool({\n    cssAttr: \"color\",\n    fontAttr: \"color\",\n    domAttr: \"color\",\n    name: \"foreColor\",\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"ColorPicker\",\n        componentOptions: {\n            views: [\"palette\"],\n            toolIcon: \"foreground-color\",\n            palette: \"websafe\",\n            columns: 18,\n            preview: false,\n            input: false,\n            buttons: false,\n            commandOn: \"change\",\n            closeOnSelect: true\n        }\n    }\n}));\n\nregisterTool(\"backColor\", new ColorTool({\n    cssAttr: \"background-color\",\n    domAttr: \"backgroundColor\",\n    name: \"backColor\",\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"ColorPicker\",\n        componentOptions: {\n            views: [\"palette\"],\n            toolIcon: \"droplet\",\n            palette: \"websafe\",\n            columns: 18,\n            preview: false,\n            input: false,\n            buttons: false,\n            commandOn: \"change\",\n            closeOnSelect: true\n        }\n    }\n}));\n\nregisterTool(\"fontName\", new FontTool({\n    cssAttr: \"font-family\",\n    fontAttr: \"face\",\n    domAttr: \"fontFamily\",\n    name: \"fontName\",\n    defaultValue: [{ text: \"fontNameInherit\", value: \"inherit\" }],\n    ui: {\n        type: \"component\",\n        component: \"ComboBox\",\n        componentOptions: {\n            dataValueField: \"value\",\n            dataTextField: \"text\",\n            valuePrimitive: true\n        },\n        overflow: \"never\"\n    }\n}));\n\nregisterTool(\"fontSize\", new FontTool({\n    cssAttr: \"font-size\",\n    fontAttr: \"size\",\n    domAttr: \"fontSize\",\n    name: \"fontSize\",\n    defaultValue: [{ text: \"fontSizeInherit\", value: \"inherit\" }],\n    ui: {\n        type: \"component\",\n        component: \"ComboBox\",\n        componentOptions: {\n            dataValueField: \"value\",\n            dataTextField: \"text\",\n            valuePrimitive: true\n        },\n        overflow: \"never\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    encode = kendo.htmlEncode,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    InlineFormatter = Editor.InlineFormatter,\n    InlineFormatFinder = Editor.InlineFormatFinder,\n    textNodes = RangeUtils.textNodes,\n    editableTextNodes = RangeUtils.editableTextNodes,\n    registerTool = Editor.EditorUtils.registerTool,\n    keys = kendo.keys;\n\nvar HTTP_PROTOCOL = \"http://\";\nvar protocolRegExp = /^\\w*:\\/\\//;\nvar endLinkCharsRegExp = /[\\w\\/\\$\\-_\\*\\?]/i;\n\nvar LinkFormatFinder = Class.extend({\n    findSuitable: function(sourceNode) {\n        return dom.parentOfType(sourceNode, [\"a\"]);\n    }\n});\n\nvar LinkFormatter = Class.extend({\n    init: function() {\n        this.finder = new LinkFormatFinder();\n    },\n\n    apply: function(range, attributes) {\n        var nodes = this.immutables ? editableTextNodes(range) : textNodes(range);\n        var markers, doc, formatter, a, parent;\n\n        if (attributes.innerText) {\n            doc = RangeUtils.documentFromRange(range);\n            markers = RangeUtils.getMarkers(range);\n\n            range.deleteContents();\n            a = dom.create(doc, \"a\", attributes);\n            range.insertNode(a);\n\n            parent = a.parentNode;\n            if (dom.name(parent) == \"a\") {\n                dom.insertAfter(a, parent);\n            }\n\n            if (dom.emptyNode(parent)) {\n                dom.remove(parent);\n            }\n\n            // move range and markers after inserted link\n            var ref = a;\n            for (var i = 0; i < markers.length; i++) {\n                dom.insertAfter(markers[i], ref);\n                ref = markers[i];\n            }\n\n            if (markers.length) {\n                dom.insertBefore(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                dom.insertAfter(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                range.setStartBefore(markers[0]);\n                range.setEndAfter(markers[markers.length - 1]);\n            }\n        } else {\n            formatter = new InlineFormatter([{ tags: [\"a\"] }], attributes);\n            formatter.finder = this.finder;\n            formatter.apply(nodes);\n        }\n    }\n});\n\nvar UnlinkCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = /** @ignore */ {\n            toggle: function(range) {\n                var nodes = that.immutables() ? editableTextNodes(range) : textNodes(range);\n                new InlineFormatter([{ tags: [\"a\"] }]).remove(nodes);\n            }\n        };\n        this.options = options;\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar LinkCommand = Command.extend({\n    init: function(options) {\n        var that;\n        this.options = options;\n        Command.fn.init.call(this, options);\n        this.formatter = new LinkFormatter();\n\n        if (!options.url) {\n            this.attributes = null;\n            this.async = true;\n        } else {\n            this.exec = function() {\n                this.formatter.immutables = that && that.immutables();\n                this.formatter.apply(options.range, {\n                    href: options.url,\n                    innerText: options.text || options.url,\n                    target: options.target\n                });\n            };\n        }\n    },\n\n    exec: function() {\n        var messages = this.editor.options.messages;\n        this._initialText = \"\";\n        this._range = this.lockRange(true);\n        this.formatter.immutables = this.immutables();\n\n        var nodes = textNodes(this._range);\n        var a = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null;\n        var img = nodes.length && dom.name(nodes[0]) == \"img\";\n\n        var dialog = this.createDialog(\"<div/>\", {\n            title: messages.createLink,\n            minWidth: 340,\n            close: this._close.bind(this),\n            visible: false\n        }).data(\"kendoWindow\");\n\n        this._form = this._createForm(dialog);\n\n        if (a) {\n            this._range.selectNodeContents(a);\n            nodes = textNodes(this._range);\n        }\n\n        this._initialText = this.linkText(nodes);\n\n        dialog.wrapper\n            .find(\".k-dialog-insert\").on(\"click\", this._apply.bind(this)).end()\n            .find(\".k-dialog-close\").on(\"click\", this._close.bind(this)).end()\n            .find(\".k-form-field input\").on(\"keydown\", this._keydown.bind(this)).end()\n            .find(\"#k-editor-link-url\").val(this.linkUrl(a)).end()\n            .find(\"#k-editor-link-text\").val(this._initialText).end()\n            .find(\"#k-editor-link-title\").val(a ? a.title : \"\").end()\n            .find(\"#k-editor-link-target\").prop(\"checked\", a ? a.target == \"_blank\" : false).end()\n            .find(\".k-editor-link-text-row\").toggle(!img);\n\n        this._dialog = dialog.center().open();\n\n        $(\"#k-editor-link-url\", dialog.element).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-link-url\",\n                    label: encode(messages.linkWebAddress),\n                    title: encode(messages.linkWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-text\",\n                    label: encode(messages.linkText),\n                    title: encode(messages.linkText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-title\",\n                    label: encode(messages.linkToolTip),\n                    title: encode(messages.linkToolTip),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-link-target\",\n                    editorOptions: {\n                        label: encode(messages.linkOpenInNewWindow)\n                    },\n                    label: \"\",\n                    title: encode(messages.linkOpenInNewWindow),\n                    editor: \"CheckBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        formElement.find(\"#k-editor-link-text\").parents(\".k-form-field\").addClass(\"k-editor-link-text-row\");\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"link\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    },\n\n    _keydown: function(e) {\n        var keys = kendo.keys;\n\n        if (e.keyCode == keys.ENTER) {\n            this._apply(e);\n        } else if (e.keyCode == keys.ESC) {\n            this._close(e);\n        }\n    },\n\n    _apply: function(e) {\n        var element = this._dialog.element;\n        var href = $(\"#k-editor-link-url\", element).val();\n        var title, text, target;\n        var textInput = $(\"#k-editor-link-text\", element);\n\n        if (href && href != HTTP_PROTOCOL) {\n\n            if (href.indexOf(\"@\") > 0 && !/^(\\w+:)|(\\/\\/)/i.test(href)) {\n                href = \"mailto:\" + href;\n            }\n\n            this.attributes = { href: href };\n\n            title = $(\"#k-editor-link-title\", element).val();\n            if (title) {\n                this.attributes.title = title;\n            }\n\n            if (textInput.is(\":visible\")) {\n                text = kendo.trim(textInput.val());\n                if (!text && !this._initialText) {\n                    this.attributes.innerText = href;\n                } else if (text && (text !== this._initialText)) {\n                    this.attributes.innerText = dom.stripBom(text);\n                }\n            }\n\n            target = $(\"#k-editor-link-target\", element).is(\":checked\");\n            this.attributes.target = target ? \"_blank\" : null;\n\n            this.formatter.apply(this._range, this.attributes);\n        }\n\n        this._close(e);\n\n        if (this.change) {\n            this.change();\n        }\n    },\n\n    _close: function(e) {\n        e.preventDefault();\n        this._form.destroy();\n        this._dialog.destroy();\n\n        dom.windowFromDocument(RangeUtils.documentFromRange(this._range)).focus();\n\n        this.releaseRange(this._range);\n    },\n\n    linkUrl: function(anchor) {\n        if (anchor) {\n            // IE < 8 returns absolute url if getAttribute is not used\n            return anchor.getAttribute(\"href\", 2);\n        }\n\n        return HTTP_PROTOCOL;\n    },\n\n    linkText: function(nodes) {\n        var text = \"\";\n        var i;\n\n        for (i = 0; i < nodes.length; i++) {\n            text += nodes[i].nodeValue;\n        }\n\n        return dom.stripBom(text || \"\");\n    },\n\n    redo: function() {\n        var range = this.lockRange(true);\n\n        this.formatter.apply(range, this.attributes);\n        this.releaseRange(range);\n    }\n\n});\n\nvar AutoLinkCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.formatter = new LinkFormatter();\n    },\n\n    exec: function() {\n        var detectedLink = this.detectLink();\n        if (!detectedLink) {\n            return;\n        }\n\n        var range = this.getRange();\n        var linkMarker = new kendo.ui.editor.Marker();\n        var linkRange = range.cloneRange();\n\n        linkRange.setStart(detectedLink.start.node, detectedLink.start.offset);\n        linkRange.setEnd(detectedLink.end.node, detectedLink.end.offset);\n\n        range = this.lockRange();\n        linkMarker.add(linkRange);\n\n        this.formatter.apply(linkRange, {\n            href: this._ensureWebProtocol(detectedLink.text)\n        });\n\n        linkMarker.remove(linkRange);\n        this.releaseRange(range);\n    },\n\n    detectLink: function() {\n        var range = this.getRange();\n        var startNode = range.startContainer;\n        var startOffset = range.startOffset;\n        var prev = startNode.previousSibling;\n        if (!prev && ((dom.isBom(startNode) && !startNode.nextSibling) || (!startOffset && dom.isDataNode(startNode)))) {\n            startNode = startNode.parentNode;\n            startOffset = 0;\n        }\n        var traverser = new LeftDomTextTraverser({\n            node: startNode,\n            offset: startOffset,\n            cancelAtNode: function(node) { return node && dom.name(node) === \"a\"; }\n        });\n\n        var detection = new DomTextLinkDetection(traverser);\n        return detection.detectLink();\n    },\n\n    changesContent: function() {\n        return !!this.detectLink();\n    },\n\n    _ensureWebProtocol: function(linkText) {\n        var hasProtocol = this._hasProtocolPrefix(linkText);\n        return hasProtocol ? linkText : this._prefixWithWebProtocol(linkText);\n    },\n\n    _hasProtocolPrefix: function(linkText) {\n        return protocolRegExp.test(linkText);\n    },\n\n    _prefixWithWebProtocol: function(linkText) {\n        return HTTP_PROTOCOL + linkText;\n    }\n});\n\nvar UnlinkTool = Tool.extend({\n    init: function(options) {\n        this.options = options;\n        this.finder = new InlineFormatFinder([{ tags: [\"a\"] }]);\n\n        Tool.fn.init.call(this, $.extend(options, { command: UnlinkCommand }));\n    },\n\n    update: function(ui, nodes) {\n        var isLink = this.finder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n        if (isLink) {\n            toolbar.enable(ui, true);\n        } else {\n            toolbar.enable(ui, false);\n        }\n    }\n});\n\nvar DomTextLinkDetection = Class.extend({\n    init: function(traverser) {\n        this.traverser = traverser;\n        this.start = DomPos();\n        this.end = DomPos();\n        this.text = \"\";\n    },\n\n    detectLink: function() {\n        var node = this.traverser.node;\n        var offset = this.traverser.offset;\n        if (dom.isDataNode(node)) {\n            var text = node.data.substring(0, offset);\n            if (/\\s{2}$/.test(dom.stripBom(text))) {\n                return;\n            }\n        } else if (offset === 0) {//heuristic for new line\n            var p = dom.closestEditableOfType(node, dom.blockElements);\n            if (p && p.previousSibling) {\n                this.traverser.init({\n                    node: p.previousSibling\n                });\n            }\n        }\n\n        this.traverser.traverse(this._detectEnd.bind(this));\n        if (!this.end.blank()) {\n            this.traverser = this.traverser.clone(this.end);\n            this.traverser.traverse(this._detectStart.bind(this));\n\n            if (!this._isLinkDetected()) {\n                var puntuationOptions = this.traverser.extendOptions(this.start);\n                var puntuationTraverser = new RightDomTextTraverser(puntuationOptions);\n                puntuationTraverser.traverse(this._skipStartPuntuation.bind(this));\n                if (!this._isLinkDetected()) {\n                    this.start = DomPos();\n                }\n            }\n        }\n\n        if (this.start.blank()) {\n            return null;\n        } else {\n            return {\n                start: this.start,\n                end: this.end,\n                text: this.text\n            };\n        }\n    },\n\n    _isLinkDetected: function() {\n        return protocolRegExp.test(this.text) || /^w{3}\\./i.test(this.text);\n    },\n\n    _detectEnd: function(text, node) {\n        var i = lastIndexOfRegExp(text, endLinkCharsRegExp);\n        if (i > -1) {\n            this.end.node = node;\n            this.end.offset = i + 1;\n\n            return false;\n        }\n    },\n\n    _detectStart: function(text, node) {\n        var i = lastIndexOfRegExp(text, /\\s/);\n        var ii = i + 1;\n        this.text = text.substring(ii) + this.text;\n\n        this.start.node = node;\n        this.start.offset = ii;\n\n        if (i > -1) {\n            return false;\n        }\n    },\n\n    _skipStartPuntuation: function(text, node, offset) {\n        var i = indexOfRegExp(text, /\\w/);\n        var ii = i;\n        if (i === -1) {\n            ii = text.length;\n        }\n\n        this.text = this.text.substring(ii);\n        this.start.node = node;\n        this.start.offset = ii + (offset | 0);\n\n        if (i > -1) {\n            return false;\n        }\n    }\n});\n\nfunction lastIndexOfRegExp(str, search) {\n    var i = str.length;\n    while (i-- && !search.test(str[i])) {}\n\n    return i;\n}\nfunction indexOfRegExp(str, search) {\n    var r = search.exec(str);\n\n    return r ? r.index : -1;\n}\n\nvar DomPos = function() {\n    return {\n        node: null,\n        offset: null,\n        blank: function() {\n            return this.node === null && this.offset === null;\n        }\n    };\n};\n\nvar DomTextTraverser = Class.extend({\n    init: function(options) {\n        this.node = options.node;\n        this.offset = options.offset === undefined$1 ? (dom.isDataNode(this.node) && this.node.length) || 0 : options.offset;\n        this.cancelAtNode = options.cancelAtNode || this.cancelAtNode || $.noop;\n    },\n\n    traverse: function(callback) {\n        if (!callback) {\n            return;\n        }\n        this.cancel = false;\n        this._traverse(callback, this.node, this.offset);\n    },\n\n    _traverse: function(callback, node, offset) {\n        if (!node || this.cancel) {\n            return;\n        }\n        if (node.nodeType === 3) {\n            var text = node.data;\n            if (offset !== undefined$1) {\n                text = this.subText(text, offset);\n            }\n            this.cancel = (callback(text, node, offset) === false);\n        }\n        else {\n            var edgeNode = this.edgeNode(node);\n            this.cancel = this.cancel || this.cancelAtNode(edgeNode);\n            return this._traverse(callback, edgeNode);\n        }\n\n        var next = this.next(node);\n        if (!next) {\n            var parent = node.parentNode;\n            while (!next && dom.isInline(parent)) {\n                next = this.next(parent);\n                parent = parent.parentNode;\n            }\n        }\n        this.cancel = this.cancel || this.cancelAtNode(next);\n        this._traverse(callback, next);\n    },\n\n    extendOptions: function(o) {\n        return $.extend({\n            node: this.node,\n            offset: this.offset,\n            cancelAtNode: this.cancelAtNode\n        }, o || {});\n    },\n\n    edgeNode: function(node) {},\n    next: function(node) {},\n    subText: function(text, offset) {}\n\n});\n\nvar LeftDomTextTraverser = DomTextTraverser.extend({\n    subText: function(text, splitIndex) {\n        return text.substring(0, splitIndex);\n    },\n\n    next: function(node) {\n        return node.previousSibling;\n    },\n\n    edgeNode: function(node) {\n        return node.lastChild;\n    },\n\n    clone: function(options) {\n        var o = this.extendOptions(options);\n        return new LeftDomTextTraverser(o);\n    }\n});\n\nvar RightDomTextTraverser = DomTextTraverser.extend({\n    subText: function(text, splitIndex) {\n        return text.substring(splitIndex);\n    },\n\n    next: function(node) {\n        return node.nextSibling;\n    },\n\n    edgeNode: function(node) {\n        return node.firstChild;\n    },\n\n    clone: function(options) {\n        var o = this.extendOptions(options);\n        return new RightDomTextTraverser(o);\n    }\n});\n\nextend(kendo.ui.editor, {\n    LinkFormatFinder: LinkFormatFinder,\n    LinkFormatter: LinkFormatter,\n    UnlinkCommand: UnlinkCommand,\n    LinkCommand: LinkCommand,\n    AutoLinkCommand: AutoLinkCommand,\n    UnlinkTool: UnlinkTool,\n    DomTextLinkDetection: DomTextLinkDetection,\n    LeftDomTextTraverser: LeftDomTextTraverser,\n    RightDomTextTraverser: RightDomTextTraverser\n});\n\nregisterTool(\"createLink\", new Tool({ key: \"K\", ctrl: true, command: LinkCommand }));\nregisterTool(\"unlink\", new UnlinkTool({ key: \"K\", ctrl: true, shift: true, ui: { enable: false } }));\nregisterTool(\"autoLink\", new Tool({ key: [keys.ENTER, keys.SPACEBAR], keyPressCommand: true, command: AutoLinkCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    formats = kendo.ui.Editor.fn.options.formats,\n    dom = Editor.Dom,\n    FormatTool = Editor.FormatTool,\n    EditorUtils = Editor.EditorUtils,\n    registerTool = EditorUtils.registerTool,\n    registerFormat = EditorUtils.registerFormat,\n    RangeUtils = Editor.RangeUtils;\n\nvar BlockFormatFinder = Class.extend({\n    init: function(format) {\n        this.format = format;\n    },\n\n    contains: function(node, children) {\n        var i, len, child;\n\n        for (i = 0, len = children.length; i < len; i++) {\n            child = children[i];\n            if (!child || !dom.isAncestorOrSelf(node, child)) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    findSuitable: function(nodes) {\n        var format = this.format,\n            suitable = [],\n            i, len, candidate;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            for (var f = format.length - 1; f >= 0; f--) {\n                candidate = dom.ofType(nodes[i], format[f].tags) ? nodes[i] : dom.closestEditableOfType(nodes[i], format[f].tags);\n                if (candidate) {\n                    break;\n                }\n            }\n\n            if (!candidate || candidate.contentEditable === 'true') {\n                return [];\n            }\n\n            if ($.inArray(candidate, suitable) < 0) {\n                suitable.push(candidate);\n            }\n        }\n\n        this._resolveListsItems(suitable);\n\n        for (i = 0, len = suitable.length; i < len; i++) {\n            if (this.contains(suitable[i], suitable)) {\n                return [suitable[i]];\n            }\n        }\n\n        return suitable;\n    },\n    _resolveListsItems: function(nodes) {\n        var i, node, wrapper;\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            wrapper = dom.is(node, \"li\") ? node : dom.wrapper(node);\n            wrapper = wrapper && dom.list(wrapper) ? wrapper.children[0] : wrapper;\n            if (dom.is(wrapper, \"li\")) {\n                nodes[i] = wrapper;\n            }\n        }\n    },\n\n    findFormat: function(sourceNode, until) {\n        var format = this.format,\n            i, len, node, tags, attributes;\n        var editableParent = dom.editableParent(sourceNode);\n        var immutables = this.options && this.options.immutables;\n        var ImmutablesNS = Editor.Immutables;\n\n        for (i = 0, len = format.length; i < len; i++) {\n            node = sourceNode;\n            tags = format[i].tags;\n            attributes = format[i].attr;\n\n            if (immutables && tags && tags[0] == \"immutable\") {\n                var immutable = ImmutablesNS.immutableParent(node);\n                if (immutable && dom.attrEquals(immutable, attributes)) {\n                    return node;\n                }\n            }\n\n            while (node && dom.isAncestorOf(editableParent, node)) {\n                if (dom.ofType(node, tags) && dom.attrEquals(node, attributes)) {\n                    return node;\n                }\n\n                if (until && until(node)) {\n                    break;\n                }\n\n                node = node.parentNode;\n            }\n        }\n        return null;\n    },\n\n    getFormat: function(nodes) {\n        var that = this,\n            findFormat = function(node) {\n                    return that.findFormat(dom.isDataNode(node) ? node.parentNode : node);\n                },\n            result = findFormat(nodes[0]),\n            i, len;\n\n        if (!result) {\n            return \"\";\n        }\n\n        for (i = 1, len = nodes.length; i < len; i++) {\n            if (result != findFormat(nodes[i])) {\n                return \"\";\n            }\n        }\n\n        return result.nodeName.toLowerCase();\n    },\n\n    isFormatted: function(nodes, until) {\n        for (var i = 0, len = nodes.length; i < len; i++) {\n            if (!this.findFormat(nodes[i], until)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n});\n\nvar BlockFormatter = Class.extend({\n    init: function(format, values) {\n        this.format = format;\n        this.values = values;\n        this.finder = new BlockFormatFinder(format);\n    },\n\n    wrap: function(tag, attributes, nodes) {\n\n        var commonAncestor = nodes.length == 1 ? dom.blockParentOrBody(nodes[0]) : dom.commonAncestor.apply(null, nodes);\n\n        if (dom.isInline(commonAncestor)) {\n            commonAncestor = dom.blockParentOrBody(commonAncestor);\n        }\n\n        var ancestors = dom.significantChildNodes(commonAncestor),\n            position = dom.findNodeIndex(ancestors[0]),\n            wrapper = dom.create(commonAncestor.ownerDocument, tag, attributes),\n            i, ancestor;\n\n        for (i = 0; i < ancestors.length; i++) {\n            ancestor = ancestors[i];\n            if (dom.isBlock(ancestor)) {\n                dom.attr(ancestor, attributes);\n\n                if (wrapper.childNodes.length) {\n                    dom.insertBefore(wrapper, ancestor);\n                    wrapper = wrapper.cloneNode(false);\n                }\n\n                position = dom.findNodeIndex(ancestor) + 1;\n\n                continue;\n            }\n\n            wrapper.appendChild(ancestor);\n        }\n\n        if (wrapper.firstChild) {\n            dom.insertAt(commonAncestor, wrapper, position);\n        }\n    },\n\n    apply: function(nodes) {\n        var format, values = this.values;\n\n        function attributes(format) {\n            return extend({}, format && format.attr, values);\n        }\n\n        this._handleImmutables(nodes, true);\n\n        var images = dom.filter(\"img\", nodes);\n        var imageFormat = EditorUtils.formatByName(\"img\", this.format);\n        var imageAttributes = attributes(imageFormat);\n        $.each(images, function() {\n            dom.attr(this, imageAttributes);\n        });\n\n        // only images were selected, no need to wrap\n        if (images.length == nodes.length) {\n            return;\n        }\n\n        var nonImages = dom.filter(\"img\", nodes, true);\n        var formatNodes = this.finder.findSuitable(nonImages);\n\n        if (formatNodes.length) {\n            for (var i = 0, len = formatNodes.length; i < len; i++) {\n                format = EditorUtils.formatByName(dom.name(formatNodes[i]), this.format);\n                dom.attr(formatNodes[i], attributes(format));\n            }\n        } else {\n            format = this.format[0];\n            this.wrap(format.tags[0], attributes(format), nonImages);\n        }\n    },\n\n    _handleImmutables: function(nodes, applyFormatting) {\n        if (!this.immutables()) {\n            return;\n        }\n        var immutableFormat = EditorUtils.formatByName(\"immutable\", this.format);\n        if (!immutableFormat) {\n            return;\n        }\n        var ImmutablesNS = Editor.Immutables;\n        var l = nodes.length - 1;\n        for (var i = l; i >= 0; i--) {\n            var immutableParent = ImmutablesNS.immutableParent(nodes[i]);\n            if (!immutableParent) {\n                continue;\n            }\n            if (immutableParent !== nodes[i + 1]) {\n                if (applyFormatting) {\n                    dom.attr(immutableParent, immutableFormat.attr);\n                } else {\n                    dom.unstyle(immutableParent, immutableFormat.attr.style);\n                }\n            }\n            nodes.splice(i, 1);\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    remove: function(nodes) {\n        var i, l, formatNode, namedFormat, name;\n\n        this._handleImmutables(nodes, false);\n\n        for (i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n            if (formatNode) {\n                name = dom.name(formatNode);\n                namedFormat = EditorUtils.formatByName(name, this.format);\n                if (namedFormat.attr.style) {\n                    dom.unstyle(formatNode, namedFormat.attr.style);\n                }\n                if (namedFormat.attr.className) {\n                    dom.removeClass(formatNode, namedFormat.attr.className);\n                }\n            }\n        }\n    },\n\n    toggle: function(range) {\n        var that = this,\n            nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n        if (that.finder.isFormatted(nodes)) {\n            that.remove(nodes);\n        } else {\n            that.apply(nodes);\n        }\n    }\n});\n\nvar GreedyBlockFormatter = Class.extend({\n    init: function(format, values) {\n        var that = this;\n        that.format = format;\n        that.values = values;\n        that.finder = new BlockFormatFinder(format);\n    },\n\n    apply: function(nodes) {\n        var format = this.format;\n        var blocks = dom.blockParents(nodes);\n        var formatTag = format[0].tags[0];\n        var i, len, list, formatter, range;\n        var element;\n        var tagName;\n        var block;\n        var immutalbeParent;\n\n        if (blocks.length) {\n            for (i = 0, len = blocks.length; i < len; i++) {\n                block = blocks[i];\n                immutalbeParent = this.immutables() && Editor.Immutables.immutableParent(block);\n\n                if (!immutalbeParent) {\n                    tagName = dom.name(block);\n\n                    if (tagName == \"li\") {\n                        list = block.parentNode;\n                        formatter = new Editor.ListFormatter(list.nodeName.toLowerCase(), formatTag);\n                        range = this.editor.createRange();\n                        range.selectNode(blocks[i]);\n                        formatter.toggle(range);\n                    } else if (formatTag && (tagName == \"td\" || block.attributes.contentEditable)) {\n                        new BlockFormatter(format, this.values).apply(block.childNodes);\n                    } else {\n                        element = dom.changeTag(block, formatTag);\n                        dom.attr(element, format[0].attr);\n                    }\n                }\n            }\n        } else {\n            var blockFormatter = new BlockFormatter(format, this.values);\n            blockFormatter.editor = this.editor;\n            blockFormatter.apply(nodes);\n        }\n    },\n\n    toggle: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n        if (!nodes.length) {\n            range.selectNodeContents(range.commonAncestorContainer);\n            nodes = RangeUtils.textNodes(range);\n            if (!nodes.length) {\n                nodes = dom.significantChildNodes(range.commonAncestorContainer);\n            }\n        }\n\n        this.apply(nodes);\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    }\n});\n\nvar BlockFormatTool = FormatTool.extend({ init: function(options) {\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new BlockFormatFinder(options.format),\n            formatter: function() {\n                return new BlockFormatter(options.format);\n            }\n        }));\n    }\n});\n\nextend(Editor, {\n    BlockFormatFinder: BlockFormatFinder,\n    BlockFormatter: BlockFormatter,\n    GreedyBlockFormatter: GreedyBlockFormatter,\n    BlockFormatTool: BlockFormatTool\n});\n\nvar listElements = [\"ul\",\"ol\",\"li\"];\n\nregisterFormat(\"justifyLeft\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"left\" } } },\n    { tags: [\"img\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"left\", listStylePosition: \"\" } } }\n]);\nregisterTool(\"justifyLeft\", new BlockFormatTool({\n    format: formats.justifyLeft,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyCenter\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"center\" } } },\n    { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"center\", listStylePosition: \"inside\" } } }\n]);\nregisterTool(\"justifyCenter\", new BlockFormatTool({\n    format: formats.justifyCenter,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyRight\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"right\" } } },\n    { tags: [\"img\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"right\", listStylePosition: \"inside\" } } }\n]);\nregisterTool(\"justifyRight\", new BlockFormatTool({\n    format: formats.justifyRight,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\nregisterFormat(\"justifyFull\", [\n    { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"justify\" } } },\n    { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n    { tags: listElements, attr: { style: { textAlign: \"justify\", listStylePosition: \"\" } } }\n]);\nregisterTool(\"justifyFull\", new BlockFormatTool({\n    format: formats.justifyFull,\n    ui: {\n        togglable: true,\n        group: \"align\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    FormatTool = Editor.FormatTool,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    textNodes = RangeUtils.textNodes,\n    registerTool = Editor.EditorUtils.registerTool;\n\nvar ListFormatFinder = BlockFormatFinder.extend({\n    init: function(options) {\n        this.tag = options.tag;\n        this.attr = options.attr;\n        this.altAttr = options.altAttr;\n\n        var tags = this.tags = [this.tag == 'ul' ? 'ol' : 'ul', this.tag];\n        var format = [{ tags: tags, attr: this.attr }];\n\n        if (this.altAttr) {\n            format.push({\n                tags: tags,\n                attr: this.altAttr\n            });\n        }\n\n        BlockFormatFinder.fn.init.call(this, format);\n    },\n\n    matchesType: function(node) {\n        return dom.attrEquals(node, this.attr) || (this.altAttr && dom.attrEquals(node, this.altAttr));\n    },\n\n    isList: function(node) {\n        return dom.list(node);\n    },\n\n    isFormatted: function(nodes) {\n        var formatNodes = [];\n        var formatNode, i;\n\n        for (i = 0; i < nodes.length; i++) {\n            formatNode = this.findFormat(nodes[i], this.isList);\n\n            if (formatNode && dom.name(formatNode) == this.tag && this.matchesType(formatNode)) {\n                formatNodes.push(formatNode);\n            }\n        }\n\n        if (formatNodes.length < 1) {\n            return false;\n        }\n\n        if (formatNodes.length != nodes.length) {\n            return false;\n        }\n\n        // check if sequential lists are selected\n        for (i = 0; i < formatNodes.length; i++) {\n            if (formatNodes[i].parentNode != formatNode.parentNode) {\n                break;\n            }\n\n            if (formatNodes[i] != formatNode) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    findSuitable: function(nodes) {\n        var candidate = this.findFormat(nodes[0], this.isList);\n\n        if (candidate && dom.name(candidate) == this.tag) {\n            return candidate;\n        }\n\n        return null;\n    }\n\n});\n\nvar ListFormatter = Class.extend({\n    init: function(options, unwrapTag) {\n        var that = this;\n        options = $.isPlainObject(options) ? options : { tag: options, attr: null };\n        that.tag = options.tag;\n        that.attr = options.attr;\n        that.finder = new ListFormatFinder(options);\n        that.unwrapTag = unwrapTag;\n    },\n\n    isList: function(node) {\n        return dom.list(node);\n    },\n\n    immutables: function() {\n        return this.editor && !!this.editor.options.immutables;\n    },\n\n    wrap: function(list, nodes) {\n        var li = dom.create(list.ownerDocument, \"li\"),\n            i, node,\n            isImmutable = this.immutables() ? Editor.Immutables.immutable : $.noop;\n\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n\n            if (dom.is(node, 'li')) {\n                list.appendChild(node);\n                continue;\n            }\n\n            if (this.isList(node)) {\n                while (node.firstChild) {\n                    list.appendChild(node.firstChild);\n                }\n                continue;\n            }\n\n            if (dom.is(node, \"td\")) {\n                while (node.firstChild) {\n                    li.appendChild(node.firstChild);\n                }\n                list.appendChild(li);\n                node.appendChild(list);\n                list = list.cloneNode(false);\n                li = li.cloneNode(false);\n                continue;\n            }\n\n            li.appendChild(node);\n\n            if (dom.isBlock(node)) {\n                list.appendChild(li);\n                if (!isImmutable(node)) {\n                    dom.unwrap(node);\n                }\n                li = li.cloneNode(false);\n            }\n        }\n\n        if (li.firstChild) {\n            list.appendChild(li);\n        }\n    },\n\n    containsAny: function(parent, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (dom.isAncestorOrSelf(parent, nodes[i])) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n\n    suitable: function(candidate, nodes) {\n        if (candidate.className == \"k-marker\") {\n            var sibling = candidate.nextSibling;\n\n            if (sibling && dom.isBlock(sibling)) {\n                return false;\n            }\n\n            sibling = candidate.previousSibling;\n\n            if (sibling && dom.isBlock(sibling)) {\n                return false;\n            }\n        }\n\n        return this.containsAny(candidate, nodes) || dom.isInline(candidate) || candidate.nodeType == 3;\n    },\n\n    _parentLists: function(node) {\n        var editable = dom.closestEditable(node);\n\n        return $(node).parentsUntil(editable, \"ul,ol\");\n    },\n\n    split: function(range) {\n        var nodes = textNodes(range);\n        var start, end, parents;\n\n        if (nodes.length) {\n            start = dom.parentOfType(nodes[0], ['li']);\n            end = dom.parentOfType(nodes[nodes.length - 1], ['li']);\n            range.setStartBefore(start);\n            range.setEndAfter(end);\n\n            for (var i = 0, l = nodes.length; i < l; i++) {\n                var formatNode = this.finder.findFormat(nodes[i]);\n                if (formatNode) {\n                    parents = this._parentLists(formatNode);\n                    if (parents.length) {\n                        RangeUtils.split(range, parents.last()[0], true);\n                    } else {\n                        RangeUtils.split(range, formatNode, true);\n                    }\n                }\n            }\n        }\n    },\n\n    merge: function(tag, formatNode) {\n        var prev = formatNode.previousSibling, next;\n\n        while (prev && (prev.className == \"k-marker\" || (prev.nodeType == 3 && dom.isWhitespace(prev)))) {\n            prev = prev.previousSibling;\n        }\n\n        // merge with previous list\n        if (prev && dom.name(prev) == tag && this.finder.matchesType(prev)) {\n            while (formatNode.firstChild) {\n                prev.appendChild(formatNode.firstChild);\n            }\n            dom.remove(formatNode);\n            formatNode = prev;\n        }\n\n        next = formatNode.nextSibling;\n        while (next && (next.className == \"k-marker\" || (next.nodeType == 3 && dom.isWhitespace(next)))) {\n            next = next.nextSibling;\n        }\n\n        // merge with next list\n        if (next && dom.name(next) == tag && this.finder.matchesType(next)) {\n            while (formatNode.lastChild) {\n                next.insertBefore(formatNode.lastChild, next.firstChild);\n            }\n            dom.remove(formatNode);\n        }\n    },\n\n    breakable: function(node) {\n        return (\n            node != node.ownerDocument.body &&\n            !/table|tbody|thead|tr|td/.test(dom.name(node)) &&\n            !node.attributes.contentEditable\n        );\n    },\n\n    findSuitableNode: function(nodes) {\n        var that = this,\n            finder = that.finder,\n            tag = that.tag,\n            formatNode;\n\n        formatNode = finder.findSuitable(nodes);\n\n        if (!formatNode) {\n            // Find the opposite tag\n            finder = new ListFormatFinder({ tag: tag == \"ul\" ? \"ol\" : \"ul\" });\n            formatNode = finder.findSuitable(nodes);\n        }\n\n        if (!formatNode) {\n            // Find the same tag\n            finder = new ListFormatFinder({ tag: tag });\n            formatNode = finder.findSuitable(nodes);\n            formatNode = formatNode && that.finder.matchesType(formatNode) ? null : formatNode;\n        }\n\n\n        return formatNode;\n    },\n\n    applyOnSection: function(section, nodes) {\n        var tag = this.tag;\n        var attr = this.attr;\n        var commonAncestor = dom.closestSplittableParent(nodes);\n\n        var ancestors = [];\n        var formatNode = this.findSuitableNode(nodes);\n\n        var childNodes;\n\n        if (/table|tbody|thead/.test(dom.name(commonAncestor))) {\n            childNodes = $.map(nodes, function(node) {\n                return dom.parentOfType(node, [\"td\"]);\n            });\n        } else {\n            childNodes = dom.significantChildNodes(commonAncestor);\n\n            if ($.grep(childNodes, dom.isBlock).length) {\n                childNodes = $.grep(childNodes, (function(node) {\n                    return this.containsAny(node, nodes);\n                }).bind(this));\n            }\n\n            if (!childNodes.length) {\n                childNodes = nodes;\n            }\n        }\n\n        function pushAncestor() {\n            ancestors.push(this);\n        }\n\n        for (var i = 0; i < childNodes.length; i++) {\n            var child = childNodes[i];\n            var suitable = (!formatNode || !dom.isAncestorOrSelf(formatNode, child)) && this.suitable(child, nodes);\n\n            if (!suitable) {\n                continue;\n            }\n\n            if (formatNode && this.isList(child)) {\n                // merging lists\n                $.each(child.children, pushAncestor);\n                dom.remove(child);\n            } else {\n                ancestors.push(child);\n            }\n        }\n\n        if (ancestors.length == childNodes.length && this.breakable(commonAncestor)) {\n            ancestors = [commonAncestor];\n        }\n\n        if (!formatNode) {\n            formatNode = dom.create(commonAncestor.ownerDocument, tag, attr);\n            if (dom.isBlock(ancestors[0])) {\n                dom.mergeAttributes(ancestors[0], formatNode);\n            }\n            dom.insertBefore(formatNode, ancestors[0]);\n        }\n\n        this.wrap(formatNode, ancestors);\n\n        while (dom.isBom(formatNode.nextSibling)) {\n            dom.remove(formatNode.nextSibling);\n        }\n\n        if (!this.finder.matchesType(formatNode)) {\n            formatNode.removeAttribute(\"type\");\n            formatNode.style.listStyleType = \"\";\n            dom.mergeAttributes(dom.create(commonAncestor.ownerDocument, tag, attr), formatNode, true);\n        }\n\n        if (formatNode && formatNode.getAttribute(\"type\") === \"\") {\n            formatNode.removeAttribute(\"type\");\n        }\n\n        if (!dom.is(formatNode, tag)) {\n            dom.changeTag(formatNode, tag);\n        }\n\n        this.merge(tag, formatNode);\n    },\n\n    apply: function(nodes) {\n        var i = 0,\n            sections = [],\n            lastSection,\n            lastNodes,\n            section,\n            node,\n            l = nodes.length,\n            immutableParent = this.immutables() ? Editor.Immutables.immutableParent : $.noop;\n\n        function addLastSection() {\n            if (lastSection) {\n                sections.push({\n                    section: lastSection,\n                    nodes: lastNodes\n                });\n            }\n        }\n\n        // split nodes into sections that need to be different lists\n        for (i = 0; i < l; i++) {\n            node = immutableParent(nodes[i]) || nodes[i];\n            section = dom.closestEditable(node, [\"td\",\"th\",\"body\"]);\n            if (!lastSection || section != lastSection) {\n                addLastSection();\n                lastNodes = [node];\n                lastSection = section;\n            } else {\n                lastNodes.push(node);\n            }\n        }\n\n        addLastSection();\n\n        for (i = 0; i < sections.length; i++) {\n            this.applyOnSection(sections[i].section, sections[i].nodes);\n        }\n    },\n\n    unwrap: function(ul) {\n        var fragment = ul.ownerDocument.createDocumentFragment(),\n            unwrapTag = this.unwrapTag,\n            parents,\n            li,\n            p,\n            child;\n\n        for (li = ul.firstChild; li; li = li.nextSibling) {\n            p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n\n            while (li.firstChild) {\n                child = li.firstChild;\n\n                if (dom.isBlock(child)) {\n\n                    if (p.firstChild) {\n                        fragment.appendChild(p);\n                        p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n                    }\n\n                    fragment.appendChild(child);\n                } else {\n                    p.appendChild(child);\n                }\n            }\n\n            if (p.firstChild) {\n                fragment.appendChild(p);\n            }\n        }\n\n        parents = this._parentLists(ul);\n\n        if (parents[0]) {\n            dom.insertAfter(fragment, parents.last()[0]);\n            parents.last().remove();\n        } else {\n            dom.insertAfter(fragment, ul);\n        }\n\n        dom.remove(ul);\n    },\n\n    remove: function(nodes) {\n        var formatNode;\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            formatNode = this.finder.findFormat(nodes[i]);\n\n            if (formatNode) {\n                this.unwrap(formatNode);\n            }\n        }\n    },\n\n    toggle: function(range) {\n        var that = this,\n            nodes = textNodes(range),\n            ancestor = range.commonAncestorContainer;\n\n        if (!nodes.length) {\n            range.selectNodeContents(ancestor);\n            nodes = textNodes(range);\n            if (!nodes.length) {\n                var text = ancestor.ownerDocument.createTextNode(\"\");\n                range.startContainer.appendChild(text);\n                nodes = [text];\n                range.selectNode(text.parentNode);\n            }\n        }\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        if (that.finder.isFormatted(nodes)) {\n            that.split(range);\n            that.remove(nodes);\n        } else {\n            that.apply(nodes);\n        }\n    }\n\n});\n\nvar ListCommand = Command.extend({\n    init: function(options) {\n        options.formatter = new ListFormatter({ tag: options.tag, attr: options.attr });\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar ListTool = FormatTool.extend({\n    init: function(options) {\n        this.options = options;\n\n        FormatTool.fn.init.call(this, extend(options, {\n            finder: new ListFormatFinder(options)\n        }));\n    },\n\n    command: function(commandArguments) {\n        return new ListCommand(extend(commandArguments, { tag: this.options.tag, attr: this.options.attr }));\n    }\n});\n\nextend(Editor, {\n    ListFormatFinder: ListFormatFinder,\n    ListFormatter: ListFormatter,\n    ListCommand: ListCommand,\n    ListTool: ListTool\n});\n\nregisterTool(\"insertUnorderedList\", new ListTool({ tag: 'ul', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertOrderedList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertUpperRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"upper-roman\" } }, altAttr: { type: \"I\" }, ui: { togglable: true, group: \"lists\" } }));\nregisterTool(\"insertLowerRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"lower-roman\" } }, altAttr: { type: \"i\" }, ui: { togglable: true, group: \"lists\" } }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    DelayedExecutionTool = Editor.DelayedExecutionTool,\n    Command = Editor.Command,\n    dom = Editor.Dom,\n    EditorUtils = Editor.EditorUtils,\n    RangeUtils = Editor.RangeUtils,\n    registerTool = EditorUtils.registerTool;\n\n\nvar FormattingTool = DelayedExecutionTool.extend({\n    init: function(options) {\n        var that = this;\n        Tool.fn.init.call(that, kendo.deepExtend({}, that.options, options));\n\n        that.type = \"kendoDropDownList\";\n\n        that.finder = {\n            getFormat: function() { return \"\"; }\n        };\n    },\n\n    options: {\n        items: [\n            { text: \"Paragraph\", value: \"p\" },\n            { text: \"Quotation\", value: \"blockquote\" },\n            { text: \"Heading 1\", value: \"h1\" },\n            { text: \"Heading 2\", value: \"h2\" },\n            { text: \"Heading 3\", value: \"h3\" },\n            { text: \"Heading 4\", value: \"h4\" },\n            { text: \"Heading 5\", value: \"h5\" },\n            { text: \"Heading 6\", value: \"h6\" }\n        ],\n        width: 110\n    },\n\n    toFormattingItem: function(item) {\n        var value = item.value;\n\n        if (!value) {\n            return item;\n        }\n\n        if (item.tag || item.className) {\n            return item;\n        }\n\n        var dot = value.indexOf(\".\");\n\n        if (dot === 0) {\n            item.className = value.substring(1);\n        } else if (dot == -1) {\n            item.tag = value;\n        } else {\n            item.tag = value.substring(0, dot);\n            item.className = value.substring(dot + 1);\n        }\n\n        return item;\n    },\n\n    command: function(args) {\n        var that = this;\n        var item = args.value;\n\n        item = this.toFormattingItem(item);\n\n        return new Editor.FormatCommand({\n            range: args.range,\n            formatter: function() {\n                var formatter,\n                    tags = (item.tag || item.context || \"span\").split(\",\"),\n                    format = [{\n                        tags: tags,\n                        attr: { className: item.className || \"\" }\n                    }];\n\n                if ($.inArray(tags[0], dom.inlineElements) >= 0) {\n                    formatter = new Editor.GreedyInlineFormatter(format);\n                } else {\n                    formatter = new Editor.GreedyBlockFormatter(format);\n                }\n\n                formatter.editor = that.editor;\n                return formatter;\n            }\n        });\n    },\n\n    decorate: function(body) {\n        var component = this.component,\n            dataSource = component.dataSource,\n            items = dataSource.data(),\n            i, tag, className, style;\n\n        if (body) {\n            component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n        }\n\n        if (this.component && this.component.options && this.component.options.unsafeInline !== false) {\n            for (i = 0; i < items.length; i++) {\n                tag = items[i].tag || \"span\";\n                className = items[i].className;\n\n                style = dom.inlineStyle(body, tag, { className: className });\n\n                style = style.replace(/\"/g, \"'\");\n\n                items[i].style = style + \";display:inline-block\";\n            }\n        }\n\n        dataSource.trigger(\"change\");\n    },\n\n    initialize: function(ui, editor) {\n        var options = this.options;\n        var toolName = options.name;\n        var that = this;\n        var component = ui.getKendoDropDownList();\n\n        if (!component) {\n            return;\n        }\n\n        that.editor = editor;\n        that.component = component;\n\n        // must be moved to themes\n        ui.closest(\".k-dropdownlist\").width(options.width);\n\n        component.setOptions({\n            optionLabel: editor.options.messages.formatting,\n            change: () => {\n                var dataItem = component.dataItem();\n\n                if (dataItem) {\n                    Tool.exec(editor, toolName, dataItem.toJSON());\n                }\n            },\n            dataBound: function() {\n                var i, items = component.dataSource.data(),\n                    optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n                for (i = 0; i < items.length; i++) {\n                    items[i] = that.toFormattingItem(items[i]);\n                }\n\n                if (optionLabel.length) {\n                    optionLabel.remove();\n                }\n            }\n        });\n    },\n\n    getFormattingValue: function(items, nodes) {\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            var tag = item.tag || item.context || \"\";\n            var className = item.className ? \".\" + item.className : \"\";\n            var selector = tag + className;\n\n            var element = $(nodes[0]).closest(selector)[0];\n\n            if (!element) {\n                continue;\n            }\n\n            if (nodes.length == 1) {\n                return item.value;\n            }\n\n            for (var n = 1; n < nodes.length; n++) {\n                if (!$(nodes[n]).closest(selector)[0]) {\n                    break;\n                } else if (n == nodes.length - 1) {\n                    return item.value;\n                }\n            }\n        }\n\n        return \"\";\n    },\n\n    update: function(ui, nodes) {\n        var selectBox = $(ui).data(this.type);\n        // necessary until formatBlock is deleted\n        if (!selectBox) {\n            return;\n        }\n\n        var dataSource = selectBox.dataSource,\n            items = dataSource.data(),\n            i, context,\n            ancestor = dom.commonAncestor.apply(null, nodes);\n\n        if (ancestor != dom.closestEditable(ancestor) && this._ancestor == ancestor) {\n            return;\n        } else {\n            this._ancestor = ancestor;\n        }\n\n        for (i = 0; i < items.length; i++) {\n            context = items[i].context;\n\n            items[i].visible = !context || !!$(ancestor).closest(context).length;\n        }\n\n        dataSource.filter([{ field: \"visible\", operator: \"eq\", value: true }]);\n\n        DelayedExecutionTool.fn.update.call(this, ui, nodes);\n\n        selectBox.value(this.getFormattingValue(dataSource.view(), nodes));\n\n        selectBox.wrapper.toggleClass(\"k-disabled\", !dataSource.view().length);\n    },\n\n    destroy: function() {\n        this._ancestor = null;\n    }\n});\n\nvar CleanFormatCommand = Command.extend({\n    exec: function() {\n        var range = this.lockRange(true);\n        this.tagsToClean = this.options.remove || \"strong,em,span,sup,sub,del,b,i,u,font\".split(\",\");\n\n        RangeUtils.wrapSelectedElements(range);\n\n        var nodes = RangeUtils.mapAll(range, function(node) {\n            return node;\n        });\n\n\n        for (var c = nodes.length - 1; c >= 0; c--) {\n            var node = nodes[c];\n            if (!this.immutableParent(node)) {\n                this.clean(node);\n            }\n        }\n\n        this.releaseRange(range);\n    },\n\n    clean: function(node) {\n        if (!node || dom.isMarker(node)) {\n            return;\n        }\n\n        var name = dom.name(node);\n\n        if (name == \"ul\" || name == \"ol\") {\n            var listFormatter = new Editor.ListFormatter(name);\n            var prev = node.previousSibling;\n            var next = node.nextSibling;\n\n            listFormatter.unwrap(node);\n\n            // clean contents\n            for (; prev && prev != next; prev = prev.nextSibling) {\n                this.clean(prev);\n            }\n        } else if (name == \"blockquote\") {\n            dom.changeTag(node, \"p\");\n        } else if (node.nodeType == 1 && !dom.insignificant(node)) {\n            for (var i = node.childNodes.length - 1; i >= 0; i--) {\n                this.clean(node.childNodes[i]);\n            }\n\n            node.removeAttribute(\"style\");\n            node.removeAttribute(\"class\");\n        } else {\n            unwrapListItem(node);\n        }\n\n        if ($.inArray(name, this.tagsToClean) > -1) {\n            dom.unwrap(node);\n        }\n    },\n\n    immutableParent: function(node) {\n        return this.immutables() && Editor.Immutables.immutableParent(node);\n    }\n});\n\n\nfunction unwrapListItem(node) {\n    var li = dom.closestEditableOfType(node, [\"li\"]);\n    if (li) {\n        var listFormatter = new Editor.ListFormatter(dom.name(li.parentNode));\n        var range = kendo.ui.editor.W3CRange.fromNode(node);\n        range.selectNode(li);\n        listFormatter.toggle(range);\n    }\n}\n\n$.extend(Editor, {\n    FormattingTool: FormattingTool,\n    CleanFormatCommand: CleanFormatCommand\n});\n\nregisterTool(\"formatting\", new FormattingTool({\n    ui: {\n        type: \"component\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            highlightFirst: false,\n            autoWidth: true,\n            template: kendo.template(\n                (data) => `<span unselectable=\"on\" ${data.style ? `class=\"k-d-block\" style=\"display:block;${data.style || \"\"}` : \"\"}\">${kendo.htmlEncode(data.text)}</span>`\n            )\n        },\n        overflow: \"never\"\n    }\n}));\n\nregisterTool(\"cleanFormatting\", new Tool({ command: CleanFormatCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    encode = kendo.htmlEncode,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    keys = kendo.keys,\n    KEDITORIMAGEURL = \"#k-editor-image-url\",\n    KEDITORIMAGETITLE = \"#k-editor-image-title\",\n    KEDITORIMAGEWIDTH = \"#k-editor-image-width\",\n    KEDITORIMAGEHEIGHT = \"#k-editor-image-height\";\n\nvar ImageCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        Command.fn.init.call(that, options);\n\n        that.async = true;\n        that.attributes = {};\n    },\n\n    insertImage: function(img, range) {\n        var attributes = this.attributes;\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (attributes.src && attributes.src != \"http://\") {\n\n            var removeIEAttributes = function() {\n                setTimeout(function() {\n                    if (!attributes.width) {\n                        img.removeAttribute(\"width\");\n                    }\n\n                    if (!attributes.height) {\n                        img.removeAttribute(\"height\");\n                    }\n\n                    img.removeAttribute(\"complete\");\n                });\n            };\n\n            if (!img) {\n                img = dom.create(doc, \"img\", attributes);\n                img.onload = img.onerror = removeIEAttributes;\n\n                range.deleteContents();\n                range.insertNode(img);\n\n                if (!img.nextSibling) {\n                    dom.insertAfter(doc.createTextNode(\"\\ufeff\"), img);\n                }\n\n                removeIEAttributes();\n\n                range.setStartAfter(img);\n                range.setEndAfter(img);\n                RangeUtils.selectRange(range);\n                return true;\n            } else {\n                img.onload = img.onerror = removeIEAttributes;\n                dom.attr(img, attributes);\n                removeIEAttributes();\n            }\n        }\n\n        return false;\n    },\n\n    redo: function() {\n        var that = this,\n            range = that.lockRange();\n\n        if (!that.insertImage(RangeUtils.image(range), range)) {\n            that.releaseRange(range);\n        }\n    },\n\n    exec: function() {\n        var that = this,\n            range = that.lockRange(),\n            applied = false,\n            img = RangeUtils.image(range),\n            imageWidth = img && img.getAttribute(\"width\") || \"\",\n            imageHeight = img && img.getAttribute(\"height\") || \"\",\n            dialog,\n            form,\n            isIE = kendo.support.browser.msie,\n            options = that.editor.options,\n            messages = options.messages,\n            imageBrowser = options.imageBrowser,\n            showBrowser = !!(kendo.ui.ImageBrowser && imageBrowser && imageBrowser.transport && imageBrowser.transport.read !== undefined$1),\n            dialogOptions = {\n                title: messages.insertImage,\n                visible: false,\n                resizable: showBrowser\n            };\n\n        this.expandImmutablesIn(range);\n\n        function apply(e) {\n            var element = dialog.element,\n                w = parseInt(element.find(KEDITORIMAGEWIDTH).val(), 10),\n                h = parseInt(element.find(KEDITORIMAGEHEIGHT).val(), 10);\n\n            that.attributes = {\n                src: element.find(KEDITORIMAGEURL).val().replace(/ /g, \"%20\"),\n                alt: element.find(KEDITORIMAGETITLE).val()\n            };\n\n            that.attributes.width = null;\n            that.attributes.height = null;\n\n            if (!isNaN(w) && w > 0) {\n                that.attributes.width = w;\n            }\n\n            if (!isNaN(h) && h > 0) {\n                that.attributes.height = h;\n            }\n\n            applied = that.insertImage(img, range);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            that.editor._handleSpaceAndNewLines();\n        }\n\n        function close(e) {\n            e.preventDefault();\n            form.destroy();\n            dialog.destroy();\n\n            dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n            if (!applied) {\n                that.releaseRange(range);\n            }\n        }\n\n        function keyDown(e) {\n            if (e.keyCode == keys.ENTER) {\n                apply(e);\n            } else if (e.keyCode == keys.ESC) {\n                close(e);\n            }\n        }\n\n        dialogOptions.close = close;\n\n        if (showBrowser) {\n            dialogOptions.width = 750;\n        }\n        dialogOptions.minWidth = 350;\n\n        dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n\n        form = that._createForm(dialog, showBrowser);\n\n        dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n        dialog.wrapper\n        .find(\".k-dialog-insert\").on(\"click\", apply).end()\n        .find(\".k-dialog-close\").on(\"click\", close).end()\n        .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n        // IE < 8 returns absolute url if getAttribute is not used\n        .find(KEDITORIMAGEURL).val(img ? img.getAttribute(\"src\", 2) : \"http://\").end()\n        .find(KEDITORIMAGETITLE).val(img ? img.alt : \"\").end()\n        .find(KEDITORIMAGEWIDTH).val(imageWidth).end()\n        .find(KEDITORIMAGEHEIGHT).val(imageHeight).end();\n\n        var element = dialog.element;\n        if (showBrowser) {\n            this._imageBrowser = new kendo.ui.ImageBrowser(\n                element.find(\".k-imagebrowser\"),\n                extend({}, imageBrowser)\n            );\n\n            this._imageBrowser.bind(\"change\", function(ev) {\n                if (ev.selected.get(\"type\") === \"f\") {\n                    element.find(KEDITORIMAGEURL).val(this.value());\n                }\n            });\n\n            this._imageBrowser.bind(\"apply\", apply);\n        }\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n        dialog.center().open();\n        element.find(KEDITORIMAGEURL).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog, showBrowser) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-image-url\",\n                    label: encode(messages.imageWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-title\",\n                    label: encode(messages.imageAltText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-width\",\n                    label: encode(messages.imageWidth),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-image-height\",\n                    label: encode(messages.imageHeight),\n                    editor: \"TextBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        if (showBrowser) {\n            formElement.prepend($('<div class=\"k-filebrowser k-imagebrowser\"></div>'));\n        }\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"image-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    }\n\n});\n\nkendo.ui.editor.ImageCommand = ImageCommand;\n\nregisterTool(\"insertImage\", new Editor.Tool({ command: ImageCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    registerTool = EditorUtils.registerTool,\n    loadingOverlay = '<div contenteditable=\"false\" class=\"k-loading-mask\" style=\"width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;\"><div class=\"k-loading-image\"></div><div class=\"k-loading-color\"></div></div>';\n\nvar ImportCommand = Command.extend({\n    exec: function() {\n        (this.editor._uploadWidget || this._initializeUploadWidget()).element.click();\n    },\n\n    _initializeUploadWidget: function() {\n        var cmd = this;\n        var editor = cmd.editor;\n        var importOptions = editor.options[\"import\"];\n        var upload = $('<input id=\"editorImport\" name=\"files\" type=\"file\" />').kendoUpload({\n            success: cmd._onUploadSuccess.bind(cmd),\n            progress: cmd._onUploadProgress.bind(cmd),\n            select: cmd._onUploadSelect.bind(cmd),\n            error: cmd._onUploadError.bind(cmd),\n            complete: cmd._onUploadComplete.bind(cmd),\n            showFileList: false,\n            multiple: false,\n            async: {\n                saveUrl: importOptions.proxyURL,\n                autoUpload: true,\n                saveField: \"file\"\n            },\n            validation: {\n                allowedExtensions: importOptions.allowedExtensions,\n                maxFileSize: importOptions.maxFileSize\n            }\n        }).getKendoUpload();\n\n        editor._uploadWidget = upload;\n\n        return upload;\n    },\n    _onUploadComplete: function(ev) {\n        this._trigger(\"complete\", ev);\n        ev.sender.clearAllFiles();\n\n        this._removeLoadingOverlay();\n    },\n    _onUploadSuccess: function(ev) {\n        this.editor.value(ev.response.html.replace(/<\\/?body>/ig, \"\"));\n        this._trigger(\"success\", ev);\n    },\n    _onUploadProgress: function(ev) {\n        this._trigger(\"progress\", ev);\n    },\n    _onUploadSelect: function(ev) {\n        this._trigger(\"select\", ev);\n        if (!ev.files[0].validationErrors) {\n            this._initLoadingOverlay();\n        }\n    },\n    _onUploadError: function(ev) {\n        this._trigger(\"error\", ev);\n    },\n\n    _trigger: function(eventType, uploadEvent) {\n        var editor = this.editor;\n        var importOptions = editor.options[\"import\"];\n        if (typeof importOptions[eventType] === \"function\") {\n            importOptions[eventType].call(editor, uploadEvent);\n        }\n    },\n\n    _initLoadingOverlay: function() {\n        var editable = this.editor.body;\n        if (Editor.Dom.is(editable, \"body\")) {\n            this._iframeWrapper = this._container =\n                this.editor.wrapper.find(\"iframe\").parent()\n                .css({ position: \"relative\" }).append(loadingOverlay);\n        } else {\n            this._container = $(editable).append(loadingOverlay);\n        }\n\n        kendo.ui.progress(this._container, true);\n    },\n\n    _removeLoadingOverlay: function() {\n        kendo.ui.progress(this._container, false);\n        $(this._iframeWrapper).css({\n            position: \"\"\n        });\n\n        delete this._container;\n        delete this._iframeWrapper;\n    }\n});\n\nextend(Editor, {\n    ImportCommand: ImportCommand\n});\n\nregisterTool(\"import\", new Tool({\n    command: ImportCommand,\n    ui: {\n        showText: \"both\"\n    }\n}));\n\n}(window.kendo.jQuery));\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        GenericCommand = editorNS.GenericCommand,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        RestorePoint = editorNS.RestorePoint,\n        extend = $.extend;\n\nvar InsertHtmlCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.managesUndoRedo = true;\n    },\n\n    exec: function() {\n        var editor = this.editor;\n        var options = this.options;\n        var range = options.range;\n        var body = editor.body;\n        var startRestorePoint = new RestorePoint(range, body);\n        var html = options.html || options.value || '';\n\n        editor.selectRange(range);\n\n        editor.clipboard.paste(html, options);\n\n        if (options.postProcess) {\n            options.postProcess(editor, editor.getRange());\n        }\n\n        var genericCommand = new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange(), body));\n        genericCommand.editor = editor;\n        editor.undoRedoStack.push(genericCommand);\n\n        editor.focus();\n    }\n});\n\nvar InsertHtmlTool = Tool.extend({\n    initialize: function(ui, editor) {\n        var options = this.options,\n            dataSource = options.items ? options.items : editor.options.insertHtml,\n            component = ui.getKendoDropDownList();\n\n        if (!component) {\n            return;\n        }\n\n        component.one(\"open\", () => {\n            var optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n            if (optionLabel.length) {\n                optionLabel.remove();\n            }\n        });\n\n        component.setOptions({\n            dataSource: dataSource,\n            optionLabel: editor.options.messages.insertHtml\n        });\n        component.bind(\"change\", () => {\n            Tool.exec(editor, 'insertHtml', component.value());\n        });\n    },\n\n    command: function(commandArguments) {\n        return new InsertHtmlCommand(commandArguments);\n    },\n\n    update: function(ui) {\n        var component = ui.data(\"kendoDropDownList\");\n        component.close();\n        component.value(null);\n    }\n});\n\nextend(editorNS, {\n    InsertHtmlCommand: InsertHtmlCommand,\n    InsertHtmlTool: InsertHtmlTool\n});\n\nregisterTool(\"insertHtml\", new InsertHtmlTool({\n    ui: {\n        initialValue: \"Insert HTML\",\n        type: \"component\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            autoSize: true,\n            highlightFirst: false\n        },\n        overflow: \"never\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    registerTool = EditorUtils.registerTool,\n    defaultExportAsItems = [\n        { text: 'Docx', value: 'docx' },\n        { text: 'Rtf', value: 'rtf' },\n        { text: 'Pdf', value: 'pdf' },\n        { text: 'Html', value: 'html' },\n        { text: 'Plain Text', value: 'txt' }\n    ];\n\nvar ExportAsCommand = Command.extend({\n    init: function(options) {\n        var cmd = this;\n        cmd.options = options;\n        Command.fn.init.call(cmd, options);\n        cmd.attributes = null;\n        cmd.exportType = options.exportType;\n    },\n\n    exec: function() {\n        var cmd = this;\n        var range = this.lockRange(true);\n        cmd.postToProxy();\n        cmd.releaseRange(range);\n    },\n\n    postToProxy: function() {\n        this.generateForm().appendTo('body').submit().remove();\n    },\n\n    generateForm: function() {\n        var cmd = this;\n        var exportAsOptions = cmd.editor.options.exportAs;\n        var form = $('<form>').attr({\n            action: exportAsOptions && exportAsOptions.proxyURL || \"\",\n            method: 'POST'\n        });\n\n        form.append([\n            cmd.valueInput(),\n            cmd.exportTypeInput(),\n            cmd.fileNameInput(),\n            cmd.antiForgeryInput()\n        ]);\n\n        return form;\n    },\n\n    valueInput: function() {\n        var editor = this.editor;\n        return $('<input>').attr({\n            value: editor.encodedValue(),\n            name: 'value',\n            type: 'hidden'\n        });\n    },\n\n    exportTypeInput: function() {\n        var cmd = this;\n        return $('<input>').attr({\n            value: cmd.exportType,\n            name: 'exportType',\n            type: 'hidden'\n        });\n\n    },\n\n    fileNameInput: function() {\n        var editor = this.editor;\n        var exportAsOptions = editor.options.exportAs;\n        var fileName = exportAsOptions && exportAsOptions.fileName || editor.element.attr(\"id\") || \"editor\";\n        return $('<input>').attr({\n            value: fileName,\n            name: 'fileName',\n            type: 'hidden'\n        });\n    },\n\n    antiForgeryInput: function() {\n        var csrf_param = $(\"meta[name=csrf-param],meta[name=_csrf_header]\").attr(\"content\");\n\n        return $(\"input[name^='__RequestVerificationToken']\").clone()\n                    .add($(\"input[name^='\" + csrf_param + \"']\").clone());\n    }\n});\n\nvar ExportAsTool = Tool.extend({\n    init: function(options) {\n        var tool = this;\n        Tool.fn.init.call(tool, kendo.deepExtend({}, tool.options, options));\n        tool.type = 'kendoDropDownList';\n    },\n\n    options: {\n        items: defaultExportAsItems\n    },\n\n    command: function(args) {\n        var value = args.value;\n        return new Editor.ExportAsCommand({\n            range: args.range,\n            exportType: value.exportType\n        });\n    },\n\n    initialize: function(ui, editor) {\n        var tool = this,\n            component = ui.getKendoDropDownList();\n\n        tool.editor = editor;\n\n        component.bind(\"change\", this.changeHandler.bind(this));\n    },\n\n    changeHandler: function(e) {\n        this._exec(e.sender.value());\n        e.sender.value(null);\n        e.sender.wrapper.find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n    },\n\n    update: function(ui, editor) {\n        var component = ui.data(\"kendoDropDownList\");\n\n        component.close();\n        component.value(null);\n        ui.closest(\".k-dropdownlist\").find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n    },\n\n    _exec: function(value) {\n        if (value) {\n            Tool.exec(this.editor, this.options.name, { exportType: value } );\n        }\n    },\n\n    destroy: function() {\n        this._ancestor = null;\n    }\n});\n\nextend(Editor, {\n    ExportAsTool: ExportAsTool,\n    ExportAsCommand: ExportAsCommand\n});\n\nregisterTool('exportAs', new ExportAsTool({\n    ui: {\n        type: \"component\",\n        overflow: \"never\",\n        component: \"DropDownList\",\n        componentOptions: {\n            dataTextField: \"text\",\n            dataValueField: \"value\",\n            valuePrimitive: true,\n            value: null,\n            width: \"140px\",\n            highlightFirst: false,\n            autoWidth: true,\n            itemTemplate: (data) => `<span class=\"k-link k-menu-link\" data-value=\"${data.value}\">${data.text}</strong></span>`,\n            icon: \"export\",\n            valueTemplate: () => `<span class=\"k-editor-export\">${kendo.ui.icon({ icon: \"export\", iconClass: \"k-button-icon\" })}<span class=\"k-export-tool-text\"></span></span>`\n        }\n    }\n}));\n\n}(window.kendo.jQuery));\n\n(function($, undefined$1) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    EditorUtils = Editor.EditorUtils,\n    registerTool = EditorUtils.registerTool,\n    Command = Editor.Command,\n    Tool = Editor.Tool,\n    RangeUtils = Editor.RangeUtils,\n    blockElements = dom.blockElements,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    BlockFormatter = Editor.BlockFormatter;\n\nfunction indent(node, value) {\n    var isRtl = $(node).css(\"direction\") == \"rtl\",\n        indentDirection = isRtl ? \"Right\" : \"Left\",\n        property = dom.name(node) != \"td\" ? \"margin\" + indentDirection : \"padding\" + indentDirection;\n    if (value === undefined$1) {\n        return node.style[property] || 0;\n    } else if (value > 0) {\n        node.style[property] = value + \"px\";\n    } else {\n        node.style[property] = \"\";\n\n        if (!node.style.cssText) {\n            node.removeAttribute(\"style\");\n        }\n    }\n}\n\nvar IndentFormatter = Class.extend({\n    init: function() {\n        this.finder = new BlockFormatFinder([{ tags: dom.blockElements }]);\n    },\n\n    apply: function(nodes) {\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        var formatNodes = this.finder.findSuitable(nodes),\n            targets = [],\n            i, len, formatNode, parentList, sibling;\n\n        formatNodes = this.mapImmutables(formatNodes);\n\n        if (formatNodes.length) {\n            for (i = 0, len = formatNodes.length; i < len; i++) {\n                if (dom.is(formatNodes[i], \"li\")) {\n                    if (!$(formatNodes[i]).index()) {\n                        targets.push(formatNodes[i].parentNode);\n                    } else if ($.inArray(formatNodes[i].parentNode, targets) < 0) {\n                        targets.push(formatNodes[i]);\n                    }\n                } else {\n                    targets.push(formatNodes[i]);\n                }\n            }\n\n            while (targets.length) {\n                formatNode = targets.shift();\n                if (dom.is(formatNode, \"li\")) {\n                    parentList = formatNode.parentNode;\n                    sibling = $(formatNode).prev(\"li\");\n                    var siblingList = sibling.find(\"ul,ol\").last();\n\n                    var nestedList = $(formatNode).children(\"ul,ol\")[0];\n\n                    if (nestedList && sibling[0]) {\n                        if (siblingList[0]) {\n                           siblingList.append(formatNode);\n                           siblingList.append($(nestedList).children());\n                           dom.remove(nestedList);\n                        } else {\n                            sibling.append(nestedList);\n                            nestedList.insertBefore(formatNode, nestedList.firstChild);\n                        }\n                    } else {\n                        nestedList = sibling.children(\"ul,ol\")[0];\n                        if (!nestedList) {\n                            nestedList = dom.create(formatNode.ownerDocument, dom.name(parentList), this.getListTypeAttr(parentList));\n                            sibling.append(nestedList);\n                        }\n\n                        while (formatNode && formatNode.parentNode == parentList) {\n                            nestedList.appendChild(formatNode);\n                            formatNode = targets.shift();\n                        }\n                    }\n                } else {\n                    var marginLeft = parseInt(indent(formatNode), 10) + 30;\n                    indent(formatNode, marginLeft);\n\n                    for (var targetIndex = 0; targetIndex < targets.length; targetIndex++) {\n                        if ($.contains(formatNode, targets[targetIndex])) {\n                            targets.splice(targetIndex, 1);\n                        }\n                    }\n                }\n            }\n        } else {\n            var formatter = new BlockFormatter([{ tags: [\"p\"] }], { style: { marginLeft: 30 } });\n\n            formatter.apply(nodes);\n        }\n    },\n\n    getListTypeAttr: function(list) {\n        var type = list.getAttribute(\"type\");\n        var styleType = list.style.listStyleType;\n\n        return type ? { type: type } : { style: { listStyleType: styleType } };\n    },\n\n    mapImmutables: function(nodes) {\n        if (!this.immutables) {\n            return nodes;\n        } else {\n            var immutables = [];\n            return $.map(nodes, function(node) {\n                var immutable = Editor.Immutables.immutableParent(node);\n                if (immutable) {\n                    if ($.inArray(immutable, immutables) === -1) {\n                        immutables.push(immutable);\n                    } else {\n                        return null;\n                    }\n                }\n                return immutable || node;\n            });\n        }\n    },\n\n    remove: function(nodes) {\n        nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n        var formatNodes = this.finder.findSuitable(nodes),\n            targetNode, i, len, list, listParent, siblings,\n            formatNode, marginLeft;\n\n        formatNodes = this.mapImmutables(formatNodes);\n\n        for (i = 0, len = formatNodes.length; i < len; i++) {\n            formatNode = $(formatNodes[i]);\n\n            if (formatNode.is(\"li\")) {\n                list = formatNode.parent();\n                listParent = list.parent();\n                // listParent will be ul or ol in case of invalid dom - <ul><li></li><ul><li></li></ul></ul>\n                if (listParent.is(\"li,ul,ol\") && !indent(list[0])) {\n                    // skip already processed nodes\n                    if (targetNode && $.contains(targetNode, listParent[0])) {\n                        continue;\n                    }\n\n                    siblings = formatNode.nextAll(\"li\");\n                    if (siblings.length) {\n                        $(list[0].cloneNode(false)).appendTo(formatNode).append(siblings);\n                    }\n\n                    if (listParent.is(\"li\")) {\n                        formatNode.insertAfter(listParent);\n                    } else {\n                        formatNode.appendTo(listParent);\n                    }\n\n                    if (!list.children(\"li\").length) {\n                        list.remove();\n                    }\n\n                    continue;\n                } else {\n                    if (targetNode == list[0]) {\n                        // removing format on sibling LI elements\n                        continue;\n                    }\n                    targetNode = list[0];\n                }\n            } else {\n                targetNode = formatNodes[i];\n            }\n\n            marginLeft = parseInt(indent(targetNode), 10) - 30;\n            indent(targetNode, marginLeft);\n        }\n    }\n\n});\n\nvar IndentCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = /** @ignore */ {\n            toggle: (function(range) {\n                var indentFormatter = new IndentFormatter();\n                indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                indentFormatter.apply(RangeUtils.nodes(range));\n            }).bind(that)\n        };\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar OutdentCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        options.formatter = {\n            toggle: (function(range) {\n                var indentFormatter = new IndentFormatter();\n                indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                indentFormatter.remove(RangeUtils.nodes(range));\n            }).bind(that)\n        };\n        Command.fn.init.call(this, options);\n    }\n});\n\nvar OutdentTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n\n        this.finder = new BlockFormatFinder([{ tags: blockElements }]);\n    },\n\n    initialize: function(ui, editor) {\n        $.extend(this.options, {\n            immutables: editor && editor.options.immutables\n        });\n    },\n\n    update: function(ui, nodes) {\n        var suitableNodes = this.finder.findSuitable(nodes),\n            toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\"),\n            isOutdentable, listParentsCount, i, len, suitable, immutableParent;\n\n        for (i = 0, len = suitableNodes.length; i < len; i++) {\n            suitable = suitableNodes[i];\n\n            if (this.options.immutables) {\n                immutableParent = Editor.Immutables.immutableParent(suitable);\n\n                if (immutableParent) {\n                    suitable = immutableParent;\n                }\n            }\n\n            isOutdentable = indent(suitable);\n\n            if (!isOutdentable) {\n                listParentsCount = $(suitable).parents(\"ul,ol\").length;\n                isOutdentable = (dom.is(suitable, \"li\") && (listParentsCount > 1 || indent(suitable.parentNode))) ||\n                                (dom.ofType(suitable, [\"ul\",\"ol\"]) && listParentsCount > 0);\n            }\n\n            if (isOutdentable) {\n                toolbar.enable(ui, true);\n                return;\n            }\n        }\n\n        toolbar.enable(ui, false);\n    }\n});\n\nextend(Editor, {\n    IndentFormatter: IndentFormatter,\n    IndentCommand: IndentCommand,\n    OutdentCommand: OutdentCommand,\n    OutdentTool: OutdentTool\n});\n\nregisterTool(\"indent\", new Tool({ command: IndentCommand }));\nregisterTool(\"outdent\", new OutdentTool({ command: OutdentCommand, ui: { enable: false } }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    extend = $.extend,\n    editorNS = kendo.ui.editor,\n    dom = editorNS.Dom,\n    Command = editorNS.Command,\n    Tool = editorNS.Tool,\n    BlockFormatter = editorNS.BlockFormatter,\n    normalize = dom.normalize,\n    RangeUtils = editorNS.RangeUtils,\n    registerTool = editorNS.EditorUtils.registerTool;\n\nvar ParagraphCommand = Command.extend({\n    init: function(options) {\n        this.options = options;\n        Command.fn.init.call(this, options);\n    },\n\n    _insertMarker: function(doc, range) {\n        var marker = dom.create(doc, 'a'), container;\n        marker.className = \"k-marker\";\n\n        range.insertNode(marker);\n\n        if (!marker.parentNode) {\n            // inserting paragraph in Firefox full body range\n            container = range.commonAncestorContainer;\n            container.innerHTML = \"\";\n            container.appendChild(marker);\n        }\n\n        normalize(marker.parentNode);\n\n        return marker;\n    },\n\n    _moveFocus: function(range, candidate) {\n        if (dom.isEmpty(candidate)) {\n            range.setStartBefore(candidate);\n        } else {\n            range.selectNodeContents(candidate);\n\n            var focusNode = RangeUtils.textNodes(range)[0];\n\n            if (!focusNode) {\n                while (candidate.childNodes.length && !dom.is(candidate.firstChild, \"br\")) {\n                    candidate = candidate.firstChild;\n                }\n\n                focusNode = candidate;\n            }\n\n            if (dom.isEmpty(focusNode)) {\n                range.setStartBefore(focusNode);\n            } else {\n                if (dom.emptyNode(focusNode)) {\n                    focusNode.innerHTML = \"\\ufeff\";\n                }\n                var startNode = focusNode.firstChild || focusNode;\n                if (dom.isDataNode(startNode)) {\n                    range.setStart(startNode, 0);\n                } else {\n                    range.setStartBefore(startNode);\n                }\n            }\n        }\n    },\n\n    shouldTrim: function(range) {\n        var blocks = 'p,h1,h2,h3,h4,h5,h6'.split(','),\n            startInBlock = dom.parentOfType(range.startContainer, blocks),\n            endInBlock = dom.parentOfType(range.endContainer, blocks);\n        return (startInBlock && !endInBlock) || (!startInBlock && endInBlock);\n    },\n\n    _blankAfter: function(node) {\n        while (node && (dom.isMarker(node) || dom.stripBom(node.nodeValue) === \"\")) {\n            node = node.nextSibling;\n        }\n\n        return !node;\n    },\n\n    exec: function() {\n        const range = this.getRange();\n        const doc = RangeUtils.documentFromRange(range);\n        let parent, previous, next, paragraph, marker, li, heading, tableNode, rng,\n        shouldTrim;\n        const emptyParagraphContent = editorNS.emptyElementContent;\n\n        this.expandImmutablesIn(range);\n\n        shouldTrim = this.shouldTrim(range);\n\n        range.deleteContents();\n        marker = this._insertMarker(doc, range);\n\n        dom.stripBomNode(marker.previousSibling);\n        dom.stripBomNode(marker.nextSibling);\n\n        li = dom.closestEditableOfType(marker, ['li']);\n        heading = dom.closestEditableOfType(marker, 'h1,h2,h3,h4,h5,h6'.split(','));\n        tableNode = dom.is(marker.parentNode, 'table') && marker.parentNode;\n\n        if (li) {\n            // hitting 'enter' in empty li\n            if (dom.emptyNode(li)) {\n                paragraph = dom.create(doc, 'p');\n\n                if (dom.next(li)) {\n                    rng = range.cloneRange();\n                    rng.selectNode(li);\n\n                    RangeUtils.split(rng, li.parentNode);\n                }\n\n                const br = $(\"br\", li);\n                if (br.length == 1) {\n                    br.remove();\n                }\n\n                const parentNode = li.parentNode;\n                const parentChildrenLength = li.parentNode.children.length;\n                const firstChild = parentChildrenLength >= 1 && li.childNodes.length == 1 && li.children[0];\n\n                dom.insertAfter(paragraph, parentNode);\n                dom.remove(parentChildrenLength == 1 ? li.parentNode : li);\n\n                if (firstChild && firstChild !== marker) {\n                    paragraph.appendChild(firstChild);\n                    paragraph.appendChild(marker);\n                } else {\n                    paragraph.innerHTML = emptyParagraphContent;\n                }\n                next = paragraph;\n            }\n        } else if (heading && this._blankAfter(marker)) {\n            paragraph = this._insertParagraphAfter(heading);\n            dom.remove(marker);\n            next = paragraph;\n        } else if (tableNode) {\n            paragraph = this._insertParagraphAfter(tableNode);\n            dom.remove(marker);\n            next = paragraph;\n        }\n\n        if (!next) {\n            if (!(li || heading)) {\n                new BlockFormatter([{ tags: ['p'] }]).apply([marker]);\n            }\n\n            range.selectNode(marker);\n\n            const headingDomName = heading ? dom.name(heading) : 'p';\n            parent = dom.parentOfType(marker, [li ? 'li' : headingDomName]);\n\n            RangeUtils.split(range, parent, shouldTrim);\n\n            previous = parent.previousSibling;\n\n            if (dom.is(previous, 'li') && previous.firstChild && !dom.is(previous.firstChild, 'br')) {\n                previous = previous.firstChild;\n            }\n\n            next = parent.nextSibling;\n\n            this.clean(previous, { links: true });\n            this.clean(next, { links: true });\n\n            if (dom.is(next, 'li') && next.firstChild && !dom.is(next.firstChild, 'br')) {\n                next = next.firstChild;\n            }\n\n            dom.remove(parent);\n\n            // normalize updates the caret display in Gecko\n            normalize(previous);\n        }\n\n        normalize(next);\n\n        this._moveFocus(range, next);\n\n        range.collapse(true);\n\n        dom.scrollTo(next, true);\n\n        RangeUtils.selectRange(range);\n    },\n\n    _insertParagraphAfter: function(node) {\n        var range = this.getRange();\n        var doc = RangeUtils.documentFromRange(range);\n        var emptyElementContent = editorNS.emptyElementContent;\n        var paragraph = dom.create(doc, 'p');\n\n        dom.insertAfter(paragraph, node);\n        paragraph.innerHTML = emptyElementContent;\n\n        return paragraph;\n    },\n\n    clean: function(node, options) {\n        var root = node;\n\n        if (node.firstChild && dom.is(node.firstChild, 'br')) {\n            dom.remove(node.firstChild);\n        }\n\n        if (dom.isDataNode(node) && !node.nodeValue) {\n            node = node.parentNode;\n        }\n\n        if (node) {\n            var siblings = false;\n            while (node.firstChild && node.firstChild.nodeType == 1) {\n                siblings = siblings || (dom.significantNodes(node.childNodes).length > 1);\n                node = node.firstChild;\n            }\n\n            if (!dom.isEmpty(node) && node.className != \"k-br\" && /^\\s*$/.test(node.innerHTML) && !siblings) {\n                $(root).find(\".k-br\").remove();\n                node.innerHTML = editorNS.emptyElementContent;\n            }\n\n            if (options && options.links) {\n                while (node != root) {\n                    if (dom.is(node, \"a\") && dom.emptyNode(node)) {\n                        dom.unwrap(node);\n                        break;\n                    }\n                    node = node.parentNode;\n                }\n            }\n        }\n    }\n});\n\nvar NewLineCommand = Command.extend({\n    init: function(options) {\n        this.options = options;\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.getRange();\n        this.expandImmutablesIn(range);\n\n        var br = dom.create(RangeUtils.documentFromRange(range), 'br');\n        var node = range.startContainer;\n        var filler;\n        var browser = kendo.support.browser;\n        var oldIE = browser.msie && browser.version < 11;\n        var tableNode = dom.is(node, 'table') && node;\n        var kbrParent;\n\n        range.deleteContents();\n        if (tableNode) {\n            dom.insertAfter(br, tableNode);\n        } else {\n            kbrParent = $(node).closest('.k-br');\n            range.insertNode(br);\n\n            if (kbrParent.length) {\n                // pressing enter in an k-br node\n                dom.unwrap(kbrParent[0]);\n            }\n        }\n\n        normalize(br.parentNode);\n\n        if (!oldIE && (!br.nextSibling || dom.isWhitespace(br.nextSibling))) {\n            // Gecko and WebKit cannot put the caret after only one br.\n            if (!!br.nextSibling && dom.isWhitespace(br.nextSibling)) {\n                $(br.nextSibling).remove();\n            }\n            filler = br.cloneNode(true);\n            filler.className = 'k-br';\n            dom.insertAfter(filler, br);\n        }\n\n        range.setStartAfter(br);\n        range.collapse(true);\n\n        dom.scrollTo(br.nextSibling || br, true);\n\n        RangeUtils.selectRange(range);\n    }\n});\n\nextend(editorNS, {\n    ParagraphCommand: ParagraphCommand,\n    NewLineCommand: NewLineCommand\n});\n\nregisterTool(\"insertLineBreak\", new Tool({ key: 13, shift: true, command: NewLineCommand }));\nregisterTool(\"insertParagraph\", new Tool({ key: 13, command: ParagraphCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    encode = kendo.htmlEncode,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n    LinkFormatter = Editor.LinkFormatter,\n    textNodes = RangeUtils.textNodes,\n    keys = kendo.keys,\n    KEDITORFILEURL = \"#k-editor-file-url\",\n    KEDITORFILETEXT = \"#k-editor-file-text\",\n    KEDITORFILETITLE = \"#k-editor-file-title\";\n\nvar FileCommand = Command.extend({\n    init: function(options) {\n        var that = this;\n        Command.fn.init.call(that, options);\n\n        that.formatter = new LinkFormatter();\n\n        that.async = true;\n        that.attributes = {};\n    },\n\n    insertFile: function(file, range) {\n        var attributes = this.attributes;\n        var doc = RangeUtils.documentFromRange(range);\n\n        if (attributes.href && attributes.href != \"http://\") {\n\n            if (!file) {\n                file = dom.create(doc, \"a\", { href: attributes.href });\n                file.innerHTML = attributes.innerHTML;\n                file.title = attributes.title;\n\n                range.deleteContents();\n                range.insertNode(file);\n\n                if (!file.nextSibling) {\n                    dom.insertAfter(doc.createTextNode(\"\\ufeff\"), file);\n                }\n\n                range.setStartAfter(file);\n                range.setEndAfter(file);\n                RangeUtils.selectRange(range);\n                return true;\n            } else {\n                dom.attr(file, attributes);\n            }\n        }\n\n        return false;\n    },\n\n    redo: function() {\n        var that = this,\n            range = that.lockRange();\n\n        this.formatter.apply(range, this.attributes);\n        that.releaseRange(range);\n    },\n\n    exec: function() {\n        var that = this,\n            range = that.lockRange(),\n            nodes = textNodes(range),\n            applied = false,\n            file = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null,\n            dialog,\n            form,\n            isIE = kendo.support.browser.msie,\n            options = that.editor.options,\n            messages = options.messages,\n            fileBrowser = options.fileBrowser,\n            showBrowser = !!(kendo.ui.FileBrowser && fileBrowser && fileBrowser.transport && fileBrowser.transport.read !== undefined$1),\n            dialogOptions = {\n                title: messages.insertFile,\n                visible: false,\n                resizable: showBrowser\n            };\n\n        this.expandImmutablesIn(range);\n\n        function apply(e) {\n            var element = dialog.element,\n                href = element.find(KEDITORFILEURL).val().replace(/ /g, \"%20\"),\n                innerHTML = element.find(KEDITORFILETEXT).val(),\n                title = element.find(KEDITORFILETITLE).val();\n\n            that.attributes = {\n                href: href,\n                innerHTML: innerHTML !== \"\" ? innerHTML : href,\n                title: title\n            };\n\n            applied = that.insertFile(file, range);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n        }\n\n        function close(e) {\n            e.preventDefault();\n            form.destroy();\n            dialog.destroy();\n\n            dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n            if (!applied) {\n                that.releaseRange(range);\n            }\n        }\n\n        function keyDown(e) {\n            if (e.keyCode == keys.ENTER) {\n                apply(e);\n            } else if (e.keyCode == keys.ESC) {\n                close(e);\n            }\n        }\n\n        dialogOptions.close = close;\n\n        if (showBrowser) {\n            dialogOptions.width = 750;\n        }\n        dialogOptions.minWidth = 350;\n\n        dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n        form = that._createForm(dialog, showBrowser);\n\n        dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n        dialog.wrapper\n        .find(\".k-dialog-insert\").on(\"click\", apply).end()\n        .find(\".k-dialog-close\").on(\"click\", close).end()\n        .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n        // IE < 8 returns absolute url if getAttribute is not used\n        .find(KEDITORFILEURL).val(file ? file.getAttribute(\"href\", 2) : \"http://\").end()\n        .find(KEDITORFILETEXT).val(file ? file.innerText : \"\").end()\n        .find(KEDITORFILETITLE).val(file ? file.title : \"\").end();\n\n        var element = dialog.element;\n        if (showBrowser) {\n            that._fileBrowser = new kendo.ui.FileBrowser(\n                element.find(\".k-filebrowser\"),\n                extend({}, fileBrowser)\n            );\n\n            that._fileBrowser.bind(\"change\", function(ev) {\n                if (ev.selected.get(\"type\") === \"f\") {\n                    element.find(KEDITORFILEURL).val(this.value());\n                }\n            } );\n\n            that._fileBrowser.bind(\"apply\", apply);\n        }\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n        dialog.center().open();\n        element.find(KEDITORFILEURL).trigger(\"focus\").select();\n    },\n\n    _createForm: function(dialog, showBrowser) {\n        var that = this;\n        var formElement = $(\"<div/>\").appendTo(dialog.element);\n        var messages = that.editor.options.messages;\n\n        var form = formElement.kendoForm({\n            renderButtons: false,\n            items: [\n                {\n                    field: \"k-editor-file-url\",\n                    label: encode(messages.fileWebAddress),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-file-text\",\n                    label: encode(messages.fileText),\n                    editor: \"TextBox\"\n                },\n                {\n                    field: \"k-editor-file-title\",\n                    label: encode(messages.fileTitle),\n                    editor: \"TextBox\"\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        if (showBrowser) {\n            formElement.prepend($('<div class=\"k-filebrowser\"></div>'));\n        }\n\n        dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"file-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n        return form;\n    }\n\n});\n\nkendo.ui.editor.FileCommand = FileCommand;\n\nregisterTool(\"insertFile\", new Editor.Tool({ command: FileCommand }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    extend = $.extend,\n    Editor = kendo.ui.editor,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    Command = Editor.Command,\n\n    NS = \"kendoEditor\",\n    ACTIVESTATE = \"k-active\",\n    SELECTEDSTATE = \"k-selected\",\n    SCOPE = \"scope\",\n    ROW = \"row\",\n    COL = \"col\",\n    ROWGROUP = \"rowgroup\",\n    COLGROUP = \"colgroup\",\n    COLSPAN = \"colspan\",\n    ROWSPAN = \"rowspan\",\n    TABLE = \"table\",\n    THEAD = \"thead\",\n    TBODY = \"tbody\",\n    TR = \"tr\",\n    TD = \"td\",\n    TH = \"th\",\n\n    Tool = Editor.Tool,\n    InsertHtmlCommand = Editor.InsertHtmlCommand,\n    BlockFormatFinder = Editor.BlockFormatFinder,\n    BlockFormatTool = Editor.BlockFormatTool,\n    FormatCommand = Editor.FormatCommand,\n    registerTool = Editor.EditorUtils.registerTool,\n    registerFormat = Editor.EditorUtils.registerFormat,\n    formats = kendo.ui.Editor.fn.options.formats,\n    getTouches = kendo.getTouches;\nvar template = kendo.template;\n\nvar columnTemplate = ({ width, content }) => `<td style=\"width:${width}%;\">${content}</td>`;\n\nvar tableFormatFinder = new BlockFormatFinder([{ tags: [TABLE] }]);\n\nvar TableCommand = InsertHtmlCommand.extend({\n    init: function(options) {\n        var o = $.extend({\n            postProcess: this.postProcess,\n            skipCleaners: true\n        }, options || {});\n\n        InsertHtmlCommand.fn.init.call(this, o);\n    },\n    _tableHtml: function(rows, columns) {\n        rows = rows || 1;\n        columns = columns || 1;\n        var columnHtml = template(columnTemplate)({ width: 100 / columns, content: Editor.emptyTableCellContent });\n        var rowHeight = 100 / rows;\n\n        return \"<table class='k-table' data-last>\" +\n                    new Array(rows + 1).join(\n                    \"<tr style='height:\" + rowHeight + \"%;'>\" +\n                        new Array(columns + 1).join(columnHtml) +\n                    \"</tr>\") +\n               \"</table>\";\n    },\n\n    postProcess: function(editor, range) {\n        var insertedTable = $(\"table[data-last]\", editor.document).removeAttr(\"data-last\");\n\n        range.setStart(insertedTable.find(TD)[0], 0);\n        range.collapse(true);\n\n        editor.selectRange(range);\n    },\n\n    exec: function() {\n        var options = this.options;\n        options.html = this._tableHtml(options.rows, options.columns);\n\n        InsertHtmlCommand.fn.exec.call(this);\n    }\n});\n\nvar PopupTool = Tool.extend({\n    initialize: function(ui, editor) {\n        var that = this;\n        var btn = $(\"<button>\" + editor.options.messages.tableWizard + \"</button>\");\n        var popup = $(this.options.popupTemplate).appendTo(\"body\").kendoPopup({\n            anchor: ui,\n            copyAnchorStyles: false,\n            open: this._open.bind(this),\n            activate: this._activate.bind(this),\n            close: this._close.bind(this)\n        }).data(\"kendoPopup\");\n\n        ui.on(\"click\", this._toggle.bind(this))\n          .on(\"keydown\", this._keydown.bind(this));\n\n        this._editor = editor;\n        this._popup = popup;\n\n        editor.tablePopup = this._popup;\n\n        var tableWizard = new Editor.TableWizardTool({\n            command: Editor.TableWizardCommand,\n            insertNewTable: true\n        });\n\n        registerTool(\"tableWizardInsert\", tableWizard);\n\n        btn.appendTo(popup.element);\n        btn.kendoButton({\n            icon: \"table-wizard\"\n        });\n\n        btn.on(\"click\", () => {\n            that._editor.exec(\"tableWizardInsert\");\n        });\n    },\n\n    popup: function() {\n        return this._popup;\n    },\n\n    _activate: $.noop,\n\n    _open: function() {\n        this._popup.options.anchor.addClass(ACTIVESTATE);\n    },\n\n    _close: function() {\n        this._popup.options.anchor.removeClass(ACTIVESTATE);\n    },\n\n    _keydown: function(e) {\n        var that = this,\n            keys = kendo.keys,\n            key = e.keyCode;\n\n        if (key == keys.ESC) {\n            that._popup.close();\n        } else if (key == keys.DOWN && e.altKey) {\n            that._popup.open();\n            that._setTableSize({ row: 1, col: 1 });\n        } else if (key === keys.ENTER) {\n            setTimeout(() => {\n                that._setTableSize({ row: 1, col: 1 });\n            });\n        }\n    },\n\n    _toggle: function(e) {\n        var button = $(e.target).closest(\".k-tool\");\n\n        if (!button.hasClass(\"k-disabled\")) {\n            this.popup().toggle();\n        }\n    },\n\n    update: function(ui) {\n        var popup = this.popup();\n\n        if (popup.wrapper && popup.wrapper.css(\"display\") == \"block\") {\n            popup.close();\n        }\n\n        ui.removeClass(\"k-hover\");\n    },\n\n    destroy: function() {\n        if (this._popup) {\n            this._popup.destroy();\n        }\n    }\n});\n\nvar InsertTableTool = PopupTool.extend({\n    init: function(options) {\n        this.cols = 8;\n        this.rows = 6;\n\n        PopupTool.fn.init.call(this, $.extend(options, {\n            command: TableCommand,\n            popupTemplate:\n                \"<div class='k-ct-popup'>\" +\n                    \"<div>\" +\n                        new Array(this.cols * this.rows + 1).join(\"<span class='k-ct-cell k-disabled'></span>\") +\n                    \"</div>\" +\n                    \"<div class='k-status'></div>\" +\n                \"</div>\"\n        }));\n    },\n\n    _activate: function() {\n        var that = this,\n            element = that._popup.element,\n            cells = element.find(\".k-ct-cell\"),\n            firstCell = cells.eq(0),\n            lastCell = cells.eq(cells.length - 1),\n            start = kendo.getOffset(firstCell),\n            end = kendo.getOffset(lastCell),\n            cols = that.cols,\n            rows = that.rows,\n            cellWidth, cellHeight;\n\n        element.find(\"*\").addBack().attr(\"unselectable\", \"on\");\n\n        end.left += lastCell[0].offsetWidth;\n        end.top += lastCell[0].offsetHeight;\n\n        cellWidth = (end.left - start.left) / cols;\n        cellHeight = (end.top - start.top) / rows;\n\n        function tableFromLocation(e) {\n            var w = $(window);\n            return {\n                row: Math.floor((e.clientY + w.scrollTop() - start.top) / cellHeight) + 1,\n                col: Math.floor((e.clientX + w.scrollLeft() - start.left) / cellWidth) + 1\n            };\n        }\n\n        element.autoApplyNS(NS)\n            .on(\"mousemove\", \".k-ct-cell\", function(e) {\n                that._setTableSize(tableFromLocation(e));\n            })\n            .on(\"mouseleave\", \".k-ct-cell\", function() {\n                that._setTableSize();\n            })\n            .on(\"down\", \".k-ct-cell\", function(e) {\n                e.preventDefault();\n                var touch = getTouches(e)[0];\n                that._exec(tableFromLocation(touch.location));\n            });\n    },\n\n    _valid: function(size) {\n        return size && size.row > 0 && size.col > 0 && size.row <= this.rows && size.col <= this.cols;\n    },\n\n    _exec: function(size) {\n        if (this._valid(size)) {\n            this._editor.exec(\"createTable\", {\n                rows: size.row,\n                columns: size.col\n            });\n            this._popup.close();\n        }\n    },\n\n    _setTableSize: function(size) {\n        var element = this._popup.element;\n        var status = element.find(\".k-status\");\n        var cells = element.find(\".k-ct-cell\");\n        var cols = this.cols;\n        var messages = this._editor.options.messages;\n\n        if (this._valid(size)) {\n            status.text(kendo.format(messages.createTableHint, size.row, size.col));\n\n            cells.each(function(i) {\n                $(this).toggleClass(\n                    SELECTEDSTATE,\n                    i % cols < size.col && i / cols < size.row\n                );\n            });\n        } else {\n            status.text(messages.createTable);\n            cells.removeClass(SELECTEDSTATE);\n        }\n    },\n\n    _keydown: function(e) {\n        var initiallyVisible = this._popup.visible();\n\n        PopupTool.fn._keydown.call(this, e);\n\n        if (!this._popup.visible()) {\n            return;\n        }\n\n        var keys = kendo.keys;\n        var key = e.keyCode;\n        var cells = this._popup.element.find(\".k-ct-cell\");\n        var focus = Math.max(cells.filter(\".k-selected\").last().index(), 0);\n        var selectedRows = Math.floor(focus / this.cols);\n        var selectedColumns = focus % this.cols;\n\n        var changed = false,\n            button;\n\n        if (key == keys.DOWN && !e.altKey) {\n            changed = true;\n            selectedRows++;\n        } else if (key == keys.UP) {\n            changed = true;\n            selectedRows--;\n        } else if (key == keys.RIGHT) {\n            changed = true;\n            selectedColumns++;\n        } else if (key == keys.LEFT) {\n            changed = true;\n            selectedColumns--;\n        } else if (key == keys.TAB) {\n            button = this._popup.element.find(\".k-button\");\n\n            if (button.length > 0) {\n                changed = true;\n                button.trigger(\"focus\");\n            }\n        }\n\n        var tableSize = {\n            row: Math.max(1, Math.min(this.rows, selectedRows + 1)),\n            col: Math.max(1, Math.min(this.cols, selectedColumns + 1))\n        };\n\n        if (key == keys.ENTER && initiallyVisible) {\n            this._exec(tableSize);\n        } else {\n            this._setTableSize(tableSize);\n        }\n\n        if (changed) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n    },\n\n    _open: function() {\n        var messages = this._editor.options.messages;\n\n        PopupTool.fn._open.call(this);\n\n        this.popup().element\n            .find(\".k-status\").text(messages.createTable).end()\n            .find(\".k-ct-cell\").removeClass(SELECTEDSTATE);\n    },\n\n    _close: function() {\n        PopupTool.fn._close.call(this);\n        this.popup().element.off(\".\" + NS);\n    }\n});\n\nvar TableModificationCommand = Command.extend({\n    undo: function() {\n        var point = this.restorePoint;\n        point.restoreHtml();\n\n        $(this.editor.body).find(\".k-element-resize-handle-wrapper\")\n            .each(function(index,el) {\n                el.remove();\n            });\n\n        this.editor.selectRange(point.toRange());\n    },\n    _clearColIndexAttr: function(table) {\n        dom.clearTableMappings(table, \"col-index\");\n    },\n    _mapColIndices: function(table) {\n        dom.reMapTableColumns(table, \"col-index\");\n    },\n    _findRowSpanCell: function(parent, rowIndex, colIndex) {\n        var row, cell;\n\n        for (var i = rowIndex; i >= 0; i--) {\n            row = parent.rows[i];\n            cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n            if (cell.length) {\n                return cell;\n            }\n        }\n    },\n    _resetElementResizing: function(editor) {\n        editor._destroyResizings();\n        editor._initializeColumnResizing();\n        editor._initializeRowResizing();\n        editor._initializeElementResizing();\n    },\n    _findNextTdInRow: function(row, colIndex) {\n        var lastTd = row.find(\"td:last-child\"),\n            lastIndex = parseInt(lastTd.attr(\"col-index\"), 10) + lastTd.prop(\"colSpan\") - 1,\n            td;\n\n        for (var i = colIndex; i <= lastIndex; i++) {\n            td = row.find(\"[col-index=\" + i + \"]\");\n            if (td.length) {\n                return td;\n            }\n        }\n    },\n    _adjustColgroups: function(row, table) {\n        var colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            cells = row.cells,\n            numberOfCells = cells.length,\n            i, colgroup, cell;\n\n        while (colElements.length > 0) {\n            colElements[0].remove();\n        }\n        while (colgroupElements.length > 0) {\n            colgroupElements[0].remove();\n        }\n\n        for (i = numberOfCells - 1; i >= 0; i--) {\n            cell = cells[i];\n            if (cell.getAttribute(SCOPE) === COLGROUP) {\n                colgroup = dom.createEmptyNode(this.editor.document, COLGROUP);\n                colgroup.setAttribute(\"span\", cell.getAttribute(COLSPAN));\n                table.prepend(colgroup);\n            } else {\n                table.prepend(dom.createEmptyNode(this.editor.document, COL));\n            }\n        }\n    },\n    _associateHeaderIds: function(table) {\n        dom.clearTableMappings(table, \"col-index\");\n        dom.reMapTableColumns(table, \"col-index\");\n        $(table).find(\"th, td\").removeAttr(\"id headers\");\n        dom.associateWithIds(table);\n    },\n    _getNumberOfColumns: function(table) {\n        return dom._getNumberOfColumns(table, \"td, th\");\n    }\n});\n\nvar InsertRowCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(true),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            position = this.options.position || \"after\",\n            cellCount, row, cell,\n            newRow, rowIndex, rowSpanIndex, createdCell;\n\n        if (!table || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        row = td.parentNode;\n        rowIndex = dom.findNodeIndex(row, true);\n\n        if (td.rowSpan > 1 && position === \"after\") {\n            row = table.rows[rowIndex + td.rowSpan - 1];\n        }\n\n        cellCount = this._getNumberOfColumns(table);\n        newRow = row.cloneNode(true);\n        $(newRow).empty();\n\n        for (var i = 0; i < cellCount; i = i + cell.prop(\"colSpan\")) {\n            cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n            if (cell.length) {\n                if (cell.prop(\"rowSpan\") > 1 && position === \"after\" && cell) {\n                    cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                } else {\n                    this._appendCell(newRow, cell);\n                }\n            } else {\n                rowIndex = dom.findNodeIndex(row, true);\n                cell = this._findRowSpanCell(row.parentElement, rowIndex, i);\n                rowSpanIndex = cell.closest(TR).index();\n\n                if (rowSpanIndex + cell.prop(\"rowSpan\") - 1 === rowIndex && position === \"after\") {\n                    this._appendCell(newRow, cell);\n                } else {\n                    cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                }\n            }\n\n            createdCell = $(newRow).find(\"[col-index=\" + i + \"]\");\n            if (createdCell.attr(SCOPE) === ROWGROUP && !createdCell.attr(ROWSPAN)) {\n                createdCell.attr(SCOPE, ROW);\n            }\n        }\n\n        if (position == \"before\") {\n            dom.insertBefore(newRow, row);\n        } else {\n            dom.insertAfter(newRow, row);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n\n        this._resetElementResizing(this.editor);\n    },\n    _appendCell: function(row, cell) {\n        var newCell;\n\n        newCell = cell.clone();\n        newCell.html(Editor.emptyTableCellContent);\n        newCell.removeAttr(ROWSPAN);\n        newCell.appendTo(row);\n    }\n});\n\nvar InsertColumnCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(true),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            columnIndex,\n            i,\n            rows = table && table.rows,\n            cell,\n            newCell,\n            position = this.options.position || \"after\";\n\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        columnIndex = parseInt(td.getAttribute(\"col-index\"),10);\n\n        if (td.colSpan > 1 && position === \"after\") {\n            td.setAttribute(\"col-index\", columnIndex + td.colSpan - 1);\n            columnIndex = columnIndex + td.colSpan - 1;\n        }\n\n        for (i = 0; i < rows.length; i++) {\n            cell = this._processForColSpan(rows[i], columnIndex, position, td);\n\n            if (!cell) {\n                continue;\n            }\n\n            newCell = cell.cloneNode();\n            newCell.innerHTML = Editor.emptyTableCellContent;\n            newCell.removeAttribute(COLSPAN);\n\n            if (newCell.getAttribute(SCOPE) && newCell.getAttribute(SCOPE) === COLGROUP) {\n                newCell.setAttribute(SCOPE, COL);\n            }\n\n            if (position == \"before\") {\n                dom.insertBefore(newCell, cell);\n            } else {\n                dom.insertAfter(newCell, cell);\n            }\n\n            this._resizeCells(newCell, cell);\n        }\n\n        if (colElements.length > 0 || colgroupElements.length > 0) {\n            this._adjustColgroups(rows[0], table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n\n        this._resetElementResizing(this.editor);\n    },\n    _processForColSpan: function(row, columnIndex, position, selectedCell) {\n        var cell,\n            colSpanEffect,\n            index = columnIndex - 1;\n\n        cell = $(row).find(\"[col-index=\" + columnIndex + \"]\")[0];\n\n        if (cell && cell.colSpan > 1 && position === \"after\" && cell !== selectedCell) {\n            cell.colSpan += 1;\n            return;\n        }\n\n        if (cell) {\n            return cell;\n        }\n\n        for (index; index >= 0; index--) {\n            cell = $(row).find(\"[col-index=\" + index + \"]\")[0];\n\n            if (cell && cell.colSpan > 1) {\n                break;\n            }\n        }\n\n        if (!cell) {\n            return;\n        }\n\n        colSpanEffect = parseInt(cell.getAttribute(\"col-index\"),10) + cell.colSpan - 1;\n\n        if (colSpanEffect === columnIndex && position === \"after\") {\n            return cell;\n        } else if (columnIndex <= colSpanEffect) {\n            cell.setAttribute(COLSPAN, cell.colSpan + 1);\n        }\n    },\n    _resizeCells: function(newCell, cell) {\n        var width = newCell.style.width,\n        parsedWidth, unit, calculatedWidth;\n\n        if (!width) {\n            return;\n        }\n\n        parsedWidth = parseFloat(width);\n        unit = width.slice(parsedWidth.toString().length);\n        calculatedWidth = (parsedWidth / 2) + unit;\n\n        newCell.style.width = calculatedWidth;\n        cell.style.width = calculatedWidth;\n    }\n});\n\nvar DeleteRowCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange();\n        var rows = RangeUtils.mapAll(range, function(node) {\n            return $(node).closest(TR)[0];\n        });\n        var td = dom.closest(range.endContainer, [TD, TH]);\n        var row = rows[0];\n        var rowSpan = td ? td.rowSpan : 1;\n        var rowIndex = $(rows[0]).index();\n        var table = dom.closest(row, TABLE);\n        var rowParent = row.parentElement;\n        var focusElement;\n\n        if (!table || (this.immutables() && Editor.Immutables.immutableParent(row))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        for (var x = 0; x < rowSpan; x++) {\n            if (rows.indexOf(rowParent.rows[rowIndex + x]) < 0) {\n                rows.push(rowParent.rows[rowIndex + x]);\n            }\n        }\n\n        if (table.rows.length <= rows.length) {\n            focusElement = dom.next(table);\n            if (!focusElement || dom.insignificant(focusElement)) {\n                focusElement = dom.prev(table);\n            }\n\n            if (focusElement && focusElement.rows) {\n                focusElement = focusElement.rows[0].cells[0];\n            }\n\n            dom.remove(table);\n            this._resetElementResizing(this.editor);\n        } else if (rowParent.rows.length <= rows.length) {\n            focusElement = rowParent.nextSibling;\n\n            if (!focusElement) {\n                focusElement = rowParent.previousSibling;\n            }\n\n            dom.remove(rowParent);\n        } else {\n            this._mapColIndices(table);\n\n            for (var i = 0; i < rows.length; i++) {\n                row = rows[i];\n                dom.removeTextSiblings(row);\n                focusElement = dom.next(row) || dom.prev(row);\n                focusElement = focusElement.cells[0];\n\n                // IE needs to focus the new row before removing the old one\n                this._focusElement(range, focusElement);\n                focusElement = null;\n\n                this._handleRowSpanCells(table, row);\n\n                dom.remove(row);\n            }\n\n            this._clearColIndexAttr(table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        } else if (dom.is(rowParent, THEAD) && $(table).find(\"[scope]\").length > 0) {\n            this._adjustColgroups(rowParent.rows[0], table);\n        }\n\n        if (focusElement) {\n            this._focusElement(range, focusElement);\n        }\n\n        this._resetElementResizing(this.editor);\n    },\n    _focusElement: function(range, node) {\n        range.setStart(node, 0);\n        range.collapse(true);\n        this.editor.selectRange(range);\n    },\n    _handleRowSpanCells: function(table, row) {\n        var index, cell, adjacentCell, nextRow, rowIndex = dom.findNodeIndex(row, true),\n            firstRow = table.rows[0],\n            lastCell = firstRow.cells[firstRow.cells.length - 1],\n            lastIndex = parseInt(lastCell.getAttribute(\"col-index\"),10) + lastCell.colSpan - 1;\n\n        for (index = 0; index <= lastIndex; index = index + cell.prop(\"colSpan\")) {\n            cell = $(row).find(\"[col-index=\" + index + \"]\");\n\n            if (cell.length && cell.prop(\"rowSpan\") > 1) {\n                nextRow = table.rows[rowIndex + 1];\n                adjacentCell = $(nextRow).find(\"[col-index=\" + (index + 1) + \"]\");\n\n                if (adjacentCell.length) {\n                    adjacentCell.before(cell);\n                } else {\n                    $(nextRow).append(cell);\n                }\n                this._reduceRowSpan(cell);\n            }\n\n            if (!cell.length) {\n                cell = this._findRowSpanCell(row.parentElement, rowIndex, index);\n                this._reduceRowSpan(cell);\n            }\n        }\n    },\n    _reduceRowSpan: function(td) {\n        var rowSpanValue = td.prop(\"rowSpan\") - 1;\n\n        if (rowSpanValue <= 1) {\n            td.removeAttr(ROWSPAN);\n            if (td.attr(SCOPE) === ROWGROUP) {\n                td.attr(SCOPE, ROW);\n            }\n        } else {\n            td.attr(ROWSPAN, rowSpanValue);\n        }\n    }\n});\n\nvar DeleteColumnCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table = dom.closest(td, TABLE),\n            rows = table && table.rows,\n            columnCount = rows && rows[0].cells.length,\n            colElements = table.getElementsByTagName(COL),\n            colgroupElements = table.getElementsByTagName(COLGROUP),\n            focusElement, columnIndex, i, cell, x;\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        if (columnCount == 1 || td.colSpan == columnCount) {\n            focusElement = dom.next(table);\n            if (!focusElement || dom.insignificant(focusElement)) {\n                focusElement = dom.prev(table);\n            }\n\n            if (focusElement && focusElement.rows) {\n                focusElement = focusElement.rows[0].cells[0];\n            }\n\n            dom.remove(table);\n            this._resetElementResizing(this.editor);\n        } else {\n            dom.removeTextSiblings(td);\n\n            focusElement = dom.next(td) || dom.prev(td);\n\n            this._mapColIndices(table);\n\n            columnIndex = parseInt(td.getAttribute(\"col-index\"), 10);\n\n            for (x = 0; x < td.colSpan; x++) {\n                for (i = 0; i < rows.length; i = i + (cell.prop(\"rowSpan\") || 1)) {\n                    cell = $(rows[i]).find(\"[col-index=\" + (columnIndex + x) + \"]\");\n\n                    if (cell.length && cell.prop(\"colSpan\") <= 1) {\n                        cell.remove();\n                    } else {\n                        this._handleColSpanCells(rows[i], columnIndex + x);\n                    }\n                }\n            }\n\n            this._clearColIndexAttr(table);\n        }\n\n        if (colElements.length > 0 || colgroupElements.length > 0) {\n            this._adjustColgroups(rows[0], table);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        if (focusElement) {\n            range.setStart(focusElement, 0);\n            range.collapse(true);\n            this.editor.selectRange(range);\n        }\n\n        this._resetElementResizing(this.editor);\n    },\n    _handleColSpanCells: function(row, colIndex) {\n        var cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n        if (cell.length && cell.prop(\"colSpan\") > 1) {\n            var clone = cell.clone(true);\n            cell.after(clone);\n            this._reduceColSpan(clone);\n            clone.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n            cell.remove();\n            return;\n        }\n\n        for (var i = colIndex; i >= 0; i--) {\n            cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n            if (cell.length) {\n                this._reduceColSpan(cell);\n                cell.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n                return;\n            }\n        }\n    },\n    _reduceColSpan: function(td) {\n        var colSpanValue = td.prop(\"colSpan\") - 1;\n\n        if (colSpanValue <= 1) {\n            td.removeAttr(COLSPAN);\n            if (td.attr(SCOPE) === COLGROUP) {\n                td.attr(SCOPE, COL);\n            }\n        } else {\n            td.attr(COLSPAN, colSpanValue);\n        }\n    }\n});\n\nvar MergeCellsHorizontallyCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            table, row, columnIndex, nextTd, colspan;\n\n            if (!td) {\n                this.releaseRange(range);\n                return;\n            }\n\n            table = dom.closest(td, TABLE);\n            row = td.parentNode;\n            columnIndex = dom.findNodeIndex(td, true);\n            nextTd = row.children[columnIndex + 1];\n\n            if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            columnIndex = parseInt($(td).attr(\"col-index\"), 10);\n            nextTd = $(row).find(\"[col-index=\" + (columnIndex + 1 + this._getColspan(td) - 1) + \"]\").get(0);\n\n            if (!nextTd || nextTd.rowSpan !== td.rowSpan || td.tagName !== nextTd.tagName) {\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n                return;\n            }\n\n            colspan = this._getColspan(td) + this._getColspan(nextTd);\n\n            $(td).prop(COLSPAN, colspan)\n                 .append(dom.emptyNode(nextTd) ? \"\" : \"<br/>\" + nextTd.innerHTML);\n\n            $(td).width(td.offsetWidth);\n            $(nextTd).remove();\n\n            if (td.getAttribute(SCOPE) === COL) {\n                td.setAttribute(SCOPE, COLGROUP);\n            }\n            if (td.getAttribute(SCOPE) === COLGROUP) {\n                this._adjustColgroups(row, table);\n            }\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n            this._resetElementResizing(this.editor);\n    },\n    _getColspan: function(td) {\n        return parseInt(td.getAttribute(COLSPAN), 10) || 1;\n    }\n});\n\nvar MergeCellsVerticallyCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            td = dom.closest(range.endContainer, [TD, TH]),\n            tr, parent, table, columnIndex, rowIndex, targetRow, bottomTd;\n\n            if (!td) {\n                this.releaseRange(range);\n                return;\n            }\n\n            tr = dom.closest(td, TR);\n            parent = dom.closest(td, [THEAD, TBODY]);\n            table = dom.closest(td, TABLE);\n            columnIndex = dom.findNodeIndex(td, true);\n            rowIndex = dom.findNodeIndex(tr, true);\n\n            if (rowIndex + 1 === parent.rows.length) {\n                this.releaseRange(range);\n                return;\n            }\n\n            targetRow = parent.rows[rowIndex + this._getRowspan(td)];\n            bottomTd = targetRow && targetRow.children[columnIndex];\n\n            if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                this.releaseRange(range);\n                return;\n            }\n\n            this._mapColIndices(table);\n\n            columnIndex = $(td).attr(\"col-index\");\n            bottomTd = $(targetRow).find(\"[col-index=\" + columnIndex + \"]\").get(0);\n\n            if (!bottomTd || bottomTd.colSpan !== td.colSpan || td.tagName !== bottomTd.tagName) {\n                this._clearColIndexAttr(table);\n                this.releaseRange(range);\n                return;\n            }\n\n            $(td).prop(ROWSPAN, this._getRowspan(td) + this._getRowspan(bottomTd))\n                 .append(dom.emptyNode(bottomTd) ? \"\" : \"<br/>\" + bottomTd.innerHTML);\n\n            if (td.getAttribute(SCOPE) === ROW) {\n                td.setAttribute(SCOPE, ROWGROUP);\n            }\n\n            $(bottomTd).remove();\n\n            if ($(table).find(\"[headers]\").length > 0) {\n                this._associateHeaderIds(table);\n            }\n\n            this._clearColIndexAttr(table);\n            this.releaseRange(range);\n    },\n    _getRowspan: function(td) {\n        return parseInt(td.getAttribute(ROWSPAN), 10) || 1;\n    }\n});\n\nvar SplitCellCommand = TableModificationCommand.extend({\n    exec: function() {\n        var range = this.lockRange(),\n            type = this.options.type,\n            attr = type === \"row\" ? COLSPAN : ROWSPAN,\n            td = dom.closest(range.endContainer, [TD, TH]),\n            parent = dom.closest(td, [THEAD, TBODY]),\n            table = dom.closest(td, TABLE),\n            emptyTd = dom.createEmptyNode(this.editor.document, td.nodeName.toLowerCase());\n\n        if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n            this.releaseRange(range);\n            return;\n        }\n\n        this._mapColIndices(table);\n\n        if (type === \"row\" && $(td).is(\"[\" + attr + \"]\")) {\n            this._splitCellHorizontally(td, parent, attr, emptyTd);\n        } else if (type === \"column\" && $(td).is(\"[\" + attr + \"]\")) {\n            this._splitCellVertically(td, parent, attr, emptyTd);\n        }\n\n        if ($(td).prop(attr.toLowerCase()) <= 1) {\n            $(td).removeAttr(attr);\n        }\n\n        if ($(table).find(\"[headers]\").length > 0) {\n            this._associateHeaderIds(table);\n        }\n\n        this._clearColIndexAttr(table);\n        this.releaseRange(range);\n    },\n    _getRowspanValue: function(td) {\n        return parseInt(td.getAttribute(ROWSPAN), 10);\n    },\n    _getColspanValue: function(td) {\n        return parseInt(td.getAttribute(COLSPAN), 10);\n    },\n    _splitCellHorizontally: function(td, parent, attr, emptyTd) {\n        var rowSpan = td.rowSpan,\n            colSpan = td.colSpan,\n            tdToAdd = $(emptyTd),\n            colSpanResult = Math.floor(colSpan / 2);\n\n            if (colSpanResult > 1) {\n                tdToAdd.attr(COLSPAN, colSpanResult);\n            }\n\n            if (rowSpan > 1) {\n                tdToAdd.attr(ROWSPAN, rowSpan);\n            }\n\n            $(td).prop(attr, colSpan - colSpanResult)\n                .after(tdToAdd);\n\n            $(td).width(td.offsetWidth);\n            tdToAdd.width(tdToAdd[0].offsetWidth);\n\n            if (td.hasAttribute(SCOPE)) {\n                if (td.getAttribute(SCOPE) === COLGROUP) {\n                    tdToAdd.attr(SCOPE, COL);\n                    if (!td.getAttribute(COLSPAN) || td.getAttribute(COLSPAN) === \"1\") {\n                        td.setAttribute(SCOPE, COL);\n                    }\n\n                    this._adjustColgroups(td.parentNode, parent.parentNode);\n                } else {\n                    tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                }\n            }\n    },\n    _splitCellVertically: function(td, parent, attr, emptyTd) {\n        var tr = dom.closest(td,TR),\n            columnIndex = parseInt($(td).attr(\"col-index\"), 10),\n            rowIndex = dom.findNodeIndex(tr, true),\n            rowSpan = td.rowSpan,\n            colSpan = td.colSpan,\n            rowSpanResult = Math.floor(rowSpan / 2),\n            targetRow = $(parent).find(TR).eq(rowIndex + rowSpan - rowSpanResult),\n            nextTd = this._findNextTdInRow(targetRow, columnIndex + colSpan),\n            tdToAdd = $(emptyTd);\n\n            if (rowSpanResult > 1) {\n                tdToAdd.attr(ROWSPAN, rowSpanResult);\n            }\n            if (colSpan > 1) {\n                tdToAdd.attr(COLSPAN, colSpan);\n            }\n\n            if (nextTd && nextTd.length) {\n                nextTd.before(tdToAdd);\n            } else {\n                targetRow.append(tdToAdd);\n            }\n\n            $(td).prop(attr, rowSpan - rowSpanResult);\n\n            if (td.hasAttribute(SCOPE)) {\n                if (td.getAttribute(SCOPE) === ROWGROUP) {\n                    tdToAdd.attr(SCOPE, ROW);\n                    if (!td.getAttribute(ROWSPAN) || td.getAttribute(ROWSPAN) === \"1\") {\n                        td.setAttribute(SCOPE, ROW);\n                    }\n                } else {\n                    tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                }\n            }\n    }\n});\n\nvar TableModificationTool = Tool.extend({\n    command: function(options) {\n        var commandsMap = {\n            row: {\n                insert: InsertRowCommand,\n                \"delete\": DeleteRowCommand,\n                merge: MergeCellsHorizontallyCommand,\n                split: SplitCellCommand\n            },\n            column: {\n                insert: InsertColumnCommand,\n                \"delete\": DeleteColumnCommand,\n                merge: MergeCellsVerticallyCommand,\n                split: SplitCellCommand\n            }\n        };\n\n        options = extend(options, this.options);\n        options.action = options.action || \"insert\";\n\n        return new commandsMap[options.type][options.action](options);\n    },\n\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nvar TableFormatCommand = FormatCommand.extend({\n    exec: function() {\n        var that = this;\n        var editor = that.editor;\n\n        FormatCommand.fn.exec.call(this);\n\n        if (editor.elementResizing) {\n            editor.elementResizing._showResizeHandles();\n        }\n    }\n});\n\n// var tableAlignFormatFinder = BlockFormatFinder.extend({\n\n// });\n\nvar TableFormatTool = BlockFormatTool.extend({\n    update: function(ui, nodes) {\n        var isTable = !tableFormatFinder.isFormatted(nodes),\n            isFormatted = this.options.finder.isFormatted(nodes, this.isTable),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (toolbar) {\n            toolbar.toggle(ui, isFormatted);\n        }\n\n        if (isTable === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    },\n    command: function(commandArguments) {\n        var that = this;\n\n        return new TableFormatCommand(extend(commandArguments, {\n            formatter: that.options.formatter\n        }));\n    },\n    isTable: function(node) {\n        return dom.is(node, \"table\");\n    }\n});\n\nextend(kendo.ui.editor, {\n    PopupTool: PopupTool,\n    TableCommand: TableCommand,\n    InsertTableTool: InsertTableTool,\n    TableFormatTool: TableFormatTool,\n    TableFormatCommand: TableFormatCommand,\n    TableModificationTool: TableModificationTool,\n    InsertRowCommand: InsertRowCommand,\n    InsertColumnCommand: InsertColumnCommand,\n    DeleteRowCommand: DeleteRowCommand,\n    DeleteColumnCommand: DeleteColumnCommand,\n    MergeCellsHorizontallyCommand: MergeCellsHorizontallyCommand,\n    MergeCellsVerticallyCommand: MergeCellsVerticallyCommand,\n    SplitCellCommand: SplitCellCommand\n});\n\n\nregisterTool(\"createTable\", new InsertTableTool({ ui: { popup: true, overflow: \"never\" } }));\n\nregisterTool(\"addColumnLeft\", new TableModificationTool({ type: \"column\", position: \"before\" }));\nregisterTool(\"addColumnRight\", new TableModificationTool({ type: \"column\" }));\nregisterTool(\"addRowAbove\", new TableModificationTool({ type: \"row\", position: \"before\" }));\nregisterTool(\"addRowBelow\", new TableModificationTool({ type: \"row\" }));\nregisterTool(\"deleteRow\", new TableModificationTool({ type: \"row\", action: \"delete\" }));\nregisterTool(\"deleteColumn\", new TableModificationTool({ type: \"column\", action: \"delete\" }));\nregisterTool(\"mergeCellsHorizontally\", new TableModificationTool({ type: \"row\", action: \"merge\" }));\nregisterTool(\"mergeCellsVertically\", new TableModificationTool({ type: \"column\", action: \"merge\" }));\nregisterTool(\"splitCellHorizontally\", new TableModificationTool({ type: \"row\", action: \"split\" }));\nregisterTool(\"splitCellVertically\", new TableModificationTool({ type: \"column\", action: \"split\" }));\n\nregisterFormat(\"tableAlignLeft\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"\", marginRight: \"auto\" } } },\n    { tags: [\"table\"], attr: { align: \"left\" } }\n]);\nregisterTool(\"tableAlignLeft\", new TableFormatTool({\n    format: formats.tableAlignLeft,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\nregisterFormat(\"tableAlignCenter\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"auto\" } } },\n    { tags: [\"table\"], attr: { align: \"center\" } }\n]);\nregisterTool(\"tableAlignCenter\", new TableFormatTool({\n    format: formats.tableAlignCenter,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\nregisterFormat(\"tableAlignRight\", [\n    { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"\" } } },\n    { tags: [\"table\"], attr: { align: \"right\" } }\n]);\nregisterTool(\"tableAlignRight\", new TableFormatTool({\n    format: formats.tableAlignRight,\n    ui: {\n        togglable: true,\n        group: \"tableAlign\"\n    }\n}));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        Class = kendo.Class,\n        editorNS = kendo.ui.editor,\n        RangeUtils = editorNS.RangeUtils,\n        dom = editorNS.Dom,\n        RestorePoint = editorNS.RestorePoint,\n        Marker = editorNS.Marker,\n        browser = kendo.support.browser,\n        extend = $.extend;\n\nvar Clipboard = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n        var pasteCleanup = editor.options.pasteCleanup;\n        this.nonSplittableTagsOnPaste = editor.options.nonSplittableTagsOnPaste || [];\n        this.cleaners = [\n            new ScriptCleaner(pasteCleanup),\n            new TabCleaner(pasteCleanup),\n            new MSWordFormatCleaner(pasteCleanup),\n            new WebkitFormatCleaner(pasteCleanup),\n            new HtmlTagsCleaner(pasteCleanup),\n            new HtmlAttrCleaner(pasteCleanup),\n            new HtmlContentCleaner(pasteCleanup),\n            new CustomCleaner(pasteCleanup) //always keep at end\n        ];\n    },\n\n    htmlToFragment: function(html) {\n        var editor = this.editor,\n            doc = editor.document,\n            container = dom.create(doc, 'div'),\n            fragment = doc.createDocumentFragment();\n\n        container.innerHTML = html;\n\n        while (container.firstChild) {\n            fragment.appendChild(container.firstChild);\n        }\n\n        return fragment;\n    },\n\n    isBlock: function(html) {\n        return (/<(div|p|ul|ol|table|h[1-6])/i).test(html);\n    },\n\n    _startModification: function() {\n        var range;\n        var restorePoint;\n        var editor = this.editor;\n\n        if (this._inProgress) {\n            return;\n        }\n\n        this._inProgress = true;\n\n        range = editor.getRange();\n        restorePoint = new RestorePoint(range, editor.body);\n\n        dom.persistScrollTop(editor.document);\n\n        return { range: range, restorePoint: restorePoint };\n    },\n\n    _endModification: function(modificationInfo) {\n        editorNS._finishUpdate(this.editor, modificationInfo.restorePoint);\n\n        this.editor._selectionChange();\n\n        this._inProgress = false;\n    },\n\n    _contentModification: function(before, after) {\n        var that = this;\n        var editor = that.editor;\n        var modificationInfo = that._startModification();\n\n        if (!modificationInfo) {\n            return;\n        }\n\n        before.call(that, editor, modificationInfo.range);\n\n        setTimeout(function() {\n            after.call(that, editor, modificationInfo.range);\n\n            that._endModification(modificationInfo);\n        });\n    },\n\n    _removeBomNodes: function(range) {\n        var nodes = RangeUtils.textNodes(range);\n\n        for (var i = 0; i < nodes.length; i++) {\n            nodes[i].nodeValue = dom.stripBom(nodes[i].nodeValue) || nodes[i].nodeValue;\n        }\n    },\n\n    _onBeforeCopy: function(range) {\n        var marker = new Marker();\n        marker.add(range);\n\n        this._removeBomNodes(range);\n\n        marker.remove(range);\n\n        this.editor.selectRange(range);\n    },\n\n    oncopy: function() {\n        this._onBeforeCopy(this.editor.getRange());\n    },\n\n    oncut: function() {\n        this._onBeforeCopy(this.editor.getRange());\n        this._contentModification($.noop, $.noop);\n    },\n\n    _fileToDataURL: function(blob) {\n        var deferred = $.Deferred();\n\n        var reader = new FileReader();\n\n        if (!(blob instanceof window.File) && blob.getAsFile) {\n            blob = blob.getAsFile();\n        }\n\n        reader.onload = deferred.resolve.bind(deferred);\n\n        reader.readAsDataURL(blob);\n\n        return deferred.promise();\n    },\n\n    _triggerPaste: function(html, options) {\n        var args = { html: html || \"\" };\n\n        args.html = args.html.replace(/\\ufeff/g, \"\");\n\n        this.editor.trigger(\"paste\", args);\n\n        this.paste(args.html, options || {});\n    },\n\n    _handleImagePaste: function(e) {\n        if (!('FileReader' in window) || (browser.msie && browser.version > 10)) {\n            return;\n        }\n\n        var clipboardData = e.clipboardData || e.originalEvent.clipboardData ||\n                    window.clipboardData || {};\n\n        var items = clipboardData.items || clipboardData.files;\n\n        return this._insertImages(items);\n    },\n\n    _insertImages: function(items) {\n        if (!items) {\n            return;\n        }\n\n        var images = $.grep(items, function(item) { return (/^image\\//i).test(item.type); });\n        var html = $.grep(items, function(item) { return (/^text\\/html/i).test(item.type); });\n\n        if (html.length || !images.length) {\n            return;\n        }\n\n        var modificationInfo = this._startModification();\n\n        if (!modificationInfo) {\n            return;\n        }\n\n        $.when.apply($, $.map(images, this._fileToDataURL))\n            .done((function() {\n                var results = Array.prototype.slice.call(arguments);\n                var html = $.map(results, function(e) {\n                    return '<img src=\"' + e.target.result + '\" />';\n                }).join(\"\");\n\n                this._triggerPaste(html);\n\n                this._endModification(modificationInfo);\n            }).bind(this));\n\n        return true;\n    },\n\n    onpaste: function(e) {\n        if (this.editor.body.contentEditable === \"false\") {\n            return;\n        }\n\n        if (this._handleImagePaste(e)) {\n            e.preventDefault();\n            return;\n        }\n\n        this.expandImmutablesIn();\n\n        this._contentModification(\n            function beforePaste(editor, range) {\n                var clipboardNode = dom.create(editor.document, 'div', {\n                        className: 'k-paste-container',\n                        innerHTML: \"\\ufeff\"\n                    });\n                var browser = kendo.support.browser;\n                var body = editor.body;\n\n                this._decoreateClipboardNode(clipboardNode, body);\n\n                body.appendChild(clipboardNode);\n\n                //Browser scrolls to clipboardNode\n                if (browser.webkit) {\n                    this._moveToCaretPosition(clipboardNode, range);\n                }\n\n                // text ranges are slow in IE10-, DOM ranges are buggy in IE9-10\n                if (browser.msie && browser.version < 11) {\n                    e.preventDefault();\n                    var r = editor.createRange();\n                    r.selectNodeContents(clipboardNode);\n                    editor.selectRange(r);\n                    var textRange = editor.document.body.createTextRange();\n                    textRange.moveToElementText(clipboardNode);\n                    $(body).off('paste');\n                    textRange.execCommand('Paste');\n                    $(body).on('paste', this.onpaste.bind(this));\n                } else {\n                    var clipboardRange = editor.createRange();\n                    clipboardRange.selectNodeContents(clipboardNode);\n                    editor.selectRange(clipboardRange);\n                }\n\n                range.deleteContents();\n            },\n            function afterPaste(editor, range) {\n                var html = \"\", containers;\n\n                editor.selectRange(range);\n\n                containers = $(editor.body).children(\".k-paste-container\");\n\n                containers.each(function() {\n                    var lastChild = this.lastChild;\n\n                    if (lastChild && dom.is(lastChild, 'br')) {\n                        dom.remove(lastChild);\n                    }\n\n                    html += this.innerHTML;\n                });\n\n                containers.remove();\n\n                this._triggerPaste(html, { clean: true });\n            }\n        );\n    },\n    ondragover: function(e) {\n        if (browser.msie || browser.edge) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    },\n    ondrop: function(e) {\n        if (!('FileReader' in window)) {\n            return;\n        }\n\n        var dataTransfer = (e.originalEvent || e).dataTransfer || {};\n        var items = dataTransfer.items || dataTransfer.files;\n\n        if (this._insertImages(items)) {\n            e.preventDefault();\n        }\n    },\n    _decoreateClipboardNode: function(node, body) {\n        if (!browser.msie && !browser.webkit) {\n            return;\n        }\n\n        node = $(node);\n        node.css({\n            borderWidth: \"0px\",\n            width: \"0px\",\n            height: \"0px\",\n            overflow: \"hidden\",\n            margin: \"0\",\n            padding: \"0\"\n        });\n\n        if (browser.msie) {\n            //node inherits BODY styles and this causes the browser to add additional\n            var documentElement = $(body.ownerDocument.documentElement);\n\n            node.css({\n                fontVariant: \"normal\",\n                fontWeight: \"normal\",\n                lineSpacing: \"normal\",\n                lineHeight: \"normal\",\n                textDecoration: \"none\"\n            });\n            var color = documentElement.css(\"color\");\n            if (color) {\n                node.css(\"color\", color);\n            }\n            var fontFamily = documentElement.css(\"fontFamily\");\n            if (fontFamily) {\n                node.css(\"fontFamily\", fontFamily);\n            }\n            var fontSize = documentElement.css(\"fontSize\");\n            if (fontSize) {\n                node.css(\"fontSize\", fontSize);\n            }\n        }\n    },\n    _moveToCaretPosition: function(node, range) {\n        var that = this;\n        var body = that.editor.body;\n        var nodeOffset = dom.offset(node, body);\n        var caretOffset = that._caretOffset(range, body);\n        var translateX = caretOffset.left - nodeOffset.left;\n        var translateY = caretOffset.top - nodeOffset.top;\n        var translate = \"translate(\" + translateX + \"px,\" + translateY + \"px)\";\n\n        $(node).css({\n            \"-webkit-transform\": translate,\n            \"transform\": translate\n        });\n    },\n    _caretOffset: function(range, body) {\n        var editor = this.editor;\n        var caret = dom.create(editor.document, 'span', { innerHTML: \"\\ufeff\" });\n        var startContainer = range.startContainer;\n        var rangeChanged;\n\n        if (range.collapsed) {\n            var isStartTextNode = dom.isDataNode(startContainer);\n            if (isStartTextNode && (dom.isBom(startContainer) || range.startOffset === 0)) {\n                dom.insertBefore(caret, startContainer);\n            } else if (isStartTextNode && range.startOffset === startContainer.length) {\n                dom.insertAfter(caret, startContainer);\n            } else {\n                range.insertNode(caret);\n                rangeChanged = true;\n            }\n        } else {\n            startContainer = startContainer === body ?\n                startContainer.childNodes[range.startOffset] : startContainer;\n            dom.insertBefore(caret, startContainer);\n        }\n\n        var offset = dom.offset(caret, body);\n        var prev = caret.previousSibling;\n        var next = caret.nextSibling;\n\n        dom.remove(caret);\n\n        if (rangeChanged && dom.isDataNode(prev) && dom.isDataNode(next) && !dom.isBom(prev) && !dom.isBom(next)) {\n            var prevLength = prev.length;\n            next.data = prev.data + next.data;\n            range.setStart(next, prevLength);\n            dom.remove(prev);\n\n            range.collapse(true);\n            editor.selectRange(range);\n        }\n\n        return offset;\n    },\n\n    expandImmutablesIn: function(range) {\n        var editor = this.editor;\n        if (editor && editor.options.immutables) {\n            var body = editor.body;\n            range = range || editor.getRange();\n            kendo.ui.editor.Immutables.expandImmutablesIn(range);\n            if (range.startContainer === body && range.startOffset === 0) {\n                var doc = body.ownerDocument;\n                var bomNode = doc.createTextNode(\"\\ufeff\");\n                body.insertBefore(bomNode, body.childNodes[0]);\n                range.setStartBefore(bomNode);\n            }\n            editor.selectRange(range);\n        }\n    },\n\n    splittableParent: function(block, node) {\n        var parentNode, body;\n\n        if (block) {\n            return dom.closestEditableOfType(node, ['p', 'ul', 'ol']) || node.parentNode;\n        }\n\n        parentNode = node.parentNode;\n        body = node.ownerDocument.body;\n\n        if (dom.isInline(parentNode)) {\n            while (parentNode.parentNode != body && !dom.isBlock(parentNode.parentNode)) {\n                parentNode = parentNode.parentNode;\n            }\n        }\n\n        return parentNode;\n    },\n\n    paste: function(html, options) {\n        var editor = this.editor,\n            nonSplittableTagsOnPaste = this.nonSplittableTagsOnPaste,\n            preventSplit = false,\n            unwrapPasted = false,\n            i, l, childNodes, isList;\n\n        this.expandImmutablesIn();\n\n        options = extend({ clean: false, split: true }, options);\n\n        if (!options.skipCleaners) {\n            for (i = 0, l = this.cleaners.length; i < l; i++) {\n                if (this.cleaners[i].applicable(html)) {\n                    html = this.cleaners[i].clean(html);\n                }\n            }\n        }\n\n        if (options.clean) {\n            // remove br elements which immediately precede block elements\n            html = html.replace(/(<br>(\\s|&nbsp;)*)+(<\\/?(div|p|li|col|t))/ig, \"$3\");\n            // remove empty inline elements\n            html = html.replace(/<(a|span)[^>]*><\\/\\1>/ig, \"\");\n        }\n\n        html = html.replace(/<(a|span|font)([^>]*)> <\\/\\1>/ig, \"<$1$2>&nbsp;</$1>\");\n\n        // It is possible in IE to copy just <li> tags\n        html = html.replace(/^<li/i, '<ul><li').replace(/li>$/g, 'li></ul>');\n\n        var block = this.isBlock(html);\n\n        editor.focus();\n        var range = editor.getRange();\n        range.deleteContents();\n\n        if (range.startContainer == editor.document) {\n            range.selectNodeContents(editor.body);\n        }\n\n        var marker = new Marker();\n        var caret = marker.addCaret(range);\n\n        var parent = this.splittableParent(block, caret);\n        var unwrap = false;\n\n        for (i = 0; i < nonSplittableTagsOnPaste.length; i++) {\n            const splitter = nonSplittableTagsOnPaste[i],\n                tag = splitter.tag || splitter;\n\n            if (dom.is(parent, tag)) {\n                preventSplit = true;\n                unwrapPasted = splitter.unwrap !== false;\n                break;\n            }\n        }\n\n        var splittable = parent != editor.body && !dom.is(parent, \"td\") && !preventSplit;\n\n        if (options.split && splittable && (block || dom.isInline(parent))) {\n            range.selectNode(caret);\n            RangeUtils.split(range, parent, true);\n            unwrap = true;\n        }\n\n        var fragment = this.htmlToFragment(html);\n\n        if (fragment.firstChild && fragment.firstChild.className === \"k-paste-container\") {\n            var fragmentsHtml = [];\n            for (i = 0, l = fragment.childNodes.length; i < l; i++) {\n                fragmentsHtml.push(fragment.childNodes[i].innerHTML);\n            }\n\n            fragment = this.htmlToFragment(fragmentsHtml.join('<br />'));\n        }\n\n        childNodes = fragment.childNodes;\n\n        if (unwrapPasted) {\n            isList = dom.list(childNodes[0]);\n            dom.unwrap(childNodes[0]);\n\n            if (isList) {\n                range.selectNode(caret.parentNode);\n            }\n        }\n\n        $(childNodes)\n            .filter(\"table\").addClass(\"k-table\").end()\n            .find(\"table\").addClass(\"k-table\");\n\n        $(childNodes).each(function(index, elm) {\n           if (dom.isBlock(elm) && !dom.isSelfClosing(elm) && elm.innerHTML === \"\") {\n                elm.appendChild(editor.document.createTextNode(\"\\ufeff\"));\n           }\n        });\n\n        range.insertNode(fragment);\n\n        parent = this.splittableParent(block, caret);\n        if (unwrap) {\n            while (caret.parentNode != parent) {\n                dom.unwrap(caret.parentNode);\n            }\n\n            dom.unwrap(caret.parentNode);\n        }\n\n        dom.normalize(range.commonAncestorContainer);\n        caret.style.display = 'inline';\n        dom.restoreScrollTop(editor.document);\n        dom.scrollTo(caret);\n        marker.removeCaret(range);\n\n        var rangeEnd = range.commonAncestorContainer.parentNode;\n        if (range.collapsed && dom.name(rangeEnd) == \"tbody\" || range.collapsed && dom.name(rangeEnd) == \"thead\") {\n            range.setStartAfter($(rangeEnd).closest(\"table\")[0]);\n            range.collapse(true);\n        }\n\n        var focusedTable = $(range.commonAncestorContainer.parentNode).closest(\"table\");\n\n        if (focusedTable.get(0)) {\n            var siblingNodes = focusedTable.parent().contents();\n            var lastSiblingIndex = siblingNodes.length - 1;\n            var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n            while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n                lastSiblingIndex -= 1;\n                lastSibling = siblingNodes.get(lastSiblingIndex);\n            }\n\n            if (lastSibling === focusedTable.get(0) && !focusedTable.parents(\"table\").length) {\n                dom.insertAfter(dom.createEmptyNode(editor.document, \"p\"), focusedTable[0]);\n            }\n        }\n\n        editor._handleSpaceAndNewLines();\n        editor.selectRange(range);\n    }\n});\n\nvar Cleaner = Class.extend({\n    init: function(options) {\n        this.options = options || {};\n        this.replacements = [];\n    },\n\n    clean: function(html, customReplacements) {\n        var that = this,\n            replacements = customReplacements || that.replacements,\n            i, l;\n\n        for (i = 0, l = replacements.length; i < l; i += 2) {\n            html = html.replace(replacements[i], replacements[i + 1]);\n        }\n\n        return html;\n    }\n});\n\nvar ScriptCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.replacements = [\n            /<(\\/?)script([^>]*)>/i, \"<$1telerik:script$2>\"\n        ];\n    },\n\n    applicable: function(html) {\n        return !this.options.none && (/<script[^>]*>/i).test(html);\n    }\n});\n\nvar TabCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        var replacement = ' ';\n        this.replacements = [\n            /<span\\s+class=\"Apple-tab-span\"[^>]*>\\s*<\\/span>/gi, replacement,\n            /\\t/gi, replacement,\n            /&nbsp;&nbsp; &nbsp;/gi, replacement\n        ];\n    },\n\n    applicable: function(html) {\n        return (/&nbsp;&nbsp; &nbsp;|class=\"?Apple-tab-span/i).test(html);\n    }\n});\n\nvar MSWordFormatCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.junkReplacements = [\n            /<\\?xml[^>]*>/gi, '',\n            /<!--(.|\\n)*?-->/g, '', /* comments */\n            /&quot;/g, \"'\", /* encoded quotes (in attributes) */\n            /<o:p>&nbsp;<\\/o:p>/ig, '&nbsp;',\n            /<\\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\\n)*?<\\/(meta|link|style|o:|v:|x:)[^>]*>)?/ig, '', /* external references and namespaced tags */\n            /<\\/o>/g, ''\n        ];\n        this.replacements = this.junkReplacements.concat([\n            /(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*(<\\/?(h[1-6]|hr|p|div|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|caption|address|pre|form|blockquote|dl|dt|dd|dir|fieldset)[^>]*>)(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*/g, '$1',\n            /<br><br>/g, '<BR><BR>',\n            /<br>\\n/g, '<br/>',\n            /<br>(?!\\n)/g, ' ',\n            /<table([^>]*)>(\\s|&nbsp;)+<t/gi, '<table$1><t',\n            /<tr[^>]*>(\\s|&nbsp;)*<\\/tr>/gi, '',\n            /<tbody[^>]*>(\\s|&nbsp;)*<\\/tbody>/gi, '',\n            /<table[^>]*>(\\s|&nbsp;)*<\\/table>/gi, '',\n            /<BR><BR>/g, '<br>',\n            /^\\s*(&nbsp;)+/gi, '',\n            /(&nbsp;|<br[^>]*>)+\\s*$/gi, '',\n            /mso-[^;\"]*;?/ig, '', /* office-related CSS attributes */\n            /<(\\/?)b(\\s[^>]*)?>/ig, '<$1strong$2>',\n            /<(\\/?)font(\\s[^>]*)?>/ig, this.convertFontMatch,\n            /<(\\/?)i(\\s[^>]*)?>/ig, '<$1em$2>',\n            /style=([\"|'])\\s*\\1/g, '', /* empty style attributes */\n            /(<br[^>]*>)?\\n/g, function($0, $1) { return $1 ? $0 : ' '; } /* phantom extra line feeds */\n        ]);\n    },\n\n    convertFontMatch: function(match, closing, args) {\n        var faceRe = /face=['\"]([^'\"]+)['\"]/i;\n        var face = faceRe.exec(args);\n        var family = args && face && face[1];\n\n        if (closing) {\n            return '</span>';\n        } else if (family) {\n            return '<span style=\"font-family:' + family + '\">';\n        } else {\n            return '<span>';\n        }\n    },\n\n    applicable: function(html) {\n        return (/class=\"?Mso/i).test(html) ||\n               (/style=\"[^\"]*mso-/i).test(html) ||\n               (/urn:schemas-microsoft-com:office/).test(html);\n    },\n\n    stripEmptyAnchors: function(html) {\n        return html.replace(/<a([^>]*)>\\s*<\\/a>/ig, function(a, attributes) {\n            if (!attributes || attributes.indexOf(\"href\") < 0) {\n                return \"\";\n            }\n\n            return a;\n        });\n    },\n\n    listType: function(p, listData) {\n        var html = p.innerHTML;\n        var text = dom.innerText(p);\n\n        var startingSymbol;\n        var matchSymbol = html.match(/^(?:<span [^>]*texhtml[^>]*>)?<span [^>]*(?:Symbol|Wingdings)[^>]*>([^<]+)/i);\n        var symbol = matchSymbol && matchSymbol[1];\n        var isNumber = /^[a-z\\d]/i.test(symbol);//including alpha-numeric and roman numerals\n\n        var trimStartText = function(text) {\n            return text.replace(/^(?:&nbsp;|[\\u00a0\\n\\r\\s])+/, '');\n        };\n\n        if (matchSymbol) {\n            startingSymbol = true;\n        }\n\n        html = html.replace(/<\\/?\\w+[^>]*>/g, '').replace(/&nbsp;/g, '\\u00a0');\n\n        if ((!startingSymbol && /^[\\u2022\\u00b7\\u00a7\\u00d8o]\\u00a0+/.test(html)) ||\n            (startingSymbol && /^.\\u00a0+/.test(html)) ||\n            (symbol && !isNumber && listData)) {\n            return {\n                tag: 'ul',\n                style: this._guessUnorderedListStyle(trimStartText(text))\n            };\n        }\n\n        if (/^\\s*\\w+[\\.\\)][\\u00a0 ]{2,}/.test(html)) {\n            return {\n                tag: 'ol',\n                style: this._guessOrderedListStyle(trimStartText(text))\n            };\n        }\n    },\n\n    _convertToLi: function(p) {\n        var content;\n\n        if (p.childNodes.length == 1) {\n            content = p.firstChild.nodeType === dom.nodeTypes.TEXT_NODE ? dom.innerText(p) : p.firstChild.innerHTML.replace(/^\\w+[\\.\\)](&nbsp;)+ /, \"\");\n            content = this._checkForBullet(content);\n        } else {\n            content = this._getHtmlNoBullet(p);\n        }\n\n        dom.remove(p);\n\n        return dom.create(document, 'li', { innerHTML: content });\n    },\n\n    _checkForBullet: function(html) {\n        var p = dom.create(document, 'p', { innerHTML: html });\n        var bulletRgx = /^\\s*\\w+[\\.\\)]\\s+/;\n\n        if (bulletRgx.test(p.innerText)) {\n            return this._getHtmlNoBullet(p);\n        }\n\n        return html;\n    },\n\n    _getHtmlNoBullet: function(element) {\n        var content,\n            name = dom.name(element);\n\n        dom.remove(element.firstChild);\n\n        // check for roman numerals\n        if (element.firstChild.nodeType == 3) {\n            if (/^[ivxlcdm]+\\.$/i.test(element.firstChild.nodeValue)) {\n                dom.remove(element.firstChild);\n            }\n        }\n\n        if (/^(&nbsp;|\\s)+$/i.test(element.firstChild.innerHTML)) {\n            dom.remove(element.firstChild);\n        }\n\n        if (name != \"p\") {\n            content = \"<\" + name + \">\" + element.innerHTML + \"</\" + name + \">\";\n        } else {\n            content = element.innerHTML;\n        }\n\n        return content;\n    },\n\n    _guessUnorderedListStyle: function(symbol) {\n        if (/^[\\u2022\\u00b7\\u00FC\\u00D8\\u002dv-]/.test(symbol)) {\n            return null;//return \"disc\"; //default CSS value\n        } else if (/^o/.test(symbol)) {\n            return \"circle\";\n        } else {\n            return \"square\";\n        }\n    },\n    _guessOrderedListStyle: function(symbol) {\n        var listType = null;\n        if (!/^\\d/.test(symbol)) {\n            listType = (/^[a-z]/.test(symbol) ? 'lower-' : 'upper-') +\n                       (/^[ivxlcdm]/i.test(symbol) ? 'roman' : 'alpha');\n        }\n\n        return listType;\n    },\n\n    extractListLevels: function(html) {\n        var msoListRegExp = /style=['\"]?[^'\"]*?mso-list:\\s?[a-zA-Z]+(\\d+)\\s[a-zA-Z]+(\\d+)\\s(\\w+)/gi;\n\n        html = html.replace(msoListRegExp, function(match, list, level) {\n            return kendo.format('data-list=\"{0}\" data-level=\"{1}\" {2}', list, level, match);\n        });\n\n        return html;\n    },\n\n    _createList: function(type, styleType) {\n        return dom.create(document, type, {\n            style: { listStyleType: styleType }\n        });\n    },\n\n    lists: function(placeholder) {\n        var blockChildren = $(placeholder).find(dom.blockElements.join(',')),\n            lastMargin = -1,\n            name,\n            levels = {},\n            li,\n            rootMargin,\n            rootIndex,\n            lastRootLi,\n            isLastRootLi,\n            rootList,\n            i, p, type, margin, list, listData,\n            acceptedNameTags = [\"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n            isParentTable = false;\n\n        for (i = 0; i < blockChildren.length; i++) {\n            p = blockChildren[i];\n            listData = $(p).data();\n            var listIndex = listData.list;\n            name = dom.name(p);\n            isParentTable = !!$(p).parents(\"table\").length;\n\n            if (isParentTable) {\n                continue;\n            }\n\n            var listType = this.listType(p, listData);\n            type = listType && listType.tag;\n\n            if (!type || acceptedNameTags.indexOf(name) < 0) {\n                if (!p.innerHTML) {\n                    dom.remove(p);\n                } else if (li && !isLastRootLi) {\n                    li.appendChild(p);\n                }\n                continue;\n            }\n\n            // not supported list levels in ie\n            if (browser.msie) {\n                continue;\n            }\n\n            margin = listData.level || parseFloat(p.style.marginLeft || 0);\n\n            var levelType = type + listIndex;\n            if (!levels[margin]) {\n                levels[margin] = {};\n            }\n\n            if (!rootMargin || rootMargin < 0) {\n                rootMargin = margin;\n                rootIndex = listIndex;\n                lastRootLi = $(placeholder).find(\"[data-list='\" + rootIndex + \"']\").last()[0];\n                rootList = this._createList(type, listType.style);\n                dom.insertBefore(rootList, p);\n                lastMargin = margin;\n                levels[margin][levelType] = rootList;\n            }\n\n            isLastRootLi = lastRootLi === p;\n\n            list = levels[margin][levelType];\n\n            if (margin > lastMargin || !list) {\n                list = this._createList(type, listType.style);\n                levels[margin][levelType] = list;\n                li.appendChild(list);\n            }\n\n            li = this._convertToLi(p);\n            list.appendChild(li);\n\n            if (isLastRootLi) {\n                rootMargin = lastMargin = -1;\n            } else {\n                lastMargin = margin;\n            }\n        }\n    },\n\n    removeAttributes: function(element) {\n        var attributes = element.attributes,\n            i = attributes.length,\n            significantStyles = [],\n            isSignificantCss = function(val) {\n                var significantCss = [\"border\", \"background\", \"padding\"];\n\n                return significantCss.filter(function(cssAttr) {\n                    return val.trim().indexOf(cssAttr) === 0;\n                }).length > 0;\n            },\n            addSignificantStyles = function(val) {\n                if (isSignificantCss(val)) {\n                    significantStyles.push(val.trim());\n                }\n            },\n            attr, attributeName, attributeValues;\n\n        while (i--) {\n            if (dom.name(attributes[i]) != \"colspan\") {\n                attr = attributes[i];\n                attributeName = attr.name;\n\n                if (attributeName === \"style\" && (element.nodeName === \"TD\" || element.nodeName === \"TH\")) {\n                    attributeValues = attr.value.split(\";\");\n                    attributeValues.forEach(addSignificantStyles);\n                }\n\n                element.removeAttributeNode(attributes[i]);\n            }\n        }\n\n        if (significantStyles.length > 0) {\n            element.setAttribute(\"style\", significantStyles.join(\";\"));\n        }\n    },\n\n    createColGroup: function(row) {\n        var cells = row.cells;\n        var table = $(row).closest(\"table\");\n        var colgroup = table.children(\"colgroup\");\n\n        if (cells.length < 2) {\n            return;\n        } else if (colgroup.length) {\n            cells = colgroup.children();\n            colgroup[0].parentNode.removeChild(colgroup[0]);\n        }\n\n        colgroup = $($.map(cells, function(cell) {\n                var width = cell.width;\n                if (width && parseInt(width, 10) !== 0) {\n                    return kendo.format('<col style=\"width:{0}px;\"/>', width);\n                }\n\n                return \"<col />\";\n            }).join(\"\"));\n\n        // jquery 1.9/2.0 discrepancy\n        if (!colgroup.is(\"colgroup\")) {\n            colgroup = $(\"<colgroup/>\").append(colgroup);\n        }\n\n        colgroup.prependTo(table);\n    },\n\n    convertHeaders: function(row) {\n        var cells = row.cells,\n            i,\n            boldedCells = $.map(cells, function(cell) {\n                var child = $(cell).children(\"p\").children(\"strong\")[0];\n\n                if (child && dom.name(child) == \"strong\") {\n                    return child;\n                }\n            });\n\n        if (boldedCells.length == cells.length) {\n            for (i = 0; i < boldedCells.length; i++) {\n                dom.unwrap(boldedCells[i]);\n            }\n\n            $(row).closest(\"table\")\n                .find(\"colgroup\").after(\"<thead></thead>\").end()\n                .find(\"thead\").append(row);\n\n            for (i = 0; i < cells.length; i++) {\n                dom.changeTag(cells[i], \"th\");\n            }\n        }\n    },\n\n    removeParagraphs: function(cells) {\n        var i, j, len, cell, paragraphs;\n\n        for (i = 0; i < cells.length; i++) {\n            this.removeAttributes(cells[i]);\n\n            // remove paragraphs and insert line breaks between them\n            cell = $(cells[i]);\n            paragraphs = cell.children(\"p\");\n\n            for (j = 0, len = paragraphs.length; j < len; j++) {\n                if (j < len - 1) {\n                    dom.insertAfter(dom.create(document, \"br\"), paragraphs[j]);\n                }\n\n                dom.unwrap(paragraphs[j]);\n            }\n        }\n    },\n\n    removeTextNodes: function(trs) {\n        var i, j, childNodes, currentNode, row;\n\n        for (i = 0; i < trs.length; i++) {\n            row = trs[i];\n            childNodes = row.childNodes;\n\n            for (j = 0; j < childNodes.length; j++) {\n                currentNode = childNodes[j];\n\n                if (currentNode.nodeType === dom.nodeTypes.TEXT_NODE) {\n                    row.removeChild(currentNode);\n                }\n            }\n        }\n    },\n\n    tables: function(placeholder) {\n        var tables = $(placeholder).find(\"table\"),\n            that = this,\n            rows,\n            firstRow, longestRow, i, j;\n\n        for (i = 0; i < tables.length; i++) {\n            rows = tables[i].rows;\n            longestRow = firstRow = rows[0];\n\n            for (j = 1; j < rows.length; j++) {\n                if (rows[j].cells.length > longestRow.cells.length) {\n                    longestRow = rows[j];\n                }\n            }\n\n            that.createColGroup(longestRow);\n            that.convertHeaders(firstRow);\n\n            that.removeAttributes(tables[i]);\n\n            that.removeParagraphs(tables.eq(i).find(\"td,th\"));\n\n            that.removeTextNodes(tables.eq(i).find(\"tr\"));\n        }\n    },\n\n    headers: function(placeholder) {\n        var titles = $(placeholder).find(\"p.MsoTitle\");\n\n        for (var i = 0; i < titles.length; i++) {\n            dom.changeTag(titles[i], \"h1\");\n        }\n    },\n\n    removeFormatting: function(placeholder) {\n        $(placeholder).find(\"*\").each(function() {\n            $(this).css({\n                fontSize: \"\",\n                fontFamily: \"\"\n            });\n\n            if (!this.getAttribute(\"style\") && !this.style.cssText) {\n                this.removeAttribute(\"style\");\n            }\n        });\n    },\n\n    clean: function(html) {\n        var that = this, placeholder;\n        var filters = this.options;\n\n        if (filters.none) {\n            html = Cleaner.fn.clean.call(that, html, this.junkReplacements);\n            html = that.stripEmptyAnchors(html);\n        } else {\n\n            html = filters.msConvertLists ? this.extractListLevels(html) : html;\n            html = Cleaner.fn.clean.call(that, html);\n            html = that.stripEmptyAnchors(html);\n\n            placeholder = dom.create(document, 'div', { innerHTML: html });\n            that.headers(placeholder);\n\n            if (filters.msConvertLists) {\n                that.lists(placeholder);\n            }\n            that.tables(placeholder);\n\n            if (filters.msAllFormatting) {\n                that.removeFormatting(placeholder);\n            }\n\n            html = placeholder.innerHTML.replace(/(<[^>]*)\\s+class=\"?[^\"\\s>]*\"?/ig, '$1');\n        }\n\n        return html;\n    }\n});\n\nvar WebkitFormatCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n\n        this.replacements = [\n            /\\s+class=\"Apple-style-span[^\"]*\"/gi, '',\n            /<(div|p|h[1-6])\\s+style=\"[^\"]*\"/gi, '<$1',\n            /^<div>(.*)<\\/div>$/, '$1'\n        ];\n    },\n\n    applicable: function(html) {\n        return (/class=\"?Apple-style-span|style=\"[^\"]*-webkit-nbsp-mode/i).test(html);\n    }\n});\n\nvar DomCleaner = Cleaner.extend({\n    clean: function(html) {\n        var container = dom.create(document, 'div', { innerHTML: html });\n        container = this.cleanDom(container);\n        return container.innerHTML;\n    },\n\n    cleanDom: function(container) {\n        return container;\n    }\n});\n\nvar HtmlTagsCleaner = DomCleaner.extend({\n    cleanDom: function(container) {\n        var tags = this.collectTags();\n\n        $(container).find(tags).each(function() {\n            dom.unwrap(this);\n        });\n\n        return container;\n    },\n\n    collectTags: function() {\n        if (this.options.span) {\n            return \"span\";\n        }\n    },\n\n    applicable: function() {\n        return this.options.span;\n    }\n});\n\nvar HtmlAttrCleaner = DomCleaner.extend({\n    cleanDom: function(container) {\n        var attributes = this.collectAttr();\n        var nodes = $(container).find(\"[\" + attributes.join(\"],[\") + \"]\");\n        nodes.removeAttr(attributes.join(\" \"));\n\n        return container;\n    },\n\n    collectAttr: function() {\n        if (this.options.css) {\n            return [\"class\", \"style\"];\n        }\n\n        return [];\n    },\n\n    applicable: function() {\n        return this.options.css;\n    }\n});\n\nvar TextContainer = function() {\n    this.text = \"\";\n    this.add = function(text) {\n        this.text += text;\n    };\n};\n\nvar HtmlTextLines = Class.extend({\n    init: function(separators) {\n        this.separators = separators || {\n                text: \" \",\n                line: \"<br/>\"\n            };\n        this.lines = [];\n        this.inlineBlockText = [];\n        this.resetLine();\n    },\n\n    appendText: function(text) {\n        if (text.nodeType === 3) {\n            text = text.nodeValue;\n        }\n\n        this.textContainer.add(text);\n    },\n\n    appendInlineBlockText: function(text) {\n        this.inlineBlockText.push(text);\n    },\n\n    flashInlineBlockText: function() {\n        if (this.inlineBlockText.length) {\n            this.appendText(this.inlineBlockText.join(\" \"));\n            this.inlineBlockText = [];\n        }\n    },\n\n    endLine: function() {\n        this.flashInlineBlockText();\n        this.resetLine();\n    },\n\n    html: function() {\n        var separators = this.separators;\n        var result = \"\";\n        var lines = this.lines;\n\n        this.flashInlineBlockText();\n\n        for (var i = 0, il = lines.length, il1 = il - 1; i < il; i++) {\n            var line = lines[i];\n            for (var j = 0, jl = line.length, jl1 = jl - 1; j < jl; j++) {\n                var text = line[j].text;\n                result += text;\n                if (j !== jl1) {\n                    result += separators.text;\n                }\n            }\n            if (i !== il1) {\n                result += separators.line;\n            }\n        }\n\n        return result;\n    },\n\n    resetLine: function() {\n        this.textContainer = new TextContainer();\n        this.line = [];\n        this.line.push(this.textContainer);\n        this.lines.push(this.line);\n    }\n});\n\nvar DomEnumerator = Class.extend({\n    init: function(callback) {\n        this.callback = callback;\n    },\n    enumerate: function(node) {\n        if (!node) {\n            return;\n        }\n\n        var preventDown = this.callback(node);\n\n        var child = node.firstChild;\n        if (!preventDown && child) {\n            this.enumerate(child);\n        }\n\n        this.enumerate(node.nextSibling);\n    }\n});\n\nvar HtmlContentCleaner = Cleaner.extend({\n    init: function(options) {\n        Cleaner.fn.init.call(this, options);\n        this.hasText = false; //unpleasant flag to prevent an empty line at the beginning of the generated content.\n        this.enumerator = new DomEnumerator(this.buildText.bind(this));\n    },\n\n    clean: function(html) {\n        var container = dom.create(document, 'div', { innerHTML: html });\n\n        return this.cleanDom(container);\n    },\n\n    cleanDom: function(container) {\n        this.separators = this.getDefaultSeparators();\n        this.htmlLines = new HtmlTextLines(this.separators);\n        this.enumerator.enumerate(container.firstChild);\n        this.hasText = false;\n\n        return this.htmlLines.html();\n    },\n\n    buildText: function(node) {\n        if (dom.isDataNode(node)) {\n            if (dom.isEmptyspace(node)) {\n                return;\n            }\n            this.htmlLines.appendText(node.nodeValue.replace('\\n', this.separators.line));\n            this.hasText = true;\n        } else if (dom.isBlock(node) && this.hasText) {\n            var action = this.actions[dom.name(node)] || this.actions.block;\n            return action(this, node);\n        } else if (dom.isBr(node)) {\n            this.htmlLines.appendText(this.separators.line);\n        }\n    },\n\n    applicable: function() {\n        var o = this.options;\n        return o.all || o.keepNewLines;\n    },\n\n    getDefaultSeparators: function() {\n        if (this.options.all) {\n            return { text: \" \", line: \" \" };\n        } else {\n            return { text: \" \", line: \"<br/>\" };\n        }\n    },\n\n    actions: {\n        ul: $.noop,\n        ol: $.noop,\n        table: $.noop,\n        thead: $.noop,\n        tbody: $.noop,\n        td: function(cleaner, node) {\n            var tdCleaner = new HtmlContentCleaner({ all: true });\n\n            var cellText = tdCleaner.cleanDom(node);\n            cleaner.htmlLines.appendInlineBlockText(cellText);\n\n            return true;\n        },\n\n        block: function(cleaner) {\n            cleaner.htmlLines.endLine();\n        }\n    }\n});\n\nvar CustomCleaner = Cleaner.extend({\n    clean: function(html) {\n        return this.options.custom(html);\n    },\n\n    applicable: function() {\n        return typeof(this.options.custom) === \"function\";\n    }\n});\n\nextend(editorNS, {\n    Clipboard: Clipboard,\n    Cleaner: Cleaner,\n    ScriptCleaner: ScriptCleaner,\n    TabCleaner: TabCleaner,\n    MSWordFormatCleaner: MSWordFormatCleaner,\n    WebkitFormatCleaner: WebkitFormatCleaner,\n    HtmlTagsCleaner: HtmlTagsCleaner,\n    HtmlAttrCleaner: HtmlAttrCleaner,\n    HtmlContentCleaner: HtmlContentCleaner,\n    HtmlTextLines: HtmlTextLines,\n    CustomCleaner: CustomCleaner\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n// Imports ================================================================\nvar kendo = window.kendo,\n    Class = kendo.Class,\n    editorNS = kendo.ui.editor,\n    RangeUtils = editorNS.RangeUtils,\n    dom = editorNS.Dom,\n    RestorePoint = editorNS.RestorePoint,\n    Marker = editorNS.Marker,\n    browser = kendo.support.browser,\n    bomSpan = \"<span  class='k-br'>\\ufeff</span>\",\n    extend = $.extend;\nvar nodeTypes = dom.nodeTypes;\nvar PREVIOUS_SIBLING = \"previousSibling\";\n\nfunction selected(node, range) {\n    return range.startContainer === node && range.endContainer === node &&\n        range.startOffset === 0 && range.endOffset == node.childNodes.length;\n}\n\nfunction getSibling(node, direction, condition) {\n    var sibling = node ? node[direction] : null;\n\n    while (sibling && !condition(sibling)) {\n        sibling = sibling[direction];\n    }\n\n    return sibling;\n}\n\nvar tableCells = \"td,th,caption\";\nvar tableCellsWrappers = \"table,tbody,thead,tfoot,tr\";\nvar tableElements = tableCellsWrappers + \",\" + tableCells;\nvar inTable = function(range) { return !range.collapsed && $(range.commonAncestorContainer).is(tableCellsWrappers); };\n\nvar RemoveTableContent = Class.extend({\n    remove: function(range) {\n        var that = this;\n        var marker = new Marker();\n        marker.add(range, false);\n\n        var nodes = RangeUtils.getAll(range, function(node) { return $(node).is(tableElements); });\n        var doc = RangeUtils.documentFromRange(range);\n        var start = marker.start;\n        var end = marker.end;\n        var cellsTypes = tableCells.split(\",\");\n        var startCell = dom.parentOfType(start, cellsTypes);\n        var endCell = dom.parentOfType(end, cellsTypes);\n        that._removeContent(start, startCell, true);\n        that._removeContent(end, endCell, false);\n        $(nodes).each(function(i, node) {\n            node = $(node);\n            (node.is(tableCells) ? node : node.find(tableCells)).each(function(j, cell) {\n                cell.innerHTML = \"&#65279;\";\n            });\n        });\n        if (startCell && !start.previousSibling) {\n            dom.insertBefore(doc.createTextNode(\"\\ufeff\"), start);\n        }\n        if (endCell && !end.nextSibling) {\n            dom.insertAfter(doc.createTextNode(\"\\ufeff\"), end);\n        }\n        if (startCell) {\n            range.setStartBefore(start);\n        } else if (nodes[0]) {\n            startCell = $(nodes[0]);\n            startCell = startCell.is(tableCells) ? startCell : startCell.find(tableCells).first();\n            if (startCell.length) {\n                range.setStart(startCell.get(0), 0);\n            }\n        }\n\n        range.collapse(true);\n\n        dom.remove(start);\n        dom.remove(end);\n    },\n    _removeContent: function(start, top, forwards) {\n        if (top) {\n            var sibling = forwards ? \"nextSibling\" : \"previousSibling\",\n                next,\n                getNext = function(node) {\n                    while (node && !node[sibling]) {\n                        node = node.parentNode;\n                    }\n                    return node && $.contains(top, node) ? node[sibling] : null;\n                };\n            start = getNext(start);\n            while (start) {\n                next = getNext(start);\n                dom.remove(start);\n                start = next;\n            }\n        }\n    }\n});\n\nvar TypingHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n\n    keydown: function(e) {\n        var that = this,\n            editor = that.editor,\n            keyboard = editor.keyboard,\n            isTypingKey = keyboard.isTypingKey(e),\n            evt = extend($.Event(), e);\n\n        that.editor.trigger(\"keydown\", evt);\n\n        if (evt.isDefaultPrevented() || (e && e.isDefaultPrevented())) {\n            e.preventDefault();\n            return true;\n        }\n\n        if (!evt.isDefaultPrevented() && isTypingKey && !keyboard.isTypingInProgress()) {\n            var range = editor.getRange();\n            var body = editor.body;\n            that.startRestorePoint = new RestorePoint(range, body);\n\n            if (inTable(range)) {\n                var removeTableContent = new RemoveTableContent(editor);\n                removeTableContent.remove(range);\n                editor.selectRange(range);\n            }\n\n            if (browser.webkit && !range.collapsed && selected(body, range)) {\n                body.innerHTML = \"\";\n            }\n\n            if (editor.immutables && editorNS.Immutables.immutablesContext(range)) {\n                var backspaceHandler = new editorNS.BackspaceHandler(editor);\n                backspaceHandler.deleteSelection(range);\n            }\n\n            keyboard.startTyping(function() {\n                that._removeBomSpan();\n                that.endRestorePoint = editorNS._finishUpdate(editor, that.startRestorePoint);\n            });\n\n            return true;\n        }\n\n        return false;\n    },\n\n    keyup: function(e) {\n        var keyboard = this.editor.keyboard;\n\n        this.editor.trigger(\"keyup\", e);\n\n        if (keyboard.isTypingInProgress()) {\n            keyboard.endTyping();\n            return true;\n        }\n\n        return false;\n    },\n\n    _removeBomSpan: function() {\n        var node = this.editor.getRange().commonAncestorContainer;\n\n        if (!dom.emptyNode(node)) {\n            if (node.nodeType === 3) {\n                node = node.parentNode;\n            }\n\n            if (dom.insignificant(node)) {\n                // typing in an insignificant node\n                // make it significant\n                node.textContent = dom.stripBom(node.textContent);\n                dom.unwrap(node);\n            }\n        }\n    }\n});\n\nvar BackspaceHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n    _addCaret: function(container) {\n        var caret = dom.create(this.editor.document, \"a\");\n\n        // Only if not Chrome: Make sure to include cared in the formatted inline node\n        if (!kendo.support.browser.chrome && container.firstChild &&\n            container.firstChild.nodeType === nodeTypes.ELEMENT_NODE) {\n\n            container = container.firstChild;\n        }\n\n        dom.insertAt(container, caret, 0);\n        dom.stripBomNode(caret.previousSibling);\n        dom.stripBomNode(caret.nextSibling);\n        return caret;\n    },\n    _restoreCaret: function(caret) {\n        var range = this.editor.createRange();\n\n        if (!caret.nextSibling && dom.isDataNode(caret.previousSibling)) {\n            range.setStart(caret.previousSibling, caret.previousSibling.length);\n        } else {\n            range.setStartAfter(caret);\n        }\n\n        range.collapse(true);\n        this.editor.selectRange(range);\n        dom.remove(caret);\n    },\n    _handleDelete: function(range) {\n        var node = range.endContainer;\n        var block = dom.closestEditableOfType(node, dom.blockElements);\n\n        if (block && editorNS.RangeUtils.isEndOf(range, block)) {\n            // join with next sibling\n            var next = dom.next(block);\n            if (!next || dom.name(next) != \"p\") {\n                return false;\n            }\n\n            var caretPlaceholder = dom.significantChildNodes(next)[0];\n            caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder)) ? caretPlaceholder : next;\n            var caret = this._addCaret(caretPlaceholder);\n\n            this._merge(block, next);\n\n            this._restoreCaret(caret);\n\n            return true;\n        }\n\n        return false;\n    },\n    _cleanBomBefore: function(range) {\n        var offset = range.startOffset;\n        var node = range.startContainer;\n        var text = node.nodeValue;\n        var count = 0;\n        while (offset - count >= 0 && text[offset - count - 1] == \"\\ufeff\") {\n            count++;\n        }\n\n        if (count > 0) {\n            node.deleteData(offset - count, count);\n\n            range.setStart(node, Math.max(0, offset - count));\n            range.collapse(true);\n\n            this.editor.selectRange(range);\n        }\n    },\n    _handleBackspace: function(range) {\n        var node = range.startContainer;\n        var li = dom.closestEditableOfType(node, ['li']);\n        var block = dom.closestEditableOfType(node, 'p,h1,h2,h3,h4,h5,h6'.split(','));\n        var editor = this.editor;\n        var previousSibling;\n\n        if (dom.isDataNode(node)) {\n            if (range.collapsed && /^\\s[\\ufeff]+$/.test(node.nodeValue)) {\n                range.setStart(node, 0);\n                range.setEnd(node, node.length);\n                editor.selectRange(range);\n                return false;\n            }\n            this._cleanBomBefore(range);\n        }\n\n        previousSibling = getSibling(block, PREVIOUS_SIBLING, function(sibling) {\n            return !dom.htmlIndentSpace(sibling);\n        });\n\n        //deleting the first list item with empty content in IE results in invalid range\n        if (range.collapsed && range.startOffset !== range.endOffset && range.startOffset < 0) {\n            range.startOffset = 0;\n            range.endOffset = 0;\n            editor.selectRange(range);\n        }\n\n        var startAtLi = li && editorNS.RangeUtils.isStartOf(range, li);\n        var liIndex = li && $(li).index();\n        var startAtNonFirstLi = startAtLi && liIndex > 0;\n        if (startAtNonFirstLi) {\n            block = li;\n            previousSibling = dom.prev(li);\n        }\n\n        if (block && previousSibling && dom.is(previousSibling, 'table') && editorNS.RangeUtils.isStartOf(range, block)) {\n            if (block.innerText === '') {\n                block.innerHTML = '\\ufeff';\n            }\n            return true;\n        }\n\n        // outdent\n        if (editorNS.RangeUtils.isStartOf(range, block) && parseInt(block.style.marginLeft,10) > 0) {\n            editor.exec(\"outdent\");\n            return true;\n        }\n\n        // unwrap block\n        if ((block && previousSibling && editorNS.RangeUtils.isStartOf(range, block)) || startAtNonFirstLi) {\n            var caretPlaceholder = dom.significantChildNodes(block)[0];\n            caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder) && !dom.isImg(caretPlaceholder)) ? caretPlaceholder : block;\n\n            var caret = this._addCaret(caretPlaceholder);\n            this._merge(previousSibling, block);\n            this._restoreCaret(caret);\n\n            return true;\n        }\n\n        // unwrap li element\n        if (startAtLi && liIndex === 0) {\n            var child = li.firstChild;\n            if (!child) {\n                li.innerHTML = editorNS.emptyElementContent;\n                child = li.firstChild;\n            }\n\n            var formatter = new editorNS.ListFormatter(dom.name(li.parentNode), \"p\");\n            range.selectNodeContents(li);\n            formatter.toggle(range);\n\n            if (dom.insignificant(child)) {\n                range.setStartBefore(child);\n            } else {\n                range.setStart(child, 0);\n            }\n\n            editor.selectRange(range);\n\n            return true;\n        }\n\n        var rangeStartNode = node.childNodes[range.startOffset - 1];\n        var linkRange = range;\n        var anchor = rangeStartNode && dom.closestEditableOfType(rangeStartNode, ['a']);\n        var previousNode = getSibling(rangeStartNode || node, PREVIOUS_SIBLING, function(sibling) {\n            return !dom.isDataNode(sibling) || (!dom.isBom(sibling) && sibling.length > 0);\n        });\n        if (anchor || ((range.startOffset === 0 || rangeStartNode) && dom.is(previousNode, \"a\"))) {\n            anchor = anchor || previousNode;\n            linkRange = editor.createRange();\n            linkRange.setStart(anchor, anchor.childNodes.length);\n            linkRange.collapse(true);\n        }\n\n        anchor = anchor || dom.closestEditableOfType(rangeStartNode || linkRange.startContainer, ['a']);\n        var isEndOfLink = anchor && editorNS.RangeUtils.isEndOf(linkRange, anchor);\n        if (isEndOfLink) {\n            var command = new editorNS.UnlinkCommand({ range: linkRange, body: editor.body, immutables: !!editor.immutables });\n            editor.execCommand(command);\n            editor._selectionChange();\n        }\n        return false;\n    },\n    _handleSelection: function(range) {\n        var ancestor = range.commonAncestorContainer;\n        var table = dom.closest(ancestor, \"table\");\n        var emptyParagraphContent = editorNS.emptyElementContent;\n        var editor = this.editor;\n        var parentElementOrNode;\n\n        if (inTable(range)) {\n            var removeTableContent = new RemoveTableContent(editor);\n            removeTableContent.remove(range);\n            editor.selectRange(range);\n            return true;\n        }\n\n        var marker = new Marker();\n        marker.add(range, false);\n\n        if (range.commonAncestorContainer === editor.body) {\n            this._surroundFullyContent(marker, range);\n        }\n\n        if (editor.immutables) {\n            this._handleImmutables(marker);\n        }\n\n        this._surroundFullySelectedAnchor(marker, range);\n\n        range.setStartAfter(marker.start);\n        range.setEndBefore(marker.end);\n\n        var start = range.startContainer;\n        var end = range.endContainer;\n\n        range.deleteContents();\n\n        if (end.tagName.toLocaleLowerCase() === \"li\" && dom.emptyNode(end)) {\n            range.selectNode(end);\n            range.deleteContents();\n        }\n\n        if (table && $(table).text() === \"\") {\n            range.selectNode(table);\n            range.deleteContents();\n        }\n\n        ancestor = range.commonAncestorContainer;\n\n        if (dom.name(ancestor) === \"p\" && ancestor.innerHTML === \"\") {\n            ancestor.innerHTML = emptyParagraphContent;\n            range.setStart(ancestor, 0);\n        }\n\n        this._join(start, end);\n\n        dom.insertAfter(editor.document.createTextNode(\"\\ufeff\"), marker.start);\n        marker.remove(range);\n\n        start = range.startContainer;\n        if (dom.name(start) == \"tr\") {\n            start = start.childNodes[Math.max(0, range.startOffset - 1)];\n            range.setStart(start, dom.getNodeLength(start));\n        }\n\n        range.collapse(true);\n\n        editor.selectRange(range);\n\n        parentElementOrNode = start.parentElement || start.parentNode;\n\n        if (dom.isDataNode(start) && !dom.emptyNode(parentElementOrNode)) {\n            this._cleanBomBefore(range);\n        }\n\n        return true;\n    },\n    _handleImmutables: function(marker) {\n        var immutableParent = editorNS.Immutables.immutableParent;\n        var startImmutable = immutableParent(marker.start);\n        var endImmutable = immutableParent(marker.start);\n        if (startImmutable) {\n            dom.insertBefore(marker.start, startImmutable);\n        }\n        if (endImmutable) {\n            dom.insertAfter(marker.end, endImmutable);\n        }\n        if (startImmutable) {\n            dom.remove(startImmutable);\n        }\n        if (endImmutable && endImmutable.parentNode) {\n            dom.remove(endImmutable);\n        }\n    },\n    _surroundFullyContent: function(marker, range) {\n        var children = range.commonAncestorContainer.children,\n            startParent = children[0],\n            endParent = children[children.length - 1];\n\n        this._moveMarker(marker, range, startParent, endParent);\n    },\n    _surroundFullySelectedAnchor: function(marker, range) {\n        var start = marker.start,\n            startParent = $(start).closest(\"a\").get(0),\n            end = marker.end,\n            endParent = $(end).closest(\"a\").get(0);\n\n        this._moveMarker(marker, range, startParent, endParent);\n    },\n    _moveMarker: function(marker, range, startParent, endParent) {\n        var start = marker.start,\n            end = marker.end;\n\n        if (startParent && RangeUtils.isStartOf(range, startParent)) {\n            dom.insertBefore(start, startParent);\n        }\n\n        if (endParent && RangeUtils.isEndOf(range, endParent)) {\n            dom.insertAfter(end, endParent);\n        }\n    },\n    _root: function(node) {\n        while (node && dom.name(node) != \"body\" && node.parentNode && dom.name(node.parentNode) != \"body\") {\n            node = node.parentNode;\n        }\n\n        return node;\n    },\n    _join: function(start, end) {\n        start = this._root(start);\n        end = this._root(end);\n\n        if (start != end && dom.is(end, \"p\")) {\n            this._merge(start, end);\n        }\n    },\n    _merge: function(dest, src) {\n        dom.removeTrailingBreak(dest);\n\n        while (dest && src.firstChild) {\n            if (dest.nodeType == 1) {\n                dest = dom.list(dest) ? dest.children[dest.children.length - 1] : dest;\n\n                if (dest) {\n                    dest.appendChild(src.firstChild);\n                }\n            } else if (dest.nodeType === nodeTypes.TEXT_NODE) {\n                this._mergeWithTextNode(dest, src.firstChild);\n            } else {\n                dest.parentNode.appendChild(src.firstChild);\n            }\n        }\n\n        dom.remove(src);\n    },\n\n    _mergeWithTextNode: function(textNode, appendedNode) {\n        if (textNode && textNode.nodeType === nodeTypes.TEXT_NODE) {\n            if (textNode.nextSibling && this._isCaret(textNode.nextSibling)) {\n                dom.insertAfter(appendedNode, textNode.nextSibling);\n            }\n            else {\n                dom.insertAfter(appendedNode, textNode);\n            }\n        }\n    },\n\n    _isCaret: function(element) {\n        return $(element).is(\"a\");\n    },\n\n    keydown: function(e) {\n        var method, startRestorePoint;\n        var editor = this.editor;\n        var range = editor.getRange();\n        var keyCode = e.keyCode;\n        var keys = kendo.keys;\n        var backspace = keyCode === keys.BACKSPACE;\n        var del = keyCode == keys.DELETE;\n\n        if (editor.immutables && editor.immutables.keydown(e, range)) {\n            return;\n        }\n\n        if ((backspace || del) && !range.collapsed) {\n            method = \"_handleSelection\";\n        } else if (backspace) {\n            method = \"_handleBackspace\";\n        } else if (del) {\n            method = \"_handleDelete\";\n        }\n\n        if (!method) {\n            return;\n        }\n\n        startRestorePoint = new RestorePoint(range, editor.body);\n\n        if (this[method](range)) {\n            e.preventDefault();\n\n            editorNS._finishUpdate(editor, startRestorePoint);\n        }\n    },\n    deleteSelection: function(range) {\n        this._handleSelection(range);\n    },\n    keyup: $.noop\n});\n\nvar SystemHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n        this.systemCommandIsInProgress = false;\n    },\n\n    createUndoCommand: function() {\n        this.startRestorePoint = this.endRestorePoint = editorNS._finishUpdate(this.editor, this.startRestorePoint);\n    },\n\n    changed: function() {\n        if (this.startRestorePoint) {\n            return this.startRestorePoint.html != this.editor.body.innerHTML;\n        }\n\n        return false;\n    },\n\n    keydown: function(e) {\n        var that = this,\n            editor = that.editor,\n            keyboard = editor.keyboard;\n\n        if (keyboard.isModifierKey(e)) {\n\n            if (keyboard.isTypingInProgress()) {\n                keyboard.endTyping(true);\n            }\n\n            that.startRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n            return true;\n        }\n\n        if (keyboard.isSystem(e)) {\n            that.systemCommandIsInProgress = true;\n\n            if (that.changed()) {\n                that.systemCommandIsInProgress = false;\n                that.createUndoCommand();\n            }\n\n            return true;\n        }\n\n        return false;\n    },\n\n    keyup: function() {\n        var that = this;\n\n        if (that.systemCommandIsInProgress && that.changed()) {\n            that.systemCommandIsInProgress = false;\n            that.createUndoCommand();\n            return true;\n        }\n\n        return false;\n    }\n});\n\nvar SelectAllHandler = Class.extend({\n    init: function(editor) {\n        this.editor = editor;\n    },\n\n    keydown: function(e) {\n        if (!browser.webkit || e.isDefaultPrevented() ||\n            !(e.ctrlKey && e.keyCode == 65 && !e.altKey && !e.shiftKey)) {\n            return;\n        }\n        if (this.editor.options.immutables) {\n            this._toSelectableImmutables();\n        }\n        this._selectEditorBody();\n    },\n\n    _selectEditorBody: function() {\n        var editor = this.editor;\n        var range = editor.getRange();\n        range.selectNodeContents(editor.body);\n\n        setTimeout(function() {\n            editor.selectRange(range);\n        });\n    },\n\n    _toSelectableImmutables: function() {\n        var editor = this.editor,\n            body = editor.body,\n            immutable = editorNS.Immutables.immutable,\n            emptyTextNode = dom.emptyTextNode,\n            first = body.firstChild,\n            last = body.lastChild;\n\n        while (emptyTextNode(first)) {\n            first = first.nextSibling;\n        }\n\n        while (emptyTextNode(last)) {\n            last = last.previousSibling;\n        }\n\n        if (first && immutable(first)) {\n            $(bomSpan).prependTo(body);\n        }\n\n        if (last && immutable(last)) {\n            $(bomSpan).appendTo(body);\n        }\n    },\n\n    keyup: $.noop\n});\n\nvar Keyboard = Class.extend({\n    init: function(handlers) {\n        this.handlers = handlers;\n        this.typingInProgress = false;\n    },\n\n    isCharacter: function(keyCode) {\n        return (keyCode >= 48 && keyCode <= 90) || (keyCode >= 96 && keyCode <= 111) ||\n               (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222) ||\n               keyCode == 229;\n    },\n\n    toolFromShortcut: function(tools, e) {\n        var key = String.fromCharCode(e.keyCode),\n            toolName,\n            toolOptions,\n            modifier = this._getShortcutModifier(e, navigator.platform);\n\n        for (toolName in tools) {\n            toolOptions = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n            if ((toolOptions.key == key || toolOptions.key == e.keyCode) &&\n                toolOptions.ctrl == modifier &&\n                toolOptions.alt == e.altKey &&\n                toolOptions.shift == e.shiftKey) {\n                return toolName;\n            }\n        }\n    },\n\n    _getShortcutModifier: function(e, platform) {\n        var mac = platform.toUpperCase().indexOf('MAC') >= 0;\n        return mac ? e.metaKey : e.ctrlKey;\n    },\n\n    toolsFromShortcut: function(tools, e) {\n        var key = String.fromCharCode(e.keyCode),\n            toolName,\n            o,\n            matchesKey,\n            found = [];\n        var matchKey = function(toolKey) { return toolKey == key || toolKey == e.keyCode || toolKey == e.charCode; };\n\n        for (toolName in tools) {\n            o = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n            matchesKey = Array.isArray(o.key) ? $.grep(o.key, matchKey).length > 0 : matchKey(o.key);\n            if (matchesKey &&\n                o.ctrl == e.ctrlKey &&\n                o.alt == e.altKey &&\n                o.shift == e.shiftKey) {\n                found.push(tools[toolName]);\n            }\n        }\n\n        return found;\n    },\n\n    isTypingKey: function(e) {\n        var keyCode = e.keyCode;\n        return (this.isCharacter(keyCode) && !e.ctrlKey && !e.altKey) ||\n               keyCode == 32 || keyCode == 13 || keyCode == 8 ||\n               (keyCode == 46 && !e.shiftKey && !e.ctrlKey && !e.altKey);\n    },\n\n    isModifierKey: function(e) {\n        var keyCode = e.keyCode;\n        return (keyCode == 17 && !e.shiftKey && !e.altKey) ||\n               (keyCode == 16 && !e.ctrlKey && !e.altKey) ||\n               (keyCode == 18 && !e.ctrlKey && !e.shiftKey);\n    },\n\n    isSystem: function(e) {\n        return e.keyCode == 46 && e.ctrlKey && !e.altKey && !e.shiftKey;\n    },\n\n    startTyping: function(callback) {\n        this.onEndTyping = callback;\n        this.typingInProgress = true;\n    },\n\n    stopTyping: function() {\n        if (this.typingInProgress && this.onEndTyping) {\n            this.onEndTyping();\n        }\n        this.typingInProgress = false;\n    },\n\n    endTyping: function(force) {\n        var that = this;\n        that.clearTimeout();\n        if (force) {\n            that.stopTyping();\n        } else {\n            that.timeout = window.setTimeout(that.stopTyping.bind(that), 1000);\n        }\n    },\n\n    isTypingInProgress: function() {\n        return this.typingInProgress;\n    },\n\n    clearTimeout: function() {\n        window.clearTimeout(this.timeout);\n    },\n\n    notify: function(e, what) {\n        var i, handlers = this.handlers;\n\n        for (i = 0; i < handlers.length; i++) {\n            if (handlers[i][what](e)) {\n                break;\n            }\n        }\n    },\n\n    keydown: function(e) {\n        this.notify(e, 'keydown');\n    },\n\n    keyup: function(e) {\n        this.notify(e, 'keyup');\n    }\n});\n\nextend(editorNS, {\n    TypingHandler: TypingHandler,\n    SystemHandler: SystemHandler,\n    BackspaceHandler: BackspaceHandler,\n    SelectAllHandler: SelectAllHandler,\n    Keyboard: Keyboard\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        extend = $.extend;\n\nvar ExportPdfCommand = Command.extend({\n    init: function(options) {\n        this.async = true;\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var that = this;\n        var range = that.lockRange(true);\n        var editor = that.editor;\n\n        editor._destroyResizings();\n\n        editor.saveAsPDF().then(function() {\n            that.releaseRange(range);\n            editor._initializeColumnResizing();\n            editor._initializeRowResizing();\n            editor._initializeElementResizing();\n        });\n    }\n});\n\nextend(editorNS, {\n    ExportPdfCommand: ExportPdfCommand\n});\n\nregisterTool(\"pdf\", new Tool({ command: ExportPdfCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    // Imports ================================================================\n    var kendo = window.kendo,\n        editorNS = kendo.ui.editor,\n        Command = editorNS.Command,\n        EditorUtils = editorNS.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        Tool = editorNS.Tool,\n        extend = $.extend;\n\nvar PrintCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n\n        this.managesUndoRedo = true;\n    },\n\n    exec: function() {\n        var editor = this.editor;\n\n        if (kendo.support.browser.msie) {\n            editor.document.execCommand(\"print\", false, null);\n        } else if (editor.window.print) {\n            editor.window.print();\n        }\n    }\n});\n\nextend(editorNS, {\n    PrintCommand: PrintCommand\n});\n\nregisterTool(\"print\", new Tool({ command: PrintCommand }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    Tool = Editor.Tool,\n    Command = Editor.Command,\n    EditorUtils = Editor.EditorUtils,\n    dom = Editor.Dom,\n    RangeUtils = Editor.RangeUtils,\n    registerTool = EditorUtils.registerTool;\n\nvar CopyFormatCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        this.inlineStyles = [];\n        this.blockStyles = [];\n        this.collectStyles(range);\n        this.editor.inlineStyles = this.inlineStyles;\n        this.editor.blockStyles = this.blockStyles;\n        this.releaseRange(range);\n    },\n\n    collectStyles: function(range) {\n        var rangeNodes = RangeUtils.nodes(range);\n        var node;\n\n        if (rangeNodes.length === 1) {\n            node = rangeNodes[0].parentNode;\n        } else {\n            node = range.startContainer;\n        }\n\n        while (node && !dom.is(node, \"body\") && node.getAttribute(\"data-role\") !== \"editor\") {\n            if (dom.isBlock(node)) {\n                this.populateStyles(node, \"blockStyles\");\n                if (dom.is(node, \"li\")) {\n                    node = node.parentNode;\n                } else {\n                    node = null;\n                }\n            } else {\n                this.populateStyles(node, \"inlineStyles\");\n                node = node.parentNode;\n            }\n        }\n    },\n\n    populateStyles: function(node, destination) {\n        var styles = node.style;\n        var attributes = node.attributes;\n        var nodeStyles = {\n            tags: [ node.tagName ],\n            attr: {\n                style: {}\n            }\n        };\n        var styleValue, styleKey, attributeKey, attributeValue, i;\n\n        if (styles) {\n            for (i = 0; i < styles.length; i++) {\n                styleKey = styles[i];\n                styleValue = styles[styleKey];\n                nodeStyles.attr.style[styleKey] = styleValue;\n            }\n        }\n\n        if (attributes) {\n            for (i = 0; i < attributes.length; i++) {\n                attributeKey = attributes[i].nodeName;\n                attributeValue = attributes[i].nodeValue;\n                if (attributeKey === \"style\") {\n                    continue;\n                } else if (attributeKey === \"class\") {\n                    nodeStyles.attr.className = attributeValue;\n                } else {\n                    nodeStyles.attr[attributeKey] = attributeValue;\n                }\n            }\n        }\n\n        this[destination].push(nodeStyles);\n    }\n});\n\nvar ApplyFormatCommand = Command.extend({\n    init: function(options) {\n        Command.fn.init.call(this, options);\n    },\n\n    exec: function() {\n        var range = this.lockRange(true);\n        var markers = RangeUtils.getMarkers(range);\n        var editor = this.editor;\n        var inlineStyles = editor.inlineStyles;\n        var blockStyles = editor.blockStyles;\n        var nodes;\n\n        if ((!inlineStyles || inlineStyles.length === 0) && (!blockStyles || blockStyles.length === 0)) {\n            return;\n        }\n\n        if (markers.length === 3) {\n            this.marker.removeCaret(range);\n            this.marker.caret = null;\n        }\n\n        this.removeEmptyElementsFromRange(range);\n        nodes = RangeUtils.nodes(range);\n        this.cleanInlineParents(nodes);\n        dom.normalize(range.commonAncestorContainer);\n\n        if (markers.length === 2) {\n            range.setStartAfter(markers[0]);\n            range.setEndBefore(markers[1]);\n        } else {\n            range.setStartBefore(nodes[0]);\n            range.setEndAfter(nodes[0]);\n        }\n\n        nodes = RangeUtils.nodes(range);\n\n        if (nodes && blockStyles && blockStyles.length) {\n            this.applyBlockStyles(nodes, blockStyles);\n        }\n\n        if (nodes && inlineStyles && inlineStyles.length) {\n            this.applyInlineStyles(nodes, inlineStyles);\n        }\n\n        this.releaseRange(range);\n    },\n\n    removeEmptyElementsFromRange: function(range) {\n        var isEmptyInline = function(node) {\n            return dom.isInline(node) && !node.firstChild && !dom.isMarker(node);\n        };\n        var emptyElements, i;\n\n        emptyElements = RangeUtils.getAll(range, isEmptyInline);\n\n        if (emptyElements && emptyElements.length > 0) {\n            for (i = 0; i < emptyElements.length; i++) {\n                emptyElements[i].parentNode.removeChild(emptyElements[i]);\n            }\n        }\n    },\n\n    cleanInlineParents: function(nodes) {\n        var i, node, parent, children, j, child, newNode;\n\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            parent = node.parentNode;\n\n            if (this.immutableParent(node)) {\n                continue;\n            }\n\n            while (parent && dom.isInline(parent)) {\n                children = parent.childNodes;\n\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n\n                    if (!dom.isMarker(child) && child !== node) {\n                        newNode = parent.cloneNode(true);\n                        newNode.innerHTML = \"\";\n                        dom.wrap(child, newNode);\n                    }\n                }\n\n                dom.unwrap(parent);\n                parent = node.parentNode;\n            }\n        }\n    },\n\n    applyBlockStyles: function(nodes, blockStyles) {\n        var formatTag = blockStyles[0].tags[0];\n        var attr = blockStyles[0].attr;\n        var document = this.editor.document;\n        var i, len, node, wrapper, blockParent, outerWrapper;\n        var previousNodes, nextNodes, previous, next, prevWrapper, nextWrapper, child, j, listItems;\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n            node = nodes[i];\n\n            if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                continue;\n            }\n\n            blockParent = dom.blockParentOrBody(node);\n\n            if (blockParent.tagName !== \"BODY\" && blockParent.tagName !== formatTag) {\n                if (blockParent.tagName !== \"LI\" && blockParent.tagName !== \"TD\" && blockParent.tagName !== \"TH\") {\n                    previousNodes = [];\n                    nextNodes = [];\n                    previous = node.previousSibling;\n                    next = node.nextSibling;\n\n                    while (previous) {\n                        if (!dom.isMarker(previous)) {\n                            previousNodes.push(previous);\n                        }\n\n                        previous = previous.previousSibling;\n                    }\n\n                    if (previousNodes.length) {\n                        prevWrapper = blockParent.cloneNode(true);\n                        prevWrapper.innerHTML = \"\";\n                        dom.insertBefore(prevWrapper, previousNodes[0]);\n\n                        for (j = 0; j < previousNodes.length; j++) {\n                            child = previousNodes[j];\n                            dom.insertAt(prevWrapper, child, 0);\n                        }\n                    }\n\n                    while (next) {\n                        if (!dom.isMarker(next)) {\n                            nextNodes.push(next);\n                        }\n\n                        next = next.nextSibling;\n                    }\n\n                    if (nextNodes.length) {\n                        nextWrapper = blockParent.cloneNode(true);\n                        nextWrapper.innerHTML = \"\";\n                        dom.insertBefore(nextWrapper, nextNodes[0]);\n\n                        for (j = 0; j < nextNodes.length; j++) {\n                            child = nextNodes[j];\n                            nextWrapper.appendChild(child);\n                        }\n                    }\n\n                    dom.unwrap(blockParent);\n                }\n\n                wrapper = dom.create(document, formatTag, attr);\n                dom.wrap(node, wrapper);\n            } else if (blockParent.tagName === formatTag) {\n                dom.attr(blockParent, attr);\n            }\n        }\n\n        if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\" && formatTag === \"LI\") {\n            listItems = [];\n\n            while (dom.is(wrapper, \"li\")) {\n                listItems.push(wrapper);\n                wrapper = dom.prev(wrapper);\n            }\n\n            outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n            dom.insertBefore(outerWrapper, listItems[listItems.length - 1]);\n            outerWrapper.appendChild(listItems[0]);\n\n            for (i = 1, len = listItems.length; i < len; i++) {\n                dom.insertBefore(listItems[i], outerWrapper.firstChild);\n            }\n        } else if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\") {\n            outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n            dom.wrap(wrapper, outerWrapper);\n        }\n    },\n\n    applyInlineStyles: function(nodes, inlineStyles) {\n        var document = this.editor.document;\n        var currentStyle, createdNode, topNode, i, newNode, node;\n\n        for (i = 0; i < inlineStyles.length; i++) {\n            currentStyle = inlineStyles[i];\n            createdNode = dom.create(document, currentStyle.tags[0], currentStyle.attr);\n\n            if (topNode) {\n                createdNode.appendChild(topNode);\n            }\n\n            topNode = createdNode;\n        }\n\n        if (topNode) {\n            for (i = 0; i < nodes.length; i++) {\n                node = nodes[i];\n                if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                    continue;\n                }\n                newNode = topNode.cloneNode(true);\n                dom.insertBefore(newNode, node);\n\n                while (newNode.children && newNode.children.length) {\n                    newNode = newNode.children[0];\n                }\n\n                newNode.appendChild(node);\n            }\n        }\n    },\n\n    immutables: function() {\n        return this.editor && this.editor.options.immutables;\n    },\n\n    immutableParent: function(node) {\n        return this.immutables() && Editor.Immutables.immutableParent(node);\n    }\n});\n\nvar CopyFormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        return new CopyFormatCommand(commandArguments);\n    }\n});\n\nvar ApplyFormatTool = Tool.extend({\n    init: function(options) {\n        Tool.fn.init.call(this, options);\n    },\n\n    command: function(commandArguments) {\n        return new ApplyFormatCommand(commandArguments);\n    }\n});\n\n$.extend(Editor, {\n    CopyFormatCommand: CopyFormatCommand,\n    ApplyFormatCommand: ApplyFormatCommand,\n    CopyFormatTool: CopyFormatTool,\n    ApplyFormatTool: ApplyFormatTool\n});\n\nregisterTool(\"copyFormat\", new CopyFormatTool({ }));\nregisterTool(\"applyFormat\", new ApplyFormatTool({ }));\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    const kendo = window.kendo,\n        extend = $.extend,\n        Editor = kendo.ui.editor,\n        formats = kendo.ui.Editor.fn.options.formats,\n        dom = Editor.Dom,\n        Tool = Editor.Tool,\n        DelayedExecutionTool = Editor.DelayedExecutionTool,\n        BlockFormatter = Editor.BlockFormatter,\n        FormatCommand = Editor.FormatCommand,\n        GreedyInlineFormatFinder = Editor.GreedyInlineFormatFinder,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        registerFormat = EditorUtils.registerFormat,\n        RangeUtils = Editor.RangeUtils,\n        MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n        KEYDOWN_NS = \"keydown.kendoEditor\";\n\n    const LineHeightCommand = FormatCommand.extend({\n        exec: function() {\n            const cmd = this,\n                range = cmd.lockRange(true),\n                nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n            cmd.formatter.format[0].attr.style.lineHeight = cmd.options.value.lineHeight;\n            cmd.formatter.apply(nodes);\n            cmd.releaseRange(range);\n        }\n    });\n\n    const LineHeightFormatTool = DelayedExecutionTool.extend({\n        init: function(options) {\n            Tool.fn.init.call(this, options);\n\n            this.type = \"kendoComboBox\";\n            this.format = [{ tags: [\"p\", \"lineHeight\"] }];\n            this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr, options.defaultValue);\n        },\n\n        command: function(commandArguments) {\n            var that = this;\n\n            return new LineHeightCommand(extend(commandArguments, {\n                formatter: function() {\n                    return new BlockFormatter(that.options.format);\n                }\n            }));\n        },\n\n        initialize: function(ui, editor) {\n            let tool = this,\n                component = ui.getKendoComboBox();\n\n            tool.editor = editor;\n\n            component.bind(\"change\", this.changeHandler.bind(this));\n            component.bind(\"close\", this.closeHandler.bind(this));\n\n            component.wrapper.on(MOUSEDOWN_NS, \".k-input-button,.k-input-inner\", this.mouseDownHandler.bind(this))\n                .on(KEYDOWN_NS, this.keyDownHandler.bind(this));\n        },\n\n        changeHandler: function(e) {\n            this._exec(e.sender.value());\n        },\n\n        closeHandler: function() {\n            let that = this,\n                editor = that.editor;\n\n            setTimeout(function() {\n                editor._deleteSavedRange();\n                that.currentRange = null;\n            },0);\n        },\n\n        mouseDownHandler: function() {\n            let newRange = this.editor.getRange();\n\n            this.currentRange = this.editor._containsRange(newRange) ? newRange : this.currentRange;\n        },\n\n        keyDownHandler: function(e) {\n            if (e.keyCode === kendo.keys.ENTER) {\n                this.editor._deleteSavedRange();\n                this.currentRange = null;\n                e.preventDefault();\n            }\n        },\n\n        _exec: function(value) {\n            let editor = this.editor;\n            editor._range = this.currentRange;\n            if (value) {\n                Tool.exec(this.editor, this.options.name, { lineHeight: value });\n            }\n        },\n    });\n\n    $.extend(Editor, {\n        LineHeightCommand: LineHeightCommand,\n        LineHeightFormatTool: LineHeightFormatTool\n    });\n\n    registerFormat(\"lineHeight\", [\n        { tags: dom.blockElements, attr: { style: { lineHeight: \"normal\" } } }\n    ]);\n\n    registerTool(\"lineHeight\", new LineHeightFormatTool({\n        cssAttr: \"line-height\",\n        format: formats.lineHeight,\n        defaultValue: 1.15,\n        ui: {\n            type: \"component\",\n            component: \"ComboBox\",\n            componentOptions: {\n                value: 1.15,\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                prefixOptions: {\n                    icon: \"paragraphHeight\"\n                },\n                autoSize: true,\n                dataSource: [\n                    { text: \"1\", value: \"1\" },\n                    { text: \"1.15\", value: \"1.15\" },\n                    { text: \"1.5\", value: \"1.5\" },\n                    { text: \"2\", value: \"2\" },\n                    { text: \"2.5\", value: \"2.5\" },\n                ]\n            }\n        }\n    }));\n})(window.kendo.jQuery);\n\n(function($) {\n\n    const kendo = window.kendo,\n        Editor = kendo.ui.editor,\n        Tool = Editor.Tool,\n        Command = Editor.Command,\n        EditorUtils = Editor.EditorUtils,\n        registerTool = EditorUtils.registerTool,\n        DOM = Editor.Dom,\n        SPACE_UNICODE = \"\\u00B7\",\n        NEW_LINE_UNICODE = \"\\u21B5\";\n\n    const createMark = function(range, document, character, scrollTop, index, scrollableWrapper) {\n        const clonedRange = range.cloneRange(),\n              container = clonedRange.startContainer;\n\n        let domRect, x, y, textNode, parentRect;\n\n        if (index !== undefined && index !== null) {\n            clonedRange.setStart(container, index);\n            clonedRange.setEnd(container, index + 1);\n        }\n\n        domRect = clonedRange.getBoundingClientRect();\n\n        if (scrollableWrapper) {\n            parentRect = scrollableWrapper.getBoundingClientRect();\n            x = domRect.left - parentRect.left - domRect.width / 2;\n            y = domRect.top - parentRect.top + domRect.height + scrollTop;\n        } else {\n            if (character === SPACE_UNICODE) {\n                x = domRect.x - domRect.width / 4;\n                y = domRect.y + domRect.height + scrollTop;\n            } else if (character === NEW_LINE_UNICODE) {\n                x = domRect.x;\n                y = domRect.y + domRect.height + scrollTop;\n            }\n        }\n\n        textNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        textNode.setAttributeNS(null, \"x\", x);\n        textNode.setAttributeNS(null, \"y\", y);\n        textNode.setAttributeNS(null, \"fill\", \"#6098f2\");\n        textNode.setAttributeNS(null, \"font-size\", `${Math.ceil(domRect.height + domRect.width)}px`);\n        textNode.textContent = character;\n\n        return textNode;\n    };\n\n    const appendSvgMarks = function() {\n        const that = this,\n            range = that.getRange().cloneRange(),\n            overlay = that._formattingMarksOverlay[0],\n            fragment = that.document.createDocumentFragment(),\n            document = that.document,\n            isInlineEditor = that._isInlineEditor(),\n            scrollableWrapper = isInlineEditor ? that.body.parentElement : null,\n            scrollTop = isInlineEditor ? scrollableWrapper.scrollTop : document.documentElement.scrollTop;\n\n        if (!that.body.firstChild && !that.body.lastChild) {\n            return;\n        }\n\n        range.setStart(that.body.firstChild, 0);\n        range.setEnd(that.body.lastChild, 0);\n\n        const nodes = DOM.getTextNodes(that.body).concat($(that.body).find(\"br\").toArray());\n\n        nodes.forEach((node) => {\n            if (node.nodeType === DOM.nodeTypes.TEXT_NODE) {\n                range.selectNodeContents(node);\n\n                for (let i = range.startOffset; i < range.endOffset; i++) {\n                    if ((range.startContainer.textContent.charCodeAt(i) === 32 || range.startContainer.textContent.charCodeAt(i) === 160)) {\n                        fragment.appendChild(createMark(range, document, SPACE_UNICODE, scrollTop, i, scrollableWrapper));\n                    }\n                }\n            } else {\n                range.selectNode(node);\n                fragment.appendChild(createMark(range, document, NEW_LINE_UNICODE, scrollTop, null, scrollableWrapper));\n            }\n        });\n\n        overlay.appendChild(fragment);\n    };\n\n    const clearFormattingMarksOverlay = function(editor) {\n        editor._formattingMarksOverlay.empty();\n    };\n\n    const applyFormattingMarks = function(editor) {\n        editor._updateFormattingMarksOverlayHeight();\n        appendSvgMarks.call(editor);\n    };\n\n    const FormattingMarksCommand = Command.extend({\n        exec: function() {\n            const cmd = this,\n                range = cmd.lockRange(true),\n                editor = cmd.editor;\n\n            if (!editor._toggledFormattingMarks) {\n                editor._toggledFormattingMarks = true;\n                editor._appendFormattingMarksOverlay();\n                editor._appendFormattingMarksStyles();\n                clearFormattingMarksOverlay(editor);\n                applyFormattingMarks(editor);\n            } else {\n                editor._toggledFormattingMarks = false;\n                editor._destroyFormattingMarksOverlay();\n            }\n\n            cmd.releaseRange(range);\n        }\n    });\n\n    $.extend(Editor, {\n        FormattingMarksCommand: FormattingMarksCommand,\n        applyFormattingMarks: applyFormattingMarks,\n        clearFormattingMarksOverlay: clearFormattingMarksOverlay\n    });\n\n    registerTool(\"formattingMarks\", new Tool({ command: FormattingMarksCommand, icon: \"paragraphMark\", ui: { togglable: true } }));\n})(window.kendo.jQuery);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var min = math.min;\n    var max = math.max;\n    var parseFloat = global.parseFloat;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n\n    var PERCENTAGE = \"%\";\n    var PIXEL = \"px\";\n    var REGEX_NUMBER_IN_PERCENTAGES = /(\\d+)(\\.?)(\\d*)%/;\n    var REGEX_NUMBER_IN_PIXELS = /(\\d+)(\\.?)(\\d*)px/;\n    var STRING = \"string\";\n\n    function constrain(options) {\n        var value = options.value;\n        var lowerBound = options.min;\n        var upperBound = options.max;\n\n        return max(min(parseFloat(value), parseFloat(upperBound)), parseFloat(lowerBound));\n    }\n\n    function getScrollBarWidth(element) {\n        if (element && !$(element).is(\"body\") && element.scrollHeight > element.clientHeight) {\n            return kendo.support.scrollbar();\n        }\n\n        return 0;\n    }\n\n    function calculatePercentageRatio(value, total) {\n        if (inPercentages(value)) {\n            return parseFloat(value);\n        }\n        else {\n            return ((parseFloat(value) / total) * 100);\n        }\n    }\n\n    function inPercentages(value) {\n        return (typeof(value) === STRING && REGEX_NUMBER_IN_PERCENTAGES.test(value));\n    }\n\n    function inPixels(value) {\n        return (typeof(value) === STRING && REGEX_NUMBER_IN_PIXELS.test(value));\n    }\n\n    function toPercentages(value) {\n        return (parseFloat(value) + PERCENTAGE);\n    }\n\n    function toPixels(value) {\n        return (parseFloat(value) + PIXEL);\n    }\n\n    var ResizingUtils = {\n        constrain: constrain,\n        getScrollBarWidth: getScrollBarWidth,\n        calculatePercentageRatio: calculatePercentageRatio,\n        inPercentages: inPercentages,\n        inPixels: inPixels,\n        toPercentages: toPercentages,\n        toPixels: toPixels\n    };\n\n    extend(Editor, {\n        ResizingUtils: ResizingUtils\n    });\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n    var noop = $.noop;\n\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n\n    var KEY_DOWN = \"keydown\";\n    var MOUSE_DOWN = \"mousedown\";\n    var MOUSE_ENTER = \"mouseenter\";\n    var MOUSE_LEAVE = \"mouseleave\";\n    var MOUSE_MOVE = \"mousemove\";\n    var MOUSE_UP = \"mouseup\";\n\n    var COMMA = \",\";\n    var DOT = \".\";\n    var LAST_CHILD = \":last-child\";\n\n    var TABLE = \"table\";\n\n    var TableElementResizing = Class.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.options = extend({}, that.options, options);\n\n            that.options.tags = Array.isArray(that.options.tags) ? that.options.tags : [that.options.tags];\n\n            if ($(element).is(TABLE)) {\n                that.element = element;\n                that._attachEventHandlers();\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            var eventNamespace = that.options.eventNamespace;\n\n            if (that.element) {\n                $(that.element).off(eventNamespace);\n                that.element = null;\n            }\n\n            $(that.options.rootElement).off(KEY_DOWN + eventNamespace);\n\n            that._destroyResizeHandle();\n        },\n\n        options: {\n            tags: [],\n            min: 0,\n            rootElement: null,\n            eventNamespace: \"\",\n            rtl: false,\n            handle: {\n                dataAttribute: \"\",\n                height: 0,\n                width: 0,\n                classNames: {},\n                template: \"\"\n            }\n        },\n\n        _attachEventHandlers: function() {\n            var that = this;\n            var options = that.options;\n\n            $(that.element).on(MOUSE_MOVE + options.eventNamespace, options.tags.join(COMMA), that.detectElementBorderHovering.bind(that));\n        },\n\n        resizingInProgress: function() {\n            var that = this;\n            var resizable = that._resizable;\n\n            if (resizable) {\n                return !!resizable.resizing;\n            }\n\n            return false;\n        },\n\n        resize: noop,\n\n        detectElementBorderHovering: function(e) {\n            var that = this;\n            var options = that.options;\n            var handleOptions = options.handle;\n            var tableElement = $(e.currentTarget);\n            var resizeHandle = that.resizeHandle;\n            var dataAttribute = handleOptions.dataAttribute;\n\n            if (!that.resizingInProgress()) {\n                if (!tableElement.is(LAST_CHILD) && that.elementBorderHovered(tableElement, e)) {\n                    if (resizeHandle) {\n                        if (resizeHandle.data(dataAttribute) && resizeHandle.data(dataAttribute) !== tableElement[0]) {\n                            that.showResizeHandle(tableElement, e);\n                        }\n                    }\n                    else {\n                        that.showResizeHandle(tableElement, e);\n                    }\n                }\n                else {\n                    if (resizeHandle) {\n                        that._destroyResizeHandle();\n                    }\n                }\n            }\n        },\n\n        elementBorderHovered: noop,\n\n        showResizeHandle: function(tableElement, e) {\n            var that = this;\n\n            if (e.buttons !== 0) {\n                //prevent showing when a mouse button is still being pressed\n                return;\n            }\n\n            that._initResizeHandle();\n            that.setResizeHandlePosition(tableElement);\n            that.setResizeHandleDimensions();\n            that.setResizeHandleDataAttributes(tableElement[0]);\n            that._attachResizeHandleEventHandlers();\n\n            that._initResizable(tableElement);\n\n            that._hideResizeMarker();\n            that.resizeHandle.show();\n        },\n\n        _initResizeHandle: function() {\n            var that = this;\n            var options = that.options;\n\n            that._destroyResizeHandle();\n\n            that.resizeHandle = $(options.handle.template).appendTo(options.rootElement);\n        },\n\n        setResizeHandlePosition: noop,\n\n        setResizeHandleDimensions: noop,\n\n        setResizeHandleDataAttributes: function(tableElement) {\n            var that = this;\n\n            that.resizeHandle.data(that.options.handle.dataAttribute, tableElement);\n        },\n\n        _attachResizeHandleEventHandlers: function() {\n            var that = this;\n            var options = that.options;\n            var eventNamespace = options.eventNamespace;\n            var markerClass = options.handle.classNames.marker;\n            var resizeHandle = that.resizeHandle;\n\n            that.resizeHandle\n                .on(MOUSE_DOWN + eventNamespace, function() {\n                    resizeHandle.find(DOT + markerClass).show();\n                })\n                .on(MOUSE_UP + eventNamespace, function() {\n                    resizeHandle.find(DOT + markerClass).hide();\n                });\n        },\n\n        _hideResizeMarker: function() {\n            var that = this;\n\n            that.resizeHandle.find(DOT + that.options.handle.classNames.marker).hide();\n        },\n\n        _destroyResizeHandle: function() {\n            var that = this;\n\n            if (that.resizeHandle) {\n                that._destroyResizable();\n                that.resizeHandle.off(that.options.eventNamespace).remove();\n                that.resizeHandle = null;\n            }\n        },\n\n        _initResizable: function(tableElement) {\n            var that = this;\n\n            if (!that.resizeHandle) {\n                return;\n            }\n\n            that._destroyResizable();\n\n            that._resizable = new kendo.ui.Resizable(tableElement, {\n                draggableElement: that.resizeHandle[0],\n                start: that.onResizeStart.bind(that),\n                resize: that.onResize.bind(that),\n                resizeend: that.onResizeEnd.bind(that)\n            });\n        },\n\n        _destroyResizable: function() {\n            var that = this;\n\n            if (that._resizable) {\n                that._resizable.destroy();\n                that._resizable = null;\n            }\n        },\n\n        onResizeStart: function() {\n            this._disableKeyboard();\n        },\n\n        onResize: function(e) {\n            this.setResizeHandleDragPosition(e);\n        },\n\n        setResizeHandleDragPosition: noop,\n\n        onResizeEnd: function(e) {\n            var that = this;\n\n            that.resize(e);\n            that._destroyResizeHandle();\n            that._enableKeyboard();\n\n            if (this.options.editor) {\n                this.options.editor._handleSpaceAndNewLines();\n            }\n        },\n\n        _enableKeyboard: function() {\n            var options = this.options;\n\n            $(options.rootElement).off(KEY_DOWN + options.eventNamespace);\n        },\n\n        _disableKeyboard: function() {\n            var options = this.options;\n\n            $(options.rootElement).on(KEY_DOWN + options.eventNamespace, function(e) {\n                e.preventDefault();\n            });\n        },\n\n        _forceResizing: function(e) {\n            var resizable = this._resizable;\n\n            if (resizable && resizable.userEvents) {\n                resizable.userEvents._end(e);\n            }\n        }\n    });\n\n    var ResizingFactory = Class.extend({\n        create: function(editor, options) {\n            var that = this;\n            var resizingName = options.name;\n            var NS = options.eventNamespace;\n\n            $(editor.body)\n                .on(MOUSE_ENTER + NS, TABLE, function(e) {\n                    var table = e.currentTarget;\n                    var resizing = editor[resizingName];\n\n                    e.stopPropagation();\n\n                    if (resizing) {\n                        if (resizing.element !== table && !resizing.resizingInProgress()) {\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, table, options);\n                        }\n                    }\n                    else {\n                        that._initResizing(editor, table, options);\n                    }\n                })\n                .on(MOUSE_LEAVE + NS, TABLE, function(e) {\n                    var parentTable;\n                    var resizing = editor[resizingName];\n\n                    e.stopPropagation();\n\n                    if (resizing && !resizing.resizingInProgress() && !resizing.resizeHandle) {\n                        parentTable = $(resizing.element).parents(TABLE)[0];\n\n                        if (parentTable) {\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, parentTable, options);\n                        }\n                    }\n                })\n                .on(MOUSE_LEAVE + NS, function() {\n                    var resizing = editor[resizingName];\n\n                    if (resizing && !resizing.resizingInProgress()) {\n                        that._destroyResizing(editor, options);\n                    }\n                })\n                .on(MOUSE_UP + NS, function(e) {\n                    var resizing = editor[resizingName];\n                    var parentTable;\n\n                    if (resizing && resizing.resizingInProgress()) {\n                        parentTable = $(e.target).parents(TABLE)[0];\n\n                        if (parentTable) {\n                            resizing._forceResizing(e);\n                            that._destroyResizing(editor, options);\n                            that._initResizing(editor, parentTable, options);\n                        }\n                    }\n                });\n        },\n\n        dispose: function(editor, options) {\n            $(editor.body).off(options.eventNamespace);\n        },\n\n        _initResizing: function(editor, tableElement, options) {\n            var resizingName = options.name;\n            var resizingType = options.type;\n\n            editor[resizingName] = new resizingType(tableElement, {\n                rtl: kendo.support.isRtl(editor.element),\n                rootElement: editor.body,\n                editor: editor\n            });\n        },\n\n        _destroyResizing: function(editor, options) {\n            var resizingName = options.name;\n\n            if (editor[resizingName]) {\n                editor[resizingName].destroy();\n                editor[resizingName] = null;\n            }\n        }\n    });\n    ResizingFactory.current = new ResizingFactory();\n\n    TableElementResizing.create = function(editor, options) {\n        ResizingFactory.current.create(editor, options);\n    };\n\n    TableElementResizing.dispose = function(editor, options) {\n        ResizingFactory.current.dispose(editor, options);\n    };\n\n    extend(Editor, {\n        TableElementResizing: TableElementResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var abs = math.abs;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n    var dom = Editor.Dom;\n    var TableElementResizing = Editor.TableElementResizing;\n    var ResizingUtils = Editor.ResizingUtils;\n    var constrain = ResizingUtils.constrain;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n    var inPercentages = ResizingUtils.inPercentages;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerWidth = kendo._outerWidth;\n\n    var NS = \".kendoEditorColumnResizing\";\n    var RESIZE_HANDLE_CLASS = \"k-column-resize-handle\";\n    var RESIZE_MARKER_CLASS = \"k-column-resize-marker\";\n\n    var BODY = \"body\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n    var TD = \"td\";\n    var TH = \"th\";\n    var TR = \"tr\";\n\n    var COLATTR = \"col-index\";\n\n    var COMMA = \",\";\n    var WIDTH = \"width\";\n\n    var ColumnResizing = TableElementResizing.extend({\n        options: {\n            tags: [TD, TH],\n            min: 20,\n            rootElement: null,\n            eventNamespace: NS,\n            rtl: false,\n            handle: {\n                dataAttribute: \"column\",\n                width: 10,\n                height: 0,\n                classNames: {\n                    handle: RESIZE_HANDLE_CLASS,\n                    marker: RESIZE_MARKER_CLASS\n                },\n                template:\n                    '<div class=\"k-column-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                        '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                            '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                        '</div>' +\n                    '</div>'\n            }\n        },\n\n        elementBorderHovered: function(column, e) {\n            var that = this;\n            var options = that.options;\n            var handleWidth = options.handle.width;\n            var borderOffset = column.offset().left + (options.rtl ? 0 : outerWidth(column));\n\n\n            var mousePosition = e.clientX + $(column[0].ownerDocument).scrollLeft();\n\n            if ((mousePosition > (borderOffset - handleWidth)) && (mousePosition < (borderOffset + handleWidth))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n\n        setResizeHandlePosition: function(column) {\n            var that = this;\n            var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n            var options = that.options;\n            var rtl = options.rtl;\n            var handleWidth = options.handle.width;\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var columnWidthOffset = rtl ? 0 : outerWidth(column);\n            var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var columnOffsetLeft = column.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(column.css(\"marginLeft\"));\n            var innerElementOffsetTop = tableInnerElement.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(tableInnerElement.css(\"marginTop\"));\n            var browser = kendo.support.browser;\n\n            if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            that.resizeHandle.css({\n                top: innerElementOffsetTop + scrollTopOffset,\n                left: columnOffsetLeft + columnWidthOffset + (scrollLeftOffset - scrollBarWidth) - (handleWidth / 2),\n                position: \"absolute\"\n            });\n        },\n\n        setResizeHandleDimensions: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableBody = $(that.element).children(TBODY);\n            var fullHeight = tableHead.length > 0 ? tableHead.height() + tableBody.height() : tableBody.height();\n\n            that.resizeHandle.css({\n                width: that.options.handle.width,\n                height: fullHeight\n            });\n        },\n\n        setResizeHandleDragPosition: function(e) {\n            var that = this;\n            var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n            var options = that.options;\n            var rootElement = $(options.rootElement);\n            var handleWidth = options.handle ? options.handle.width : 0;\n            var min = options.min;\n            var rtl = options.rtl;\n            var columnWidth = outerWidth(column);\n            var columnLeftOffset = column.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(column.css(\"marginLeft\"));\n            var adjacentColumnWidth = outerWidth(column.next());\n            var resizeHandle = $(that.resizeHandle);\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var resizeHandleOffsetLeft = resizeHandle.offset().left -\n                                            (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                            parseFloat(resizeHandle.css(\"marginLeft\"));\n            var browser = kendo.support.browser;\n\n            if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            var handleOffset = constrain({\n                value: resizeHandleOffsetLeft + (scrollLeftOffset - scrollBarWidth) + e.x.delta,\n                min: columnLeftOffset + (scrollLeftOffset - scrollBarWidth) - (rtl ? adjacentColumnWidth : 0) + min,\n                max: columnLeftOffset + columnWidth + (scrollLeftOffset - scrollBarWidth) + (rtl ? 0 : adjacentColumnWidth) - handleWidth - min\n            });\n\n            resizeHandle.css({ left: handleOffset });\n        },\n\n        resize: function(e) {\n            var that = this;\n            var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n            var options = that.options;\n            var rtlModifier = options.rtl ? (-1) : 1;\n            var min = options.min;\n            var initialDeltaX = rtlModifier * e.x.initialDelta;\n            var newWidth;\n            var initialAdjacentColumnWidth;\n            var initialColumnWidth;\n            var colIndex;\n            var nextColumn;\n\n            dom.reMapTableColumns(that.element, COLATTR);\n\n            colIndex = parseInt(column.attr(COLATTR), 10);\n\n            if (column.prop(\"colSpan\") > 1) {\n                column = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + column.prop(\"colSpan\") - 1) + \"]\").eq(0);\n                colIndex = parseInt(column.attr(COLATTR), 10);\n            }\n\n            nextColumn = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + 1) + \"]:not([colspan])\");\n\n            that._setTableComputedWidth();\n            that._setColumnsComputedWidth();\n\n            initialColumnWidth = outerWidth(column);\n            initialAdjacentColumnWidth = outerWidth(nextColumn);\n\n            newWidth = constrain({\n                value: initialColumnWidth + initialDeltaX,\n                min: min,\n                max: initialColumnWidth + initialAdjacentColumnWidth - min\n            });\n\n            that._resizeColumn(column[0], newWidth);\n            that._resizeTopAndBottomColumns(column[0], newWidth);\n            that._resizeAdjacentColumns(parseInt(column.attr(COLATTR),10), initialAdjacentColumnWidth, initialColumnWidth, (initialColumnWidth - newWidth));\n\n            dom.clearTableMappings(that.element, COLATTR);\n        },\n\n        _setTableComputedWidth: function() {\n            var element = this.element;\n\n            if (element.style[WIDTH] === \"\") {\n                element.style[WIDTH] = toPixels(outerWidth($(element)));\n            }\n        },\n\n        _setColumnsComputedWidth: function() {\n            var that = this;\n            var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n            var innerElementWidth = outerWidth(tableInnerElement);\n            var columns = tableInnerElement.children(TR).children(TD);\n            var length = columns.length;\n            var currentColumnsWidths = columns.map(function() {\n                return outerWidth($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                if (inPercentages(columns[i].style[WIDTH])) {\n                    columns[i].style[WIDTH] = toPercentages(calculatePercentageRatio(currentColumnsWidths[i], innerElementWidth));\n                }\n                else {\n                    columns[i].style[WIDTH] = toPixels(currentColumnsWidths[i]);\n                }\n            }\n        },\n\n        _resizeTopAndBottomColumns: function(column, newWidth) {\n            var that = this;\n            var columnIndex = $(column).attr(COLATTR);\n            var topAndBottomColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                .filter(function() {\n                    var cell = this;\n                    return ($(cell).attr(COLATTR) === columnIndex && cell !== column);\n                });\n            var length = topAndBottomColumns.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that._resizeColumn(topAndBottomColumns[i], newWidth);\n            }\n        },\n\n        _resizeColumn: function(column, newWidth) {\n            var innerTableElement = $(this.element.tHead || this.element.tBodies[0]);\n            if (inPercentages(column.style[WIDTH])) {\n                column.style[WIDTH] = toPercentages(calculatePercentageRatio(newWidth, outerWidth(innerTableElement)));\n            }\n            else {\n                column.style[WIDTH] = toPixels(newWidth);\n            }\n        },\n\n        _resizeAdjacentColumns: function(columnIndex, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n            var that = this;\n            var adjacentColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                .filter(function() {\n                    return (parseInt($(this).attr(COLATTR),10) === (columnIndex + 1));\n                });\n            var length = adjacentColumns.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that._resizeAdjacentColumn(adjacentColumns[i], initialAdjacentColumnWidth, initialColumnWidth, deltaWidth);\n            }\n        },\n\n        _resizeAdjacentColumn: function(adjacentColumn, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n            var that = this;\n            var min = that.options.min;\n            var newWidth;\n\n            newWidth = constrain({\n                value: initialAdjacentColumnWidth + deltaWidth,\n                min: min,\n                max: abs(initialColumnWidth + initialAdjacentColumnWidth - min)\n            });\n\n            that._resizeColumn(adjacentColumn, newWidth);\n        }\n    });\n\n    ColumnResizing.create = function(editor) {\n        TableElementResizing.create(editor, {\n            name: \"columnResizing\",\n            type: ColumnResizing,\n            eventNamespace: NS\n        });\n    };\n\n    ColumnResizing.dispose = function(editor) {\n        TableElementResizing.dispose(editor, {\n            eventNamespace: NS\n        });\n    };\n\n    extend(Editor, {\n        ColumnResizing: ColumnResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var math = window.Math;\n    var abs = math.abs;\n\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n\n    var Editor = kendo.ui.editor;\n    var TableElementResizing = Editor.TableElementResizing;\n    var ResizingUtils = Editor.ResizingUtils;\n    var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n    var constrain = ResizingUtils.constrain;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var inPercentages = ResizingUtils.inPercentages;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerHeight = kendo._outerHeight;\n\n    var NS = \".kendoEditorRowResizing\";\n    var RESIZE_HANDLE_CLASS = \"k-row-resize-handle\";\n    var RESIZE_HANDLE_MARKER_WRAPPER_CLASS = \"k-row-resize-marker-wrapper\";\n    var RESIZE_MARKER_CLASS = \"k-row-resize-marker\";\n\n    var BODY = \"body\";\n    var TR = \"tr\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n\n    var COMMA = \",\";\n    var HEIGHT = \"height\";\n\n    var RowResizing = TableElementResizing.extend({\n        options: {\n            tags: [TR],\n            min: 20,\n            rootElement: null,\n            eventNamespace: NS,\n            rtl: false,\n            handle: {\n                dataAttribute: \"row\",\n                width: 0,\n                height: 10,\n                classNames: {\n                    handle: RESIZE_HANDLE_CLASS,\n                    marker: RESIZE_MARKER_CLASS\n                },\n                template:\n                    '<div class=\"k-row-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                        '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                            '<div class=\"' + RESIZE_HANDLE_MARKER_WRAPPER_CLASS + '\">' +\n                                '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</div>'\n            }\n        },\n\n        elementBorderHovered: function(tableElement, e) {\n            var that = this;\n            var handleHeight = that.options.handle[HEIGHT];\n            var borderOffset = tableElement.offset().top + outerHeight(tableElement);\n            var mousePosition = e.clientY + $(tableElement[0].ownerDocument).scrollTop();\n\n            if ((mousePosition > (borderOffset - handleHeight)) && (mousePosition < (borderOffset + handleHeight))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n\n        setResizeHandlePosition: function(row) {\n            var that = this;\n            var options = that.options;\n            var handleHeight = options.handle[HEIGHT];\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n            var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n\n            var rowOffsetLeft = row.offset().left -\n                                    (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                    parseFloat(row.css(\"marginLeft\"));\n            var rowOffsetTop = row.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(row.css(\"marginTop\"));\n            var browser = kendo.support.browser;\n\n            if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrollLeftOffset = scrollLeftOffset * -1;\n            }\n\n            that.resizeHandle.css({\n                top: rowOffsetTop + outerHeight(row) + scrollTopOffset - (handleHeight / 2),\n                left: rowOffsetLeft + (scrollLeftOffset - scrollBarWidth),\n                position: \"absolute\"\n            });\n        },\n\n        setResizeHandleDimensions: function() {\n            var that = this;\n            var innerTableElement = $(that.element.tHead || that.element.tBodies[0]);\n\n            that.resizeHandle.css({\n                width: innerTableElement.width(),\n                height: that.options.handle[HEIGHT]\n            });\n        },\n\n        setResizeHandleDragPosition: function(e) {\n            var that = this;\n            var options = that.options;\n            var min = options.min;\n            var tableHead = $(that.element).children(THEAD);\n            var tableBody = $(that.element).children(TBODY);\n            var topInnerTableElement = tableHead.length > 0 ? tableHead : tableBody;\n            var resizeHandle = $(that.resizeHandle);\n            var row = $(e.currentTarget).data(options.handle.dataAttribute);\n            var $row = $(row);\n            var rootElement = $(options.rootElement);\n            var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n            var tableTopOffset = topInnerTableElement.offset().top -\n                                    (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                    parseFloat(topInnerTableElement.css(\"marginTop\"));\n\n            var rowOffsetTop = $row.offset().top -\n                                (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                parseFloat($row.css(\"marginTop\"));\n\n            var resizeHandleOffsetTop = resizeHandle.offset().top -\n                                (Math.max(0 , rootElement.offset().top) + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                parseFloat(resizeHandle.css(\"marginTop\"));\n\n            var handleOffset = constrain({\n                value: resizeHandleOffsetTop + scrollTopOffset + e.y.delta,\n                min: rowOffsetTop + scrollTopOffset + min,\n                max: tableTopOffset + outerHeight(tableHead) + outerHeight(tableBody) + scrollTopOffset - options.handle[HEIGHT] - min\n            });\n\n            resizeHandle.css({ top: handleOffset });\n        },\n\n        resize: function(e) {\n            var that = this;\n            var options = that.options;\n            var row = $(e.currentTarget).data(options.handle.dataAttribute);\n            var currentRowHeight = outerHeight($(row));\n            var element = $(that.element);\n            var initialTableHeight = outerHeight(element);\n            var tableHead = element.children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = element.children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var initialStyleHeight = row.style[HEIGHT];\n            var newRowHeight = constrain({\n                value: currentRowHeight + e.y.initialDelta,\n                min: options.min,\n                max: abs(tableHeadHeight + tableBodyHeight - options.min)\n            });\n\n            that._setRowsHeightInPixels();\n            row.style[HEIGHT] = toPixels(newRowHeight);\n            that._setTableHeight(initialTableHeight + (newRowHeight - currentRowHeight));\n\n            if (inPercentages(initialStyleHeight)) {\n                //resize rows in percentages as late as possible to prevent incorrect precision calculations\n                that._setRowsHeightInPercentages();\n            }\n        },\n\n        _setRowsHeightInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(TBODY + COMMA + THEAD).children(TR);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n            }\n        },\n\n        _setRowsHeightInPercentages: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = $(that.element).children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(TR);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n            }\n        },\n\n        _setTableHeight: function(newHeight) {\n            var element = this.element;\n\n            if (inPercentages(element.style[HEIGHT])) {\n                element.style[HEIGHT] = toPercentages(calculatePercentageRatio(newHeight, $(element).parent().height()));\n            }\n            else {\n                element.style[HEIGHT] = toPixels(newHeight);\n            }\n        }\n    });\n\n    RowResizing.create = function(editor) {\n        TableElementResizing.create(editor, {\n            name: \"rowResizing\",\n            type: RowResizing,\n            eventNamespace: NS\n        });\n    };\n\n    RowResizing.dispose = function(editor) {\n        TableElementResizing.dispose(editor, {\n            eventNamespace: NS\n        });\n    };\n\n    extend(Editor, {\n        RowResizing: RowResizing\n    });\n\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var $ = kendo.jQuery;\n    var extend = $.extend;\n    var noop = $.noop;\n\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n    var Draggable = kendo.ui.Draggable;\n    var Observable = kendo.Observable;\n    var getScrollBarWidth = Editor.ResizingUtils.getScrollBarWidth;\n    var outerWidth = kendo._outerWidth;\n    var outerHeight = kendo._outerHeight;\n\n    var NS = \".kendoEditorElementResizeHandle\";\n    var RESIZE_HANDLE_CLASS = \"k-element-resize-handle\";\n\n    var DRAG_START = \"dragStart\";\n    var DRAG = \"drag\";\n    var DRAG_END = \"dragEnd\";\n    var HALF_INSIDE = \"halfInside\";\n    var MOUSE_OVER = \"mouseover\";\n    var MOUSE_OUT = \"mouseout\";\n\n    var BODY = \"body\";\n    var TABLE = \"table\";\n\n    var EAST = \"east\";\n    var NORTH = \"north\";\n    var NORTHEAST = \"northeast\";\n    var NORTHWEST = \"northwest\";\n    var SOUTH = \"south\";\n    var SOUTHEAST = \"southeast\";\n    var SOUTHWEST = \"southwest\";\n    var WEST = \"west\";\n\n    var DOT = \".\";\n\n    var ElementResizeHandle = Observable.extend({\n        init: function(options) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.options = extend({}, that.options, options);\n            that.element = $(that.options.template).appendTo(that.options.appendTo)[0];\n\n            that._attachEventHandlers();\n            that._addStyles();\n            that._initDraggable();\n            that._initPositioningStrategy();\n            that._initDraggingStrategy();\n\n            $(that.element).data(TABLE, that.options.resizableElement);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            $(that.element).off(NS).remove();\n            that.element = null;\n\n            that._destroyDraggable();\n\n            that.unbind();\n        },\n\n        options: {\n            appendTo: null,\n            direction: SOUTHEAST,\n            resizableElement: null,\n            rtl: false,\n            template:\n                \"<div class='k-element-resize-handle-wrapper' unselectable='on' contenteditable='false'>\" +\n                    \"<div class='\" + RESIZE_HANDLE_CLASS + \"'></div>\" +\n                \"</div>\"\n        },\n\n        events: [\n            DRAG_START,\n            DRAG,\n            DRAG_END,\n            MOUSE_OVER,\n            MOUSE_OUT\n        ],\n\n        show: function() {\n            this._setPosition();\n        },\n\n        _setPosition: function() {\n            var that = this;\n            var position = that._positioningStrategy.getPosition();\n\n            $(that.element).css({\n                top: position.top,\n                left: position.left,\n                position: \"absolute\"\n            });\n        },\n\n        _attachEventHandlers: function() {\n            var that = this;\n\n            $(that.element)\n                .on(MOUSE_OVER + NS, that._onMouseOver.bind(that))\n                .on(MOUSE_OUT + NS, that._onMouseOut.bind(that));\n        },\n\n        _onMouseOver: function() {\n            this.trigger(MOUSE_OVER);\n        },\n\n        _onMouseOut: function() {\n            this.trigger(MOUSE_OUT);\n        },\n\n        _addStyles: function() {\n            var that = this;\n            $(that.element).children(DOT + RESIZE_HANDLE_CLASS).addClass(\"k-resize-\" + that.options.direction);\n        },\n\n        _initPositioningStrategy: function() {\n            var that = this;\n            var options = that.options;\n\n            that._positioningStrategy = HandlePositioningStrategy.create({\n                name: options.direction,\n                handle: that.element,\n                resizableElement: options.resizableElement,\n                rootElement: options.rootElement,\n                rtl: options.rtl\n            });\n        },\n\n        _initDraggable: function() {\n            var that = this;\n            var element = that.element;\n\n            if (that._draggable || !element) {\n                return;\n            }\n\n            that._draggable = new Draggable(element, {\n                dragstart: that._onDragStart.bind(that),\n                drag: that._onDrag.bind(that),\n                dragend: that._onDragEnd.bind(that)\n            });\n        },\n\n        _onDragStart: function() {\n            this.trigger(DRAG_START);\n        },\n\n        _onDrag: function(e) {\n            var that = this;\n\n            that.trigger(DRAG, that._draggingStrategy.adjustDragDelta({\n                deltaX: e.x.delta,\n                deltaY: e.y.delta,\n                initialDeltaX: e.x.initialDelta,\n                initialDeltaY: e.y.initialDelta\n            }));\n\n            if (that.options.editor) {\n                that.options.editor._handleSpaceAndNewLines();\n            }\n        },\n\n        _onDragEnd: function() {\n            this.trigger(DRAG_END);\n        },\n\n        _destroyDraggable: function() {\n            var that = this;\n\n            if (that._draggable) {\n                that._draggable.destroy();\n                that._draggable = null;\n            }\n        },\n\n        _initDraggingStrategy: function() {\n            var that = this;\n\n            that._draggingStrategy = HandleDraggingStrategy.create({\n                name: that.options.direction\n            });\n        }\n    });\n\n    var StrategyFactory = Class.extend({\n        init: function() {\n            this._items = [];\n        },\n\n        register: function(name, type) {\n            this._items.push({\n                name: name,\n                type: type\n            });\n        },\n\n        create: function(options) {\n            var items = this._items;\n            var itemsLength = items.length;\n            var name = options.name ? options.name.toLowerCase() : \"\";\n            var match;\n            var item;\n            var i;\n\n            for (i = 0; i < itemsLength; i++) {\n                item = items[i];\n\n                if (item.name.toLowerCase() === name) {\n                    match = item;\n                    break;\n                }\n            }\n\n            if (match) {\n                return new match.type(options);\n            }\n        }\n    });\n\n    var PositioningStrategyFactory = StrategyFactory.extend({});\n    PositioningStrategyFactory.current = new PositioningStrategyFactory();\n\n    var HandlePositioningStrategy = Class.extend({\n        init: function(options) {\n            var that = this;\n            that.options = extend({}, that.options, options);\n        },\n\n        options: {\n            handle: null,\n            offset: HALF_INSIDE,\n            resizableElement: null,\n            rootElement: null,\n            rtl: false\n        },\n\n        getPosition: function() {\n            var that = this;\n\n            var position = that.calculatePosition();\n            var handleOffsetPosition = that.applyHandleOffset(position);\n            var scrollOffsetPosition = that.applyScrollOffset(handleOffsetPosition);\n\n            return scrollOffsetPosition;\n        },\n\n        calculatePosition: noop,\n\n        applyHandleOffset: function(position) {\n            var options = this.options;\n            var handle = $(options.handle);\n\n            if (options.offset === HALF_INSIDE) {\n                return {\n                    top: position.top - (outerHeight(handle) / 2),\n                    left: position.left - (outerWidth(handle) / 2)\n                };\n            }\n\n            return position;\n        },\n\n        applyScrollOffset: function(position) {\n            var options = this.options;\n            var rootElement = $(options.rootElement);\n            var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n            var browser = kendo.support.browser;\n            var rootLeft;\n\n            if (!rootElement.is(BODY)) {\n                rootLeft = kendo.scrollLeft(rootElement) || 0;\n\n                if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                    rootLeft = rootLeft * -1;\n                }\n\n                return {\n                    top: position.top + (rootElement.scrollTop() || 0),\n                    left: position.left + rootLeft - scrollBarWidth\n                };\n            }\n\n            return position;\n        }\n    });\n\n    HandlePositioningStrategy.create = function(options) {\n        return PositioningStrategyFactory.current.create(options);\n    };\n\n    var EastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + (outerHeight(resizableElement) / 2),\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(EAST, EastPositioningStrategy);\n\n    var NorthPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTH, NorthPositioningStrategy);\n\n    var NortheastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTHEAST, NortheastPositioningStrategy);\n\n    var NorthwestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top,\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(NORTHWEST, NorthwestPositioningStrategy);\n\n    var SouthPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTH, SouthPositioningStrategy);\n\n    var SoutheastPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + outerWidth(resizableElement) + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTHEAST, SoutheastPositioningStrategy);\n\n    var SouthwestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + outerHeight(resizableElement),\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(SOUTHWEST, SouthwestPositioningStrategy);\n\n    var WestPositioningStrategy = HandlePositioningStrategy.extend({\n        calculatePosition: function() {\n            var resizableElement = $(this.options.resizableElement);\n            var offset = resizableElement.position();\n            var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n            return {\n                top: offset.top + (outerHeight(resizableElement) / 2),\n                left: offset.left + marginLeft\n            };\n        }\n    });\n    PositioningStrategyFactory.current.register(WEST, WestPositioningStrategy);\n\n    var DraggingStrategyFactory = StrategyFactory.extend({});\n    DraggingStrategyFactory.current = new DraggingStrategyFactory();\n\n    var HandleDraggingStrategy = Class.extend({\n        init: function(options) {\n            var that = this;\n            that.options = extend({}, that.options, options);\n        },\n\n        options: {\n            deltaX: {\n                adjustment: null,\n                modifier: null\n            },\n            deltaY: {\n                adjustment: null,\n                modifier: null\n            }\n        },\n\n        adjustDragDelta: function(deltas) {\n            var options = this.options;\n            var xAxisAdjustment = options.deltaX.adjustment * options.deltaX.modifier;\n            var yAxisAdjustment = options.deltaY.adjustment * options.deltaY.modifier;\n\n            return {\n                deltaX: deltas.deltaX * xAxisAdjustment,\n                deltaY: deltas.deltaY * yAxisAdjustment,\n                initialDeltaX: deltas.initialDeltaX * xAxisAdjustment,\n                initialDeltaY: deltas.initialDeltaY * yAxisAdjustment\n            };\n        }\n    });\n\n    HandleDraggingStrategy.create = function(options) {\n        return DraggingStrategyFactory.current.create(options);\n    };\n\n    var HorizontalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 1,\n                modifier: 1\n            },\n            deltaY: {\n                adjustment: 0,\n                modifier: 0\n            }\n        }\n    });\n\n    var EastDraggingStrategy = HorizontalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(EAST, EastDraggingStrategy);\n\n    var WestDraggingStrategy = HorizontalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(WEST, WestDraggingStrategy);\n\n    var VerticalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 0,\n                modifier: 0\n            },\n            deltaY: {\n                adjustment: 1,\n                modifier: 1\n            }\n        }\n    });\n\n    var NorthDraggingStrategy = VerticalDraggingStrategy.extend({\n        options: {\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTH, NorthDraggingStrategy);\n\n    var SouthDraggingStrategy = VerticalDraggingStrategy.extend({\n        options: {\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTH, SouthDraggingStrategy);\n\n    var HorizontalAndVerticalDraggingStrategy = HandleDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                adjustment: 1,\n                modifier: 1\n            },\n            deltaY: {\n                adjustment: 1,\n                modifier: 1\n            }\n        }\n    });\n\n    var NorthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            },\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTHEAST, NorthEastDraggingStrategy);\n\n    var NorthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            },\n            deltaY: {\n                modifier: (-1)\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(NORTHWEST, NorthWestDraggingStrategy);\n\n    var SouthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: 1\n            },\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTHEAST, SouthEastDraggingStrategy);\n\n    var SouthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n        options: {\n            deltaX: {\n                modifier: (-1)\n            },\n            deltaY: {\n                modifier: 1\n            }\n        }\n    });\n    DraggingStrategyFactory.current.register(SOUTHWEST, SouthWestDraggingStrategy);\n\n    extend(Editor, {\n        ElementResizeHandle: ElementResizeHandle\n    });\n})(window.kendo);\n\n(function(kendo, undefined$1) {\n    var global = window;\n    var math = global.Math;\n    var min = math.min;\n    var max = math.max;\n\n    var $ = kendo.jQuery;\n    var contains = $.contains;\n    var extend = $.extend;\n\n    var browser = kendo.support.browser;\n    var Editor = kendo.ui.editor;\n    var Class = kendo.Class;\n    var ElementResizeHandle = Editor.ElementResizeHandle;\n    var ResizingUtils = Editor.ResizingUtils;\n    var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n    var constrain = ResizingUtils.constrain;\n    var inPercentages = ResizingUtils.inPercentages;\n    var inPixels = ResizingUtils.inPixels;\n    var toPercentages = ResizingUtils.toPercentages;\n    var toPixels = ResizingUtils.toPixels;\n    var outerWidth = kendo._outerWidth;\n    var outerHeight = kendo._outerHeight;\n    var RangeUtils = Editor.RangeUtils;\n\n    var NS = \".kendoEditorElementResizing\";\n    var RESIZE_HANDLE_WRAPPER_CLASS = \"k-element-resize-handle-wrapper\";\n    var TABLE_CLASS = \"k-table\";\n    var ELEMENT_RESIZING_CLASS = \"k-element-resizing\";\n\n    var DRAG_START = \"dragStart\";\n    var DRAG = \"drag\";\n    var DRAG_END = \"dragEnd\";\n    var KEY_DOWN = \"keydown\";\n    var MOUSE_DOWN = \"mousedown\";\n    var SELECT = \"select\";\n    var DROP = \"drop\";\n\n    var COLUMN = \"td\";\n    var ROW = \"tr\";\n    var TBODY = \"tbody\";\n    var THEAD = \"thead\";\n    var TABLE = \"table\";\n    var IMG = \"img\";\n    var ELEMENT_TYPES = [\"TABLE\", \"IMG\"];\n\n    var COMMA = \",\";\n    var WIDTH = \"width\";\n    var HEIGHT = \"height\";\n\n    var EAST = \"east\";\n    var NORTH = \"north\";\n    var NORTHEAST = \"northeast\";\n    var NORTHWEST = \"northwest\";\n    var SOUTH = \"south\";\n    var SOUTHEAST = \"southeast\";\n    var SOUTHWEST = \"southwest\";\n    var WEST = \"west\";\n\n    var DOT = \".\";\n\n    function isUndefined(value) {\n        return typeof(value) === \"undefined\";\n    }\n\n    var ElementResizing = Class.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.options = extend({}, that.options, options);\n            that.handles = [];\n\n            // Check whether the element is TABLE or IMG\n            if (ELEMENT_TYPES.indexOf(element.nodeName) >= 0) {\n                that.element = element;\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            $(that.element).off(NS);\n            that.element = null;\n\n            $(that.options.rootElement).off(KEY_DOWN + NS);\n\n            that._destroyResizeHandles();\n        },\n\n        options: {\n            appendHandlesTo: null,\n            rtl: false,\n            rootElement: null,\n            minWidth: 10,\n            minHeight: 10,\n            handles: [{\n                direction: NORTHWEST\n            }, {\n                direction: NORTH\n            }, {\n                direction: NORTHEAST\n            }, {\n                direction: EAST\n            }, {\n                direction: SOUTHEAST\n            }, {\n                direction: SOUTH\n            }, {\n                direction: SOUTHWEST\n            }, {\n                direction: WEST\n            }]\n        },\n\n        resize: function(args) {\n            var that = this;\n            var deltas = extend({}, {\n                deltaX: 0,\n                deltaY: 0,\n                initialDeltaX: 0,\n                initialDeltaY: 0\n            }, args);\n\n            that._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            that._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n            that.showResizeHandles();\n        },\n\n        _resizeWidth: function() {\n            return false;\n        },\n\n        _resizeHeight: function() {\n            return false;\n        },\n\n        _getMaxDimensionValue: function(dimension) {\n            var that = this;\n            var element = $(that.element);\n            var dimensionLowercase = dimension.toLowerCase();\n            var rtlModifier = that.options.rtl ? (-1) : 1;\n            var parent = $(that.element).parent();\n            var parentElement = parent[0];\n            var parentDimension = parent[dimensionLowercase]();\n            var parentScrollOffset = rtlModifier * (dimension === WIDTH ? kendo.scrollLeft(parent) : parent.scrollTop());\n\n            if (parentElement && parentElement === element.closest(COLUMN)[0]) {\n                if (parentElement.style[dimensionLowercase] === \"\" && !inPercentages(that.element.style[dimensionLowercase])) {\n                    return Infinity;\n                }\n                else {\n                    return (parentDimension + parentScrollOffset);\n                }\n            }\n            else {\n                return (parentDimension + parentScrollOffset);\n            }\n        },\n\n        showResizeHandles: function() {\n            var that = this;\n\n            that._initResizeHandles();\n            that._showResizeHandles();\n        },\n\n        _initResizeHandles: function() {\n            var that = this;\n            var handles = that.handles;\n            var options = that.options;\n            var handleOptions = that.options.handles;\n            var length = handleOptions.length;\n            var i;\n\n            if (handles && handles.length > 0) {\n                return;\n            }\n\n            for (i = 0; i < length; i++) {\n                that.handles.push(new ElementResizeHandle(extend({\n                    appendTo: options.appendHandlesTo,\n                    resizableElement: that.element,\n                    rootElement: options.rootElement,\n                    rtl: options.rtl,\n                    editor: that.options.editor\n                }, handleOptions[i])));\n            }\n\n            that._bindToResizeHandlesEvents();\n        },\n\n        _destroyResizeHandles: function() {\n            var that = this;\n            var length = that.handles ? that.handles.length : 0;\n\n            for (var i = 0; i < length; i++) {\n                that.handles[i].destroy();\n            }\n\n            that.handles = [];\n        },\n\n        _showResizeHandles: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n\n            for (i = 0; i < length; i++) {\n                that.handles[i].show();\n            }\n        },\n\n        _bindToResizeHandlesEvents: function() {\n            return false;\n        },\n\n        _onResizeHandleDragStart: function() {\n            var that = this;\n            var element = $(that.element);\n\n            element.addClass(ELEMENT_RESIZING_CLASS);\n\n            that._initialElementHeight = outerHeight(element);\n            that._initialElementWidth = outerWidth(element);\n            that._disableKeyboard();\n        },\n\n        _onResizeHandleDrag: function(e) {\n            this.resize(e);\n        },\n\n        _onResizeHandleDragEnd: function() {\n            var that = this;\n            $(that.element).removeClass(ELEMENT_RESIZING_CLASS);\n            that._enableKeyboard();\n        },\n\n        _enableKeyboard: function() {\n            $(this.options.rootElement).off(KEY_DOWN + NS);\n        },\n\n        _disableKeyboard: function() {\n            $(this.options.rootElement).on(KEY_DOWN + NS, function(e) {\n                e.preventDefault();\n            });\n        }\n    });\n\n    var TableResizing = ElementResizing.extend({\n        _bindToResizeHandlesEvents: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n            var handle;\n\n            for (i = 0; i < length; i++) {\n                handle = handles[i];\n                handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n                handle.bind(DRAG, that._onResizeHandleDrag.bind(that));\n                handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n            }\n        },\n\n        _hasRowsInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n\n            for (var i = 0; i < rows.length; i++) {\n                if (rows[i].style.height === \"\" || inPixels(rows[i].style.height)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _resizeWidth: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var styleWidth = element[0].style[WIDTH];\n            var currentWidth = outerWidth(element);\n            var parentWidth = element.parent().width();\n            var maxWidth = that._getMaxDimensionValue(WIDTH);\n            var newWidth;\n            var ratioValue;\n            var ratioTotalValue;\n            var constrainedWidth;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementWidth)) {\n                that._initialElementWidth = currentWidth;\n            }\n\n            //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedWidth = constrain({\n                value: that._initialElementWidth + initialDelta,\n                min: that.options.minWidth,\n                max: maxWidth\n            });\n\n            if (inPercentages(styleWidth)) {\n                //detect resizing greater than 100%\n                if (currentWidth + delta > parentWidth) {\n                    ratioValue = max(constrainedWidth, parentWidth);\n                    ratioTotalValue = min(constrainedWidth, parentWidth);\n                }\n                else {\n                    ratioValue = min(constrainedWidth, parentWidth);\n                    ratioTotalValue = max(constrainedWidth, parentWidth);\n                }\n\n                newWidth = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n            }\n            else {\n                newWidth = toPixels(constrainedWidth);\n            }\n\n            that._setColumnsWidth();\n\n            element[0].style[WIDTH] = newWidth;\n        },\n\n        _resizeHeight: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var styleHeight = element[0].style[HEIGHT];\n            var currentHeight = outerHeight(element);\n            var parent = element.parent();\n            var parentHeight = parent.height();\n            var maxHeight = that._getMaxDimensionValue(HEIGHT);\n            var newHeight;\n            var ratioValue;\n            var ratioTotalValue;\n            var constrainedHeight;\n            var minHeight = that.options.minHeight;\n            var hasRowsInPixels = that._hasRowsInPixels();\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementHeight)) {\n                that._initialElementHeight = currentHeight;\n            }\n\n            //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedHeight = constrain({\n                value: that._initialElementHeight + initialDelta,\n                min: minHeight,\n                max: maxHeight\n            });\n\n            if (hasRowsInPixels && delta < 0) {\n                //decreasing table height when rows are sized in pixels is not possible\n                that._setRowsHeightInPercentages();\n            }\n\n            if (inPercentages(styleHeight)) {\n                //detect resizing greater than 100%\n                if (currentHeight + delta > parentHeight) {\n                    ratioValue = max(constrainedHeight, parentHeight);\n                    ratioTotalValue = min(constrainedHeight, parentHeight);\n                }\n                else {\n                    ratioValue = min(constrainedHeight, parentHeight);\n                    ratioTotalValue = max(constrainedHeight, parentHeight);\n                }\n\n                newHeight = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n            }\n            else {\n                newHeight = toPixels(constrainedHeight);\n            }\n\n            element[0].style[HEIGHT] = newHeight;\n\n            if (hasRowsInPixels && delta < 0) {\n                //restore original rows height unit\n                that._setRowsHeightInPixels();\n            }\n        },\n\n        _setColumnsWidth: function() {\n            var that = this;\n            var element = $(that.element);\n            var parentElement = element.parent()[0];\n            var parentColumn = element.closest(COLUMN);\n            var columns = parentColumn.closest(ROW).children();\n            var columnsLength = columns.length;\n            var i;\n\n            function isWidthInPercentages(element) {\n                var styleWidth = element.style.width;\n\n                if (styleWidth !== \"\") {\n                    return inPercentages(styleWidth) ? true : false;\n                }\n                else {\n                    return $(element).hasClass(TABLE_CLASS) ? true : false;\n                }\n            }\n\n            if (isWidthInPercentages(element[0]) && parentElement === parentColumn[0] && parentElement.style[WIDTH] === \"\") {\n                for (i = 0; i < columnsLength; i++) {\n                    columns[i].style[WIDTH] = toPixels($(columns[i]).width());\n                }\n            }\n        },\n\n        _setRowsHeightInPercentages: function() {\n            var that = this;\n            var tableHead = $(that.element).children(THEAD);\n            var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n            var tableBody = $(that.element).children(TBODY);\n            var tableBodyHeight = tableBody.height();\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n            }\n        },\n\n        _setRowsHeightInPixels: function() {\n            var that = this;\n            var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n            var length = rows.length;\n            var currentRowsHeights = rows.map(function() {\n                return outerHeight($(this));\n            });\n            var i;\n\n            for (i = 0; i < length; i++) {\n                rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n            }\n        }\n    });\n\n    var ImageResizing = ElementResizing.extend({\n        _bindToResizeHandlesEvents: function() {\n            var that = this;\n            var handles = that.handles || [];\n            var length = handles.length;\n            var i;\n            var handle;\n\n            for (i = 0; i < length; i++) {\n                handle = handles[i];\n                handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n\n                if (handle.options.direction === \"north\" || handle.options.direction === \"south\") {\n                    handle.bind(DRAG, that._onResizeHandleDragVertical.bind(that));\n                } else if (handle.options.direction === \"east\" || handle.options.direction === \"west\") {\n                    handle.bind(DRAG, that._onResizeHandleDragHorizontal.bind(that));\n                } else {\n                    handle.bind(DRAG, that._onResizeHandleDragLocked.bind(that));\n                }\n\n                handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n            }\n        },\n\n        _getDeltas: function(args) {\n            return extend({}, {\n                deltaX: 0,\n                deltaY: 0,\n                initialDeltaX: 0,\n                initialDeltaY: 0\n            }, args);\n        },\n\n        _onResizeHandleDragVertical: function(args) {\n            var deltas = this._getDeltas(args);\n\n            this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n            this.showResizeHandles();\n        },\n\n        _onResizeHandleDragHorizontal: function(args) {\n            var deltas = this._getDeltas(args);\n\n            this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            this.showResizeHandles();\n        },\n\n        _onResizeHandleDragLocked: function(args) {\n            var min = Math.min(Math.abs(args.initialDeltaX), Math.abs(args.initialDeltaY)),\n                initialWidth = this._initialElementWidth,\n                initialHeight = this._initialElementHeight,\n                deltas;\n\n            if (min === args.initialDeltaX || min === args.initialDeltaX * -1) {\n                args.initialDeltaY = args.initialDeltaX * initialHeight / initialWidth;\n                args.deltaY = args.deltaX;\n            } else if (min === args.initialDeltaY || min === args.initialDeltaY * -1) {\n                args.initialDeltaX = args.initialDeltaY * initialWidth / initialHeight;\n                args.deltaX = args.deltaY;\n            }\n\n            deltas = this._getDeltas(args);\n\n            this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n            this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n            this.showResizeHandles();\n        },\n\n        _resizeWidth: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var currentWidth = outerWidth(element);\n            var newWidth;\n            var constrainedWidth;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementWidth)) {\n                that._initialElementWidth = currentWidth;\n            }\n\n            //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedWidth = constrain({\n                value: that._initialElementWidth + initialDelta,\n                min: that.options.minWidth,\n                max: that._getMaxDimensionValue(WIDTH)\n            });\n\n            newWidth = toPixels(constrainedWidth);\n            element[0].style[WIDTH] = newWidth;\n            element.attr(WIDTH, Math.floor(constrainedWidth));\n        },\n\n        _resizeHeight: function(delta, initialDelta) {\n            var that = this;\n            var element = $(that.element);\n            var currentHeight = outerHeight(element);\n            var newHeight;\n            var constrainedHeight;\n\n            if (delta === 0) {\n                return;\n            }\n\n            if (isUndefined(that._initialElementHeight)) {\n                that._initialElementHeight = currentHeight;\n            }\n\n            //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n            //on each drag does not work due to browser calculation of computed styles\n            constrainedHeight = constrain({\n                value: that._initialElementHeight + initialDelta,\n                min: that.options.minHeight,\n                max: Number.MAX_SAFE_INTEGER\n            });\n\n            newHeight = toPixels(constrainedHeight);\n            element[0].style[HEIGHT] = newHeight;\n            element.attr(HEIGHT, Math.floor(constrainedHeight));\n        }\n    });\n\n    const ElementResizingFactory = Class.extend({\n        create: function(editor) {\n            let factory = this;\n\n            $(editor.body)\n                .on(\"dragstart\" + NS, function() {\n                    var nodes = RangeUtils.nodes(editor.getRange()),\n                        hasImg = false;\n\n                    nodes.forEach(function(node) {\n                        if (node.nodeName === \"IMG\") {\n                            hasImg = true;\n                        }\n                    });\n\n                    if (hasImg && nodes.length > 1) {\n                        editor.elementResizing._destroyResizeHandles();\n                    }\n                })\n                .on(DROP + NS, function() {\n                    setTimeout(function() {\n                        var image = RangeUtils.image(editor.getRange());\n\n                        if (image) {\n                            editor.elementResizing._destroyResizeHandles();\n                            editor.elementResizing.element = image;\n                            editor.elementResizing.showResizeHandles();\n                        }\n                    });\n                })\n                .on(MOUSE_DOWN + NS, TABLE + COMMA + IMG, function(e) {\n                    var eventTarget = e.target;\n                    var eventCurrentTarget = e.currentTarget;\n                    var elementResizing = editor.elementResizing;\n                    var element = elementResizing ? elementResizing.element : null;\n\n                    if (elementResizing) {\n                        if (element && eventCurrentTarget !== element) {\n                            if (contains(eventCurrentTarget, element) && element !== eventTarget && contains(element, eventTarget)) {\n                                //prevent a parent table resizing init when clicking on a nested table when the event bubbles\n                                //instead of stopping event propagation\n                                return;\n                            }\n                            else {\n                                if (element !== eventTarget) {\n                                    editor._destroyElementResizing();\n                                    factory._initResizing(editor, eventCurrentTarget);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        factory._initResizing(editor, eventCurrentTarget);\n                    }\n\n                    editor._showElementResizeHandles();\n                })\n                .on(MOUSE_DOWN + NS, function(e) {\n                    var elementResizing = editor.elementResizing;\n                    var element = elementResizing ? elementResizing.element : null;\n                    var target = e.target;\n                    var isResizeHandleOrChild = $(target).hasClass(RESIZE_HANDLE_WRAPPER_CLASS) || $(target).parents(DOT + RESIZE_HANDLE_WRAPPER_CLASS).length > 0;\n\n                    if (elementResizing && element !== target && !contains(element, target) && !isResizeHandleOrChild) {\n                        editor._destroyElementResizing();\n                    }\n                });\n        },\n\n        dispose: function(editor) {\n            $(editor.body).off(NS);\n        },\n\n        _initResizing: function(editor, element) {\n            // table and image resizing is natively supported in IE\n            // https://stackoverflow.com/questions/53831846/resizing-images-in-contenteditable-div-stopped-working-in-firefox\n            // Enable custom resize handlers for FF too\n            if (!browser.msie) {\n                if ($(element).is(TABLE)) {\n                    editor.elementResizing = editor.tableResizing = new TableResizing(element, {\n                        appendHandlesTo: editor.body,\n                        rtl: kendo.support.isRtl(editor.element),\n                        rootElement: editor.body,\n                        editor: editor\n                    });\n                } else if ($(element).is(IMG)) {\n                    editor.elementResizing = new ImageResizing(element, {\n                        appendHandlesTo: editor.body,\n                        rtl: kendo.support.isRtl(editor.element),\n                        rootElement: editor.body,\n                        editor: editor\n                    });\n                }\n\n                if (editor._showElementResizeHandlesProxy) {\n                    editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n                    editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n                }\n            }\n        }\n    });\n\n    ElementResizingFactory.current = new ElementResizingFactory();\n\n    extend(Editor, {\n        TableResizing: TableResizing,\n        ImageResizing: ImageResizing,\n        ElementResizing: ElementResizing,\n        ElementResizingFactory: ElementResizingFactory\n    });\n\n})(window.kendo);\n\n(function($, undefined$1) {\n\nvar kendo = window.kendo,\n    Editor = kendo.ui.editor,\n    EditorUtils = Editor.EditorUtils,\n    RangeUtils = Editor.RangeUtils,\n    dom = Editor.Dom,\n    registerTool = EditorUtils.registerTool,\n    Command = Editor.Command;\n\nvar tableFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"table\"] }]);\nvar cellsFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"td\",\"th\"] }]);\nvar reUnit = /([a-z]+|%)$/i;\n\nvar COL = \"col\";\nvar ROW = \"row\";\nvar COLGROUP = \"colgroup\";\nvar SCOPE = \"scope\";\nvar COL_INDEX = \"col-index\";\nvar TH = \"th\";\nvar TD = \"td\";\nvar THEAD = \"thead\";\nvar HEADERS = \"headers\";\nvar TABLE = \"table\";\n\nvar TableWizardCommand = Command.extend({\n    exec: function() {\n        var cmd = this;\n        var editor = cmd.editor;\n        var range = cmd.range = cmd.lockRange();\n        var isTableCellWizard = cmd.options.tableCellWizard;\n        var selectedTable = cmd._sourceTable = !cmd.options.insertNewTable ? cmd._selectedTable(range) : undefined$1;\n        var selectedCells = cmd._selectedTableCells = selectedTable ? cmd._selectedCells(range) : undefined$1;\n        var options = {\n            visible: false,\n            messages: editor.options.messages,\n            closeCallback: cmd.onDialogClose.bind(cmd),\n            table: cmd.parseTable(selectedTable, selectedCells),\n            dialogOptions: editor.options.dialogOptions,\n            isRtl: kendo.support.isRtl(editor.wrapper)\n        };\n\n        var dialog = new Editor.TableWizardDialog(options);\n        dialog.open(isTableCellWizard);\n    },\n\n    onDialogClose: function(data) {\n        var cmd = this;\n        cmd.releaseRange(cmd.range);\n\n        if (data) { //Ok button pressed\n            if (cmd.options.insertNewTable) {\n                cmd.insertTable(cmd.createNewTable(data));\n            } else {\n                cmd.updateTable(data, cmd._sourceTable, cmd._selectedTableCells);\n            }\n        }\n    },\n    releaseRange: function(range) {\n        var cmd = this;\n        var doc = cmd.editor.document;\n        dom.windowFromDocument(doc).focus();\n        Command.fn.releaseRange.call(cmd, range);\n    },\n    insertTable: function(table) {\n        var range = this.range;\n\n        range.insertNode(table);\n        range.collapse(true);\n        this.editor.selectRange(range);\n\n        this._ensureFocusableAfterTable(table);\n    },\n    _ensureFocusableAfterTable: function(table) {\n        var siblingNodes = $(table).parent().contents();\n        var lastSiblingIndex = siblingNodes.length - 1;\n        var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n        while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n            lastSiblingIndex -= 1;\n            lastSibling = siblingNodes.get(lastSiblingIndex);\n        }\n\n        if (lastSibling === table) {\n            dom.insertAfter(dom.createEmptyNode(this.editor.document, \"p\"), table);\n        }\n    },\n    updateTable: function(data, table, selectedCells) {\n        var cmd = this;\n        var tableRows = $(table.rows).toArray();\n        var tableProp = data.tableProperties;\n        var rows = tableProp.rows;\n        var tHead = table.tHead;\n        var last = cmd._lastInCollection;\n        var lastSelectedRow, cellProp;\n\n        //Leave only first selected cell\n        while (selectedCells.length > 1) {\n            selectedCells.pop();\n        }\n\n        lastSelectedRow = selectedCells.length ? last(selectedCells).parentNode : last(tableRows);\n\n        cmd._deleteTableRows(tableRows, tableRows.length - rows);\n\n        if (tableRows.length < rows) {\n            cmd._addRows(lastSelectedRow, rows, tableRows);\n        }\n\n        dom.reMapTableColumns(table, COL_INDEX);\n        cmd._updateColumns(tableRows, tableProp.columns, selectedCells, lastSelectedRow);\n        cmd._updateTableProperties(table, tableProp);\n\n        cellProp = data.cellProperties;\n        if (selectedCells[0]) {\n            dom.attr(selectedCells[0], { id: (cellProp || {}).id || null });\n        }\n        if (cellProp) {\n            (cellProp.selectAllCells ? $(tableRows).children() : $(selectedCells)).each(function(i, cell) {\n                cmd._updateCellProperties(cell, cellProp, tableProp);\n            });\n        }\n\n        cmd._updateCaption(table, tableProp);\n\n        if (tHead) {\n            cmd._updateHeadersWithThead(table, data);\n        } else {\n            cmd._updateHeadersNoThead(table, data);\n        }\n\n        cmd._updateHeaderAssociates(table, tableProp);\n        dom.clearTableMappings(table, COL_INDEX);\n    },\n    _isHeadingRow: function(row) {\n        return dom.is(row.cells[0], TH) && dom.is(row.parentNode, THEAD);\n    },\n    _isHeadingCell: function(cell) {\n        return dom.is(cell, TH);\n    },\n    cellsWithHeadersAssociated: function(table) {\n        var cells = $(table.rows).children();\n        var headingIds = [];\n        var checkHeader = function(header) {\n            return headingIds.indexOf(header) > -1;\n        };\n\n        cells.each(function(c, cell) {\n            if (cell.id && dom.is(cell, TH)) {\n                headingIds.push(cell.id);\n            }\n        });\n\n        var associatedCells = cells.filter(function(c, cell) {\n            var headersAttr = cell.getAttribute(HEADERS);\n            var headersArray;\n\n            if (headersAttr && !dom.is(cell, TH)) {\n                headersArray = headersAttr.split(\" \");\n\n                if (headersArray && headersArray.length > 0) {\n                    return headersArray.some(checkHeader);\n                }\n            }\n\n            return false;\n        });\n\n        return !!associatedCells.length;\n    },\n    _insertCells: function(count, row, index) {\n        index = isNaN(index) ? -1 : index;\n        for (var i = 0, cell; i < count; i++) {\n            cell = row.insertCell(index);\n            cell.innerHTML = \"&nbsp;\";\n        }\n    },\n    _deleteTableRows: function(rows, count) {\n        for (var i = 0, row, rowParent; i < count; i++) {\n            row = rows.pop();\n            rowParent = row.parentNode;\n            rowParent.removeChild(row);\n            if (!rowParent.rows.length) {\n                dom.remove(rowParent);\n            }\n        }\n    },\n    createNewTable: function(data) {\n        var cmd = this;\n        var doc = cmd.editor.document;\n        var tableProp = data.tableProperties;\n        var table = dom.create(doc, TABLE);\n        var rowIndex = 0;\n        var thead;\n\n        cmd._updateTableProperties(table, tableProp);\n        cmd._updateCaption(table, tableProp);\n\n        if (tableProp.headerRows && tableProp.headerRows > 0) {\n            thead = table.createTHead();\n            cmd._createTableRows(data, thead, rowIndex, true);\n            rowIndex += tableProp.headerRows;\n        }\n\n        var tbody = table.createTBody();\n        cmd._createTableRows(data, tbody, rowIndex, false);\n\n        dom.reMapTableColumns(table, COL_INDEX);\n\n        if (tableProp.cellsWithHeaders === \"ids\") {\n            dom.associateWithIds(table);\n        } else if (tableProp.cellsWithHeaders === \"scope\") {\n            cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n        }\n\n        dom.clearTableMappings(table, COL_INDEX);\n\n        return table;\n    },\n    _createTableRows: function(data, container, initialIndex, headerRows) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var cellProp = data.cellProperties;\n        var columns = tableProp.columns;\n        var rows = headerRows ? tableProp.headerRows : tableProp.rows;\n        var headerColumns = tableProp.headerColumns;\n\n        for (var r = initialIndex, row; r < rows; r++) {\n            row = container.insertRow();\n\n            for (var c = 0, cell; c < columns; c++) {\n                if (headerRows || headerColumns > c) {\n                    cell = document.createElement(TH);\n                } else {\n                    cell = document.createElement(TD);\n                }\n\n                row.appendChild(cell);\n                cell.innerHTML = \"&nbsp;\";\n                if (cellProp && r === 0 && c === 0 && cellProp.id) {\n                    cell.id = cellProp.id;\n                }\n\n                cmd._updateCellProperties(cell, cellProp && (cellProp.selectAllCells || (r === 0 && c === 0)) ? cellProp : {}, tableProp);\n            }\n        }\n    },\n    _addRows: function(lastSelectedRow, rows, tableRows) {\n        var cmd = this;\n        var rowIndex = $(lastSelectedRow).index();\n        var cellsLength = lastSelectedRow.cells.length;\n        var newRowsCount = rows - tableRows.length;\n        var parent = lastSelectedRow.parentNode;\n        var row;\n\n        while (newRowsCount) {\n            row = parent.insertRow(rowIndex + 1);\n            cmd._insertCells(cellsLength - row.cells.length, row);\n            newRowsCount--;\n        }\n    },\n    _updateColumns: function(tableRows, columns, selectedCells, lastSelectedRow) {\n        var cmd = this;\n        var last = cmd._lastInCollection;\n        var firstRowLastCell = last(tableRows[0].cells);\n        var numberOfColumns = Number(firstRowLastCell.getAttribute(COL_INDEX)) + firstRowLastCell.colSpan;\n\n        if (numberOfColumns > columns) {\n            $(tableRows).each(function(i, row) {\n                var lastCurrentCell = last(row.cells);\n                var rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n\n                while (rowColumns > columns) {\n                    if (lastCurrentCell.colSpan && lastCurrentCell.colSpan > 1) {\n                        lastCurrentCell.colSpan -= 1;\n                    } else {\n                        row.deleteCell(-1);\n                    }\n\n                    lastCurrentCell = last(row.cells);\n                    rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n                }\n            });\n        }\n\n        if (numberOfColumns < columns) {\n            var cellIndex = $(last(selectedCells) || last(lastSelectedRow.cells)).index();\n            $(tableRows).each(function(i, row) {\n                var lastCurrentCell = last(row.cells);\n                cmd._insertCells(columns - Number(lastCurrentCell.getAttribute(COL_INDEX)) - lastCurrentCell.colSpan, row, cellIndex + 1);\n            });\n        }\n    },\n    _updateTableProperties: function(table, data) {\n        var style = this._getStylesData(data);\n        dom.attr(table, {\n            cellSpacing: data.cellSpacing || null,\n            topCellPadding: this._getNumericValue(data.topCellPadding) ?? '',\n            leftCellPadding: this._getNumericValue(data.leftCellPadding) ?? '',\n            bottomCellPadding: this._getNumericValue(data.bottomCellPadding) ?? '',\n            rightCellPadding: this._getNumericValue(data.rightCellPadding) ?? '',\n            className: data.className || null,\n            id: data.id || null,\n            summary: data.summary || null,\n            style: style || null\n        });\n        $(table).addClass(\"k-table\");\n    },\n    _updateCellProperties: function(cell, data, tableData) {\n        var style = this._getStylesData(data);\n        style.paddingTop = this._getNumericValue(data.topCellPadding) ?? this._getNumericValue(tableData?.topCellPadding) ?? '';\n        style.paddingLeft = this._getNumericValue(data.leftCellPadding) ?? this._getNumericValue(tableData?.leftCellPadding) ?? '';\n        style.paddingBottom = this._getNumericValue(data.bottomCellPadding) ?? this._getNumericValue(tableData?.bottomCellPadding) ?? '';\n        style.paddingRight = this._getNumericValue(data.rightCellPadding) ?? this._getNumericValue(tableData?.rightCellPadding) ?? '';\n        style.margin = data.cellMargin || null;\n        dom.attr(cell, {\n            style: style || null,\n            className: data.className || null\n        });\n    },\n    _updateCaption: function(table, data) {\n        if (table.caption && !data.captionContent) {\n            table.deleteCaption();\n        } else if (data.captionContent) {\n            var caption = table.createCaption();\n            caption.innerHTML = data.captionContent;\n            var alignment = this._getAlignmentData(data.captionAlignment);\n            dom.attr(caption, {\n                style: {\n                    textAlign: alignment.textAlign,\n                    verticalAlign: alignment.verticalAlign\n                }\n            });\n        }\n    },\n    _updateHeadersNoThead: function(table, data) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var rows = table.rows;\n        var row, cells, cell, i, j;\n\n        for (i = 0; i < rows.length; i++) {\n            row = rows[i];\n            cells = row.cells;\n\n            for (j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                if (!cmd._isHeadingCell(cell) && (i < tableProp.headerRows || tableProp.headerColumns > cell.getAttribute(COL_INDEX))) {\n                    dom.changeTag(cell, TH, false);\n                } else if (cmd._isHeadingCell(cell) && i >= tableProp.headerRows && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TD, false);\n                }\n            }\n        }\n    },\n    _updateHeadersWithThead: function(table, data) {\n        var cmd = this;\n        var tableProp = data.tableProperties;\n        var thead = table.tHead;\n        var rowIndex = 0;\n        var tbody = table.tBodies[0];\n        var row, cell, i;\n\n        if (!tbody) {\n            tbody = table.createTBody();\n        }\n\n        if (tableProp.headerRows && tableProp.headerRows > 0) {\n            if (!thead) {\n                thead = table.createTHead();\n            }\n\n            while (thead.rows.length < tableProp.headerRows) {\n                thead.appendChild(tbody.rows[0]);\n            }\n\n            while (thead.rows.length > tableProp.headerRows) {\n                tbody.appendChild(thead.rows[0]);\n            }\n\n            cmd._swapToHeaderCells(thead);\n        } else if (thead) {\n            while (thead.rows.length > 0) {\n                tbody.appendChild(thead.rows[thead.rows.length - 1]);\n            }\n\n            table.deleteTHead();\n        }\n\n        while (tbody.rows.length > rowIndex) {\n            row = tbody.rows[rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cmd._isHeadingCell(cell) && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TD, false);\n                } else if (!cmd._isHeadingCell(cell) && tableProp.headerColumns > cell.getAttribute(COL_INDEX)) {\n                    dom.changeTag(cell, TH, false);\n                }\n            }\n            rowIndex += 1;\n        }\n    },\n    _updateHeaderAssociates: function(table, tableProp) {\n        var cmd = this;\n\n        if (tableProp.cellsWithHeaders === \"ids\") {\n            if (!cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeScopes(table);\n            }\n            dom.associateWithIds(table);\n        } else if (tableProp.cellsWithHeaders === \"scope\") {\n            if (cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeAssociates(table);\n            }\n            cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n        } else {\n            if (cmd.cellsWithHeadersAssociated(table)) {\n                cmd._removeAssociates(table);\n            } else {\n                cmd._removeScopes(table);\n            }\n        }\n    },\n    _addScopes: function(table, headerRows, headerCols) {\n        var rows = table.rows;\n        var i, j, row, cell;\n\n        for (i = 0; i < rows.length; i++) {\n            row = rows[i];\n\n            for (j = 0; j < row.cells.length; j++) {\n                cell = row.cells[j];\n\n                if (i < headerRows) {\n                    cell.setAttribute(SCOPE, COL);\n                } else if (cell.getAttribute(COL_INDEX) < headerCols) {\n                    cell.setAttribute(SCOPE, ROW);\n                }\n            }\n        }\n    },\n    _removeScopes: function(table) {\n        $(table).find(TH).removeAttr(SCOPE);\n        $(table).find(COL).remove();\n        $(table).find(COLGROUP).remove();\n    },\n    _removeAssociates: function(table) {\n        $(table).find(\"th, td\").removeAttr(\"id headers\");\n    },\n    _swapToHeaderCells: function(thead) {\n        var tds = $(thead).find(\"td\");\n        var swapCell = function(index, cell) {\n            dom.changeTag(cell, TH, false);\n        };\n        tds.each(swapCell);\n    },\n    _getStylesData: function(data) {\n        var that = this;\n        var alignment = this._getAlignmentData(data.alignment);\n        var whiteSpace = \"wrapText\" in data ? (data.wrapText ? \"\" : \"nowrap\") : null;\n\n        return $.extend({\n            width: data.width ? data.width + data.widthUnit : null,\n            height: data.height ? data.height + data.heightUnit : null,\n            textAlign: alignment.textAlign,\n            verticalAlign: alignment.verticalAlign,\n            backgroundColor: data.bgColor || \"\",\n            borderWidth: data.borderWidth,\n            borderStyle: data.borderStyle,\n            borderColor: data.borderColor || \"\",\n            borderCollapse: data.collapseBorders ? \"collapse\" : null,\n            whiteSpace: whiteSpace\n        }, that._getTablePositionData(data.position));\n    },\n    _getAlignmentData: function(alignment) {\n        var textAlign = \"\";\n        var verticalAlign = textAlign;\n\n        if (alignment) {\n            if (alignment.indexOf(\" \") != -1) {\n                var align = alignment.split(\" \");\n                textAlign = align[0];\n                verticalAlign = align[1];\n            } else {\n                textAlign = alignment;\n            }\n        }\n        return { textAlign: textAlign, verticalAlign: verticalAlign };\n    },\n    _getTablePositionData: function(position) {\n        if (!position) {\n            return {};\n        }\n\n        return { marginLeft: position != \"left\" ? \"auto\" : \"\", marginRight: position != \"right\" ? \"auto\" : \"\" };\n    },\n    parseTable: function(table, selectedCells) {\n        if (!table) {\n            return { tableProperties: {}, selectedCells: [] };\n        }\n\n        var cmd = this;\n        var tStyle = table.style;\n        var rows = table.rows;\n        var caption = table.caption;\n        var captionClone = $(caption ? caption.cloneNode(true) : undefined$1);\n        captionClone.find(\".k-marker\").remove();\n\n        var cssClass = table.className;\n        cssClass = cssClass.replace(/^k-table\\s|\\sk-table$/, \"\");\n        cssClass = cssClass.replace(/\\sk-table\\s/, \" \");\n        cssClass = cssClass.replace(/^k-table$/, \"\");\n\n        var tableAlignment = cmd._getAlignment(table, true);\n        var tablePosition = cmd._getTablePosition(table);\n        var captionAlignment = caption ? cmd._getAlignment(caption) : undefined$1;\n        var numberOfHeaderRows = dom._getNumberOfHeaderRows(table);\n\n        var cellsWithHeaders;\n        if (cmd.cellsWithHeadersAssociated(table)) {\n            cellsWithHeaders = \"ids\";\n        } else if ($(table).find(\"th[scope]\").length > 0) {\n            cellsWithHeaders = \"scope\";\n        } else {\n            cellsWithHeaders = \"none\";\n        }\n\n        dom.reMapTableColumns(table, COL_INDEX);\n        var numberOfColumns = dom._getNumberOfColumns(table);\n        var numberOfHeaderColumns = dom._getNumberOfHeaderColumns(table, numberOfHeaderRows);\n        dom.clearTableMappings(table, COL_INDEX);\n\n        var tableJson = {\n            tableProperties: {\n                width: tStyle.width || table.width ? parseFloat(tStyle.width || table.width) : null,\n                height: tStyle.height || table.height ? parseFloat(tStyle.height || table.height) : null,\n                columns: numberOfColumns,\n                rows: rows.length,\n                widthUnit: cmd._getUnit(tStyle.width),\n                heightUnit: cmd._getUnit(tStyle.height),\n                cellSpacing: table.cellSpacing,\n                topCellPadding: table.topCellPadding,\n                leftCellPadding: table.leftCellPadding,\n                bottomCellPadding: table.bottomCellPadding,\n                rightCellPadding: table.rightCellPadding,\n                alignment: tableAlignment.textAlign,\n                position: tablePosition,\n                bgColor: tStyle.backgroundColor || table.bgColor,\n                className: cssClass,\n                id: table.id,\n                borderWidth: tStyle.borderWidth || table.border,\n                borderColor: tStyle.borderColor,\n                borderStyle: tStyle.borderStyle || \"\",\n                collapseBorders: !!tStyle.borderCollapse,\n                summary: table.summary,\n                captionContent: caption ? captionClone.html() : \"\",\n                captionAlignment: caption && captionAlignment.textAlign ? captionAlignment.textAlign + \" \" + captionAlignment.verticalAlign : \"\",\n                headerRows: numberOfHeaderRows,\n                headerColumns: numberOfHeaderColumns,\n                cellsWithHeaders: cellsWithHeaders\n            },\n            selectedCells: []\n        };\n\n        tableJson.rows = cmd.parseTableRows(rows, selectedCells, tableJson);\n\n        return tableJson;\n    },\n    parseTableRows: function(rows, selectedCells, tableJson) {\n        var cmd = this;\n        var data = [], row, rowData, cells, cell, cellData;\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowData = { cells: [] };\n            cells = row.cells;\n            data.push(rowData);\n            for (var j = 0; j < cells.length; j++) {\n                cell = cells[j];\n                cellData = cmd.parseCell(cell);\n                if ($.inArray(cell, selectedCells) != -1) {\n                    tableJson.selectedCells.push(cellData);\n                }\n                rowData.cells.push(cellData);\n            }\n        }\n        return data;\n    },\n    parseCell: function(cell) {\n        var cmd = this;\n        var cStyle = cell.style;\n        var alignment = cmd._getAlignment(cell);\n        alignment = alignment.textAlign ? alignment.textAlign + \" \" + alignment.verticalAlign : \"\";\n\n        var data = {\n            width: cStyle.width || cell.width ? parseFloat(cStyle.width || cell.width) : null,\n            height: cStyle.height || cell.height ? parseFloat(cStyle.height || cell.height) : null,\n            widthUnit: cmd._getUnit(cStyle.width),\n            heightUnit: cmd._getUnit(cStyle.height),\n            cellMargin: cStyle.margin,\n            topCellPadding: cStyle.paddingTop,\n            leftCellPadding: cStyle.paddingLeft,\n            bottomCellPadding: cStyle.paddingBottom,\n            rightCellPadding: cStyle.paddingRight,\n            alignment: alignment,\n            bgColor: cStyle.backgroundColor || cell.bgColor,\n            className: cell.className,\n            id: cell.id,\n            borderWidth: cStyle.borderWidth || cell.border,\n            borderColor: cStyle.borderColor,\n            borderStyle: cStyle.borderStyle,\n            wrapText: cStyle.whiteSpace != \"nowrap\"\n        };\n\n        return data;\n    },\n    _getTablePosition: function(element) {\n        var style = element.style;\n        if (style.marginLeft == \"auto\" && style.marginRight == \"auto\") {\n            return \"center\";\n        }\n\n        if (style.marginLeft == \"auto\") {\n            return \"right\";\n        }\n\n        return \"left\";\n    },\n    _getAlignment: function(element, horizontalOnly) {\n        var style = element.style;\n        var hAlign = style.textAlign || element.align || \"\";\n        if (horizontalOnly) {\n            return { textAlign: hAlign };\n        }\n        var vAlign = style.verticalAlign || element.vAlign || \"\";\n        if (hAlign && vAlign) {\n            return { textAlign: hAlign, verticalAlign: vAlign };\n        }\n        if (!hAlign && vAlign) {\n            return { textAlign: \"left\", verticalAlign: vAlign };\n        }\n        if (hAlign && !vAlign) {\n            return { textAlign: hAlign, verticalAlign: \"top\" };\n        }\n        return { textAlign: \"\", verticalAlign: \"\" };\n    },\n    _getUnit: function(value) {\n        var unit = (value || \"\").match(reUnit);\n        return unit ? unit[0] : \"px\";\n    },\n    _selectedTable: function(range) {\n        var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n        return tableFormatFinder.findSuitable(nodes)[0];\n    },\n    _selectedCells: function(range) {\n        var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n        return cellsFormatFinder.findSuitable(nodes);\n    },\n    _lastInCollection: function(collection) {\n        return collection[collection.length - 1];\n    },\n    _getNumericValue: function(value) {\n        return !isNaN(value) || typeof value === \"string\" ? value : null;\n    }\n});\n\nvar TableWizardTool = Editor.Tool.extend({\n    command: function(options) {\n        options.insertNewTable = this.options.insertNewTable;\n        options.tableCellWizard = !!this.options.tableCellWizard;\n        return new TableWizardCommand(options);\n    }\n});\n\nvar TableWizardEditTool = TableWizardTool.extend({\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nvar TableCellWizardEditTool = TableWizardTool.extend({\n    update: function(ui, nodes) {\n        var isFormatted = !tableFormatFinder.isFormatted(nodes),\n            toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n        if (isFormatted === true) {\n            toolbar.hide(ui);\n        } else {\n            toolbar.show(ui);\n        }\n    }\n});\n\nkendo.ui.editor.TableWizardTool = TableWizardTool;\nkendo.ui.editor.TableWizardCommand = TableWizardCommand;\n\nregisterTool(\"tableProperties\", new TableWizardEditTool({ command: TableWizardCommand, insertNewTable: false, property: \"tableProperties\" }));\nregisterTool(\"tableCellProperties\", new TableCellWizardEditTool({ command: TableWizardCommand, tableCellWizard: true, insertNewTable: false, property: \"tableCellProperties\" }));\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n\nconst FORM_FIELD_CLASS = \"k-form-field\",\n      INVISIBLE_CLASS = \"k-visibility-invisible\",\n      DOT = \".\";\n\nvar kendo = window.kendo,\n    encode = kendo.htmlEncode,\n    numericTextBoxSettings = { format: \"0\", min: 0 },\n    units = [\"px\", \"em\"],\n    borderStyles = [\"solid\", \"dotted\", \"dashed\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\", \"initial\", \"inherit\", \"none\", \"hidden\"];\n\nvar DEFAULT_NUMBER_OF_COLS_AND_ROWS = 4;\n\nvar textWrapDropDownSettings = {\n    dataSource: [{\n        className: \"text-wrap\",\n        value: \"wrap\"\n    }, {\n        className: \"parameter-string\",\n        value: \"nowrap\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-text-wrap\" }) + encode(tooltip)\n};\n\nvar tablePositionDropDownSettings = {\n    dataSource: [{\n        className: \"table-position-start\",\n        value: \"left\"\n    }, {\n        className: \"table-position-center\",\n        value: \"center\"\n    }, {\n        className: \"table-position-end\",\n        value: \"right\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar tableAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-middle-left\",\n        value: \"left\"\n    }, {\n        className: \"table-align-middle-center\",\n        value: \"center\"\n    }, {\n        className: \"table-align-middle-right\",\n        value: \"right\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar cellAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-top-left\",\n        value: \"left top\"\n    }, {\n        className: \"table-align-top-center\",\n        value: \"center top\"\n    }, {\n        className: \"table-align-top-right\",\n        value: \"right top\"\n    }, {\n        className: \"table-align-middle-left\",\n        value: \"left middle\"\n    }, {\n        className: \"table-align-middle-center\",\n        value: \"center middle\"\n    }, {\n        className: \"table-align-middle-right\",\n        value: \"right middle\"\n    }, {\n        className: \"table-align-bottom-left\",\n        value: \"left bottom\"\n    }, {\n        className: \"table-align-bottom-center\",\n        value: \"center bottom\"\n    }, {\n        className: \"table-align-bottom-right\",\n        value: \"right bottom\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n};\n\nvar accessibilityAlignmentDropDownSettings = {\n    dataSource: [{\n        className: \"table-align-top-left\",\n        value: \"left top\"\n    }, {\n        className: \"table-align-top-center\",\n        value: \"center top\"\n    }, {\n        className: \"table-align-top-right\",\n        value: \"right top\"\n    }, {\n        className: \"table-align-bottom-left\",\n        value: \"left bottom\"\n    }, {\n        className: \"table-align-bottom-center\",\n        value: \"center bottom\"\n    }, {\n        className: \"table-align-bottom-right\",\n        value: \"right bottom\"\n    }, {\n        className: \"align-remove\",\n        value: \"\"\n    }],\n    dataTextField: \"className\",\n    dataValueField: \"value\",\n    template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }),\n    valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" })\n};\n\nvar tablePropertiesDialogTemplate = ({ messages }) =>\n    '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n        '<div id=\"k-table-wizard-tabs\" class=\"k-root-tabs\">' +\n            '<ul>' +\n                `<li class=\"k-active\">${ messages.tableTab }</li>` +\n                `<li>${ messages.accessibilityTab }</li>` +\n            '</ul>' +\n            '<div id=\"k-table-properties\"></div>' +\n            '<div id=\"k-accessibility-properties\"></div>' +\n        '</div>' +\n        '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                    icon: 'check',\n                        themeColor: \"primary\"\n                    }) +\n                    kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                        icon: 'cancel-outline'\n                    }) +\n        '</div>' +\n    '</div>';\n    var cellPropertiesDialogTemplate = ({ messages }) =>\n    '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n        '<div id=\"k-cell-properties\"></div>' +\n        '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                    icon: 'check',\n                        themeColor: \"primary\"\n                    }) +\n                    kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                        icon: 'cancel-outline'\n                    }) +\n        '</div>' +\n    '</div>';\n\nvar TableWizardDialog = kendo.Class.extend({\n    init: function(options) {\n        this.options = options;\n    },\n    _openTablePropertiesDialog: function() {\n        var that = this,\n            options = that.options,\n            dialogOptions = options.dialogOptions,\n            tableData = options.table,\n            dialog,\n            messages = options.messages,\n            isIE = kendo.support.browser.msie;\n\n        function close(e) {\n            e.preventDefault();\n            that.destroy();\n            dialog.destroy();\n        }\n\n        function okHandler(e) {\n            that.collectTableDialogValues(tableData);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            options.closeCallback(tableData);\n        }\n\n        function closeHandler(e) {\n            close(e);\n            options.closeCallback();\n        }\n\n        dialogOptions.close = closeHandler;\n        dialogOptions.minWidth = 700;\n        dialogOptions.width = 700;\n        dialogOptions.title = messages.tableProperties;\n        dialogOptions.visible = options.visible;\n\n        dialog = $(that._dialogTemplate(messages)).appendTo(document.body)\n            .kendoWindow(dialogOptions)\n            .addClass(\"k-editor-window\")\n            .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n            .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n            .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n            .data(\"kendoWindow\");\n\n        var element = dialog.element;\n        this.components = {};\n        that._initTabStripComponent(element);\n        that._tablePropertiesForm = that._createTablePropertiesForm(dialog, messages);\n        that._accessibilityPropertiesForm = that._createAccessibilityPropertiesForm(dialog, messages);\n\n        dialog.center();\n        dialog.open();\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n    },\n    _openCellPropertiesDialog: function() {\n        var that = this,\n            options = that.options,\n            dialogOptions = options.dialogOptions,\n            tableData = options.table,\n            dialog,\n            messages = options.messages,\n            isIE = kendo.support.browser.msie;\n\n        function close(e) {\n            e.preventDefault();\n            that.destroy();\n            dialog.destroy();\n        }\n\n        function okHandler(e) {\n            that.collectCellDialogValues(tableData);\n\n            close(e);\n\n            if (that.change) {\n                that.change();\n            }\n\n            options.closeCallback(tableData);\n        }\n\n        function closeHandler(e) {\n            close(e);\n            options.closeCallback();\n        }\n\n        dialogOptions.close = closeHandler;\n        dialogOptions.minWidth = 400;\n        dialogOptions.title = messages.tableCellProperties;\n        dialogOptions.visible = options.visible;\n\n        dialog = $(that._dialogTemplate(messages, cellPropertiesDialogTemplate)).appendTo(document.body)\n            .kendoWindow(dialogOptions)\n            .addClass(\"k-editor-window\")\n            .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n            .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n            .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n            .data(\"kendoWindow\");\n\n        var element = dialog.element;\n        that._cellPropertiesForm = that._createCellPropertiesForm(dialog, messages);\n\n        dialog.center();\n        dialog.open();\n\n        if (isIE) {\n            var dialogHeight = element.closest(\".k-window\").height();\n            element.css(\"max-height\", dialogHeight);\n        }\n    },\n    open: function(isCellProperties) {\n        if (!isCellProperties) {\n            this._openTablePropertiesDialog();\n        } else {\n            this._openCellPropertiesDialog();\n        }\n    },\n\n    _initTabStripComponent: function(element) {\n        var components = this.components = {};\n        components.tabStrip = element.find(\"#k-table-wizard-tabs\").kendoTabStrip({\n            animation: false\n        }).data(\"kendoTabStrip\");\n    },\n\n    collectTableDialogValues: function() {\n        var that = this;\n        var data = that.options.table;\n        that._collectTableViewValues(data);\n        that._collectAccessibilityViewValues(data);\n    },\n\n    collectCellDialogValues: function() {\n        var that = this;\n        var data = that.options.table;\n        that._collectCellViewValues(data);\n    },\n\n    _collectTableViewValues: function(tableData) {\n        var tableView = this.components.tableView;\n        var tableProperties = tableData.tableProperties;\n        var cellData = tableData.cellProperties = tableData.cellProperties || {};\n        tableProperties.width = tableView.width.value();\n        tableProperties.widthUnit = tableView.widthUnit.value();\n        tableProperties.height = tableView.height.value();\n        tableProperties.columns = tableView.columns.value();\n        tableProperties.rows = tableView.rows.value();\n        tableProperties.heightUnit = tableView.heightUnit.value();\n        tableProperties.cellSpacing = tableView.cellSpacing.value();\n        tableProperties.topCellPadding = tableView.topCellPadding.value();\n        tableProperties.leftCellPadding = tableView.leftCellPadding.value();\n        tableProperties.bottomCellPadding = tableView.bottomCellPadding.value();\n        tableProperties.rightCellPadding = tableView.rightCellPadding.value();\n        tableProperties.alignment = tableView.alignment.value();\n        tableProperties.position = tableView.position.value();\n        tableProperties.bgColor = tableView.bgColor.value();\n        tableProperties.borderWidth = tableView.borderWidth.value();\n        tableProperties.borderColor = tableView.borderColor.value();\n        tableProperties.borderStyle = tableView.borderStyle.value();\n        tableProperties.collapseBorders = tableView.collapseBorders.check();\n\n        if (!cellData.width) {\n            cellData.selectAllCells = true;\n            cellData.width = 100 / tableData.tableProperties.columns;\n            cellData.widthUnit = \"%\";\n        }\n    },\n\n    _collectCellViewValues: function(table) {\n        var cellData = table.cellProperties = table.cellProperties || {};\n        var cellView = this.components.cellView;\n\n        cellData.selectAllCells = cellView.selectAllCells.check();\n        cellData.width = cellView.width.value();\n        cellData.widthUnit = cellView.widthUnit.value();\n        cellData.height = cellView.height.value();\n        cellData.heightUnit = cellView.heightUnit.value();\n        cellData.independentCellPaddings = cellView.independentCellPaddings.check();\n        cellData.topCellPadding = cellView.topCellPadding.value();\n        cellData.leftCellPadding = cellView.leftCellPadding.value();\n        cellData.bottomCellPadding = cellView.bottomCellPadding.value();\n        cellData.rightCellPadding = cellView.rightCellPadding.value();\n        cellData.cellMargin = cellView.cellMargin.value();\n        cellData.alignment = cellView.alignment.value();\n        cellData.bgColor = cellView.bgColor.value();\n        cellData.className = cellView.className.value();\n        cellData.id = cellView.id.value();\n        cellData.borderWidth = cellView.borderWidth.value();\n        cellData.borderColor = cellView.borderColor.value();\n        cellData.borderStyle = cellView.borderStyle.value();\n        cellData.wrapText = cellView.wrapTextValue.value() == \"wrap\";\n\n        if (!cellData.width) {\n            cellData.selectAllCells = true;\n            cellData.width = 100 / table.tableProperties.columns;\n            cellData.widthUnit = \"%\";\n        }\n    },\n\n   _collectAccessibilityViewValues: function(table) {\n        var tableProperties = table.tableProperties;\n        var accessibilityView = this.components.accessibilityView;\n        tableProperties.captionContent = accessibilityView.captionContent.value();\n        tableProperties.captionAlignment = accessibilityView.captionAlignment.value();\n        tableProperties.summary = accessibilityView.summary.value();\n        tableProperties.cellsWithHeaders = accessibilityView.cellsWithHeaders.value();\n        tableProperties.className = accessibilityView.className.value();\n        tableProperties.id = accessibilityView.id.value();\n        tableProperties.headerRows = accessibilityView.headerRows.value();\n        tableProperties.headerColumns = accessibilityView.headerColumns.value();\n    },\n    _addUnit: function(units, value) {\n        if (value && $.inArray(value, units) == -1) {\n            units.push(value);\n        }\n    },\n\n    _initNumericTextbox: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoNumericTextBox(\n                settings ? $.extend({}, numericTextBoxSettings, settings) : numericTextBoxSettings\n            ).data(\"kendoNumericTextBox\");\n        if (property in data) {\n            component.value(parseInt(data[property], 10));\n        }\n    },\n\n    _initDropDownList: function(element, property, data, storage, dataSource) {\n        var component = storage[property] = element.kendoDropDownList({\n            dataSource: dataSource\n        }).data(\"kendoDropDownList\");\n        this._setComponentValue(component, data, property);\n    },\n\n    _initBorderStyleDropDown: function(element, property, data, storage, dataSource) {\n        var component = storage[property] = element.kendoDropDownList({\n            dataSource: dataSource,\n            optionLabel: this.options.messages.borderNone\n        }).data(\"kendoDropDownList\");\n        this._setComponentValue(component, data, property);\n    },\n\n    _initTablePositionDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var tableView = this.components.tableView;\n        var dataSource = tablePositionDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.tableAlignLeft;\n        dataSource[1].tooltip = messages.tableAlignCenter;\n        dataSource[2].tooltip = messages.tableAlignRight;\n\n        this._initPositionDropDown(element, tablePositionDropDownSettings, \"position\", data, tableView);\n    },\n\n    _initTableAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var tableView = this.components.tableView;\n        var dataSource = tableAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeft;\n        dataSource[1].tooltip = messages.alignCenter;\n        dataSource[2].tooltip = messages.alignRight;\n        dataSource[3].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, tableAlignmentDropDownSettings, \"alignment\", data, tableView);\n    },\n\n    _initCellAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var cellView = this.components.cellView;\n        var dataSource = cellAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeftTop;\n        dataSource[1].tooltip = messages.alignCenterTop;\n        dataSource[2].tooltip = messages.alignRightTop;\n        dataSource[3].tooltip = messages.alignLeftMiddle;\n        dataSource[4].tooltip = messages.alignCenterMiddle;\n        dataSource[5].tooltip = messages.alignRightMiddle;\n        dataSource[6].tooltip = messages.alignLeftBottom;\n        dataSource[7].tooltip = messages.alignCenterBottom;\n        dataSource[8].tooltip = messages.alignRightBottom;\n        dataSource[9].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, cellAlignmentDropDownSettings, \"alignment\", data, cellView);\n    },\n\n    _initAccessibilityAlignmentDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var accessibilityView = this.components.accessibilityView;\n        var dataSource = accessibilityAlignmentDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.alignLeftTop;\n        dataSource[1].tooltip = messages.alignCenterTop;\n        dataSource[2].tooltip = messages.alignRightTop;\n        dataSource[3].tooltip = messages.alignLeftBottom;\n        dataSource[4].tooltip = messages.alignCenterBottom;\n        dataSource[5].tooltip = messages.alignRightBottom;\n        dataSource[6].tooltip = messages.alignRemove;\n\n        this._initAlignmentDropDown(element, accessibilityAlignmentDropDownSettings, \"captionAlignment\", data, accessibilityView);\n    },\n    _initTextWrapDropDown: function(element, data) {\n        var messages = this.options.messages;\n        var name = \"wrapTextValue\";\n        data.wrapTextValue = data.wrapText ? \"wrap\" : \"nowrap\";\n\n        var cellView = this.components.cellView;\n        var dataSource = textWrapDropDownSettings.dataSource;\n        dataSource[0].tooltip = messages.wrapText;\n        dataSource[1].tooltip = messages.fitToCell;\n        var component = cellView[name] =\n            element.kendoDropDownList(textWrapDropDownSettings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-text-wrap');\n        this._setComponentValue(component, data, name);\n    },\n    _initPositionDropDown: function(element, settings, name, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-position');\n        this._setComponentValue(component, data, name);\n    },\n    _initAlignmentDropDown: function(element, settings, name, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        component.list.addClass('k-align');\n        this._setComponentValue(component, data, name);\n    },\n    _initAssociationDropDown: function(element, name, settings, data, storage) {\n        var component = storage[name] =\n            element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n        this._setComponentValue(component, data, name);\n    },\n    _setComponentValue: function(component, data, property) {\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    _initColorPicker: function(element, property, data, storage) {\n        var component = storage[property] =\n            element.kendoColorPicker({ buttons: false, clearButton: true }).data(\"kendoColorPicker\");\n\n        if (data[property]) {\n            component.value(data[property]);\n        }\n    },\n    _initInput: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoTextBox(settings || {}).data(\"kendoTextBox\");\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    _initCheckbox: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoCheckBox(settings || {}).data(\"kendoCheckBox\");\n        if (property in data) {\n            component.check(data[property]);\n        }\n    },\n\n    _initTextArea: function(element, property, data, storage, settings) {\n        var component = storage[property] = element.kendoTextArea(settings || {}).data(\"kendoTextArea\");\n        if (property in data) {\n            component.value(data[property]);\n        }\n    },\n\n    destroy: function() {\n        var that = this;\n        that._destroyComponents(this.components);\n\n        delete that.components;\n    },\n    _destroyComponents: function(components) {\n        for (var widget in components) {\n            if (components[widget].destroy) {\n                components[widget].destroy();\n            }\n            delete components[widget];\n        }\n    },\n\n    _dialogTemplate: function(messages, dialogTemplate) {\n        return kendo.template(dialogTemplate || tablePropertiesDialogTemplate)({ messages: messages });\n    },\n\n    _onPaddingTopChange: function(e) {\n        let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n            view = this.components[viewType],\n            independentCellPaddings = !view.independentCellPaddings.check(),\n            topCellPaddingNumeric = view.topCellPadding,\n            topCellPaddingValue = topCellPaddingNumeric.value(),\n            leftCellPaddingNumeric = view.leftCellPadding,\n            bottomCellPaddingNumeric = view.bottomCellPadding,\n            rightCellPaddingNumeric = view.rightCellPadding;\n\n        if (independentCellPaddings) {\n            leftCellPaddingNumeric.value(topCellPaddingValue);\n            bottomCellPaddingNumeric.value(topCellPaddingValue);\n            rightCellPaddingNumeric.value(topCellPaddingValue);\n        }\n\n        topCellPaddingNumeric._cachedPadding = topCellPaddingValue;\n    },\n\n    _onPaddingCheckChange: function(e) {\n        let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n            messages = this.options.messages,\n            checked = e.sender.check(),\n            view = this.components[viewType],\n            topCellPaddingNumeric = view.topCellPadding,\n            leftCellPaddingNumeric = view.leftCellPadding,\n            bottomCellPaddingNumeric = view.bottomCellPadding,\n            rightCellPaddingNumeric = view.rightCellPadding,\n            topCellPaddingValue = topCellPaddingNumeric.value(),\n            bottomCellPaddingValue = bottomCellPaddingNumeric.value(),\n            leftCellPaddingValue = leftCellPaddingNumeric.value(),\n            rightCellPaddingValue = rightCellPaddingNumeric.value();\n\n        if (!checked) {\n            if (topCellPaddingValue === bottomCellPaddingValue &&\n                    topCellPaddingValue === leftCellPaddingValue &&\n                    topCellPaddingValue === rightCellPaddingValue) {\n                leftCellPaddingNumeric.value(topCellPaddingValue);\n                bottomCellPaddingNumeric.value(topCellPaddingValue);\n                rightCellPaddingNumeric.value(topCellPaddingValue);\n            } else {\n                topCellPaddingNumeric.value(null);\n            }\n\n            leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n            bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n            rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n\n            topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.cellPadding);\n        } else {\n            if (!isNaN(topCellPaddingNumeric._cachedPadding)) {\n                topCellPaddingNumeric.value(topCellPaddingNumeric._cachedPadding);\n            }\n\n            leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n            bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n            rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n\n            topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.topPadding);\n        }\n    },\n\n    _onColumnsNumberChange: function(args) {\n        var that = this;\n        var accessibilityView = that.components.accessibilityView;\n        var headerColumnsNumeric = accessibilityView.headerColumns;\n        var currentNumberOfColumnsHeaders = headerColumnsNumeric.value();\n        var numberOfColumns = args.sender.value();\n\n        if (numberOfColumns < currentNumberOfColumnsHeaders) {\n            headerColumnsNumeric.value(numberOfColumns);\n        }\n\n        headerColumnsNumeric.max(numberOfColumns);\n    },\n\n    _onRowsNumberChange: function(args) {\n        var that = this;\n        var accessibilityView = that.components.accessibilityView;\n        var headerRowsNumeric = accessibilityView.headerRows;\n        var currentNumberOfRowHeaders = headerRowsNumeric.value();\n        var numberOfRows = args.sender.value();\n\n        if (numberOfRows < currentNumberOfRowHeaders) {\n            headerRowsNumeric.value(numberOfRows);\n        }\n\n        headerRowsNumeric.max(numberOfRows);\n    },\n\n    _createTablePropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-table-properties\");\n        var components = that.components;\n        var tableView = components.tableView = {};\n        var tableProperties = table.tableProperties = table.tableProperties || {};\n        var form;\n\n        that._addUnit(units, tableProperties.widthUnit);\n        that._addUnit(units, tableProperties.heightUnit);\n        tableProperties.borderStyle = tableProperties.borderStyle || \"\";\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: 2,\n                    field: \"k-editor-table-columns\",\n                    label: encode(messages.columns),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-columns\" />').appendTo(container),\n                            \"columns\",\n                            tableProperties,\n                            tableView,\n                            {\n                                min: 1,\n                                value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                change: that._onColumnsNumberChange.bind(that)\n                            });\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-rows\",\n                    label: encode(messages.rows),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-rows\" />').appendTo(container),\n                            \"rows\",\n                            tableProperties,\n                            tableView,\n                            {\n                                min: 1,\n                                value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                change: that._onRowsNumberChange.bind(that)\n                            });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-width\",\n                    label: encode(messages.width),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-width\" />').appendTo(container), \"width\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-width-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-table-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"widthUnit\",\n                            tableProperties,\n                            tableView,\n                            units);\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-height\",\n                    label: encode(messages.height),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-height\" />').appendTo(container), \"height\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-table-height-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-table-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"heightUnit\",\n                            tableProperties,\n                            tableView,\n                            units);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-position\",\n                    label: encode(messages.position),\n                    editor: function(container, options) {\n                        that._initTablePositionDropDown($('<input id=\"k-editor-table-position\" class=\"k-position\" />').appendTo(container), tableProperties);\n                    }\n                },\n                {\n                    colSpan: 2,\n                    field: \"k-editor-table-alignment\",\n                    label: encode(messages.alignment),\n                    editor: function(container, options) {\n                        that._initTableAlignmentDropDown($('<input id=\"k-editor-table-alignment\" class=\"k-align\" />').appendTo(container), tableProperties);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-cell-spacing\",\n                    label: encode(messages.cellSpacing),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-cell-spacing\" />').appendTo(container), \"cellSpacing\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    type: \"group\",\n                    label: \"Cell Paddings\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 20\n                    },\n                    items: [\n                        {\n                            colSpan: \"full\",\n                            field: \"k-editor-padding-all-sides\",\n                            label: \"\",\n                            editor: function(container, options) {\n                                that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", tableProperties, tableView,\n                                {\n                                    checked: true,\n                                    label: encode(messages.independentCellPaddings),\n                                    change: that._onPaddingCheckChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-top\",\n                            label: encode(messages.topPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-top\" />').appendTo(container), \"topCellPadding\", tableProperties, tableView,\n                                {\n                                    placeholder: encode(messages.auto),\n                                    change: that._onPaddingTopChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-right\",\n                            label: encode(messages.rightPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-right\" />').appendTo(container), \"rightCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-bottom\",\n                            label: encode(messages.bottomPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cell-padding-left\",\n                            label: encode(messages.leftPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-left\" />').appendTo(container), \"leftCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                            }\n                        }\n                    ]\n                }, {\n                    type: \"group\",\n                    label: \"Borders\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 10\n                    },\n                    items: [{\n                        colSpan: \"full\",\n                        field: \"k-editor-table-bg\",\n                        label: encode(messages.tableBackground),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-table-bg\" />').appendTo(container), \"bgColor\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-border-width\",\n                        label: encode(messages.borderWidth),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-border-width\" />').appendTo(container), \"borderWidth\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-border-color\",\n                        label: encode(messages.borderColor),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-border-color\" />').appendTo(container), \"borderColor\", tableProperties, tableView);\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-border-style\",\n                        label: encode(messages.borderStyle),\n                        editor: function(container, options) {\n                            that._initBorderStyleDropDown($('<input id=\"k-editor-border-style\" />').appendTo(container),\n                                \"borderStyle\",\n                                tableProperties,\n                                tableView,\n                                borderStyles);\n                        }\n                    },{\n                        colSpan: \"full\",\n                        field: \"k-editor-collapse-borders\",\n                        label: \"\",\n                        editor: function(container, options) {\n                            that._initCheckbox($('<input id=\"k-editor-collapse-borders\"/>').appendTo(container), \"collapseBorders\", tableProperties, tableView, { label: encode(messages.collapseBorders) });\n                        }\n                    }]\n                }\n            ]\n        }).data(\"kendoForm\");\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    },\n\n    _createCellPropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-cell-properties\");\n        var components = that.components = that.components || {};\n        var cellView = components.cellView = {};\n        var cellProperties = (table.selectedCells && table.selectedCells[0]) || { borderStyle: \"\", wrapText: true };\n        var form;\n\n        that._addUnit(units, cellProperties.widthUnit);\n        that._addUnit(units, cellProperties.heightUnit);\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: \"full\",\n                    field: \"k-editor-selectAllCells\",\n                    label: \"\",\n                    editor: function(container, options) {\n                        that._initCheckbox($('<input id=\"k-editor-selectAllCells\" />').appendTo(container), \"selectAllCells\", table.tableProperties, cellView, { label: encode(messages.selectAllCells) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-width\",\n                    label: encode(messages.width),\n                    hint: encode(messages.applyToColumn),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-cell-width\" />').appendTo(container), \"width\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-width-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-cell-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"widthUnit\",\n                            cellProperties,\n                            cellView,\n                            units);\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-height\",\n                    label: encode(messages.height),\n                    hint: encode(messages.applyToRow),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-cell-height\" />').appendTo(container), \"height\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    colSpan: 1,\n                    field: \"k-editor-cell-height-type\",\n                    label: {\n                        encoded: false,\n                        text: '&nbsp;'\n                    },\n                    editor: function(container, options) {\n                        that._initDropDownList($(`<input id=\"k-editor-cell-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                            \"heightUnit\",\n                            cellProperties,\n                            cellView,\n                            units);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-cell-alignment\",\n                    label: encode(messages.alignment),\n                    editor: function(container, options) {\n                        that._initCellAlignmentDropDown($('<input id=\"k-editor-cell-alignment\" class=\"k-align\" />').appendTo(container), cellProperties);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-wrap-text\",\n                    label: \"Text control\",\n                    editor: function(container, options) {\n                        that._initTextWrapDropDown($('<input id=\"k-editor-wrap-text\" />').appendTo(container),\n                        cellProperties);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-bg\",\n                    label: encode(messages.background),\n                    editor: function(container, options) {\n                        that._initColorPicker($('<input id=\"k-editor-cell-bg\" />').appendTo(container), \"bgColor\", cellProperties, cellView);\n                    }\n                },{\n                    colSpan: 2,\n                    field: \"k-editor-table-cell-margin\",\n                    label: encode(messages.cellMargin),\n                    editor: function(container, options) {\n                        that._initNumericTextbox($('<input id=\"k-editor-table-cell-margin\" />').appendTo(container), \"cellMargin\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                    }\n                },{\n                    type: \"group\",\n                    label: \"Cell Paddings\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 20\n                    },\n                    items: [\n                        {\n                            colSpan: \"full\",\n                            field: \"k-editor-padding-all-sides\",\n                            label: \"\",\n                            editor: function(container, options) {\n                                that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", table.tableProperties, cellView,\n                                {\n                                    checked: true,\n                                    label: encode(messages.independentCellPaddings),\n                                    change: that._onPaddingCheckChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-top\",\n                            label: encode(messages.topPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-top\" />').appendTo(container), \"topCellPadding\", cellProperties, cellView,\n                                {\n                                    placeholder: encode(messages.auto),\n                                    change: that._onPaddingTopChange.bind(that)\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-right\",\n                            label: encode(messages.rightPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-right\" />').appendTo(container), \"rightCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-bottom\",\n                            label: encode(messages.bottomPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-cells-padding-left\",\n                            label: encode(messages.leftPadding),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-left\" />').appendTo(container), \"leftCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                            }\n                        }\n                    ]\n                },{\n                    type: \"group\",\n                    label: \"Borders\",\n                    layout: \"grid\",\n                    colSpan: 4,\n                    grid: {\n                        cols: 4,\n                        gutter: 10\n                    },\n                    items: [{\n                        colSpan: 1,\n                        field: \"k-editor-cell-border-width\",\n                        label: encode(messages.borderWidth),\n                        editor: function(container, options) {\n                            that._initNumericTextbox($('<input id=\"k-editor-cell-border-width\" />').appendTo(container), \"borderWidth\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 1,\n                        field: \"k-editor-cell-border-color\",\n                        label: encode(messages.borderColor),\n                        editor: function(container, options) {\n                            that._initColorPicker($('<input id=\"k-editor-cell-border-color\" />').appendTo(container), \"borderColor\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                        }\n                    },{\n                        colSpan: 2,\n                        field: \"k-editor-cell-border-style\",\n                        label: encode(messages.borderStyle),\n                        editor: function(container, options) {\n                            that._initBorderStyleDropDown($('<input id=\"k-editor-cell-border-style\" />').appendTo(container),\n                                \"borderStyle\",\n                                cellProperties,\n                                cellView,\n                                borderStyles);\n                        }\n                    }]\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-id\",\n                    label: {\n                        text: encode(messages.id),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-cell-id\" />').appendTo(container), \"id\", cellProperties, cellView);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-cell-css-class\",\n                    label: {\n                        text: encode(messages.cssClass),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-cell-css-class\" />').appendTo(container), \"className\", cellProperties, cellView);\n                    }\n                }\n            ]\n        }).data(\"kendoForm\");\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    },\n\n    _createAccessibilityPropertiesForm: function(dialog, messages) {\n        var that = this;\n        var table = that.options.table;\n        var formElement = dialog.element.find(\"#k-accessibility-properties\");\n        var components = that.components;\n        var accessibilityView = components.accessibilityView = {};\n        var tableProperties = table.tableProperties;\n        var form;\n\n        form = formElement.kendoForm({\n            renderButtons: false,\n            layout: \"grid\",\n            grid: {\n                cols: 4\n            },\n            items: [\n                {\n                    colSpan: \"full\",\n                    field: \"k-editor-id\",\n                    label: {\n                        text: encode(messages.id),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-id\" />').appendTo(container), \"id\", tableProperties, accessibilityView);\n                    }\n                },{\n                    colSpan: \"full\",\n                    field: \"k-editor-css-class\",\n                    label: {\n                        text: encode(messages.cssClass),\n                        optional: true\n                    },\n                    editor: function(container, options) {\n                        that._initInput($('<input id=\"k-editor-css-class\" />').appendTo(container), \"className\", tableProperties, accessibilityView);\n                    }\n                },\n                {\n                    layout: \"grid\",\n                    grid: {\n                        cols: 4,\n                        gutter: 16\n                    },\n                    colSpan: \"full\",\n                    type: \"group\",\n                    label: \"Accessibility\",\n                    items: [\n                        {\n                            colSpan: 2,\n                            field: \"k-editor-table-caption\",\n                            label: {\n                                text: encode(messages.caption),\n                                optional: true\n                            },\n                            editor: function(container, options) {\n                                that._initInput($('<input id=\"k-editor-table-caption\" />').appendTo(container), \"captionContent\", tableProperties, accessibilityView);\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-accessibility-alignment\",\n                            label: encode(messages.captionAlignment),\n                            editor: function(container, options) {\n                                that._initAccessibilityAlignmentDropDown($('<input id=\"k-editor-accessibility-alignment\" />').appendTo(container), tableProperties);\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-header-rows\",\n                            label: encode(messages.headerRows),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-header-rows\" />').appendTo(container),\n                                \"headerRows\",\n                                tableProperties,\n                                accessibilityView,\n                                {\n                                    max: tableProperties.rows || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                });\n                            }\n                        },{\n                            colSpan: 1,\n                            field: \"k-editor-table-header-columns\",\n                            label: encode(messages.headerColumns),\n                            editor: function(container, options) {\n                                that._initNumericTextbox($('<input id=\"k-editor-table-header-columns\" />').appendTo(container),\n                                \"headerColumns\",\n                                tableProperties,\n                                accessibilityView,\n                                {\n                                    max: tableProperties.columns || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                });\n                            }\n                        },{\n                            colSpan: 2,\n                            field: \"k-editor-cells-headers\",\n                            label: encode(messages.associateCellsWithHeaders),\n                            editor: function(container, options) {\n                                var element = $(`<select id=\"k-editor-cells-headers\">\n                                    <option value=\"none\">${ messages.associateNone }</option>\n                                    <option value=\"scope\">${ messages.associateScope }</option>\n                                    <option value=\"ids\">${ messages.associateIds }</option>\n                                </select>`).appendTo(container);\n\n                                that._initAssociationDropDown(element, \"cellsWithHeaders\", { valuePrimitive: true }, tableProperties, accessibilityView);\n                            }\n                        },{\n                            colSpan: \"full\",\n                            field: \"k-editor-accessibility-summary\",\n                            label: {\n                                text: encode(messages.summary),\n                                optional: true\n                            },\n                            editor: function(container, options) {\n                                that._initTextArea($('<textarea id=\"k-editor-accessibility-summary\"></textarea>').appendTo(container), \"summary\", tableProperties, accessibilityView, {\n                                    rows: 5,\n                                    placeholder: messages.tableSummaryPlaceholder\n                                });\n                            }\n                        }\n                    ]\n                }\n            ]\n        }).data(\"kendoForm\");\n\n        form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n        return form;\n    }\n});\n\nkendo.ui.editor.TableWizardDialog = TableWizardDialog;\n\n})(window.kendo.jQuery);\n\nconst __meta__ = {\n        id: \"editor\",\n        name: \"Editor\",\n        category: \"web\",\n        description: \"Rich text editor component\",\n        depends: [ \"combobox\", \"dropdownlist\", \"window\", \"colorpicker\", \"toolbar\", \"icons\" ],\n        features: [ {\n            id: \"editor-imagebrowser\",\n            name: \"Image Browser\",\n            description: \"Support for uploading and inserting images\",\n            depends: [ \"imagebrowser\" ]\n        }, {\n            id: \"editor-resizable\",\n            name: \"Resize handle\",\n            description: \"Support for resizing the content area via a resize handle\",\n            depends: [ \"resizable\" ]\n        }, {\n            id: \"editor-tablewizard\",\n            name: \"Table wizard dialog\",\n            description: \"Support for table properties configuration\",\n            depends: [ \"tabstrip\", \"button\", \"numerictextbox\", \"textarea\" ]\n        }, {\n            id: \"editor-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export Editor content as PDF\",\n            depends: [ \"pdf\", \"drawing\" ]\n        }]\n    };\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}