{"version":3,"sources":["raw-mjs/kendo.spreadsheet.js"],"names":["clone","hash","target","Object","assign","keys","reduce","copy","key","drawTabularData","options","progress","$","Deferred","promise","dataSource","guidelines","guideColor","columns","headerBackground","headerColor","oddBackground","evenBackground","fontFamily","fontSize","paperSize","margin","landscape","fitWidth","scale","rowHeight","maxEmpty","useGridFormat","kendo","drawing","pdf","defineFont","drawDOM","getFontFaces","document","charWidth","charWidthFunction","textWidth","value","width","i","length","charAt","border","size","color","mkCell","data","borderLeft","borderTop","borderRight","borderBottom","fetch","reject","map","col","title","field","columnTitles","columnWidths","rows","row","rowIndex","cells","colIndex","format","Math","max","background","unshift","label","sheet","spreadsheet","Sheet","verticalAlign","fromJSON","name","w","index","draw","headerRows","resolve","bind","jQuery","ObservableObject","MESSAGES","messages","dialogs","apply","save","cancel","remove","retry","revert","okText","formatCellsDialog","categories","number","currency","date","fontFamilyDialog","fontSizeDialog","bordersDialog","alignmentDialog","buttons","justifyLeft","justifyCenter","justifyRight","justifyFull","alignTop","alignMiddle","alignBottom","mergeDialog","mergeCells","mergeHorizontally","mergeVertically","unmerge","freezeDialog","freezePanes","freezeRows","freezeColumns","unfreeze","confirmationDialog","text","validationDialog","hintMessage","hintTitle","criteria","any","custom","list","comparers","greaterThan","lessThan","between","notBetween","equalTo","notEqualTo","greaterThanOrEqualTo","lessThanOrEqualTo","comparerMessages","labels","comparer","min","start","end","onInvalidData","rejectInput","showWarning","showHint","ignoreBlank","showListButton","showCalendarButton","placeholders","typeTitle","typeMessage","exportAsDialog","defaultFileName","xlsx","description","area","workbook","selection","paper","a2","a3","a4","a5","b3","b4","b5","folio","legal","letter","tabloid","executive","normal","narrow","wide","fit","fileName","saveAsType","exportArea","margins","orientation","print","center","horizontally","vertically","modifyMergedDialog","errorMessage","rangeDisabledDialog","intersectsArrayDialog","incompatibleRangesDialog","noFillDirectionDialog","duplicateSheetNameDialog","overflowDialog","useKeyboardDialog","forCopy","forCut","forPaste","unsupportedSelectionDialog","linkDialog","url","removeLink","sheetRenameDialog","rename","insertCommentDialog","comment","removeComment","insertImageDialog","info","typeError","registry","register","dialogClass","registered","create","SpreadsheetDialog","Observable","extend","init","fn","call","this","translate","events","autoFocus","dialog","_dialog","scrollable","resizable","modal","visible","open","close","_onDialogClose","activate","_onDialogActivate","deactivate","_onDialogDeactivate","addClass","className","append","template","ns","errors","kendoWindow","trigger","action","_action","destroy","element","find","formattedValue","formatting","FormatCellsViewModel","useCategory","category","type","formatCurrency","set","currencies","allFormats","useFirstFormat","formats","undefined","_currency","decimals","iso","convert","categoryFilter","preview","get","uniqueBy","array","result","values","inArray","push","token","n","pattern","replace","Array","join","abbr","JSON","stringify","symbol","test","toLowerCase","FormatCellsDialog","defaultOptions","_generateFormats","$kendoOutput","htmlEncode","currenciesFrom","cultures","numberFormats","dateFormats","calendarPatterns","current","calendars","standard","patterns","range","slice","viewModel","Date","formatItemTemplate","currencyFilter","setOptions","filter","roleSelector","parent","attr","command","property","culture","numberFormat","MessageDialog","messageId","getter","ConfirmationDialog","confirm","isConfirmed","_confirmed","ValidationErrorDialog","_retry","FontFamilyDialog","_list","ul","fonts","defaultFont","default","ui","StaticList","DataSource","change","e","sender","FontSizeDialog","sizes","defaultSize","parseInt","BordersDialog","_borderPalette","observable","state","borderPalette","style","first","BorderPalette","_state","ColorChooser","_value","ColorPickerDialog","_colorPalette","colorPalette","kendoColorPalette","palette","CustomColorDialog","animation","one","_colorPicker","colorPicker","kendoFlatColorPicker","AlignmentDialog","iconClass","icon","dataItem","MergeDialog","FreezeDialog","ValidationViewModel","ValidationCellsViewModel","reset","criterion","setHintMessageTemplate","_mute","shouldBuild","buildMessages","hintTitleTemplate","hintMessageTemplate","from","to","setComparers","defaultHintTitle","all","defaultComparers","text_comparers","idx","shift","defaultHintMessage","isAny","isNumber","showToForNumber","showTo","showToForDate","isDate","isText","isList","isCustom","showRemove","update","validation","fromValidationObject","dataType","comparerType","allowNulls","showButton","messageTemplate","titleTemplate","useCustomMessages","toValidationObject","ValidationDialog","errorTemplate","message","validatable","Validator","validateOnBlur","validate","ExportAsDialog","extension","fileFormats","excel","excelExport","proxyURL","pdfExport","forceProxy","author","autoPrint","subject","keywords","creator","areas","paperSizes","hCenter","vCenter","TEXT","bottom","left","right","top","basicErrorDialog","id","msg","ImportErrorDialog","err","context","error","UseKeyboardDialog","HyperlinkDialog","self","arguments","model","link","on","ev","keyCode","val","stopPropagation","preventDefault","SheetRenameDialog","args","sheetName","_oldSheetName","_newSheetName","InsertCommentDialog","InsertImageDialog","okEnabled","imageUrl","hasImage","isHovered","_url","_image","window","URL","revokeObjectURL","blob","_width","height","_height","stopEvent","drop","selectFile","originalEvent","dataTransfer","files","dragEnter","dragLeave","image","createObjectURL","img","Image","src","onload","Localizable","path","def","split","thing","trans","isArray","ret","prototype","BORDER_TYPES","BORDER_TYPES_ICONS","allBorders","insideBorders","insideHorizontalBorders","insideVerticalBorders","outsideBorders","leftBorder","topBorder","rightBorder","bottomBorder","noBorders","BORDER_PALETTE_MESSAGES","colorPickerPalette","Widget","_borderTypePalette","_borderColorPalette","colorChooser","that","class","appendTo","kendoToggleButton","toHyphens","toggle","_toggle","FlatColorPicker","view","input","_change","wrapper","_apply","_cancel","previous","siblings","checked","getDefaultToolElement","firstIconName","ToolBar","toolbar","addColumnLeft","addColumnRight","addRowAbove","addRowBelow","alignment","alignmentButtons","backgroundColor","increaseFontSize","decreaseFontSize","bold","borders","cut","deleteColumn","deleteRow","formatTypes","automatic","percent","financial","time","dateTime","duration","moreFormats","formatDecreaseDecimal","formatIncreaseDecimal","freeze","freezeButtons","insertComment","insertImage","italic","merge","mergeButtons","paste","redo","undo","exportAs","toggleGridlines","sort","sortButtons","sortRangeAsc","sortRangeDesc","textColor","textWrap","underline","hyperlink","defaultFormats","COLOR_PICKER_MESSAGES","customColor","toolDefaults","separator","extensions","overflow","togglable","component","overflowComponent","componentOptions","fillMode","items","attributes","commandOn","toolIcon","clearButton","sample","itemTemplate","enable","popupComponent","formatCells","selected","SpreadsheetToolBar","forEach","t","showText","tools","toolbarName","parentMessages","defaultTools","handleClick","_click","click","commandType","file","home","insert","refresh","activeCell","_tools","tool","isFunction","showGridLines","_updateTool","resize","toArray","_getItem","vertical","menu","enabled","toolbarEl","widget","widgetInstance","menuItem","_ref","textAlign","removeClass","is","trim","cssProperties","propertyDictionary","Menu","CACHE_CHAR_WIDTH","func","span","div","createElement","position","whiteSpace","appendChild","createTextNode","String","fromCharCode","body","widths","firstChild","nextSibling","offsetWidth","removeChild","ch","code","charCodeAt","registerEditor","calendar","popup","kendoCalendar","kendoPopup","getKendoCalendar","getKendoPopup","callback","dateToNumber","anchor","querySelector","origin","alignLeft","numberToDate","Calendar","fromValidation","toValidation","formula","calc","runtime","Formula","_rowAndColPresent","disableDates","validationComparers","edit","kendoStaticList","selectable","autoBind","getKendoStaticList","item","add","el","Matrix","each","setDataSource","read","outerWidth","_outerWidth","DOT","EMPTYCHAR","SheetsBar","classNames","sheetsBarWrapper","_openDialog","openDialog","_addButton","_menuButton","_tree","dom","Tree","render","_createSheetsWrapper","_initSheetDropDownButtons","_toggleScrollEvents","_createSortable","_sortable","_onSheetReorderStart","_onSheetReorderEnd","_onSheetContextMenu","_onSheetSelect","sheetsBarKItem","_createEditor","distance","_editor","_renderSheets","_sheets","_selectedIndex","sheetsBarEditor","_onEditorKeydown","_onEditorBlur","_destroyEditor","canceled","newSheetName","off","_onSheetRename","renderSheets","sheets","selectedIndex","isInEditMode","_isRtl","support","isRtl","_renderHtml","_scrollableAllowed","_sheetsWrapper","sheetsBarScrollable","sheetsBarSheetsWrapper","_toggleScrollButtons","_sheetsGroup","scrollLeft","prev","sheetsBarPrev","next","sheetsBarNext","toggleClass","scrollWidth","scrollPrevButton","scrollNextButton","sheetsWrapper","event","_nowScrollingSheets","_scrollSheetsByDelta","renderScrollButtons","sheetElements","isSelectedSheet","role","elementContent","sheetsBarKActive","sheetsBarKTextbox","maxlength","sheetsBarKLink","sheetsBarKLinkText","contextMenuButton","html","renderButton","sheetsBarMoreIcon","ind","btnEl","allSheets","visibleSheets","isSingleVisibleSheet","shouldAllowMoveRight","shouldAllowMoveLeft","kendoDropDownButton","itemsWrapper","childrenElements","sheetsBarKReset","baseButtonClass","sheetsBarKButton","sheetsBarKButtonBare","ariaHidden","tabIndex","sheetsBarArrowWIcon","sheetsBarArrowEIcon","children","sheetsBarItems","Sortable","container","axis","ignore","draggable","hint","wrap","sheetsBarHintWrapper","sheetsBarKResetItems","closest","which","oldIndex","newIndex","_onSheetRemove","_onSheetDuplicate","_renamePrompt","_hideSheet","_moveSheet","renameSheetIndex","findIndex","sh","closeCallback","dlg","sheetIndex","direction","newSheetIndex","removedSheetName","confirmation","selectedSheetText","_scrollSheetsToItem","isAddButton","_onAddSelect","_onMenuSelect","addButton","sheetsBarAdd","kendoButton","sheetsBarPlusIcon","menuButton","sheetsBarSheetsMenu","sheetsBarMenuIcon","cssClass","isNaN","itemPosition","sheetsGroup","currentScrollOffset","itemWidth","itemOffset","sheetsGroupWidth","finish","animate","delta","scrLeft","sheetsBarRemove","sheetsBarKIcon","sheetsBarKFontIcon","sheetsBarKButtonDefaults","sheetsBarXIcon","sheetsBarKSprite","details","button","detailsSummary","detailsContent","iconCollapseName","iconExpandName","iconSearchName","textbox","filterByCondition","filterByValue","valuesTreeViewWrapper","actionButtons","filterMenu","sortAscending","sortDescending","search","addToCurrent","clear","blanks","operatorNone","and","or","operators","string","contains","doesnotcontain","startswith","endswith","matches","doesnotmatch","eq","neq","lt","gt","gte","lte","Details","FilterMenu","_summary","iconName","expanded","_icon","prependTo","_container","hide","show","fx","expand","stop","binders","spreadsheetFilterValue","Binder","bindings","templates","guid","dir","query","hasVisibleChildren","HierarchicalDataSource","toString","toLocaleLowerCase","itemVisible","indexOf","anyVisibleChildren","filterSpread","hidden","operator","uncheckAll","hasChildren","FilterMenuViewModel","valuesChange","valuesDataSource","toJSON","appendToSearch","valueFilter","concat","lastIndexOf","valueSelect","node","hasActiveSearch","filterValues","logic","operatorChange","isNone","isString","flattenOperators","hasOwnProperty","unique","FilterMenuController","valuesTree","column","columnRange","forEachCell","cell","isHiddenRow","distinctValues","a","b","filterType","filterForColumn","topValue","filters","allFilters","columnFilters","active","checkboxesConfig","checkChildren","_filterInit","_popup","_sort","_filterByCondition","_filterByValue","_actionButtons","valuesTreeView","openFor","hasClass","pageX","pageY","_active","customFilter","operatingRange","activeFilter","copyAnchorStyles","kendoMenu","select","_appendTemplate","compiledTemplate","_detailToggle","not","isExpanded","accentFoldingFiltering","activeContainer","defaultSheetName","nameBox","formulaInput","openUnsupported","shiftingNonblankCells","insertColumnWhenRowIsSelected","insertRowWhenColumnIsSelected","filterRangeContainingMerges","sortRangeContainingMerges","cantSortMultipleSelection","cantSortNullRef","cantSortMixedCells","validationError","cannotModifyDisabled","insertRowBelowLastRow","insertColAfterLastCol","tabs","menus","delete","unhide","bringToFront","sendToBack","PDFMixin","override_drawPDF","group","activeSheet","overrideSaveAsPDF","saveAsPDF","_drawPDF","then","root","pdfResultPromise","exportPDF","exportPDFToBlob","convertPromiseToDeferred","done","dataURI","saveAs","proxyTarget","fail","Workbook","__meta__","depends","undefined$1","browser","msie","version","K_ACTIVE","NS","commonEngine","FormulaInput","toActionSelector","selectors","COMPOSITE_UNAVAILABLE_ACTION_SELECTORS","UNHIDE_ACTION_SELECTORS","viewClassNames","View","ContextMenu","FormulaInputStaticList","d","itemClick","handler","FormulaInputRefArgs","constructor","NameBoxRefArgs","nameEditor","combo","initializeComboBox","transport","readData","success","cache","kendoComboBox","dataTextField","dataValueField","ignoreCase","onChange","noDataTemplate","onKeyDown","onDelete","editor","Spreadsheet","_renderInnerContent","SPREADSHEET_CONTENT_HTML_TEMPLATE","_createFormulaInputs","spreadsheetRef","_initSpreadsheetWidget","_bindWorkbookEvents","_onUpdateTools","_resizeHandler","_showWatermarkOverlay","widgetOptions","sheetsbar","formulaBarInputRef","_formulaBarInputRefList","_formulaBarInputRefPopup","formulaCellInputRef","_formulaCellInputRefList","_formulaCellInputRefPopup","nameBoxRef","createFilterMenu","createTabStrip","_initHeader","focus","createSheetEditor","sheetsBar","createSheetBar","openDialogCallback","_sheetsBar","createContextMenus","_dialogs","_initContextMenus","createSheetDataSource","getWorkbookCommand","commandName","commandOptions","getIconHTMLString","reason","sheetSelection","ref","dialogOptions","opts","commandArgs","saveAsExcel","ooxml","exportOptions","executeCommand","pop","contextmenu","objectRef","targetType","showUnhide","showUnmerge","isComposite","topLeft","bottomRight","cellContextMenu","colHeaderContextMenu","rowHeaderContextMenu","drawingContextMenu","setTimeout","locale","intl","kendoCultureToIntl","SpreadsheetWidget","formulaBarInputRefElement","formulaBarInputRefListId","listWrapper","insertAfter","aria","itemRole","Popup","formulaCellInputRefElement","formulaCellInputRefListId","cellEditor","contextMenuConfig","showOn","CELL_CONTEXT_MENU","COL_HEADER_CONTEXT_MENU","ROW_HEADER_CONTEXT_MENU","DRAWING_CONTEXT_MENU","onContextMenuSelect","_controller","navigator","_sheet","_activeDrawing","overElement","_getCopyRegex","newName","replaceAll","RegExp","sheetsbarOptions","onAddSelect","onSheetSelect","onSheetReorderEnd","onSheetRename","sheetToCopy","sheetByName","copies","regex","insertSheet","onSheetRemove","sheetToHide","x","visibleSheetIndex","nextVisibleSheet","_sheetsSearchCache","_createToolBar","toolbarId","empty","activeTabIndex","activeToolbar","_activeToolBar","undoRedoStack","content","toolbarOptions","defaultTab","_resize","layout","_workbookChanging","_workbookChange","_autoRefresh","recalc","Range","_workbookCut","_workbookCopy","_workbookPaste","moveSheetToIndex","removeSheet","sheetByIndex","renameSheet","autoRefresh","json","saveJSON","fromFile","_workbook","_workbookExcelExport","_workbookExcelImport","_initProgress","deferred","loading","pb","kendoProgressBar","chunkCount","finally","_workbookPdfExport","_workbookInsertSheet","_workbookRemoveSheet","_workbookSelectSheet","_workbookRenameSheet","_workbookInsertRow","_workbookInsertColumn","_workbookDeleteRow","_workbookDeleteColumn","_workbookHideRow","_workbookHideColumn","_workbookUnhideRow","_workbookUnhideColumn","_workbookSelect","_workbookChangeFormat","_workbookDataBinding","_workbookDataBound","_workbookProgress","columnWidth","headerHeight","headerWidth","defaultCellStyle","useCultureDecimals","defineName","undefineName","nameValue","forEachName","addImage","cleanupImages","plugin","kendo$1"],"mappings":"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","file":"kendo.spreadsheet.js","sourcesContent":["import './kendo.excel.js';\nimport './kendo.progressbar.js';\nimport './kendo.pdf.js';\nimport './kendo.toolbar.js';\nimport './kendo.list.js';\nimport './kendo.spreadsheet.common.js';\nimport './kendo.core.js';\nimport './kendo.binder.js';\nimport './kendo.validator.js';\nimport './kendo.icons.js';\nimport './kendo.window.js';\nimport './kendo.colorpicker.js';\nimport './kendo.combobox.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.dropdownbutton.js';\nimport './kendo.popup.js';\nimport './kendo.togglebutton.js';\nimport './kendo.calendar.js';\nimport './kendo.listview.js';\nimport './kendo.dom.js';\nimport './kendo.sortable.js';\nimport './kendo.treeview.js';\nimport './kendo.numerictextbox.js';\nimport './kendo.datepicker.js';\nimport './kendo.datetimepicker.js';\nimport './kendo.ooxml.js';\n\n(function(kendo) {\n    var $ = kendo.jQuery;\n    var ObservableObject = kendo.data.ObservableObject;\n\n    var MESSAGES = kendo.spreadsheet.messages.dialogs = {\n        apply: \"Apply\",\n        save: \"Save\",\n        cancel: \"Cancel\",\n        remove: \"Remove\",\n        retry: \"Retry\",\n        revert: \"Revert\",\n        okText: \"OK\",\n        formatCellsDialog: {\n            title: \"Format\",\n            categories: {\n                number: \"Number\",\n                currency: \"Currency\",\n                date: \"Date\"\n            }\n        },\n        fontFamilyDialog: {\n            title: \"Font\"\n        },\n        fontSizeDialog: {\n            title: \"Font size\"\n        },\n        bordersDialog: {\n            title: \"Borders\"\n        },\n        alignmentDialog: {\n            title: \"Alignment\",\n            buttons: {\n                justifyLeft: \"Align left\",\n                justifyCenter: \"Center\",\n                justifyRight: \"Align right\",\n                justifyFull: \"Justify\",\n                alignTop: \"Align top\",\n                alignMiddle: \"Align middle\",\n                alignBottom: \"Align bottom\"\n            }\n        },\n        mergeDialog: {\n            title: \"Merge cells\",\n            buttons: {\n                mergeCells: \"Merge all\",\n                mergeHorizontally: \"Merge horizontally\",\n                mergeVertically: \"Merge vertically\",\n                unmerge: \"Unmerge\"\n            }\n        },\n        freezeDialog: {\n            title: \"Freeze panes\",\n            buttons: {\n                freezePanes: \"Freeze panes\",\n                freezeRows: \"Freeze rows\",\n                freezeColumns: \"Freeze columns\",\n                unfreeze: \"Unfreeze panes\"\n            }\n        },\n        confirmationDialog: {\n            text: \"Are you sure you want to remove this sheet?\",\n            title: \"Sheet remove\"\n        },\n        validationDialog: {\n            title: \"Data Validation\",\n            hintMessage: \"Please enter a valid {0} value {1}.\",\n            hintTitle: \"Validation {0}\",\n            criteria: {\n                any: \"Any value\",\n                number: \"Number\",\n                text: \"Text\",\n                date: \"Date\",\n                custom: \"Custom Formula\",\n                list: \"List\"\n            },\n            comparers: {\n                greaterThan: \"greater than\",\n                lessThan: \"less than\",\n                between: \"between\",\n                notBetween: \"not between\",\n                equalTo: \"equal to\",\n                notEqualTo: \"not equal to\",\n                greaterThanOrEqualTo: \"greater than or equal to\",\n                lessThanOrEqualTo: \"less than or equal to\"\n            },\n            comparerMessages: {\n                greaterThan: \"greater than {0}\",\n                lessThan: \"less than {0}\",\n                between: \"between {0} and {1}\",\n                notBetween: \"not between {0} and {1}\",\n                equalTo: \"equal to {0}\",\n                notEqualTo: \"not equal to {0}\",\n                greaterThanOrEqualTo: \"greater than or equal to {0}\",\n                lessThanOrEqualTo: \"less than or equal to {0}\",\n                custom: \"that satisfies the formula: {0}\"\n            },\n            labels: {\n                criteria: \"Criteria\",\n                comparer: \"Comparer\",\n                min: \"Min\",\n                max: \"Max\",\n                value: \"Value\",\n                start: \"Start\",\n                end: \"End\",\n                onInvalidData: \"On invalid data\",\n                rejectInput: \"Reject input\",\n                showWarning: \"Show warning\",\n                showHint: \"Show hint\",\n                hintTitle: \"Hint title\",\n                hintMessage: \"Hint message\",\n                ignoreBlank: \"Ignore blank\",\n                showListButton: \"Display button to show list\",\n                showCalendarButton: \"Display button to show calendar\"\n            },\n            placeholders: {\n                typeTitle: \"Type title\",\n                typeMessage: \"Type message\"\n            }\n        },\n        exportAsDialog: {\n            title: \"Export...\",\n            defaultFileName: \"Workbook\",\n            xlsx: {\n                description: \"Excel Workbook (.xlsx)\"\n            },\n            pdf: {\n                description: \"Portable Document Format (.pdf)\",\n                area: {\n                    workbook: \"Entire Workbook\",\n                    sheet: \"Active Sheet\",\n                    selection: \"Selection\"\n                },\n                paper: {\n                    a2        : \"A2 (420 mm × 594 mm)\",\n                    a3        : \"A3 (297 mm x 420 mm)\",\n                    a4        : \"A4 (210 mm x 297 mm)\",\n                    a5        : \"A5 (148 mm x 210 mm)\",\n                    b3        : \"B3 (353 mm × 500 mm)\",\n                    b4        : \"B4 (250 mm x 353 mm)\",\n                    b5        : \"B5 (176 mm x 250 mm)\",\n                    folio     : 'Folio (8.5\" x 13\")',\n                    legal     : 'Legal (8.5\" x 14\")',\n                    letter    : 'Letter (8.5\" x 11\")',\n                    tabloid   : 'Tabloid (11\" x 17\")',\n                    executive : 'Executive (7.25\" x 10.5\")'\n                },\n                margin: {\n                    normal: \"Normal\",\n                    narrow: \"Narrow\",\n                    wide: \"Wide\"\n                }\n            },\n            labels: {\n                scale: \"Scale\",\n                fit: \"Fit to page\",\n                fileName: \"File name\",\n                saveAsType: \"Save as type\",\n                exportArea: \"Export\",\n                paperSize: \"Paper size\",\n                margins: \"Margins\",\n                orientation: \"Orientation\",\n                print: \"Print\",\n                guidelines: \"Guidelines\",\n                center: \"Center\",\n                horizontally: \"Horizontally\",\n                vertically: \"Vertically\"\n            }\n        },\n        modifyMergedDialog: {\n            errorMessage: \"Cannot change part of a merged cell.\"\n        },\n        rangeDisabledDialog: {\n            errorMessage: \"Destination range contains disabled cells.\"\n        },\n        intersectsArrayDialog: {\n            errorMessage: \"You cannot alter part of an array\"\n        },\n        incompatibleRangesDialog: {\n            errorMessage: \"Incompatible ranges\"\n        },\n        noFillDirectionDialog: {\n            errorMessage: \"Cannot determine fill direction\"\n        },\n        duplicateSheetNameDialog: {\n            errorMessage: \"Duplicate sheet name\"\n        },\n        overflowDialog: {\n            errorMessage: \"Cannot paste, because the copy area and the paste area are not the same size and shape.\"\n        },\n        useKeyboardDialog: {\n            title: \"Copying and pasting\",\n            errorMessage: \"These actions cannot be invoked through the menu. Please use the keyboard shortcuts instead:\",\n            labels: {\n                forCopy: \"for copy\",\n                forCut: \"for cut\",\n                forPaste: \"for paste\"\n            }\n        },\n        unsupportedSelectionDialog: {\n            errorMessage: \"That action cannot be performed on multiple selection.\"\n        },\n        linkDialog: {\n            title: \"Hyperlink\",\n            labels: {\n                text: \"Text\",\n                url: \"Address\",\n                removeLink: \"Remove link\"\n            }\n        },\n        sheetRenameDialog: {\n            title: \"Rename Sheet\",\n            labels: {\n                text: \"Rename Sheet\",\n                rename: \"Rename\"\n            }\n        },\n        insertCommentDialog: {\n            title: \"Insert comment\",\n            labels: {\n                comment: \"Comment\",\n                removeComment: \"Remove comment\"\n            }\n        },\n        insertImageDialog: {\n            title: \"Insert image\",\n            info: \"Drag an image here, or click to select\",\n            typeError: \"Please select a JPEG, PNG or GIF image\"\n        }\n    };\n\n    var registry = {};\n    kendo.spreadsheet.dialogs = {\n        register: function(name, dialogClass) {\n            registry[name] = dialogClass;\n        },\n        registered: function(name) {\n            return !!registry[name];\n        },\n        create: function(name, options) {\n            var dialogClass = registry[name];\n\n            if (dialogClass) {\n                return new dialogClass(options);\n            }\n        }\n    };\n\n    var SpreadsheetDialog = kendo.spreadsheet.SpreadsheetDialog = kendo.Observable.extend({\n        init: function(options) {\n            kendo.Observable.fn.init.call(this, options);\n\n            this.options = translate($.extend(true, {}, this.options, options));\n\n            this.bind(this.events, options);\n        },\n        events: [\n            \"close\",\n            \"activate\"\n        ],\n        options: {\n            autoFocus: true\n        },\n        dialog: function() {\n            if (!this._dialog) {\n                var options = {\n                    autoFocus: false,\n                    scrollable: false,\n                    resizable: false,\n                    modal: true,\n                    visible: false,\n                    width: this.options.width || 320,\n                    title: this.options.title,\n                    open: function() {\n                        this.center();\n                    },\n                    close: this._onDialogClose.bind(this),\n                    activate: this._onDialogActivate.bind(this),\n                    deactivate: this._onDialogDeactivate.bind(this)\n                };\n                this._dialog = $(\"<div class='k-spreadsheet-window k-action-window k-popup-edit-form' />\")\n                    .addClass(this.options.className || \"\")\n                    .append(kendo.template(this.options.template)({\n                        messages: kendo.spreadsheet.messages.dialogs || MESSAGES,\n                        ns: kendo.ns,\n\n                        // this is for ImportErrorDialog.  ugly that\n                        // we need this line here, but I couldn't\n                        // figure out a better way\n                        errors: this.options.errors\n                    }))\n                    .kendoWindow(options)\n                    .data(\"kendoWindow\");\n            }\n\n            return this._dialog;\n        },\n        _onDialogClose: function() {\n            this.trigger(\"close\", {\n                action: this._action\n            });\n        },\n        _onDialogActivate: function() {\n            this.trigger(\"activate\");\n        },\n        _onDialogDeactivate: function() {\n            this.trigger(\"deactivate\");\n            this.destroy();\n        },\n        destroy: function() {\n            if (this._dialog) {\n                this._dialog.destroy();\n                this._dialog = null;\n            }\n        },\n        open: function() {\n            this.dialog().open();\n            this.dialog().element.find(\".k-button-solid-primary\").trigger(\"focus\");\n        },\n        apply: function() {\n            this.close();\n        },\n        close: function() {\n            this._action = \"close\";\n\n            this.dialog().close();\n        }\n    });\n\n    function formattedValue(value, format) {\n        return kendo.spreadsheet.formatting.text(value, format);\n    }\n\n    var FormatCellsViewModel = kendo.spreadsheet.FormatCellsViewModel = ObservableObject.extend({\n        init: function(options) {\n            ObservableObject.fn.init.call(this, options);\n\n            this.useCategory(this.category);\n        },\n        useCategory: function(category) {\n            var type = category && category.type || \"number\";\n            var formatCurrency = type == \"currency\";\n\n            this.category = category;\n\n            this.set(\"showCurrencyFilter\", formatCurrency && this.currencies.length > 1);\n\n            if (!formatCurrency) {\n                this.set(\"formats\", this.allFormats[type + \"Formats\"]);\n            } else {\n                this.currency(this.currencies[0]);\n            }\n\n            this.useFirstFormat();\n        },\n        useFirstFormat: function() {\n            if (this.formats.length) {\n                this.set(\"format\", this.formats[0].value);\n            }\n        },\n        currency: function(currency) {\n            if (currency !== undefined) {\n                this._currency = currency;\n\n                var info = currency.value;\n                var formats = [\n                    { currency: info, decimals: true },\n                    { currency: info, decimals: true, iso: true },\n                    { currency: info, decimals: false }\n                ];\n\n                formats = formats.map(function(format) {\n                    format = FormatCellsViewModel.convert.currency(format);\n\n                    return { value: format, name: formattedValue(1000, format) };\n                });\n\n                this.set(\"formats\", formats);\n\n                this.useFirstFormat();\n            }\n\n            return this._currency || this.currencies[0];\n        },\n        categoryFilter: function(category) {\n            if (category !== undefined) {\n                this.useCategory(category);\n            }\n\n            return this.category;\n        },\n        preview: function() {\n            var format = this.get(\"format\");\n            var value = this.value || 0;\n\n            if (format && format.length) {\n                return formattedValue(value, format);\n            } else {\n                return value;\n            }\n        }\n    });\n\n    FormatCellsViewModel.convert = {\n        currency: function(options) {\n            function repeat(token, n) {\n                return new Array(n+1).join(token);\n            }\n\n            // convert culture info to spreadsheet format\n            var info = options.currency;\n            var format = info.pattern[1];\n\n            if (options.decimals) {\n                format = format.replace(/n/g, \"n\" + info[\".\"] + repeat(\"0\", info.decimals));\n            }\n\n            if (options.iso) {\n                format = '\"' + info.abbr + '\" ' + format.replace(/\\s*\\$\\s*/g, \"\");\n            } else {\n                format = format.replace(/\\$/g, JSON.stringify(info.symbol));\n            }\n\n            format = format.replace(/n/g, \"?\");\n\n            return format;\n        },\n        date: function(format) {\n            if ((/T|Z/).test(format)) {\n                return \"\";\n            }\n\n            return format.toLowerCase().replace(/tt/g, \"AM/PM\").replace(/'/g, '\"');\n        }\n    };\n\n    function uniqueBy(field, array) {\n        var result = [];\n        var values = [];\n\n        for (var i = 0; i < array.length; i++) {\n            if ($.inArray(array[i][field], values) == -1) {\n                result.push(array[i]);\n                values.push(array[i][field]);\n            }\n        }\n\n        return result;\n    }\n\n    var FormatCellsDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.formatCellsDialog || MESSAGES;\n            var defaultOptions = {\n                title: messages.title,\n                categories: [\n                    { type: \"number\", name: messages.categories.number },\n                    { type: \"currency\", name: messages.categories.currency },\n                    { type: \"date\", name: messages.categories.date }\n                ]\n            };\n\n            SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n\n            this._generateFormats();\n        },\n        options: {\n            className: \"k-spreadsheet-format-cells\",\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-edit-form-container'><div class='k-root-tabs' data-${kendo.htmlEncode(data.ns)}role='tabstrip' data-${kendo.htmlEncode(data.ns)}text-field='name' data-${kendo.htmlEncode(data.ns)}bind='source: categories, value: categoryFilter' data-${kendo.htmlEncode(data.ns)}animation='false'></div>\n    <div class='k-spreadsheet-preview' data-${kendo.htmlEncode(data.ns)}bind='text: preview'></div><select data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-format-filter' data-${kendo.htmlEncode(data.ns)}text-field='description' data-${kendo.htmlEncode(data.ns)}value-field='value.name' data-${kendo.htmlEncode(data.ns)}bind='visible: showCurrencyFilter, value: currency, source: currencies'></select><ul data-${kendo.htmlEncode(data.ns)}role='staticlist' tabindex='0' id='formats-list' aria-label='formats list' class='k-list k-reset' bind:data-${kendo.htmlEncode(data.ns)}template='formatItemTemplate' data-${kendo.htmlEncode(data.ns)}value-primitive='true' data-${kendo.htmlEncode(data.ns)}value-field='value' data-${kendo.htmlEncode(data.ns)}bind='source: formats, value: format'></ul>\n    <div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span class='k-button-text'>${kendo.htmlEncode(data.messages.apply)}</span></button><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-${kendo.htmlEncode(data.ns)}bind='click: close'><span class='k-button-text'>${kendo.htmlEncode(data.messages.cancel)}</span></button></div>\n</div>`;\n                return $kendoOutput;\n            }\n        },\n        _generateFormats: function() {\n            var options = this.options;\n\n            if (!options.currencies) {\n                options.currencies = FormatCellsDialog.currenciesFrom(kendo.cultures);\n            }\n\n            if (!options.numberFormats) {\n                options.numberFormats = [\n                    { value: \"#.00%\", name: \"100.00%\" },\n                    { value: \"#%\", name: \"100%\" },\n                    { value: \"#.00\", name: \"1024.00\" },\n                    { value: \"#,###.00\", name: \"1,024.00\" }\n                ];\n            }\n\n            if (!options.dateFormats) {\n                var calendarPatterns = kendo.cultures.current.calendars.standard.patterns;\n\n                options.dateFormats = uniqueBy(\"value\", $.map(calendarPatterns, function(format) {\n                    format = FormatCellsViewModel.convert.date(format);\n\n                    if (!format) {\n                        return;\n                    }\n\n                    return { value: format, name: formattedValue(34567.7678, format) };\n                }));\n            }\n        },\n        open: function(range) {\n            var options = this.options;\n            var value = range.value();\n            var categories = options.categories.slice(0);\n            var element;\n\n            this.viewModel = new FormatCellsViewModel({\n                currencies: options.currencies.slice(0),\n                allFormats: {\n                    numberFormats: options.numberFormats.slice(0),\n                    dateFormats: options.dateFormats.slice(0)\n                },\n                categories: categories,\n                format: range.format(),\n                category: value instanceof Date ? categories[2] : categories[0],\n                apply: this.apply.bind(this),\n                close: this.close.bind(this),\n                value: value,\n                formatItemTemplate: (data) => kendo.htmlEncode(data.name)\n            });\n\n            SpreadsheetDialog.fn.open.call(this);\n\n            element = this.dialog().element;\n\n            kendo.bind(element, this.viewModel);\n\n            var currencyFilter = element.find(\"select.k-format-filter\").data(\"kendoDropDownList\");\n\n            if (options.currencies.length > 10) {\n                currencyFilter.setOptions({ filter: \"contains\" });\n            }\n\n            element.find(kendo.roleSelector(\"staticlist\")).parent().addClass(\"k-list-wrapper\");\n\n            element.find(\".k-tabstrip-item\").attr(\"aria-controls\", \"formats-list\");\n        },\n        apply: function() {\n            var format = this.viewModel.format;\n\n            SpreadsheetDialog.fn.apply.call(this);\n\n            this.trigger(\"action\", {\n                command: \"PropertyChangeCommand\",\n                options: {\n                    property: \"format\",\n                    value: format\n                }\n            });\n        }\n    });\n\n    FormatCellsDialog.currenciesFrom = function (cultures) {\n        return uniqueBy(\"description\", $.map(cultures, function(culture, name) {\n            if (!(/-/).test(name)) {\n                return;\n            }\n\n            var currency = culture.numberFormat.currency;\n            var description = kendo.format(\n                \"{0} ({1}, {2})\",\n                currency.name,\n                currency.abbr,\n                currency.symbol\n            );\n\n            return { description: description, value: currency };\n        }));\n    };\n\n    kendo.spreadsheet.dialogs.register(\"formatCells\", FormatCellsDialog);\n\n    kendo.spreadsheet.dialogs.FormatCellsDialog = FormatCellsDialog;\n\n    var MessageDialog = SpreadsheetDialog.extend({\n        options: {\n            className: \"k-spreadsheet-message\",\n            title: \"\",\n            messageId: \"\",\n            text: \"\",\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-spreadsheet-message-content' data-${kendo.htmlEncode(data.ns)}bind='text: text'></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: close'><span\n            class='k-button-text'>${data.messages.okText}</span></button></div>`;\n                return $kendoOutput;\n            }\n        },\n        open: function() {\n            SpreadsheetDialog.fn.open.call(this);\n\n            var options = this.options;\n            var text = options.text;\n\n            if (options.messageId) {\n                text = kendo.getter(options.messageId, true)(kendo.spreadsheet.messages.dialogs);\n            }\n\n            kendo.bind(this.dialog().element, {\n                text: text,\n                close: this.close.bind(this)\n            });\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"message\", MessageDialog);\n\n    var ConfirmationDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.confirmationDialog || MESSAGES;\n            var defaultOptions = {\n                title: messages.title,\n                text: messages.text\n            };\n\n            SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n        },\n        options: {\n            className: \"k-spreadsheet-message\",\n            messageId: \"\",\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-spreadsheet-message-content' data-${kendo.htmlEncode(data.ns)}bind='text: text'></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: confirm'><span\n            class='k-button-text'>${data.messages.okText}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n            class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                return $kendoOutput;\n            }\n        },\n        open: function() {\n            SpreadsheetDialog.fn.open.call(this);\n\n            var options = this.options;\n            var text = options.text;\n\n            if (options.messageId) {\n                text = kendo.getter(options.messageId, true)(kendo.spreadsheet.messages.dialogs);\n            }\n\n            kendo.bind(this.dialog().element, {\n                text: text,\n                confirm: this.confirm.bind(this),\n                cancel: this.close.bind(this)\n            });\n        },\n        isConfirmed: function() {\n            return this._confirmed;\n        },\n        confirm: function() {\n            this._confirmed = true;\n            this.close();\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"confirmation\", ConfirmationDialog);\n\n    var ValidationErrorDialog = SpreadsheetDialog.extend({\n        options: {\n            className: \"k-spreadsheet-message\",\n            title: \"\",\n            messageId: \"\",\n            text: \"\",\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-spreadsheet-message-content' data-${kendo.htmlEncode(data.ns)}bind='text: text'></div><div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-${kendo.htmlEncode(data.ns)}bind='click: retry'><span class='k-button-text'>${data.messages.retry}</span></button><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                return $kendoOutput;\n            }\n        },\n        open: function() {\n            SpreadsheetDialog.fn.open.call(this);\n\n            var options = this.options;\n            var text = options.text;\n\n            if (options.messageId) {\n                text = kendo.getter(options.messageId, true)(kendo.spreadsheet.messages.dialogs);\n            }\n\n            kendo.bind(this.dialog().element, {\n                text: text,\n                retry: this.retry.bind(this),\n                cancel: this.close.bind(this)\n            });\n        },\n        retry: function() {\n            this._retry = true;\n            this.close();\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"validationError\", ValidationErrorDialog);\n\n    var FontFamilyDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.fontFamilyDialog || MESSAGES;\n\n            SpreadsheetDialog.fn.init.call(this, $.extend({ title: messages.title }, options));\n\n            this._list();\n        },\n        options: {\n            template: () => \"<ul class='k-list k-reset'></ul>\"\n        },\n        _list: function() {\n            var ul = this.dialog().element.find(\"ul\");\n            var fonts = this.options.options;\n            var defaultFont = this.options.default;\n\n            this.list = new kendo.ui.StaticList(ul, {\n                dataSource: new kendo.data.DataSource({ data: fonts }),\n                template: (data) => kendo.htmlEncode(data),\n                value: defaultFont,\n                change: this.apply.bind(this)\n            });\n\n            this.list.dataSource.fetch();\n        },\n        apply: function(e) {\n            SpreadsheetDialog.fn.apply.call(this);\n\n            this.trigger(\"action\", {\n                command: \"PropertyChangeCommand\",\n                options: {\n                    property: \"fontFamily\",\n                    value: e.sender.value()[0]\n                }\n            });\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"fontFamily\", FontFamilyDialog);\n\n    var FontSizeDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.fontSizeDialog || MESSAGES;\n\n            SpreadsheetDialog.fn.init.call(this, $.extend({ title: messages.title }, options));\n\n            this._list();\n        },\n        options: {\n            template: () => \"<ul class='k-list k-reset'></ul>\"\n        },\n        _list: function() {\n            var ul = this.dialog().element.find(\"ul\");\n            var sizes = this.options.options;\n            var defaultSize = this.options.default;\n\n            this.list = new kendo.ui.StaticList(ul, {\n                dataSource: new kendo.data.DataSource({ data: sizes }),\n                template: (data) => kendo.htmlEncode(data),\n                value: defaultSize,\n                change: this.apply.bind(this)\n            });\n\n            this.list.dataSource.fetch();\n        },\n        apply: function(e) {\n            SpreadsheetDialog.fn.apply.call(this);\n\n            this.trigger(\"action\", {\n                command: \"PropertyChangeCommand\",\n                options: {\n                    property: \"fontSize\",\n                    value: kendo.parseInt(e.sender.value()[0])\n                }\n            });\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"fontSize\", FontSizeDialog);\n\n    var BordersDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.bordersDialog || MESSAGES;\n\n            SpreadsheetDialog.fn.init.call(this, $.extend({ title: messages.title }, options));\n\n            this.element = this.dialog().element;\n            this._borderPalette();\n\n            this.viewModel = kendo.observable({\n                apply: this.apply.bind(this),\n                close: this.close.bind(this)\n            });\n\n            kendo.bind(this.element.find(\".k-actions\"), this.viewModel);\n        },\n        options: {\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.apply)}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: close'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.cancel)}</span></button></div>`;\n                return $kendoOutput;\n            }\n        },\n        apply: function() {\n            SpreadsheetDialog.fn.apply.call(this);\n\n            var state = this.borderPalette.value();\n\n            if (state.color && state.type) {\n                this.trigger(\"action\", {\n                    command: \"BorderChangeCommand\",\n                    options: {\n                        border: state.type,\n                        style: { size: 1, color: state.color }\n                    }\n                });\n            }\n        },\n        _borderPalette: function() {\n            var element = this.dialog().element.find(\"div\").first();\n\n            this.borderPalette = new kendo.spreadsheet.BorderPalette(element, {\n                change: this.value.bind(this)\n            });\n        },\n        value: function(state) {\n            if (state === undefined) {\n                return this._state;\n            } else {\n                this._state = state;\n            }\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"borders\", BordersDialog);\n\n    var ColorChooser = SpreadsheetDialog.extend({\n        init: function(options) {\n            SpreadsheetDialog.fn.init.call(this, options);\n\n            this.element = this.dialog().element;\n            this.property = options.property;\n            this.options.title = options.title;\n\n            this.viewModel = kendo.observable({\n                apply: this.apply.bind(this),\n                close: this.close.bind(this)\n            });\n\n            kendo.bind(this.element.find(\".k-actions\"), this.viewModel);\n        },\n        options: {\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.apply)}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: close'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.cancel)}</span></button></div>`;\n                return $kendoOutput;\n            }\n        },\n        apply: function() {\n            SpreadsheetDialog.fn.apply.call(this);\n\n            this.trigger(\"action\", {\n                command: \"PropertyChangeCommand\",\n                options: {\n                    property: this.property,\n                    value: this.value()\n                }\n            });\n        },\n        value: function(e) {\n            if (e === undefined) {\n                return this._value;\n            } else {\n                this._value = e.value;\n            }\n        }\n    });\n\n    var ColorPickerDialog = ColorChooser.extend({\n        init: function(options) {\n            options.width = 177;\n            ColorChooser.fn.init.call(this, options);\n            this._colorPalette();\n        },\n        _colorPalette: function() {\n            var element = this.dialog().element.find(\"div\").first();\n            this.colorPalette = element.kendoColorPalette({\n                palette: [ //metro palette\n                    \"#ffffff\", \"#000000\", \"#d6ecff\", \"#4e5b6f\", \"#7fd13b\", \"#ea157a\", \"#feb80a\", \"#00addc\", \"#738ac8\", \"#1ab39f\",\n                    \"#f2f2f2\", \"#7f7f7f\", \"#a7d6ff\", \"#d9dde4\", \"#e5f5d7\", \"#fad0e4\", \"#fef0cd\", \"#c5f2ff\", \"#e2e7f4\", \"#c9f7f1\",\n                    \"#d8d8d8\", \"#595959\", \"#60b5ff\", \"#b3bcca\", \"#cbecb0\", \"#f6a1c9\", \"#fee29c\", \"#8be6ff\", \"#c7d0e9\", \"#94efe3\",\n                    \"#bfbfbf\", \"#3f3f3f\", \"#007dea\", \"#8d9baf\", \"#b2e389\", \"#f272af\", \"#fed46b\", \"#51d9ff\", \"#aab8de\", \"#5fe7d5\",\n                    \"#a5a5a5\", \"#262626\", \"#003e75\", \"#3a4453\", \"#5ea226\", \"#af0f5b\", \"#c58c00\", \"#0081a5\", \"#425ea9\", \"#138677\",\n                    \"#7f7f7f\", \"#0c0c0c\", \"#00192e\", \"#272d37\", \"#3f6c19\", \"#750a3d\", \"#835d00\", \"#00566e\", \"#2c3f71\", \"#0c594f\"\n                ],\n                change: this.value.bind(this)\n            }).data(\"kendoColorPalette\");\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"colorPicker\", ColorPickerDialog);\n\n    var CustomColorDialog = ColorChooser.extend({\n        init: function(options) {\n            options.width = 268;\n            ColorChooser.fn.init.call(this, options);\n            this.dialog().setOptions({ animation: false });\n            this.dialog().one(\"activate\", this._colorPicker.bind(this));\n        },\n        _colorPicker: function() {\n            var element = this.dialog().element.find(\"div\").first();\n            this.colorPicker = element.kendoFlatColorPicker({\n                change: this.value.bind(this)\n            }).data(\"kendoFlatColorPicker\");\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"customColor\", CustomColorDialog);\n\n    var AlignmentDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.alignmentDialog || MESSAGES;\n            var defaultOptions = {\n                title: messages.title,\n                buttons: [\n                    { property: \"textAlign\",     value: \"left\",    iconClass: \"align-left\",   text: messages.buttons.justifyLeft },\n                    { property: \"textAlign\",     value: \"center\",  iconClass: \"align-center\", text: messages.buttons.justifyCenter },\n                    { property: \"textAlign\",     value: \"right\",   iconClass: \"align-right\",  text: messages.buttons.justifyRight },\n                    { property: \"textAlign\",     value: \"justify\", iconClass: \"align-justify\",   text: messages.buttons.justifyFull },\n                    { property: \"verticalAlign\", value: \"top\",     iconClass: \"align-top\",      text: messages.buttons.alignTop },\n                    { property: \"verticalAlign\", value: \"center\",  iconClass: \"align-middle\",   text: messages.buttons.alignMiddle },\n                    { property: \"verticalAlign\", value: \"bottom\",  iconClass: \"align-bottom\",   text: messages.buttons.alignBottom }\n                ]\n            };\n\n            SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n\n            this._list();\n        },\n        options: {\n            template: () => \"<ul class='k-list k-reset'></ul>\"\n        },\n        _list: function() {\n            var ul = this.dialog().element.find(\"ul\");\n\n            this.list = new kendo.ui.StaticList(ul, {\n                dataSource: new kendo.data.DataSource({ data: this.options.buttons }),\n                template: (data) => `<a role='button' title='${data.text}' data-property='${data.property}' data-value='${data.value}'>\n                                ${kendo.ui.icon(data.iconClass)} ${data.text}\n                           </a>`,\n                change: this.apply.bind(this)\n            });\n\n            this.list.dataSource.fetch();\n        },\n        apply: function(e) {\n            var dataItem = e.sender.value()[0];\n            SpreadsheetDialog.fn.apply.call(this);\n\n            this.trigger(\"action\", {\n                command: \"PropertyChangeCommand\",\n                options: {\n                    property: dataItem.property,\n                    value: dataItem.value\n                }\n            });\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"alignment\", AlignmentDialog);\n\n    var MergeDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.mergeDialog || MESSAGES;\n            var defaultOptions = {\n                title: messages.title,\n                buttons: [\n                    { value: \"cells\",        iconClass: \"cells-merge\",        text: messages.buttons.mergeCells },\n                    { value: \"horizontally\", iconClass: \"cells-merge-horizontally\", text: messages.buttons.mergeHorizontally },\n                    { value: \"vertically\",   iconClass: \"cells-merge-vertically\",   text: messages.buttons.mergeVertically },\n                    { value: \"unmerge\",      iconClass: \"table-unmerge\",      text: messages.buttons.unmerge }\n                ]\n            };\n\n            SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n\n            this._list();\n        },\n        options: {\n            template: () => \"<ul class='k-list k-reset'></ul>\"\n        },\n        _list: function() {\n            var ul = this.dialog().element.find(\"ul\");\n\n            this.list = new kendo.ui.StaticList(ul, {\n                dataSource: new kendo.data.DataSource({ data: this.options.buttons }),\n                template: (data) => `<a role='button' title='${data.text}' data-value='${data.value}'>` +\n                            `${kendo.ui.icon(data.iconClass)}${data.text}` +\n                          \"</a>\",\n                change: this.apply.bind(this)\n            });\n\n            this.list.dataSource.fetch();\n        },\n        apply: function(e) {\n            var dataItem = e.sender.value()[0];\n            SpreadsheetDialog.fn.apply.call(this);\n\n            this.trigger(\"action\", {\n                command: \"MergeCellCommand\",\n                options: {\n                    value: dataItem.value\n                }\n            });\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"merge\", MergeDialog);\n\n    var FreezeDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.freezeDialog || MESSAGES;\n            var defaultOptions = {\n                title: messages.title,\n                buttons: [\n                    { value: \"panes\",    iconClass: \"pane-freeze\",  text: messages.buttons.freezePanes },\n                    { value: \"rows\",     iconClass: \"row-freeze\",    text: messages.buttons.freezeRows },\n                    { value: \"columns\",  iconClass: \"column-freeze\",    text: messages.buttons.freezeColumns },\n                    { value: \"unfreeze\", iconClass: \"table-unmerge\", text: messages.buttons.unfreeze }\n                ]\n            };\n\n            SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n\n            this._list();\n        },\n        options: {\n            template: () => \"<ul class='k-list k-reset'></ul>\"\n        },\n        _list: function() {\n            var ul = this.dialog().element.find(\"ul\");\n\n            this.list = new kendo.ui.StaticList(ul, {\n                dataSource: new kendo.data.DataSource({ data: this.options.buttons }),\n                template: (data) => `<a role='button' title='${data.text}' data-value='${data.value}'>` +\n                            `${kendo.ui.icon(data.iconClass)}${data.text}` +\n                          \"</a>\",\n                change: this.apply.bind(this)\n            });\n\n            this.list.dataSource.fetch();\n        },\n        apply: function(e) {\n            var dataItem = e.sender.value()[0];\n            SpreadsheetDialog.fn.apply.call(this);\n\n            this.trigger(\"action\", {\n                command: \"FreezePanesCommand\",\n                options: {\n                    value: dataItem.value\n                }\n            });\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"freeze\", FreezeDialog);\n\n    var ValidationViewModel = kendo.spreadsheet.ValidationCellsViewModel = ObservableObject.extend({\n        init: function(options) {\n            ObservableObject.fn.init.call(this, options);\n\n            this.bind(\"change\", (function(e) {\n\n                if (e.field === \"criterion\") {\n                    this.reset();\n\n                    if (this.criterion === \"custom\" || this.criterion === \"list\") {\n                        this.setHintMessageTemplate();\n                    }\n                }\n\n                if (e.field === \"comparer\") {\n                    this.setHintMessageTemplate();\n                }\n\n                if ((e.field == \"hintMessage\" || e.field == \"hintTitle\") && !this._mute) {\n                    this.shouldBuild = false;\n                }\n\n                if ((e.field == \"from\" || e.field == \"to\" || e.field == \"hintMessageTemplate\" || e.field == \"type\") && this.shouldBuild) {\n                    this.buildMessages();\n                }\n            }).bind(this));\n\n            this.reset();\n        },\n        buildMessages: function() {\n            this._mute = true;\n            this.set(\"hintTitle\", this.hintTitleTemplate ? kendo.format(this.hintTitleTemplate, this.type) : \"\");\n            this.set(\"hintMessage\", this.hintMessageTemplate ? kendo.format(this.hintMessageTemplate, this.from, this.to) : \"\");\n            this._mute = false;\n        },\n        reset: function() {\n            this.setComparers();\n            this.set(\"comparer\", this.comparers[0].type);\n            this.set(\"from\", null);\n            this.set(\"to\", null);\n\n            this.set(\"useCustomMessages\", false);\n\n            this.shouldBuild = true;\n\n            this.hintTitleTemplate = this.defaultHintTitle;\n            this.buildMessages();\n        },\n        //TODO: refactor\n        setComparers: function() {\n            var all = this.defaultComparers;\n            var comparers = [];\n\n            if (this.criterion === \"text\") {\n                var text_comparers = [\"equalTo\", \"notEqualTo\"];\n                for (var idx = 0; idx < all.length; idx++) {\n                    if (text_comparers[0] == all[idx].type) {\n                        comparers.push(all[idx]);\n                        text_comparers.shift();\n                    }\n                }\n            } else {\n                comparers = all.slice();\n            }\n\n            this.set(\"comparers\", comparers);\n        },\n        setHintMessageTemplate: function() {\n           if (this.criterion !== \"custom\" && this.criterion !== \"list\") {\n               this.set(\"hintMessageTemplate\", kendo.format(this.defaultHintMessage, this.criterion, this.comparerMessages[this.comparer]));\n           } else {\n               this.set(\"hintMessageTemplate\", \"\");\n               this.set(\"hintMessage\", \"\");\n           }\n        },\n        isAny: function() {\n            return this.get(\"criterion\") === \"any\";\n        },\n        isNumber: function() {\n            return this.get(\"criterion\") === \"number\";\n        },\n        showToForNumber: function() {\n            return this.showTo() && this.isNumber();\n        },\n        showToForDate: function() {\n            return this.showTo() && this.isDate();\n        },\n        isText: function() {\n            return this.get(\"criterion\") === \"text\";\n        },\n        isDate: function() {\n            return this.get(\"criterion\") === \"date\";\n        },\n        isList: function() {\n            return this.get(\"criterion\") === \"list\";\n        },\n        isCustom: function() {\n            return this.get(\"criterion\") === \"custom\";\n        },\n        showRemove: function() {\n            return this.get(\"hasValidation\");\n        },\n        showTo: function() {\n            return this.get(\"comparer\") == \"between\" || this.get(\"comparer\") == \"notBetween\";\n        },\n        update: function(validation) {\n            this.set(\"hasValidation\", !!validation);\n\n            if (validation) {\n                this.fromValidationObject(validation);\n            }\n        },\n        fromValidationObject: function(validation) {\n            this.set(\"criterion\", validation.dataType);\n            this.set(\"comparer\", validation.comparerType);\n            this.set(\"from\", validation.from);\n            this.set(\"to\", validation.to);\n            this.set(\"type\", validation.type);\n            this.set(\"ignoreBlank\", validation.allowNulls);\n            this.set(\"showButton\", validation.showButton);\n\n            if (validation.messageTemplate || validation.titleTemplate) {\n                this.hintMessageTemplate = validation.messageTemplate;\n                this.hintMessage = validation.messageTemplate;\n                this.hintTitleTemplate = validation.titleTemplate;\n                this.hintTitle = validation.titleTemplate;\n                this.useCustomMessages = true;\n                this.buildMessages();\n            } else {\n                this.useCustomMessages = false;\n            }\n        },\n        toValidationObject: function() {\n            if (this.criterion === \"any\") {\n                return null;\n            }\n\n            var options = {\n                type: this.type,\n                dataType: this.criterion,\n                comparerType: this.comparer,\n                from: this.from,\n                to: this.to,\n                allowNulls: this.ignoreBlank,\n                showButton: this.showButton\n            };\n\n            if (this.useCustomMessages) {\n                options.messageTemplate = this.shouldBuild ? this.hintMessageTemplate : this.hintMessage;\n                options.titleTemplate = this.hintTitle;\n            }\n\n            return options;\n        }\n    });\n\n    var ValidationDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            var messages = kendo.spreadsheet.messages.dialogs.validationDialog || MESSAGES;\n            var defaultOptions = {\n                title: messages.title,\n                hintMessage: messages.hintMessage,\n                hintTitle: messages.hintTitle,\n                criteria: [\n                    { type: \"any\", name: messages.criteria.any },\n                    { type: \"number\", name: messages.criteria.number },\n                    { type: \"text\", name: messages.criteria.text },\n                    { type: \"date\", name: messages.criteria.date },\n                    { type: \"custom\", name: messages.criteria.custom },\n                    { type: \"list\", name: messages.criteria.list }\n                ],\n                comparers: [\n                    { type: \"greaterThan\", name: messages.comparers.greaterThan },\n                    { type: \"lessThan\",    name: messages.comparers.lessThan },\n                    { type: \"between\",     name: messages.comparers.between },\n                    { type: \"notBetween\",  name: messages.comparers.notBetween },\n                    { type: \"equalTo\",     name: messages.comparers.equalTo },\n                    { type: \"notEqualTo\",  name: messages.comparers.notEqualTo },\n                    { type: \"greaterThanOrEqualTo\", name: messages.comparers.greaterThanOrEqualTo },\n                    { type: \"lessThanOrEqualTo\",    name: messages.comparers.lessThanOrEqualTo }\n                ],\n                comparerMessages: messages.comparerMessages\n            };\n\n            SpreadsheetDialog.fn.init.call(this, $.extend(defaultOptions, options));\n        },\n        options: {\n            width: 450,\n            criterion: \"any\",\n            type: \"reject\",\n            ignoreBlank: true,\n            showButton: true,\n            useCustomMessages: false,\n            errorTemplate: (data) =>\n                `<div class=\"k-tooltip k-tooltip-error k-validator-tooltip\">\n                    ${kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-tooltip-icon\" })}\n                    <span class=\"k-tooltip-content\">${data.message}</span>\n                    <span class=\"k-callout k-callout-n\"></span>\n                </div>`,\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class=\"k-edit-form-container\">\n                    <div class=\"k-edit-label\"><label for=\"criteria\">${kendo.htmlEncode(data.messages.validationDialog.labels.criteria)}:</label></div>\n                    <div class=\"k-edit-field\"><select id=\"criteria\" data-${kendo.htmlEncode(data.ns)}role=\"dropdownlist\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.criteria)}\" data-${kendo.htmlEncode(data.ns)}text-field=\"name\" data-${kendo.htmlEncode(data.ns)}value-field=\"type\" data-${kendo.htmlEncode(data.ns)}bind=\"value: criterion, source: criteria\"></select></div>\n                    <div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isNumber\">\n                    <div class=\"k-edit-label\"><label for=\"number-comparer\">${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}:</label></div>\n                    <div class=\"k-edit-field\"><select id=\"number-comparer\" data-${kendo.htmlEncode(data.ns)}role=\"dropdownlist\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}\" data-${kendo.htmlEncode(data.ns)}text-field=\"name\" data-${kendo.htmlEncode(data.ns)}value-field=\"type\" data-${kendo.htmlEncode(data.ns)}bind=\"value: comparer, source: comparers\"></select></div>\n                    <div class=\"k-edit-label\"><label for=\"comparer-min\">${kendo.htmlEncode(data.messages.validationDialog.labels.min)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"comparer-min\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.min)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.min)}\" placeholder=\"e.g. 10\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isNumber\" required=\"required\" /></span></div>\n                    <div data-${kendo.htmlEncode(data.ns)}bind=\"visible: showTo\">\n                    <div class=\"k-edit-label\"><label for=\"comparer-max\">${kendo.htmlEncode(data.messages.validationDialog.labels.max)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"comparer-max\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.max)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.max)}\" placeholder=\"e.g. 100\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: to, enabled: showToForNumber\" required=\"required\" /></span></div>\n                    </div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isText\">\n                    <div class=\"k-edit-label\"><label for=\"text-comparer\">${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}:</label></div>\n                    <div class=\"k-edit-field\"><select id=\"text-comparer\" data-${kendo.htmlEncode(data.ns)}role=\"dropdownlist\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}\" data-${kendo.htmlEncode(data.ns)}text-field=\"name\" data-${kendo.htmlEncode(data.ns)}value-field=\"type\" data-${kendo.htmlEncode(data.ns)}bind=\"value: comparer, source: comparers\"></select></div>\n                    <div class=\"k-edit-label\"><label for=\"text-comparer-value\">${kendo.htmlEncode(data.messages.validationDialog.labels.value)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"text-comparer-value\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isText\" required=\"required\" /></span></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isDate\">\n                    <div class=\"k-edit-label\"><label for=\"date-comparer\">${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}:</label></div>\n                    <div class=\"k-edit-field\"><select id=\"date-comparer\" data-${kendo.htmlEncode(data.ns)}role=\"dropdownlist\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.comparer)}\" data-${kendo.htmlEncode(data.ns)}text-field=\"name\" data-${kendo.htmlEncode(data.ns)}value-field=\"type\" data-${kendo.htmlEncode(data.ns)}bind=\"value: comparer, source: comparers\"></select></div>\n                    <div class=\"k-edit-label\"><label for=\"date-comparer-start\">${kendo.htmlEncode(data.messages.validationDialog.labels.start)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"date-comparer-start\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.start)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.start)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isDate\" required=\"required\" /></span></div>\n                    <div data-${kendo.htmlEncode(data.ns)}bind=\"visible: showTo\">\n                    <div class=\"k-edit-label\"><label for=\"date-comparer-end\">${kendo.htmlEncode(data.messages.validationDialog.labels.end)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"date-comparer-end\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.end)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.end)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: to, enabled: showToForDate\" required=\"required\" /></span></div>\n                    </div></div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isCustom\">\n                    <div class=\"k-edit-label\"><label for=\"custom-comparer-value\">${kendo.htmlEncode(data.messages.validationDialog.labels.value)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"custom-comparer-value\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isCustom\" required=\"required\" /></span></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isList\">\n                    <div class=\"k-edit-label\"><label for=\"list-comparer-value\">${kendo.htmlEncode(data.messages.validationDialog.labels.value)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"list-comparer-value\" name=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.value)}\" class=\"k-input-inner\" data-${kendo.htmlEncode(data.ns)}bind=\"value: from, enabled: isList\" required=\"required\" /></span></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isList\">\n                    <div class=\"k-edit-field\"><input type=\"checkbox\" name=\"showButton\" id=\"listShowButton\" class=\"k-checkbox k-checkbox-md k-rounded-md\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: showButton\" /><label for=\"listShowButton\" class=\"k-checkbox-label\"> ${kendo.htmlEncode(data.messages.validationDialog.labels.showListButton)}</label></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"visible: isDate\">\n                    <div class=\"k-edit-field\"><input type=\"checkbox\" name=\"showButton\" id=\"dateShowButton\" class=\"k-checkbox k-checkbox-md k-rounded-md\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: showButton\" /><label for=\"dateShowButton\" class=\"k-checkbox-label\"> ${kendo.htmlEncode(data.messages.validationDialog.labels.showCalendarButton)}</label></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"invisible: isAny\">\n                    <div class=\"k-edit-field\"><input type=\"checkbox\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.ignoreBlank)}\" name=\"ignoreBlank\" id=\"ignoreBlank\" class=\"k-checkbox k-checkbox-md k-rounded-md\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: ignoreBlank\" /><label for=\"ignoreBlank\" class=\"k-checkbox-label\"> ${kendo.htmlEncode(data.messages.validationDialog.labels.ignoreBlank)}</label></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"invisible: isAny\">\n                    <div class=\"k-hr\"></div>\n                    <div class=\"k-edit-label\"><label>${kendo.htmlEncode(data.messages.validationDialog.labels.onInvalidData)}:</label></div>\n                    <div class=\"k-edit-field\"><input type=\"radio\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.rejectInput)}\" id=\"validationTypeReject\" name=\"validationType\" value=\"reject\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: type\" class=\"k-radio k-radio-md\" /><label for=\"validationTypeReject\" class=\"k-radio-label\">${kendo.htmlEncode(data.messages.validationDialog.labels.rejectInput)}</label> <input type=\"radio\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.showWarning)}\" id=\"validationTypeWarning\" name=\"validationType\" value=\"warning\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: type\" class=\"k-radio k-radio-md\" /><label for=\"validationTypeWarning\" class=\"k-radio-label\">${kendo.htmlEncode(data.messages.validationDialog.labels.showWarning)}</label></div>\n                    </div><div data-${kendo.htmlEncode(data.ns)}bind=\"invisible: isAny\" class=\"hint-wrapper\">\n                    <div class=\"k-edit-field\"><input type=\"checkbox\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.showHint)}\" name=\"useCustomMessages\" id=\"useCustomMessages\" class=\"k-checkbox k-checkbox-md k-rounded-md\" data-${kendo.htmlEncode(data.ns)}bind=\"checked: useCustomMessages\" /><label class=\"k-checkbox-label\" for=\"useCustomMessages\"> ${kendo.htmlEncode(data.messages.validationDialog.labels.showHint)}</label></div>\n                    <div data-${kendo.htmlEncode(data.ns)}bind=\"visible: useCustomMessages\">\n                    <div class=\"k-edit-label\"><label for=\"hint-title\">${kendo.htmlEncode(data.messages.validationDialog.labels.hintTitle)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"hint-title\" name=\"hint-title\" class=\"k-input-inner\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.hintTitle)}\" placeholder=\"${kendo.htmlEncode(data.messages.validationDialog.placeholders.typeTitle)}\" data-${kendo.htmlEncode(data.ns)}bind=\"value: hintTitle\" /></span></div>\n                    <div class=\"k-edit-label\"><label for=\"hint-message\">${kendo.htmlEncode(data.messages.validationDialog.labels.hintMessage)}:</label></div>\n                    <div class=\"k-edit-field\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input id=\"hint-message\" class=\"k-input-inner\" title=\"${kendo.htmlEncode(data.messages.validationDialog.labels.hintMessage)}\" placeholder=\"${kendo.htmlEncode(data.messages.validationDialog.placeholders.typeMessage)}\" data-${kendo.htmlEncode(data.ns)}bind=\"value: hintMessage\" /></span></div>\n                    </div></div>\n                    <div class=\"k-actions\"><button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" data-${kendo.htmlEncode(data.ns)}bind=\"visible: showRemove, click: remove\"><span class=\"k-button-text\">${kendo.htmlEncode(data.messages.remove)}</span></button><button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\" data-${kendo.htmlEncode(data.ns)}bind=\"click: apply\"><span class=\"k-button-text\">${kendo.htmlEncode(data.messages.apply)}</span></button><button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" data-${kendo.htmlEncode(data.ns)}bind=\"click: close\"><span class=\"k-button-text\">${kendo.htmlEncode(data.messages.cancel)}</span></button></div>\n                    </div>`;\n                return $kendoOutput;\n            }\n        },\n        open: function(range) {\n            var options = this.options;\n            var element;\n\n            this.viewModel = new ValidationViewModel({\n                type: options.type,\n                defaultHintMessage: options.hintMessage,\n                defaultHintTitle: options.hintTitle,\n                defaultComparers: options.comparers.slice(0),\n                comparerMessages: options.comparerMessages,\n                criteria: options.criteria.slice(0),\n                criterion: options.criterion,\n                ignoreBlank: options.ignoreBlank,\n                showButton: options.showButton,\n                apply: this.apply.bind(this),\n                close: this.close.bind(this),\n                remove: this.remove.bind(this)\n            });\n\n            this.viewModel.update(range.validation());\n\n            SpreadsheetDialog.fn.open.call(this);\n\n            element = this.dialog().element;\n\n            if (this.validatable) {\n                this.validatable.destroy();\n            }\n\n            kendo.bind(element, this.viewModel);\n\n            this.validatable = new kendo.ui.Validator(element.find(\".k-edit-form-container\"), {\n                validateOnBlur: false,\n                errorTemplate: this.options.errorTemplate || undefined\n            });\n        },\n        apply: function() {\n\n            if (this.validatable.validate()) {\n                SpreadsheetDialog.fn.apply.call(this);\n\n                this.trigger(\"action\", {\n                    command: \"EditValidationCommand\",\n                    options: {\n                        value: this.viewModel.toValidationObject()\n                    }\n                });\n            }\n        },\n        remove: function() {\n            this.viewModel.set(\"criterion\", \"any\");\n            this.apply();\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"validation\", ValidationDialog);\n    kendo.spreadsheet.dialogs.ValidationDialog = ValidationDialog;\n\n    function PDF_PAPER_SIZE(size) {\n        return {\n            value: size,\n            text: TEXT(\"exportAsDialog.pdf.paper.\" + size)\n        };\n    }\n\n    var ExportAsDialog = SpreadsheetDialog.extend({\n        init: function(options) {\n            SpreadsheetDialog.fn.init.call(this, options);\n            options = this.options;\n\n            this.viewModel = kendo.observable({\n                title: options.title,\n                name: options.name,\n                extension: options.extension,\n                fileFormats:options.fileFormats,\n                excel: options.excelExport,\n                pdf: {\n                    proxyURL: options.pdfExport.proxyURL,\n                    forceProxy: options.pdfExport.forceProxy,\n                    title: options.pdfExport.title,\n                    author: options.pdfExport.author,\n                    autoPrint: options.pdfExport.autoPrint,\n                    subject: options.pdfExport.subject,\n                    keywords: options.pdfExport.keywords,\n                    creator: options.pdfExport.creator,\n                    date: options.pdfExport.date,\n\n                    fitWidth: options.pdf.fitWidth,\n                    area: options.pdf.area,\n                    areas: options.pdf.areas,\n                    paperSize: options.pdf.paperSize,\n                    paperSizes: options.pdf.paperSizes,\n                    margin: options.pdf.margin,\n                    margins: options.pdf.margins,\n                    landscape: options.pdf.landscape,\n                    guidelines: options.pdf.guidelines,\n                    hCenter: options.pdf.hCenter,\n                    vCenter: options.pdf.vCenter\n                },\n                apply: this.apply.bind(this),\n                close: this.close.bind(this)\n            });\n\n            var dialog = this.dialog();\n            this.viewModel.bind(\"change\", function(e) {\n                if (e.field === \"extension\") {\n                    this.set(\"showPdfOptions\", this.extension === \".pdf\" ? true : false);\n                    dialog.center();\n                }\n            });\n\n            kendo.bind(dialog.element, this.viewModel);\n        },\n        options: {\n            title: TEXT(\"exportAsDialog.title\", \"Export...\"),\n            name: TEXT(\"exportAsDialog.defaultFileName\", \"Workbook\"),\n            extension: \".xlsx\",\n            fileFormats: [{\n                description: TEXT(\"exportAsDialog.xlsx.description\", \"Excel Workbook (.xlsx)\"),\n                extension: \".xlsx\"\n            }, {\n                description: TEXT(\"exportAsDialog.pdf.description\", \"Portable Document Format (.pdf)\"),\n                extension: \".pdf\"\n            }],\n            pdf: {\n                fitWidth: true,\n                area: \"workbook\",\n                areas: [{\n                    area: \"workbook\",\n                    text: TEXT(\"exportAsDialog.pdf.area.workbook\", \"Entire Workbook\")\n                },{\n                    area: \"sheet\",\n                    text: TEXT(\"exportAsDialog.pdf.area.sheet\", \"Active Sheet\")\n                },{\n                    area: \"selection\",\n                    text: TEXT(\"exportAsDialog.pdf.area.selection\", \"Selection\")\n                }],\n                paperSize: \"a4\",\n                paperSizes: [\n                    \"a2\", \"a3\", \"a4\", \"a5\", \"b3\", \"b4\", \"b5\", \"folio\", \"legal\", \"letter\", \"tabloid\", \"executive\"\n                ].map(PDF_PAPER_SIZE),\n                margin: {bottom: \"0.75in\", left: \"0.7in\", right: \"0.7in\", top: \"0.75in\"},\n                margins: [\n                    { value: { bottom: \"0.75in\", left: \"0.7in\", right: \"0.7in\", top: \"0.75in\" },\n                      text: TEXT(\"exportAsDialog.pdf.margin.normal\", \"Normal\")\n                    },\n                    { value: { bottom: \"0.75in\", left: \"0.25in\", right: \"0.25in\", top: \"0.75in\" },\n                      text: TEXT(\"exportAsDialog.pdf.margin.narrow\", \"Narrow\")\n                    },\n                    { value: { bottom: \"1in\", left: \"1in\", right: \"1in\", top: \"1in\" },\n                      text: TEXT(\"exportAsDialog.pdf.margin.wide\", \"Wide\")\n                    }\n                ],\n                landscape: true,\n                guidelines: true,\n                hCenter: true,\n                vCenter: true\n            },\n            width: 520,\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-edit-label'><label id='name-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.fileName)}:</label></div>\n                    <div class='k-edit-field'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input aria-labelledby='name-label' class='k-input-inner' data-${kendo.htmlEncode(data.ns)}bind='value: name' /></span></div>\n                    <div >\n                       <div class='k-edit-label'><label id='file-format-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.saveAsType)}:</label></div>\n                       <div class='k-edit-field'><select aria-labelledby='file-format-label' data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-file-format' data-${kendo.htmlEncode(data.ns)}text-field='description' data-${kendo.htmlEncode(data.ns)}value-field='extension' data-${kendo.htmlEncode(data.ns)}bind='value: extension, source: fileFormats'></select></div>\n                    </div>\n                    <div class='k-export-config' data-${kendo.htmlEncode(data.ns)}bind='visible: showPdfOptions'>\n                    <hr class='k-hr' />\n                    <div class='k-edit-label'><label id='export-area-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.exportArea)}:</label></div>\n                    <div class='k-edit-field'><select aria-labelledby='export-area-label' data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-file-format' data-${kendo.htmlEncode(data.ns)}text-field='text' data-${kendo.htmlEncode(data.ns)}value-field='area' data-${kendo.htmlEncode(data.ns)}bind='value: pdf.area, source: pdf.areas'></select></div>\n                    <div class='k-edit-label'><label id='paper-size-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.paperSize)}:</label></div>\n                    <div class='k-edit-field'><select aria-labelledby='paper-size-label' data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-file-format' data-${kendo.htmlEncode(data.ns)}text-field='text' data-${kendo.htmlEncode(data.ns)}value-field='value' data-${kendo.htmlEncode(data.ns)}bind='value: pdf.paperSize, source: pdf.paperSizes'></select></div>\n                    <div class='k-edit-label'><label id='margins-label'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.margins)}:</label></div>\n                    <div class='k-edit-field'><select aria-labelledby='margins-label' data-${kendo.htmlEncode(data.ns)}role='dropdownlist' class='k-file-format' data-${kendo.htmlEncode(data.ns)}value-primitive='true'data-${kendo.htmlEncode(data.ns)}text-field='text' data-${kendo.htmlEncode(data.ns)}value-field='value' data-${kendo.htmlEncode(data.ns)}bind='value: pdf.margin, source: pdf.margins'></select></div>\n                    <div class='k-edit-label'><label>${kendo.htmlEncode(data.messages.exportAsDialog.labels.orientation)}:</label></div>\n                    <div class='k-edit-field'>\n                       <div class='k-button-group'>\n                          <input type='radio' id='k-orientation-portrait' aria-label='orientation portrait' name='orientation' data-${kendo.htmlEncode(data.ns)}type='boolean' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.landscape' value='false' />\n                          <label class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-group-start k-orientation-button' for='k-orientation-portrait'>\n                          ${kendo.ui.icon({ icon: \"file\", iconClass: \"k-button-icon\" })}\n                          </label>\n                          <input type='radio' id='k-orientation-landscape' aria-label='orientation landscape' name='orientation' data-${kendo.htmlEncode(data.ns)}type='boolean' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.landscape' value='true' />\n                          <label class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-group-end k-orientation-button' for='k-orientation-landscape'>\n                          ${kendo.ui.icon({ icon: \"file-horizontal\", iconClass: \"k-button-icon\" })}\n                          </label>\n                       </div>\n                    </div>\n                    <div class='k-edit-label'><label>${kendo.htmlEncode(data.messages.exportAsDialog.labels.print)}:</label></div>\n                    <div class='k-edit-field'><input class='k-checkbox k-checkbox-md k-rounded-md' id='guidelines' type='checkbox' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.guidelines'/><label class='k-checkbox-label' for='guidelines'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.guidelines)}</label></div>\n                    <div class='k-edit-label'><label>${kendo.htmlEncode(data.messages.exportAsDialog.labels.scale)}:</label></div>\n                    <div class='k-edit-field'><input class='k-checkbox k-checkbox-md k-rounded-md' id='fitWidth' type='checkbox' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.fitWidth'/><label class='k-checkbox-label' for='fitWidth'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.fit)}</label></div>\n                    <div class='k-edit-label'><label>${kendo.htmlEncode(data.messages.exportAsDialog.labels.center)}:</label></div>\n                    <div class='k-edit-field'><input class='k-checkbox k-checkbox-md k-rounded-md' id='hCenter' type='checkbox' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.hCenter'/><label class='k-checkbox-label' for='hCenter'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.horizontally)}</label><input class='k-checkbox k-checkbox-md k-rounded-md' id='vCenter' type='checkbox' data-${kendo.htmlEncode(data.ns)}bind='checked: pdf.vCenter'/><label class='k-checkbox-label' for='vCenter'>${kendo.htmlEncode(data.messages.exportAsDialog.labels.vertically)}</label></div>\n                    <div class='k-page-orientation'>\n                       ${kendo.ui.icon($(`<span data-${data.ns}bind='invisible: pdf.landscape'></span>`), { icon: \"file\" })}\n                       ${kendo.ui.icon($(`<span data-${data.ns}bind='visible: pdf.landscape'></span>`), { icon: \"file-horizontal\" })}\n                    </div>\n                    </div>\n                    <div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span class='k-button-text'>${kendo.htmlEncode(data.messages.save)}</span></button><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base' data-${kendo.htmlEncode(data.ns)}bind='click: close'><span class='k-button-text'>${kendo.htmlEncode(data.messages.cancel)}</span></button></div>`;\n                return $kendoOutput;\n            }\n        },\n        apply: function() {\n            SpreadsheetDialog.fn.apply.call(this);\n\n            this.trigger(\"action\", {\n                command: \"SaveAsCommand\",\n                options: this.viewModel\n            });\n        }\n    });\n    kendo.spreadsheet.dialogs.register(\"exportAs\", ExportAsDialog);\n\n    function basicErrorDialog(id, msg) {\n        kendo.spreadsheet.dialogs.register(\n            id,\n            MessageDialog.extend({\n                options: { messageId: msg }\n            })\n        );\n    }\n\n    basicErrorDialog(\"modifyMerged\", \"modifyMergedDialog.errorMessage\");\n    basicErrorDialog(\"rangeDisabled\", \"rangeDisabledDialog.errorMessage\");\n    basicErrorDialog(\"intersectsArray\", \"intersectsArrayDialog.errorMessage\");\n    basicErrorDialog(\"overflow\", \"overflowDialog.errorMessage\");\n    basicErrorDialog(\"unsupportedSelection\", \"unsupportedSelectionDialog.errorMessage\");\n    basicErrorDialog(\"incompatibleRanges\", \"incompatibleRangesDialog.errorMessage\");\n    basicErrorDialog(\"noFillDirection\", \"noFillDirectionDialog.errorMessage\");\n    basicErrorDialog(\"duplicateSheetName\", \"duplicateSheetNameDialog.errorMessage\");\n\n    var ImportErrorDialog = MessageDialog.extend({\n        options: {\n            width: 640,\n            title: \"Errors in import\",\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-spreadsheet-message-content k-spreadsheet-import-errors'><div class='k--header-message'>We encountered ${data.errors.length} errors while reading this file.  Please be aware that some formulas might be missing, or contain invalid results.</div><div class='k--errors'><table><thead><tr><th>Context</th><th>Error message</th></tr></thead>`;\n                for (let i = 0; i < errors.length; ++i) {\n                    $kendoOutput += ``; let err = errors[i];;\n                    $kendoOutput += `<tr><td>${kendo.htmlEncode(err.context)}</td><td>${kendo.htmlEncode(err.error)}</td></tr>`;\n                }\n                $kendoOutput += `</table></div></div><div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary' data-${kendo.htmlEncode(data.ns)}bind='click: close'><span class='k-button-text'>${kendo.htmlEncode(data.messages.okText)}</span></button></div>`;\n                return $kendoOutput;\n            }\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"importError\", ImportErrorDialog);\n\n    var UseKeyboardDialog = MessageDialog.extend({\n        options: {\n            title: TEXT(\"useKeyboardDialog.title\", \"Copying and pasting\"),\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `${kendo.htmlEncode(data.messages.useKeyboardDialog.errorMessage)}\n                <div>Ctrl+C ${kendo.htmlEncode(data.messages.useKeyboardDialog.labels.forCopy)}</div>\n                <div>Ctrl+X ${kendo.htmlEncode(data.messages.useKeyboardDialog.labels.forCut)}</div>\n                <div>Ctrl+V ${kendo.htmlEncode(data.messages.useKeyboardDialog.labels.forPaste)}</div>\n                <div class=\"k-actions\"><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n                        data-${kendo.htmlEncode(data.ns)}bind='click: close'><span\n                            class='k-button-text'>${data.messages.okText}</span></button></div>`;\n                return $kendoOutput;\n            }\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"useKeyboard\", UseKeyboardDialog);\n\n    var HyperlinkDialog = SpreadsheetDialog.extend({\n        options: {\n            title: TEXT(\"linkDialog.title\", \"Hyperlink\"),\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-edit-label'><label id='url-label'>${kendo.htmlEncode(data.messages.linkDialog.labels.url)}:</label></div>\n<div class='k-edit-field'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input\n            class='k-input-inner' data-${kendo.htmlEncode(data.ns)}bind='value: url'\n            title='${kendo.htmlEncode(data.messages.linkDialog.labels.url)}' aria-labelledby='url-label' /></span></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-left'\n        data-${kendo.htmlEncode(data.ns)}bind='click: remove'><span\n            class='k-button-text'>${data.messages.linkDialog.labels.removeLink}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n            class='k-button-text'>${data.messages.okText}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n            class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                return $kendoOutput;\n            },\n            autoFocus: false\n        },\n        open: function(range) {\n            var self = this;\n            SpreadsheetDialog.fn.open.apply(self, arguments);\n            var element = self.dialog().element;\n            var model = kendo.observable({\n                url: range.link(),\n                apply: function() {\n                    if (!/\\S/.test(model.url)) {\n                        model.url = null;\n                    }\n                    self.trigger(\"action\", {\n                        command: \"HyperlinkCommand\",\n                        options: {\n                            link: model.url\n                        }\n                    });\n                    self.close();\n                },\n                remove: function() {\n                    model.url = null;\n                    model.apply();\n                },\n                cancel: self.close.bind(self)\n            });\n            kendo.bind(element, model);\n\n            // it would be nice if we could easily handle that in one\n            // place for all dialogs, but it doesn't seem easily\n            // doable.\n            element.find(\"input\")\n                .trigger(\"focus\")\n                .on(\"keydown\", function(ev){\n                    if (ev.keyCode == 13 /*ENTER*/) {\n                        model.url = $(this).val(); // there won't be a \"change\" event and the model wouldn't update :-\\\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                        model.apply();\n                    } else if (ev.keyCode == 27 /*ESC*/) {\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                        model.cancel();\n                    }\n                });\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"hyperlink\", HyperlinkDialog);\n\n    var SheetRenameDialog = SpreadsheetDialog.extend({\n        options: {\n            title: TEXT(\"sheetRenameDialog.title\", \"Rename Sheet\"),\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-edit-label'><label id='sheet-name-label'>${kendo.htmlEncode(data.messages.sheetRenameDialog.labels.text)}:</label></div>\n<div class='k-edit-field'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input\n            class='k-input-inner' data-${kendo.htmlEncode(data.ns)}bind='value: sheetName'\n            title='${kendo.htmlEncode(data.messages.sheetRenameDialog.labels.text)}' aria-labelledby='sheet-name-label' /></span></div>\n<div class='k-actions'><button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n            class='k-button-text'>${data.messages.sheetRenameDialog.labels.rename}</span></button><button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n            class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                return $kendoOutput;\n            },\n            autoFocus: false\n        },\n        open: function(range, args) {\n            let sheet = range.sheet();\n            let self = this;\n            SpreadsheetDialog.fn.open.apply(self, arguments);\n            let element = self.dialog().element;\n            let model = kendo.observable({\n                sheetName: args?._oldSheetName || sheet.name(),\n                apply: function() {\n                    self._newSheetName = model.sheetName;\n                    self.close();\n                },\n                cancel: self.close.bind(self)\n            });\n            kendo.bind(element, model);\n\n            element.find(\"input\")\n                .trigger(\"focus\")\n                .on(\"keydown\", function(ev){\n                    if (ev.keyCode == 13 /*ENTER*/) {\n                        model.sheetName = $(this).val();\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                        model.apply();\n                    } else if (ev.keyCode == 27 /*ESC*/) {\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                        model.cancel();\n                    }\n                });\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"renameSheet\", SheetRenameDialog);\n\n    var InsertCommentDialog = SpreadsheetDialog.extend({\n        options: {\n            className: \"k-spreadsheet-insert-comment\",\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-edit-label'><label id='comment-label'>${kendo.htmlEncode(data.messages.insertCommentDialog.labels.comment)}:</label></div>\n                <div class='k-edit-field'><span class='k-input k-textarea k-input-solid k-input-md k-rounded-md'><textarea\n                    aria-labelledby='comment-label' rows='5' class='k-input-inner'\n                    data-${kendo.htmlEncode(data.ns)}bind='value: comment'></textarea></span></div>\n                <div class='k-actions'> <button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-left'\n                    data-${kendo.htmlEncode(data.ns)}bind='click: remove'><span\n                    class='k-button-text'>${kendo.htmlEncode(data.messages.insertCommentDialog.labels.removeComment)}</span></button>\n                <button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n                    data-${kendo.htmlEncode(data.ns)}bind='click: apply'><span\n                    class='k-button-text'>${kendo.htmlEncode(data.messages.okText)}</span></button> <button\n                    class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n                    data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n                    class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                return $kendoOutput;\n            },\n            title: TEXT(\"insertCommentDialog.title\", \"Insert comment\"),\n            autoFocus: false,\n            width: 450\n        },\n        open: function(range) {\n            var self = this;\n            SpreadsheetDialog.fn.open.apply(self, arguments);\n            var element = self.dialog().element;\n            var model = kendo.observable({\n                comment: range.comment(),\n                apply: function() {\n                    if (!/\\S/.test(model.comment)) {\n                        model.comment = null;\n                    }\n                    self.trigger(\"action\", {\n                        command: \"InsertCommentCommand\",\n                        options: {\n                            value: model.comment\n                        }\n                    });\n                    self.close();\n                },\n                remove: function() {\n                    model.comment = null;\n                    model.apply();\n                },\n                cancel: self.close.bind(self)\n            });\n            kendo.bind(element, model);\n\n            element.find(\"textarea\").trigger(\"focus\");\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"insertComment\", InsertCommentDialog);\n\n    var InsertImageDialog = SpreadsheetDialog.extend({\n        options: {\n            template: (data) => {\n                let $kendoOutput;\n                $kendoOutput = `<div class='k-spreadsheet-insert-image-dialog'> <label\n        data-${kendo.htmlEncode(data.ns)}bind='style: { background-image: imageUrl }, css: { k-spreadsheet-has-image: hasImage, k-hover: isHovered }, events: { dragenter: dragEnter, dragover: stopEvent, dragleave: dragLeave, drop: drop }'>\n        <div data-${kendo.htmlEncode(data.ns)}bind='text: info'></div>\n        <input type='file' data-${kendo.htmlEncode(data.ns)}bind='events: { change: change }'\n            accept='image/png, image/jpeg, image/gif' />\n    </label></div>\n<div class='k-actions'> <button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'\n        data-${kendo.htmlEncode(data.ns)}bind='enabled: okEnabled, click: apply'><span\n            class='k-button-text'>${kendo.htmlEncode(data.messages.okText)}</span></button> <button\n        class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'\n        data-${kendo.htmlEncode(data.ns)}bind='click: cancel'><span\n            class='k-button-text'>${data.messages.cancel}</span></button></div>`;\n                return $kendoOutput;\n            },\n            title: TEXT(\"insertImageDialog.title\", \"Insert image\"),\n            width: \"auto\"\n        },\n        open: function() {\n            var self = this;\n            SpreadsheetDialog.fn.open.apply(self, arguments);\n            var element = self.dialog().element;\n            var model = kendo.observable({\n                okEnabled: false,\n                info: kendo.spreadsheet.messages.dialogs.insertImageDialog.info,\n                imageUrl: \"\",\n                hasImage: false,\n                isHovered: false,\n                _url: null,\n                _image: null,\n                apply: function() {\n                    window.URL.revokeObjectURL(model._url);\n                    self.trigger(\"action\", {\n                        command: \"InsertImageCommand\",\n                        options: {\n                            blob   : model._image,\n                            width  : model._width,\n                            height : model._height\n                        }\n                    });\n                    self.close();\n                },\n                cancel: self.close.bind(self),\n                stopEvent: function(ev) {\n                    ev.stopPropagation();\n                    ev.preventDefault();\n                },\n                drop: function(ev) {\n                    model.stopEvent(ev);\n                    model.selectFile(ev.originalEvent.dataTransfer.files);\n                    model.set(\"isHovered\", false);\n                },\n                dragEnter: function(ev) {\n                    model.stopEvent(ev);\n                    model.set(\"isHovered\", true);\n                },\n                dragLeave: function(ev) {\n                    model.stopEvent(ev);\n                    model.set(\"isHovered\", false);\n                },\n                change: function(ev) {\n                    model.selectFile(ev.target.files);\n                },\n                selectFile: function(files) {\n                    var image;\n                    for (var i = 0; i < files.length; ++i) {\n                        if (/^image\\//i.test(files[i].type)) {\n                            image = files[i];\n                            break;\n                        }\n                    }\n                    if (model._url) {\n                        window.URL.revokeObjectURL(model._url);\n                    }\n                    if (image) {\n                        model._image = image;\n                        model._url = window.URL.createObjectURL(image);\n                        var img = new Image();\n                        img.src = model._url;\n                        img.onload = function() {\n                            model._width = img.width;\n                            model._height = img.height;\n                            model.set(\"info\", kendo.spreadsheet.messages.dialogs.insertImageDialog.info);\n                            model.set(\"okEnabled\", true);\n                            model.set(\"imageUrl\", \"url('\" + model._url + \"')\");\n                            model.set(\"hasImage\", true);\n                        };\n                    } else {\n                        model._image = null;\n                        model.set(\"info\", kendo.spreadsheet.messages.dialogs.insertImageDialog.typeError);\n                        model.set(\"okEnabled\", false);\n                        model.set(\"imageUrl\", \"\");\n                        model.set(\"hasImage\", false);\n                    }\n                }\n            });\n            kendo.bind(element, model);\n        }\n    });\n\n    kendo.spreadsheet.dialogs.register(\"insertImage\", InsertImageDialog);\n\n    function Localizable(path, def) {\n        this.path = path.split(\".\");\n        this.def = def;\n    }\n\n    Localizable.prototype.trans = function() {\n        var msg = kendo.spreadsheet.messages.dialogs;\n        for (var i = 0; i < this.path.length; ++i) {\n            msg = msg[this.path[i]];\n            if (!msg) {\n                return this.def;\n            }\n        }\n        return msg;\n    };\n\n    function TEXT(path, def) {\n        return new Localizable(path, def);\n    }\n\n    function translate(thing) {\n        if (thing instanceof Localizable) {\n            return thing.trans();\n        }\n        else if (Array.isArray(thing)) {\n            return thing.map(translate);\n        }\n        else if (thing != null && typeof thing == \"object\") {\n            return Object.keys(thing).reduce(function(ret, key){\n                ret[key] = translate(thing[key]);\n                return ret;\n            }, {});\n        }\n        return thing;\n    }\n\n})(window.kendo);\n\n(function(kendo) {\n\n        var $ = kendo.jQuery;\n        var BORDER_TYPES = [\n            \"allBorders\",\n            \"insideBorders\",\n            \"insideHorizontalBorders\",\n            \"insideVerticalBorders\",\n            \"outsideBorders\",\n            \"leftBorder\",\n            \"topBorder\",\n            \"rightBorder\",\n            \"bottomBorder\",\n            \"noBorders\"\n        ];\n        var BORDER_TYPES_ICONS = {\n           allBorders: \"bordersAll\",\n           insideBorders: \"bordersInside\",\n           insideHorizontalBorders: \"bordersInsideHorizontal\",\n           insideVerticalBorders: \"bordersInsideVertical\",\n           outsideBorders: \"bordersOutside\",\n           leftBorder: \"borderLeft\",\n           topBorder: \"borderTop\",\n           rightBorder: \"borderRight\",\n           bottomBorder: \"borderBottom\",\n           noBorders: \"bordersNone\"\n        };\n\n        var BORDER_PALETTE_MESSAGES = kendo.spreadsheet.messages.borderPalette = {\n            allBorders: \"All borders\",\n            insideBorders: \"Inside borders\",\n            insideHorizontalBorders: \"Inside horizontal borders\",\n            insideVerticalBorders: \"Inside vertical borders\",\n            outsideBorders: \"Outside borders\",\n            leftBorder: \"Left border\",\n            topBorder: \"Top border\",\n            rightBorder: \"Right border\",\n            bottomBorder: \"Bottom border\",\n            noBorders: \"No border\"\n        };\n\n        var colorPickerPalette = [ //metro palette\n            \"#ffffff\", \"#000000\", \"#d6ecff\", \"#4e5b6f\", \"#7fd13b\", \"#ea157a\", \"#feb80a\", \"#00addc\", \"#738ac8\", \"#1ab39f\",\n            \"#f2f2f2\", \"#7f7f7f\", \"#a7d6ff\", \"#d9dde4\", \"#e5f5d7\", \"#fad0e4\", \"#fef0cd\", \"#c5f2ff\", \"#e2e7f4\", \"#c9f7f1\",\n            \"#d8d8d8\", \"#595959\", \"#60b5ff\", \"#b3bcca\", \"#cbecb0\", \"#f6a1c9\", \"#fee29c\", \"#8be6ff\", \"#c7d0e9\", \"#94efe3\",\n            \"#bfbfbf\", \"#3f3f3f\", \"#007dea\", \"#8d9baf\", \"#b2e389\", \"#f272af\", \"#fed46b\", \"#51d9ff\", \"#aab8de\", \"#5fe7d5\",\n            \"#a5a5a5\", \"#262626\", \"#003e75\", \"#3a4453\", \"#5ea226\", \"#af0f5b\", \"#c58c00\", \"#0081a5\", \"#425ea9\", \"#138677\",\n            \"#7f7f7f\", \"#0c0c0c\", \"#00192e\", \"#272d37\", \"#3f6c19\", \"#750a3d\", \"#835d00\", \"#00566e\", \"#2c3f71\", \"#0c594f\"\n        ];\n\n        var BorderPalette = kendo.ui.Widget.extend({\n            init: function(element, options) {\n                kendo.ui.Widget.call(this, element, options);\n\n                this.element = element;\n                this.color = \"#000\";\n\n                this.element.addClass(\"k-spreadsheet-popup\");\n\n                this._borderTypePalette();\n                this._borderColorPalette();\n            },\n\n            options: {\n                name: \"BorderPalette\"\n            },\n\n            events: [\n                \"change\"\n            ],\n\n            destroy: function() {\n                this.colorChooser.destroy();\n                kendo.destroy(this.element.find(\".k-spreadsheet-border-type-palette\"));\n            },\n\n            value: function() {\n                return { type: this.type, color: this.color };\n            },\n\n            _borderTypePalette: function() {\n                var that = this;\n                var messages = BORDER_PALETTE_MESSAGES;\n\n                var element = $(\"<div />\", {\n                    \"class\": \"k-spreadsheet-border-type-palette\"\n                });\n\n                $('<span class=\"k-column-menu-group-header\"><span class=\"k-column-menu-group-header-text\">Border type</span></span>').appendTo(this.element);\n\n                element.appendTo(this.element);\n\n                BORDER_TYPES.map(function(type) {\n                    $('<button title=\"' + messages[type] + '\" aria-label=\"' + messages[type] + '\" data-border-type=\"' + type + '\">')\n                        .appendTo(element)\n                        .kendoToggleButton({\n                            icon: kendo.toHyphens(BORDER_TYPES_ICONS[type]),\n                            toggle: that._toggle.bind(that)\n                        });\n                });\n            },\n\n            _borderColorPalette: function() {\n                var element = $(\"<div />\", {\n                    \"class\": \"k-spreadsheet-border-color-palette\"\n                });\n\n                $('<span class=\"k-column-menu-group-header\"><span class=\"k-column-menu-group-header-text\">Border color</span></span>').appendTo(this.element);\n                element.appendTo(this.element);\n\n                this.colorChooser = new kendo.ui.FlatColorPicker(element, {\n                    buttons: !this.options.change,\n                    color: this.color,\n                    view: \"palette\",\n                    palette: colorPickerPalette,\n                    input: false,\n                    change: this._change.bind(this)\n                });\n\n                this.colorChooser.wrapper.find(\".k-coloreditor-apply\").on(\"click\", this._apply.bind(this));\n                this.colorChooser.wrapper.find(\".k-coloreditor-cancel\").on(\"click\", this._cancel.bind(this));\n            },\n\n            _change: function() {\n                this.color = this.colorChooser.value();\n            },\n\n            _toggle: function(e) {\n                var type = e.target.data(\"borderType\"),\n                    previous = e.target.siblings(\".k-selected\").data(\"kendoToggleButton\");\n\n                if (e.checked === true) {\n                    if (previous) {\n                        previous.toggle(false);\n                    }\n\n                    this.type = type;\n                } else {\n                    this.type = null;\n                }\n            },\n\n            _apply: function() {\n                this.trigger(\"change\", { type: this.type, color: this.color });\n            },\n\n            _cancel: function() {\n                this.trigger(\"change\", { type: null, color: null });\n            }\n        });\n\n        kendo.spreadsheet.BorderPalette = BorderPalette;\n\n    })(window.kendo);\n\n(function(kendo) {\n    var $ = kendo.jQuery;\n\n    function getDefaultToolElement(firstIconName) {\n        return `<button role=\"button\">${kendo.ui.icon({ icon: firstIconName, iconClass: \"k-button-icon\" })}<span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`\n    };\n\n    var ToolBar = kendo.ui.ToolBar;\n\n    var MESSAGES = kendo.spreadsheet.messages.toolbar = {\n        addColumnLeft: \"Add column left\",\n        addColumnRight: \"Add column right\",\n        addRowAbove: \"Add row above\",\n        addRowBelow: \"Add row below\",\n        alignment: \"Alignment\",\n        alignmentButtons: {\n            justifyLeft: \"Align left\",\n            justifyCenter: \"Center\",\n            justifyRight: \"Align right\",\n            justifyFull: \"Justify\",\n            alignTop: \"Align top\",\n            alignMiddle: \"Align middle\",\n            alignBottom: \"Align bottom\"\n        },\n        backgroundColor: \"Background\",\n        increaseFontSize: \"Increase font size\",\n        decreaseFontSize: \"Decrease font size\",\n        bold: \"Bold\",\n        borders: \"Borders\",\n        copy: \"Copy\",\n        cut: \"Cut\",\n        deleteColumn: \"Delete column\",\n        deleteRow: \"Delete row\",\n        filter: \"Filter\",\n        fontFamily: \"Font\",\n        fontSize: \"Font size\",\n        format: \"Custom format...\",\n        formatTypes: {\n            automatic: \"Automatic\",\n            text: \"Text\",\n            number: \"Number\",\n            percent: \"Percent\",\n            financial: \"Financial\",\n            currency: \"Currency\",\n            date: \"Date\",\n            time: \"Time\",\n            dateTime: \"Date time\",\n            duration: \"Duration\",\n            moreFormats: \"More formats...\"\n        },\n        formatDecreaseDecimal: \"Decrease decimal\",\n        formatIncreaseDecimal: \"Increase decimal\",\n        freeze: \"Freeze panes\",\n        freezeButtons: {\n            freezePanes: \"Freeze panes\",\n            freezeRows: \"Freeze rows\",\n            freezeColumns: \"Freeze columns\",\n            unfreeze: \"Unfreeze panes\"\n        },\n        insertComment: \"Insert comment\",\n        insertImage: \"Insert image\",\n        italic: \"Italic\",\n        merge: \"Merge cells\",\n        mergeButtons: {\n            mergeCells: \"Merge all\",\n            mergeHorizontally: \"Merge horizontally\",\n            mergeVertically: \"Merge vertically\",\n            unmerge: \"Unmerge\"\n        },\n        open: \"Open...\",\n        paste: \"Paste\",\n        redo: \"Redo\",\n        undo: \"Undo\",\n        exportAs: \"Export...\",\n        toggleGridlines: \"Toggle gridlines\",\n        sort: \"Sort\",\n        sortButtons: {\n            // sortSheetAsc: \"Sort sheet A to Z\",\n            // sortSheetDesc: \"Sort sheet Z to A\",\n            sortRangeAsc: \"Sort range A to Z\",\n            sortRangeDesc: \"Sort range Z to A\"\n        },\n        textColor: \"Text Color\",\n        textWrap: \"Wrap text\",\n        underline: \"Underline\",\n        validation: \"Data validation...\",\n        hyperlink: \"Link\"\n    };\n\n    var defaultTools = {\n        file: [\n            \"open\",\n            \"exportAs\",\n        ],\n        format: [\n            \"format\",\n            \"formatDecreaseDecimal\",\n            \"formatIncreaseDecimal\"\n        ],\n        home: [\n            [\"undo\", \"redo\"],\n            \"separator\",\n            [\"cut\", \"copy\", \"paste\"],\n            \"separator\",\n            \"fontFamily\", \"fontSize\", \"increaseFontSize\", \"decreaseFontSize\",\n            \"separator\",\n            [\"bold\", \"italic\", \"underline\"],\n            \"separator\",\n            \"textColor\",\n            \"separator\",\n            \"backgroundColor\",\n            \"borders\",\n            \"separator\",\n            \"alignment\",\n            \"textWrap\",\n        ],\n        insert: [\n            \"insertComment\",\n            \"separator\",\n            \"hyperlink\",\n            \"separator\",\n            \"insertImage\",\n            \"separator\",\n            [\"addColumnLeft\", \"addColumnRight\", \"addRowBelow\", \"addRowAbove\"],\n            \"separator\",\n            [\"deleteColumn\", \"deleteRow\"]\n        ],\n        data: [\n            \"sort\",\n            \"separator\",\n            \"filter\",\n            \"separator\",\n            \"validation\"\n        ],\n        view: [\n            \"freeze\",\n            \"merge\",\n            \"toggleGridlines\"\n        ]\n    };\n\n    var defaultFormats = kendo.spreadsheet.formats = {\n        automatic: null,\n        text: \"@\",\n        number: \"#,0.00\",\n        percent: \"0.00%\",\n        financial: '_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)',\n        currency: \"$#,##0.00;[Red]$#,##0.00\",\n        date: \"m/d/yyyy\",\n        time: \"h:mm:ss AM/PM\",\n        dateTime: \"m/d/yyyy h:mm\",\n        duration: \"[h]:mm:ss\"\n    };\n\n    var colorPickerPalette = [ //metro palette\n        \"#ffffff\", \"#000000\", \"#d6ecff\", \"#4e5b6f\", \"#7fd13b\", \"#ea157a\", \"#feb80a\", \"#00addc\", \"#738ac8\", \"#1ab39f\",\n        \"#f2f2f2\", \"#7f7f7f\", \"#a7d6ff\", \"#d9dde4\", \"#e5f5d7\", \"#fad0e4\", \"#fef0cd\", \"#c5f2ff\", \"#e2e7f4\", \"#c9f7f1\",\n        \"#d8d8d8\", \"#595959\", \"#60b5ff\", \"#b3bcca\", \"#cbecb0\", \"#f6a1c9\", \"#fee29c\", \"#8be6ff\", \"#c7d0e9\", \"#94efe3\",\n        \"#bfbfbf\", \"#3f3f3f\", \"#007dea\", \"#8d9baf\", \"#b2e389\", \"#f272af\", \"#fed46b\", \"#51d9ff\", \"#aab8de\", \"#5fe7d5\",\n        \"#a5a5a5\", \"#262626\", \"#003e75\", \"#3a4453\", \"#5ea226\", \"#af0f5b\", \"#c58c00\", \"#0081a5\", \"#425ea9\", \"#138677\",\n        \"#7f7f7f\", \"#0c0c0c\", \"#00192e\", \"#272d37\", \"#3f6c19\", \"#750a3d\", \"#835d00\", \"#00566e\", \"#2c3f71\", \"#0c594f\"\n    ];\n\n    var COLOR_PICKER_MESSAGES = kendo.spreadsheet.messages.colorPicker = {\n        reset: \"Reset color\",\n        customColor: \"Custom color...\",\n        apply: \"Apply\",\n        cancel: \"Cancel\"\n    };\n\n    var toolDefaults = {\n        undo: {\n           type: \"button\",\n           name: \"undo\",\n           icon: \"undo\",\n           command: \"undo\"\n        },\n        redo: {\n           type: \"button\",\n           name: \"redo\",\n           icon: \"redo\",\n           command: \"redo\"\n        },\n        separator: { type: \"separator\" },\n        //home tab\n        open: {\n            type: \"open\",\n            name: \"open\",\n            icon: \"folder-open\",\n            extensions: \".xlsx\",\n            command: \"OpenCommand\"\n        },\n        exportAs: {\n            type: \"button\",\n            name: \"exportAs\",\n            dialog: \"exportAs\",\n            overflow: \"never\",\n            icon: \"download\"\n        },\n        bold: {\n            type: \"button\",\n            command: \"PropertyChangeCommand\",\n            property: \"bold\",\n            value: true,\n            icon: \"bold\",\n            togglable: true\n        },\n        italic: {\n            type: \"button\",\n            command: \"PropertyChangeCommand\",\n            property: \"italic\",\n            value: true,\n            icon: \"italic\",\n            togglable: true\n        },\n        underline: {\n            type: \"button\",\n            command: \"PropertyChangeCommand\",\n            property: \"underline\",\n            value: true,\n            icon: \"underline\",\n            togglable: true\n        },\n        formatDecreaseDecimal: {\n            type: \"button\",\n            name: \"formatDecreaseDecimal\",\n            command: \"AdjustDecimalsCommand\",\n            value: -1,\n            icon: \"decimal-decrease\"\n        },\n        formatIncreaseDecimal: {\n            type: \"button\",\n            name: \"formatIncreaseDecimal\",\n            command: \"AdjustDecimalsCommand\",\n            value: +1,\n            icon: \"decimal-increase\"\n        },\n        textWrap: {\n            type: \"button\",\n            name: \"textWrap\",\n            command: \"TextWrapCommand\",\n            property: \"wrap\",\n            value: true,\n            icon: \"text-wrap\",\n            togglable: true\n        },\n        cut: {\n            type: \"button\",\n            name: \"cut\",\n            command: \"ToolbarCutCommand\",\n            icon: \"cut\"\n        },\n        copy: {\n            type: \"button\",\n            name: \"copy\",\n            command: \"ToolbarCopyCommand\",\n            icon: \"copy\"\n        },\n        paste: {\n            type: \"button\",\n            name: \"paste\",\n            command: \"ToolbarPasteCommand\",\n            icon: \"clipboard\"\n        },\n        alignment: {\n            type: \"component\",\n            name: \"alignment\",\n            property: \"alignment\",\n            component: \"DropDownButton\",\n            element: getDefaultToolElement(\"align-left\"),\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"alignment\",\n                icon: \"align-left\"\n            },\n            componentOptions: {\n                fillMode: \"flat\",\n                items: [\n                    { attributes: { \"data-value\": \"left\", \"data-property\": \"textAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-left\", text: MESSAGES.alignmentButtons.justifyLeft },\n                    { attributes: { \"data-value\": \"center\", \"data-property\": \"textAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-center\", text: MESSAGES.alignmentButtons.justifyCenter },\n                    { attributes: { \"data-value\": \"right\", \"data-property\": \"textAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-right\", text: MESSAGES.alignmentButtons.justifyRight },\n                    { attributes: { \"data-value\": \"justify\", \"data-property\": \"textAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-justify\", text: MESSAGES.alignmentButtons.justifyFull },\n                    { attributes: { class: \"k-separator\" } },\n                    { attributes: { \"data-value\": \"top\", \"data-property\": \"verticalAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-top\", text: MESSAGES.alignmentButtons.alignTop },\n                    { attributes: { \"data-value\": \"center\", \"data-property\": \"verticalAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-middle\", text: MESSAGES.alignmentButtons.alignMiddle },\n                    { attributes: { \"data-value\": \"bottom\", \"data-property\": \"verticalAlign\", \"data-command\": \"PropertyChangeCommand\" }, icon: \"align-bottom\", text: MESSAGES.alignmentButtons.alignBottom }\n                ],\n                commandOn: \"click\"\n            }\n        },\n        backgroundColor: {\n            type: \"component\",\n            name: \"backgroundColor\",\n            commandOn: \"change\",\n            command: \"PropertyChangeCommand\",\n            property: \"background\",\n            component: \"ColorPicker\",\n            componentOptions: {\n                view: \"palette\",\n                toolIcon: \"droplet\",\n                fillMode: \"flat\",\n                palette: colorPickerPalette,\n                clearButton: true,\n                messages: COLOR_PICKER_MESSAGES,\n                input: false,\n                commandOn: \"change\"\n            },\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"colorPicker\",\n                icon: \"droplet\",\n                property: \"background\"\n            }\n        },\n        textColor: {\n            type: \"component\",\n            name: \"textColor\",\n            commandOn: \"change\",\n            command: \"PropertyChangeCommand\",\n            property: \"color\",\n            component: \"ColorPicker\",\n            componentOptions: {\n                view: \"palette\",\n                fillMode: \"flat\",\n                toolIcon: \"foreground-color\",\n                palette: colorPickerPalette,\n                clearButton: true,\n                messages: COLOR_PICKER_MESSAGES,\n                input: false,\n                commandOn: \"change\"\n            },\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"colorPicker\",\n                icon: \"foreground-color\",\n                property: \"color\"\n            }\n        },\n        fontFamily: {\n            type: \"component\",\n            name: \"fontFamily\",\n            command: \"PropertyChangeCommand\",\n            property: \"fontFamily\",\n            component: \"DropDownList\",\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"fontFamily\",\n                icon: \"font-family\"\n            },\n            componentOptions: {\n                dataSource: [\"Arial\", \"Courier New\", \"Georgia\", \"Times New Roman\", \"Trebuchet MS\", \"Verdana\"],\n                value: \"Arial\",\n                fillMode: \"flat\",\n                commandOn: \"change\"\n            }\n        },\n        fontSize: {\n            type: \"component\",\n            name: \"fontSize\",\n            command: \"PropertyChangeCommand\",\n            property: \"fontSize\",\n            component: \"ComboBox\",\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"fontSize\",\n                icon: \"font-size\"\n            },\n            componentOptions: {\n                dataSource: [8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72],\n                value: 12,\n                fillMode: \"flat\",\n                commandOn: \"change\"\n            }\n        },\n        increaseFontSize: {\n            type: \"button\",\n            name: \"increaseFontSize\",\n            command: \"IncreaseFontSize\",\n            property: \"fontSize\",\n            icon: \"font-grow\"\n        },\n        decreaseFontSize: {\n            type: \"button\",\n            name: \"decreaseFontSize\",\n            command: \"DecreaseFontSize\",\n            property: \"fontSize\",\n            icon: \"font-shrink\"\n        },\n        format: {\n            type: \"component\",\n            name: \"format\",\n            component: \"DropDownButton\",\n            element: getDefaultToolElement(\"custom-format\"),\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"formatCells\",\n                icon: \"custom-format\"\n            },\n            componentOptions: {\n                fillMode: \"flat\",\n                items: [\n                    { attributes: { \"data-value\": defaultFormats.automatic, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.automatic },\n                    { attributes: { \"data-value\": defaultFormats.text, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.text },\n                    { attributes: { \"data-value\": defaultFormats.number, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.number, sample: \"1,499.99\" },\n                    { attributes: { \"data-value\": defaultFormats.percent, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.percent, sample: \"14.50%\" },\n                    { attributes: { \"data-value\": defaultFormats.financial, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.financial, sample: \"(1,000.12)\" },\n                    { attributes: { \"data-value\": defaultFormats.currency, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.currency, sample: \"$1,499.99\" },\n                    { attributes: { \"data-value\": defaultFormats.date, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.date, sample: \"4/21/2012\" },\n                    { attributes: { \"data-value\": defaultFormats.time, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.time, sample: \"5:49:00 PM\" },\n                    { attributes: { \"data-value\": defaultFormats.dateTime, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.dateTime, sample: \"4/21/2012 5:49:00\" },\n                    { attributes: { \"data-value\": defaultFormats.duration, \"data-command\": \"PropertyChangeCommand\", \"data-property\": \"format\" }, text: MESSAGES.formatTypes.duration, sample: \"168:05:00\" },\n                    { attributes: { \"data-value\": \"popup\", \"data-popup\": \"formatCells\" }, text: MESSAGES.formatTypes.moreFormats },\n                ],\n                itemTemplate: (data) => {\n                    let $kendoOutput;\n                    $kendoOutput = `<span class=\"k-link k-menu-link\"><span class=\"k-menu-link-text\">`; if (data.sample) { ;\n                    $kendoOutput += `<span class='k-spreadsheet-sample'>${kendo.htmlEncode(data.sample)}</span> `; } ;\n                    $kendoOutput += `${kendo.htmlEncode(data.text)}</span></span>`;\n                    return $kendoOutput;\n                },\n                commandOn: \"click\"\n            }\n        },\n        filter: {\n            type: \"button\",\n            name: \"filter\",\n            property: \"hasFilter\",\n            icon: \"filter\",\n            command: \"FilterCommand\",\n            togglable: true,\n            enable: false\n        },\n        merge: {\n            type: \"component\",\n            name: \"merge\",\n            component: \"DropDownButton\",\n            element: getDefaultToolElement(\"cells-merge\"),\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"merge\",\n                icon: \"cells-merge\"\n            },\n            componentOptions: {\n                fillMode: \"flat\",\n                items: [\n                    { attributes: { \"data-value\": \"cells\", \"data-command\": \"MergeCellCommand\" }, icon: \"cells-merge\", text: MESSAGES.mergeButtons.mergeCells },\n                    { attributes: { \"data-value\": \"horizontally\", \"data-command\": \"MergeCellCommand\" }, icon: \"cells-merge-horizontally\", text: MESSAGES.mergeButtons.mergeHorizontally },\n                    { attributes: { \"data-value\": \"vertically\", \"data-command\": \"MergeCellCommand\" }, icon: \"cells-merge-vertically\", text: MESSAGES.mergeButtons.mergeVertically },\n                    { attributes: { \"data-value\": \"unmerge\", \"data-command\": \"MergeCellCommand\" }, icon: \"table-unmerge\", text: MESSAGES.mergeButtons.unmerge }\n                ],\n                commandOn: \"click\"\n            }\n        },\n        freeze: {\n            type: \"component\",\n            name: \"freeze\",\n            component: \"DropDownButton\",\n            element: getDefaultToolElement(\"pane-freeze\"),\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"freeze\",\n                icon: \"pane-freeze\"\n            },\n            componentOptions: {\n                fillMode: \"flat\",\n                items: [\n                    { attributes: { \"data-value\": \"panes\", \"data-command\": \"FreezePanesCommand\" }, icon: \"pane-freeze\", text: MESSAGES.freezeButtons.freezePanes },\n                    { attributes: { \"data-value\": \"rows\", \"data-command\": \"FreezePanesCommand\" }, icon: \"row-freeze\", text: MESSAGES.freezeButtons.freezeRows },\n                    { attributes: { \"data-value\": \"columns\", \"data-command\": \"FreezePanesCommand\" }, icon: \"column-freeze\", text: MESSAGES.freezeButtons.freezeColumns },\n                    { attributes: { \"data-value\": \"unfreeze\", \"data-command\": \"FreezePanesCommand\" }, icon: \"table-unmerge\", text: MESSAGES.freezeButtons.unfreeze }\n                ],\n                commandOn: \"click\"\n            }\n        },\n        borders: {\n            type: \"popupButton\",\n            name: \"borders\",\n            icon: \"borders-all\",\n            popupComponent: kendo.spreadsheet.BorderPalette,\n            commandOn: \"change\",\n            command: \"BorderChangeCommand\",\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"borders\"\n            }\n        },\n        formatCells: {\n            type: \"button\",\n            dialog: \"formatCells\",\n            overflow: \"never\"\n        },\n        hyperlink: {\n            type: \"button\",\n            name: \"hyperlink\",\n            dialog: \"hyperlink\",\n            icon: \"link\"\n        },\n        toggleGridlines: {\n            type: \"button\",\n            name: \"toggleGridlines\",\n            command: \"GridLinesChangeCommand\",\n            property: \"gridLines\",\n            value: true,\n            icon: \"borders-none\",\n            togglable: true,\n            selected: true\n        },\n        insertComment: {\n            type: \"button\",\n            name: \"insertComment\",\n            dialog: \"insertComment\",\n            property: \"comment\",\n            togglable: true,\n            icon: \"comment\"\n        },\n        insertImage: {\n            type: \"button\",\n            name: \"insertImage\",\n            dialog: \"insertImage\",\n            icon: \"image\",\n        },\n\n        //insert tab\n        addColumnLeft: {\n            type: \"button\",\n            name: \"addColumnLeft\",\n            command: \"AddColumnCommand\",\n            value: \"left\",\n            icon: \"table-column-insert-left\"\n        },\n        addColumnRight: {\n            type: \"button\",\n            name: \"addColumnRight\",\n            command: \"AddColumnCommand\",\n            value: \"right\",\n            icon: \"table-column-insert-right\"\n        },\n        addRowBelow: {\n            type: \"button\",\n            name: \"addRowBelow\",\n            command: \"AddRowCommand\",\n            value: \"below\",\n            icon: \"table-row-insert-below\"\n        },\n        addRowAbove: {\n            type: \"button\",\n            name: \"addRowAbove\",\n            command: \"AddRowCommand\",\n            value: \"above\",\n            icon: \"table-row-insert-above\"\n        },\n        deleteColumn: {\n            type: \"button\",\n            name: \"deleteColumn\",\n            command: \"DeleteColumnCommand\",\n            icon: \"table-column-delete\"\n        },\n        deleteRow: {\n            type: \"button\",\n            name: \"deleteRow\",\n            command: \"DeleteRowCommand\",\n            icon: \"table-row-delete\"\n        },\n\n        //data tab\n        sort: {\n            type: \"component\",\n            name: \"sort\",\n            component: \"DropDownButton\",\n            element: getDefaultToolElement(\"sort-desc\"),\n            overflowComponent: {\n                type: \"button\",\n                dialog: \"sort\",\n                icon: \"sort-desc\"\n            },\n            componentOptions: {\n                fillMode: \"flat\",\n                items: [\n                    { attributes: { \"data-value\": \"asc\", \"data-command\": \"SortCommand\" }, sheet: false, text: MESSAGES.sortButtons.sortRangeAsc, icon: \"sort-asc\" },\n                    { attributes: { \"data-value\": \"desc\", \"data-command\": \"SortCommand\" }, sheet: false, text: MESSAGES.sortButtons.sortRangeDesc, icon: \"sort-desc\" },\n                ],\n                commandOn: \"click\"\n            }\n        },\n        validation: {\n            type: \"button\",\n            name: \"validation\",\n            dialog: \"validation\",\n            icon: \"exclamation-circle\"\n        }\n    };\n\n    var SpreadsheetToolBar = ToolBar.extend({\n        init: function(element, options) {\n            Object.keys(toolDefaults).forEach((t) => {\n                if (t !== \"validation\") {\n                    toolDefaults[t].showText = \"overflow\";\n                }\n            });\n\n            options.tools = options.tools || SpreadsheetToolBar.prototype.options.tools[options.toolbarName];\n            options.parentMessages = MESSAGES;\n            options.defaultTools = toolDefaults;\n\n            ToolBar.fn.init.call(this, element, options);\n            var handleClick = this._click.bind(this);\n\n            this.element.addClass(\"k-spreadsheet-toolbar k-toolbar-md\");\n\n            this.bind({\n                click: handleClick,\n                toggle: handleClick,\n                change: handleClick\n            });\n        },\n        _click: function(e) {\n            var target = e.target,\n                property = target.data(\"property\"),\n                value = e.value || target.data(\"value\") || e.target.val(),\n                commandType = target.data(\"command\"),\n                dialog = target.data(\"dialog\"),\n                options = target.data(\"options\") || {};\n\n            if (value === \"popup\") {\n                // Special case to open custom format dialog from option of the format DDL\n                dialog = target.data(\"popup\");\n            }\n\n            if (commandType === \"IncreaseFontSize\") {\n                commandType = \"PropertyChangeCommand\";\n                value++;\n            }\n\n            if (commandType === \"DecreaseFontSize\") {\n                commandType = \"PropertyChangeCommand\";\n                value--;\n            }\n\n            options.property = property || null;\n            options.value = value || null;\n\n            if (dialog) {\n                this.dialog({\n                    name: dialog,\n                    options: options\n                });\n                return;\n            }\n\n            if (!commandType) {\n                return;\n            }\n\n            var args = {\n                command: commandType,\n                options: options\n            };\n\n            if (typeof args.options.value === \"boolean\") {\n                args.options.value = e.checked ? true : null;\n            }\n\n            this.action(args);\n        },\n        events: [\n            \"action\",\n            \"dialog\"\n        ],\n        options: {\n            name: \"SpreadsheetToolBar\",\n            resizable: true,\n            tools: defaultTools,\n            fillMode: \"flat\"\n        },\n        action: function(args) {\n            this.trigger(\"action\", args);\n        },\n        dialog: function(args) {\n            this.trigger(\"dialog\", args);\n        },\n        refresh: function(activeCell) {\n            var range = activeCell,\n                tools = this._tools();\n\n            for (var i = 0; i < tools.length; i++) {\n                var property = tools[i].property,\n                    tool = tools[i].tool,\n                    value = kendo.isFunction(range[property]) ? range[property]() : range;\n\n                if (property == \"gridLines\") {\n                    // this isn't really a property of the range, it's per-sheet.\n                    value = range.sheet().showGridLines();\n                }\n\n                this._updateTool(tool, value, property, range);\n            }\n\n            this.resize(true);\n        },\n        _tools: function() {\n            return this.element.find(\"[data-property]\").toArray().map(function(element) {\n                element = $(element);\n                return {\n                    property: element.attr(\"data-property\"),\n                    tool: this._getItem(element)\n                };\n            }.bind(this));\n        },\n        _updateTool: function(tool, value, property, range) {\n            var component = tool.component,\n                toolbarEl = tool.toolbarEl,\n                widget = kendo.widgetInstance(toolbarEl.find(\"[data-role]\")),\n                menuItem = tool.menuItem,\n                toggle = false,\n                vertical, text, menu, selection, enabled, label;\n\n            if (property === \"hasFilter\") {\n                selection = range.sheet().selection();\n\n                if (selection && selection._ref && selection._ref.height) {\n                    enabled = value || selection._ref.height() > 1;\n\n                    this.enable(toolbarEl, enabled);\n                }\n            } else if (property === \"alignment\") {\n                vertical = value.verticalAlign();\n                text = value.textAlign();\n                menu = component.menu.element;\n\n                menu.find(\".k-item .k-link\").removeClass(\"k-selected\");\n                menu.find(\".k-item[data-property=textAlign][data-value=\" + text + \"] .k-link\").addClass(\"k-selected\");\n                menu.find(\".k-item[data-property=verticalAlign][data-value=\" + vertical + \"] .k-link\").addClass(\"k-selected\");\n            } else if (property === \"background\" || property === \"color\") {\n                widget.value(value);\n            } else if (property === \"fontFamily\" || property === \"fontSize\") {\n                if (toolbarEl.is(\"button\")) {\n                    toolbarEl.attr(\"data-value\", value);\n                    toolbarEl.data(\"value\", value);\n                    return;\n                }\n                label = menuItem.find(\".k-menu-link-text\").text().split(\"(\")[0].trim();\n                menuItem.find(\".k-menu-link-text\").text(label + \" (\" + value + \") ...\");\n                widget.value(value);\n            }\n\n            if (component && component.toggle) {\n                if (typeof value === \"boolean\") {\n                    toggle = !!value;\n                } else if (typeof value === \"string\") {\n                    if (toolbarEl.data(\"value\")) {\n                        toggle = toolbarEl.data(\"value\") === value;\n                    } else {\n                        // if no value is specified in the tool options,\n                        // assume it should be ON if the range value is not null, and OFF otherwise.\n                        toggle = value != null;\n                    }\n                }\n\n                this.toggle(toolbarEl, toggle);\n            }\n        }\n    });\n\n    kendo.cssProperties.propertyDictionary[\"SpreadsheetToolBar\"] = kendo.cssProperties.propertyDictionary[\"ToolBar\"];\n\n    kendo.spreadsheet.ToolBar = SpreadsheetToolBar;\n\n    kendo.spreadsheet.Menu = kendo.ui.Menu;\n\n})(window.kendo);\n\n\"use strict\";\n\n    function clone(hash, target) {\n        if (!target) {\n            target = {};\n        }\n        if (Object.assign) {\n            return Object.assign(target, hash);\n        }\n        return Object.keys(hash).reduce(function(copy, key) {\n            copy[key] = hash[key];\n            return copy;\n        }, target);\n    }\n\n    function drawTabularData(options) {\n        var progress = new $.Deferred();\n        var promise = progress.promise();\n\n        options = clone(options, {\n            dataSource       : null,\n            guidelines       : true,\n            guideColor       : \"#000\",\n            columns          : null,\n            headerBackground : \"#999\",\n            headerColor      : \"#000\",\n            oddBackground    : null,\n            evenBackground   : null,\n            fontFamily       : \"Arial\",\n            fontSize         : 12,\n            paperSize        : \"A4\",\n            margin           : \"1cm\",\n            landscape        : true,\n            fitWidth         : false,\n            scale            : 1,\n            rowHeight        : 20,\n            maxEmpty         : 1,\n            useGridFormat    : true\n        });\n\n        // retrieve fonts; custom fonts should be already loaded\n        kendo.drawing.pdf.defineFont(\n            kendo.drawing.drawDOM.getFontFaces(document)\n        );\n\n        var charWidth = charWidthFunction(options.fontFamily, options.fontSize);\n\n        function textWidth(value) {\n            if (value != null) {\n                var width = 12;         // magic numbers :-/\n                for (var i = value.length; --i >= 0;) {\n                    width += charWidth(value.charAt(i));\n                }\n                return width;\n            }\n            return 0;\n        }\n\n        var border = options.guidelines ? { size: 1, color: options.guideColor } : null;\n\n        function mkCell(data) {\n            if (!border) {\n                return data;\n            }\n            return clone(data, {\n                borderLeft: border,\n                borderTop: border,\n                borderRight: border,\n                borderBottom: border\n            });\n        }\n\n        options.dataSource.fetch(function(){\n            var data = options.dataSource.data();\n            if (!data.length) {\n                return progress.reject(\"Empty dataset\");\n            }\n\n            // this really must be present\n            var columns = options.columns.map(function(col){\n                if (typeof col == \"string\") {\n                    return { title: col, field: col };\n                } else {\n                    return col;\n                }\n            });\n            var columnTitles = columns.map(function(col){\n                return col.title || col.field;\n            });\n            var columnWidths = columnTitles.map(textWidth);\n\n            // prepare data for a Sheet object's fromJSON method\n            var rows = data.map(function(row, rowIndex){\n                return {\n                    cells: columns.map(function(col, colIndex){\n                        var value = row[col.field];\n\n                        // NOTE: value might not be string.  I added option useGridFormat (default\n                        // true), which will use a column's format, if present, to convert the value\n                        // to a string, so that we can measure the width right now.\n                        if (options.useGridFormat) {\n                            if (value != null) {\n                                if (col.format) {\n                                    value = kendo.format(col.format, value);\n                                } else {\n                                    value += \"\";\n                                }\n                            }\n                            // adjust the column widths while we're at it\n                            columnWidths[colIndex] = Math.max(\n                                textWidth(value),\n                                columnWidths[colIndex]\n                            );\n                        }\n\n                        // if options.useGridFormat is false and col.format is present, pass it over\n                        // to the spreadsheet.  In that case we should calculate the widths after\n                        // the spreadsheet is created (XXX to be implemented when someone needs it).\n                        return mkCell({\n                            value: value,\n                            format: options.useGridFormat ? null : col.format,\n                            background: rowIndex % 2 ? options.evenBackground : options.oddBackground\n                        });\n                    })\n                };\n            });\n\n            // insert header line\n            rows.unshift({\n                cells: columnTitles.map(function(label){\n                    return mkCell({\n                        value: label,\n                        background: options.headerBackground,\n                        color: options.headerColor\n                    });\n                })\n            });\n\n            // init a Sheet object.  Note that we have to add one\n            // extra-row and column, because the very last ones can't\n            // have right/bottom borders (known limitation).\n            var sheet = new kendo.spreadsheet.Sheet(\n                rows.length + 1,        // rows\n                columns.length + 1,     // columns\n                options.rowHeight,      // row height\n                50,                     // column width\n                20,                     // header height\n                20,                     // header width,\n                {                       // default cell style\n                    fontFamily: options.fontFamily,\n                    fontSize: options.fontSize,\n                    verticalAlign: \"center\"\n                }\n            );\n\n            // load data\n            sheet.fromJSON({\n                name: \"Sheet1\",\n                rows: rows,\n                columns: columnWidths.map(function(w, i){\n                    return { index: i, width: w };\n                })\n            });\n\n            sheet.draw({\n                paperSize  : options.paperSize,\n                landscape  : options.landscape,\n                margin     : options.margin,\n                guidelines : false, // using borders instead (better contrast)\n                scale      : options.scale,\n                fitWidth   : options.fitWidth,\n                maxEmpty   : options.maxEmpty,\n                headerRows : 1\n            }, progress.resolve.bind(progress));\n        });\n\n        return promise;\n    }\n\n    var CACHE_CHAR_WIDTH = {};\n\n    var charWidthFunction = function(fontFamily, fontSize) {\n        var id = fontSize + \":\" + fontFamily;\n        var func = CACHE_CHAR_WIDTH[id];\n        if (!func) {\n            var span, div = document.createElement(\"div\");\n            div.style.position = \"fixed\";\n            div.style.left = \"-10000px\";\n            div.style.top = \"-10000px\";\n            div.style.fontFamily = fontFamily;\n            div.style.fontSize = fontSize + \"px\";\n            div.style.whiteSpace = \"pre\";\n            for (var i = 32; i < 128; ++i) {\n                span = document.createElement(\"span\");\n                span.appendChild(document.createTextNode(String.fromCharCode(i)));\n                div.appendChild(span);\n            }\n            document.body.appendChild(div);\n            var widths = {};\n            for (i = 32, span = div.firstChild; i < 128 && span; ++i, span = span.nextSibling) {\n                widths[i] = span.offsetWidth;\n            }\n            while ((span = div.firstChild)) {\n                div.removeChild(span);\n            }\n            func = CACHE_CHAR_WIDTH[id] = function(ch) {\n                var code = ch.charCodeAt(0);\n                var width = widths[code];\n                if (width == null) {\n                    // probably not an ASCII character, let's cache its width as well\n                    span = document.createElement(\"span\");\n                    span.appendChild(document.createTextNode(String.fromCharCode(code)));\n                    div.appendChild(span);\n                    width = widths[code] = span.offsetWidth;\n                    div.removeChild(span);\n                }\n                return width;\n            };\n        }\n        return func;\n    };\n\n    kendo.spreadsheet.drawTabularData = drawTabularData;\n\n(function(kendo) {\n\n    \"use strict\";\n\n\n    let registerEditor = kendo.spreadsheet.registerEditor;\n    var $ = kendo.jQuery;\n\n    registerEditor(\"_validation_date\", function(){\n        var context, calendar, popup;\n\n        function create() {\n            if (!calendar) {\n                calendar = $(\"<div>\").kendoCalendar();\n                popup = $(\"<div>\").kendoPopup();\n                calendar.appendTo(popup);\n                calendar = calendar.getKendoCalendar();\n                popup = popup.getKendoPopup();\n\n                calendar.bind(\"change\", function(){\n                    popup.close();\n                    var date = calendar.value();\n                    if (!context.range.format()) {\n                        context.range.format(\"yyyy-mm-dd\");\n                    }\n                    context.callback(kendo.spreadsheet.dateToNumber(date));\n                });\n            }\n            popup.setOptions({\n                anchor: context.view.element.querySelector(\".k-spreadsheet-editor-button\"),\n                origin: context.alignLeft ? \"bottom right\" : \"bottom left\",\n                position: context.alignLeft ? \"top right\" : \"top left\"\n            });\n        }\n\n        function open() {\n            create();\n\n            var date = context.range.value();\n            var sheet = context.range.sheet();\n            if (date != null) {\n                calendar.value(kendo.spreadsheet.numberToDate(date));\n            } else {\n                calendar.value(null);\n            }\n            var val = context.validation;\n            if (val) {\n                var min = kendo.ui.Calendar.fn.options.min;\n                var max = kendo.ui.Calendar.fn.options.max;\n                var fromValidation = val.from;\n                var toValidation = val.to;\n                var formula = kendo.spreadsheet.calc.runtime.Formula;\n\n                if (/^(?:greaterThan|between)/.test(val.comparerType)) {\n                    if(fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                        min = kendo.spreadsheet.numberToDate(sheet.range(fromValidation.value.row, fromValidation.value.col).value());\n                    } else {\n                        min = kendo.spreadsheet.numberToDate(fromValidation.value);\n                    }\n                }\n                if (val.comparerType == \"between\") {\n                    if(toValidation instanceof formula && _rowAndColPresent(toValidation.value)) {\n                        max = kendo.spreadsheet.numberToDate(sheet.range(toValidation.value.row, toValidation.value.col).value());\n                    } else {\n                        max = kendo.spreadsheet.numberToDate(val.to.value);\n                    }\n                }\n                if (val.comparerType == \"lessThan\" || val.comparerType == \"lessThanOrEqualTo\") {\n                    if(fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                        max = kendo.spreadsheet.numberToDate(sheet.range(fromValidation.value.row, fromValidation.value.col).value());\n                    } else {\n                        max = kendo.spreadsheet.numberToDate(val.from.value);\n                    }\n                }\n                calendar.setOptions({\n                    disableDates: function(date) {\n                        var from, to;\n\n                        if(fromValidation && fromValidation instanceof formula && _rowAndColPresent(fromValidation.value)) {\n                            from = sheet.range(fromValidation.value.row, fromValidation.value.col).value();\n                        } else {\n                            from = fromValidation ? fromValidation.value|0 : 0;\n                        }\n\n                        if(toValidation && toValidation instanceof formula && _rowAndColPresent(toValidation.value)) {\n                            to = sheet.range(toValidation.value.row, toValidation.value.col).value();\n                        } else {\n                            to = toValidation ? toValidation.value|0 : 0;\n                        }\n\n                        date = kendo.spreadsheet.dateToNumber(date) | 0;\n                        return !kendo.spreadsheet.validation\n                            .validationComparers[val.comparerType](date, from, to);\n                    },\n                    min: min,\n                    max: max\n                });\n            } else {\n                calendar.setOptions({ disableDates: null, min: null, max: null });\n            }\n            popup.open();\n        }\n\n        function _rowAndColPresent(value) {\n            return (value && value.row !== null && value.col !== null && value.row > -1 && value.col > -1);\n        }\n\n        return {\n            edit: function(options) {\n                context = options;\n                open();\n            },\n            icon: \"calendar\"\n        };\n    });\n\n    registerEditor(\"_validation_list\", function(){\n        var context, list, popup;\n        function create() {\n            if (!list) {\n                list = $(\"<ul class='k-list k-reset'/>\").kendoStaticList({\n                    template   : \"#:value#\",\n                    selectable : true,\n                    autoBind   : false\n                });\n                popup = $(\"<div class='k-spreadsheet-list-popup'>\").kendoPopup();\n                list.appendTo(popup);\n                popup = popup.getKendoPopup();\n                list = list.getKendoStaticList();\n\n                list.bind(\"change\", function(){\n                    popup.close();\n                    var item = list.value()[0];\n                    if (item) {\n                        context.callback(item.value);\n                    }\n                });\n            }\n            popup.setOptions({\n                anchor: context.view.element.querySelector(\".k-spreadsheet-editor-button\"),\n                origin: context.alignLeft ? \"bottom right\" : \"bottom left\",\n                position: context.alignLeft ? \"top right\" : \"top left\"\n            });\n        }\n        function open() {\n            create();\n            var items = context.validation.from.value;\n            var data = [], add = function(el){ data.push({ value: el }); };\n            if (items instanceof kendo.spreadsheet.calc.runtime.Matrix) {\n                items.each(add);\n            } else {\n                // actually Excel expects a simple string for list\n                // validation (comma-separated labels).\n                (items+\"\").split(/\\s*,\\s*/).forEach(add);\n            }\n            var dataSource = new kendo.data.DataSource({ data: data });\n            list.setDataSource(dataSource);\n            dataSource.read();\n            popup.open();\n        }\n        return {\n            edit: function(options) {\n                context = options;\n                open();\n            },\n            icon: \"caret-alt-down\"\n        };\n    });\n\n})(window.kendo);\n\n(function(kendo) {\n\n        var $ = kendo.jQuery;\n        var outerWidth = kendo._outerWidth;\n        var DOT = \".\";\n        var EMPTYCHAR = \" \";\n        var sheetsBarClassNames = {\n            sheetsBarWrapper: \"k-spreadsheet-sheets-bar\",\n            sheetsBarSheetsWrapper: \"k-tabstrip k-tabstrip-bottom\",\n            sheetsBarAdd: \"k-spreadsheet-sheet-add\",\n            sheetsBarSheetsMenu: \"k-spreadsheet-sheets-menu\",\n            sheetsBarRemove: \"k-spreadsheet-sheets-remove\",\n            sheetsBarItems: \"k-spreadsheet-sheets\",\n            sheetsBarEditor: \"k-spreadsheet-sheets-editor\",\n            sheetsBarScrollable: \"k-tabstrip-scrollable\",\n            sheetsBarNext: \"k-tabstrip-next\",\n            sheetsBarPrev: \"k-tabstrip-prev\",\n            sheetsBarKItem: \"k-item\",\n            sheetsBarKActive: \"k-active\",\n            sheetsBarKTextbox: \"k-textbox\",\n            sheetsBarKLink: \"k-link\",\n            sheetsBarKLinkText: \"k-link-text\",\n            sheetsBarKIcon: \"k-icon\",\n            sheetsBarKFontIcon: \"k-icon\",\n            sheetsBarKButton: \"k-button k-icon-button\",\n            sheetsBarKButtonDefaults: \"k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n            sheetsBarKButtonBare: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n            sheetsBarArrowWIcon: \"caret-alt-left\",\n            sheetsBarArrowEIcon: \"caret-alt-right\",\n            sheetsBarKReset: \"k-reset k-tabstrip-items k-tabstrip-items-start\",\n            sheetsBarXIcon: \"x\",\n            sheetsBarMoreIcon: \"caret-alt-down\",\n            sheetsBarKSprite: \"k-sprite\",\n            sheetsBarPlusIcon: \"plus\",\n            sheetsBarMenuIcon: \"menu\",\n            sheetsBarHintWrapper: \"k-widget k-tabstrip k-tabstrip-bottom k-spreadsheet-sheets-items-hint\",\n            sheetsBarKResetItems: \"k-reset k-tabstrip-items k-tabstrip-items-start\"\n        };\n\n        var SheetsBar = kendo.ui.Widget.extend({\n            init: function(element, options) {\n                var classNames = SheetsBar.classNames;\n\n                kendo.ui.Widget.call(this, element, options);\n\n                element = this.element;\n\n                element.addClass(classNames.sheetsBarWrapper);\n\n                this._openDialog = options.openDialog;\n\n                this._addButton();\n                this._menuButton();\n                this._tree = new kendo.dom.Tree(element[0]);\n\n                this._tree.render([this._createSheetsWrapper([])]);\n                this._initSheetDropDownButtons();\n\n                this._toggleScrollEvents(true);\n\n                this._createSortable();\n\n                this._sortable.bind(\"start\", this._onSheetReorderStart.bind(this));\n\n                this._sortable.bind(\"end\", this._onSheetReorderEnd.bind(this));\n\n                element.on(\"click\", \"[ref-sheetsbar-more-button]\", this._onSheetContextMenu.bind(this));\n\n                element.on(\"click\", \"li\", this._onSheetSelect.bind(this));\n\n                element.on(\"dblclick\", \"li\" + DOT + classNames.sheetsBarKItem + DOT + classNames.sheetsBarKItem, this._createEditor.bind(this));\n            },\n\n            options: {\n                name: \"SheetsBar\",\n                scrollable: {\n                    distance: 200\n                }\n            },\n\n            events: [\n                \"select\",\n                \"reorder\",\n                \"rename\"\n            ],\n\n            _createEditor: function() {\n                if (this._editor) {\n                    return;\n                }\n\n                this._renderSheets(this._sheets, this._selectedIndex, true);\n                this._editor = this.element\n                    .find(kendo.format(\"input{0}{1}\", DOT, SheetsBar.classNames.sheetsBarEditor))\n                    .trigger(\"focus\")\n                    .on(\"keydown\", this._onEditorKeydown.bind(this))\n                    .on(\"blur\", this._onEditorBlur.bind(this));\n            },\n\n            _destroyEditor: function(canceled) {\n                var newSheetName = canceled ? null : this._editor.val();\n                this._editor.off();\n                this._editor = null;\n                this._renderSheets(this._sheets, this._selectedIndex, false);\n                this._onSheetRename(newSheetName);\n            },\n\n            renderSheets: function(sheets, selectedIndex) {\n                if (!sheets || selectedIndex < 0) {\n                    return;\n                }\n\n                this._renderSheets(sheets, selectedIndex, false);\n            },\n\n            _renderSheets: function(sheets, selectedIndex, isInEditMode) {\n                var that = this;\n                var classNames = SheetsBar.classNames;\n\n                that._isRtl = kendo.support.isRtl(that.element);\n                that._sheets = sheets;\n                that._selectedIndex = selectedIndex;\n\n                that._renderHtml(isInEditMode, true);\n\n                if (!that._scrollableAllowed()) {\n                    return;\n                }\n\n                var sheetsWrapper = that._sheetsWrapper();\n\n                sheetsWrapper.addClass(classNames.sheetsBarScrollable + EMPTYCHAR + classNames.sheetsBarSheetsWrapper);\n\n                that._toggleScrollButtons();\n            },\n\n            _toggleScrollButtons: function(toggle) {\n                var that = this;\n                var ul = that._sheetsGroup();\n                var wrapper = that._sheetsWrapper();\n                var scrollLeft = kendo.scrollLeft(ul);\n                var prev = wrapper.find(DOT + SheetsBar.classNames.sheetsBarPrev);\n                var next = wrapper.find(DOT + SheetsBar.classNames.sheetsBarNext);\n\n                if (toggle === false) {\n                    prev.addClass('k-disabled');\n                    next.addClass('k-disabled');\n                } else {\n                    prev.toggleClass('k-disabled', !(that._isRtl ? scrollLeft < ul[0].scrollWidth - ul[0].offsetWidth - 1 : scrollLeft !== 0));\n                    next.toggleClass('k-disabled', !(that._isRtl ? scrollLeft !== 0 : scrollLeft < ul[0].scrollWidth - ul[0].offsetWidth - 1));\n                }\n\n            },\n\n            _toggleScrollEvents: function(toggle) {\n                var that = this;\n                var classNames = SheetsBar.classNames;\n                var options = that.options;\n                var scrollPrevButton;\n                var scrollNextButton;\n                var sheetsWrapper = that._sheetsWrapper();\n                scrollPrevButton = sheetsWrapper.find(DOT + classNames.sheetsBarPrev);\n                scrollNextButton = sheetsWrapper.find(DOT + classNames.sheetsBarNext);\n\n                if (toggle) {\n                    scrollPrevButton.on(\"mousedown\", function(event) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        that._nowScrollingSheets = true;\n                        that._scrollSheetsByDelta(options.scrollable.distance * (that._isRtl ? 1 : -1));\n                    });\n\n                    scrollNextButton.on(\"mousedown\", function(event) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        that._nowScrollingSheets = true;\n                        that._scrollSheetsByDelta(options.scrollable.distance * (that._isRtl ? -1 : 1));\n                    });\n\n                    scrollPrevButton.add(scrollNextButton).on(\"mouseup\", function() {\n                        that._nowScrollingSheets = false;\n                    });\n                } else {\n                    scrollPrevButton.off();\n                    scrollNextButton.off();\n                }\n            },\n\n            _renderHtml: function(isInEditMode, renderScrollButtons) {\n                var idx;\n                var sheetElements = [];\n                var dom = kendo.dom;\n                var element = dom.element;\n                var sheets = this._sheets;\n                var selectedIndex = this._selectedIndex;\n                var classNames = SheetsBar.classNames;\n\n                for (idx = 0; idx < sheets.length; idx++) {\n                    var sheet = sheets[idx];\n\n                    var isSelectedSheet = (idx === selectedIndex);\n                    var attr = { className: classNames.sheetsBarKItem + EMPTYCHAR, role: \"tab\" };\n                    var elementContent = [];\n                    if (sheet.state() !== 'visible') {\n                        attr.className += \"k-hidden \";\n                    }\n\n                    if (isSelectedSheet) {\n                        attr.className += classNames.sheetsBarKActive;\n                    }\n\n                    if (isSelectedSheet && isInEditMode) {\n                        elementContent.push(element(\"input\", {\n                            type: \"text\",\n                            value: sheet.name(),\n                            className: classNames.sheetsBarKTextbox + EMPTYCHAR + classNames.sheetsBarEditor,\n                            maxlength: 50\n                        }, []));\n                    } else {\n                        elementContent.push(element(\"span\", {\n                            className: classNames.sheetsBarKLink,\n                            title: sheet.name()\n                        }, [element(\"span\", { className: classNames.sheetsBarKLinkText }, [dom.text(sheet.name())])]));\n\n                        let contextMenuButton = element($(kendo.html.renderButton($(`<button ref-sheetsbar-more-button data-sheet-name=\"${sheet.name()}\" class=\"k-menu-button\"></button>`), {\n                            icon: classNames.sheetsBarMoreIcon,\n                            fillMode: \"flat\"\n                        }))[0]);\n\n                        elementContent.push(element(\"span\", {\n                            className: \"k-item-actions\",\n                            'data-type': 'context-menu',\n                        }, [contextMenuButton]));\n                    }\n\n                    sheetElements.push(element(\"li\", attr, elementContent));\n                }\n\n                kendo.destroy(this._sheetsWrapper());\n                this._addButton();\n                this._menuButton();\n                this._tree.render([ this._createSheetsWrapper(sheetElements, renderScrollButtons)]);\n                this._initSheetDropDownButtons();\n            },\n            _initSheetDropDownButtons: function() {\n                let that = this;\n                this.element.find(\"[ref-sheetsbar-more-button]\").each(function(ind, btnEl){\n                    let el = $(btnEl);\n                    let allSheets = that._sheets || [];\n                    let visibleSheets = allSheets.filter(sheet => sheet.state() === 'visible');\n                    let isSingleVisibleSheet = !that._sheets || that._sheets && visibleSheets.length < 2;\n                    let sheetName = el.data(\"sheetName\");\n                    let shouldAllowMoveRight = !(isSingleVisibleSheet || (that._sheets && ind == allSheets.length - 1));\n                    let shouldAllowMoveLeft = !(isSingleVisibleSheet || (that._sheets && ind === 0));\n                    el.kendoDropDownButton({\n                        icon: SheetsBar.classNames.sheetsBarMoreIcon,\n                        fillMode: \"flat\",\n                        items: [\n                            { text: \"Delete\", icon: \"trash\", attributes: { \"data-command\": \"delete\", \"data-sheet-name\": sheetName }, enabled: !isSingleVisibleSheet },\n                            { text: \"Duplicate\", icon: \"copy\", attributes: { \"data-command\": \"duplicate\", \"data-sheet-name\": sheetName } },\n                            { text: \"Rename\", icon: \"pencil\", attributes: { \"data-command\": \"rename\", \"data-sheet-name\": sheetName } },\n                            { text: \"Hide\", icon: \"eye-slash\", attributes: { \"data-command\": \"hide\", \"data-sheet-name\": sheetName }, enabled: !isSingleVisibleSheet },\n                            { text: \"Move Right\", icon: \"arrow-right\", attributes: { \"data-command\": \"move-right\", \"data-sheet-name\": sheetName }, enabled: shouldAllowMoveRight },\n                            { text: \"Move Left\", icon: \"arrow-left\", attributes: { \"data-command\": \"move-left\", \"data-sheet-name\": sheetName }, enabled: shouldAllowMoveLeft },\n                        ],\n                        click: that._onSheetContextMenu.bind(that)\n                    });\n                });\n            },\n            _createSheetsWrapper: function(sheetElements, renderScrollButtons) {\n                var element = kendo.dom.element;\n                var classNames = SheetsBar.classNames;\n                var itemsWrapper = element('div', { className: 'k-tabstrip-items-wrapper k-hstack' });\n                var childrenElements = [element(\"ul\", {\n                    className: classNames.sheetsBarKReset,\n                    role: \"tablist\"\n                }, sheetElements), null, null];\n\n                renderScrollButtons = true;\n\n                if (renderScrollButtons) {\n                    var baseButtonClass = classNames.sheetsBarKButton + EMPTYCHAR + classNames.sheetsBarKButtonBare + EMPTYCHAR;\n\n                    childrenElements[1] = (element(\"button\", { ariaHidden: \"true\", tabIndex: -1, className: baseButtonClass + classNames.sheetsBarPrev }, [\n                        element($(kendo.ui.icon({ icon: classNames.sheetsBarArrowWIcon, iconClass: \"k-button-icon\" }))[0])\n                    ]));\n\n                    childrenElements[2] = (element(\"button\", { ariaHidden: \"true\", tabIndex: -1, className: baseButtonClass + classNames.sheetsBarNext }, [\n                        element($(kendo.ui.icon({ icon: classNames.sheetsBarArrowEIcon, iconClass: \"k-button-icon\" }))[0])\n                    ]));\n                }\n\n                itemsWrapper.children = childrenElements;\n\n                return element(\"div\", { className: classNames.sheetsBarItems }, [itemsWrapper]);\n            },\n\n            _createSortable: function() {\n                var classNames = SheetsBar.classNames;\n                this._sortable = new kendo.ui.Sortable(this.element, {\n                    filter: `ul li.${classNames.sheetsBarKItem}`,\n                    container: DOT + classNames.sheetsBarItems,\n                    axis: \"x\",\n                    animation: false,\n                    ignore: \"input\",\n                    end: function() {\n                        if (this.draggable.hint) {\n                            this.draggable.hint.remove();\n                        }\n                    },\n                    hint: function(element) {\n                        var hint = $(element).clone().attr(\"ref-sheetsbar-sortable-hint\", \"\");\n                        return hint.wrap(\"<div class='\" + classNames.sheetsBarHintWrapper + \"'><ul class='\" + classNames.sheetsBarKResetItems + \"'></ul></div>\").closest(\"div\");\n                    }\n                });\n            },\n\n            _onEditorKeydown: function(e) {\n                if (this._editor) {\n                    if (e.which === 13) {\n                        this._destroyEditor();\n                    }\n\n                    if (e.which === 27) {\n                        this._destroyEditor(true);\n                    }\n                }\n            },\n\n            _onEditorBlur: function() {\n                if (this._editor) {\n                    this._destroyEditor();\n                }\n            },\n\n            _onSheetReorderEnd: function(e) {\n                e.preventDefault();\n                this.trigger(\"reorder\", { oldIndex: e.oldIndex, newIndex: e.newIndex });\n            },\n\n            _onSheetReorderStart: function(e) {\n                if (this._editor) {\n                    e.preventDefault();\n                }\n            },\n            _onSheetContextMenu: function(e) {\n                let sheetName = $(e.target).closest(\"li\").data(\"sheetName\");\n                let command = $(e.target).closest(\"li\").data(\"command\");\n\n                if (this._editor) {\n                    this._destroyEditor();\n                }\n\n                if (sheetName && command) {\n                    switch(command) {\n                        case \"delete\":\n                            this._onSheetRemove(e);\n                            break;\n                        case \"duplicate\":\n                            this._onSheetDuplicate(sheetName);\n                            break;\n                        case \"rename\":\n                            this._renamePrompt(sheetName);\n                            break;\n                        case \"hide\":\n                            this._hideSheet(sheetName);\n                            break;\n                        case \"move-right\":\n                            this._moveSheet(sheetName, 1);\n                            break;\n                        case \"move-left\":\n                            this._moveSheet(sheetName, -1);\n                            break;\n                    }\n                }\n            },\n            _onSheetDuplicate: function(sheetName) {\n                this.trigger(\"duplicate\", { name: sheetName });\n            },\n            _renamePrompt: function(sheetName) {\n                let renameSheetIndex = this._sheets.findIndex(sh => sh.name() == sheetName);\n                let closeCallback = function(e) {\n                    let dlg = e.sender;\n                    if (dlg._newSheetName && dlg._newSheetName !== sheetName) {\n                        this.trigger(\"rename\", { name: dlg._newSheetName, sheetIndex: renameSheetIndex });\n                    }\n                }.bind(this);\n\n                this._openDialog(\"renameSheet\", {\n                    close: closeCallback,\n                    _oldSheetName: sheetName\n                });\n            },\n            _hideSheet: function(sheetName) {\n                this.trigger(\"hide\", { name: sheetName });\n            },\n            _moveSheet: function(sheetName, direction) {\n                let sheetIndex = this._sheets.findIndex(sheet => sheet.name() === sheetName);\n                let newSheetIndex = sheetIndex + direction;\n                if (newSheetIndex < 0 || newSheetIndex >= this._sheets.length) {\n                    return;\n                }\n\n                this.trigger(\"reorder\", { oldIndex: sheetIndex, newIndex: newSheetIndex });\n            },\n            _onSheetRemove: function(e) {\n                var removedSheetName = $(e.target).closest(\"li\").data(\"sheetName\");\n\n                if (this._editor) {\n                    this._destroyEditor();\n                }\n\n                var closeCallback = function(e) {\n                    var dlg = e.sender;\n\n                    if (dlg.isConfirmed()) {\n                        this.trigger(\"remove\", { name: removedSheetName, confirmation: true });\n                    }\n                }.bind(this);\n\n                this._openDialog(\"confirmation\", {\n                    close: closeCallback\n                });\n            },\n\n            _onSheetSelect: function(e) {\n                var selectedSheetText = $(e.target).text();\n\n                if ($(e.target).is(DOT + SheetsBar.classNames.sheetsBarEditor) || !selectedSheetText) {\n                    e.preventDefault();\n                    return;\n                }\n\n                if (this._editor) {\n                    this._destroyEditor();\n                }\n\n                this._scrollSheetsToItem($(e.target).closest(\"li\"));\n                this.trigger(\"select\", { name: selectedSheetText, isAddButton: false });\n            },\n\n            _onSheetRename: function(newSheetName) {\n                if (this._sheets[this._selectedIndex].name() === newSheetName || newSheetName === null) {\n                    return;\n                }\n\n                this.trigger(\"rename\", { name: newSheetName, sheetIndex: this._selectedIndex });\n            },\n\n            _onAddSelect: function(ev) {\n                ev.sender.element.removeClass(\"k-focus\");\n                this.trigger(\"select\", { isAddButton: true });\n            },\n\n            _onMenuSelect: function(ev) {\n                let sheetName = $(ev.target).closest(\"li\").data(\"sheetName\");\n                if (sheetName) {\n                    this.trigger(\"show\", { name: sheetName });\n                }\n            },\n\n            _addButton: function() {\n                var classNames = SheetsBar.classNames;\n                let addButton = this.element.find(\".\" + classNames.sheetsBarAdd);\n                if (!addButton.length) {\n                    addButton = $(`<button class=\"${classNames.sheetsBarAdd}\" aria-label=\"Add new sheet\"></button>`).appendTo(this.element);\n                } else {\n                    kendo.destroy(addButton);\n                }\n\n                addButton.kendoButton({\n                    icon: classNames.sheetsBarPlusIcon,\n                    fillMode: \"flat\",\n                    click: this._onAddSelect.bind(this)\n                });\n            },\n            _menuButton: function() {\n                var classNames = SheetsBar.classNames;\n                let menuButton = this.element.find(\".\" + classNames.sheetsBarSheetsMenu);\n                if (!menuButton.length) {\n                    menuButton = $(`<button class=\"${classNames.sheetsBarSheetsMenu}\"></button>`).appendTo(this.element);\n                } else {\n                    kendo.destroy(menuButton);\n                }\n\n                menuButton.kendoDropDownButton({\n                    icon: classNames.sheetsBarMenuIcon,\n                    fillMode: \"flat\",\n                    items: (this._sheets || []).map(sheet => ({\n                        text: sheet.name(),\n                        attributes: { 'data-sheet-name': sheet.name() },\n                        icon: sheet.state() === 'visible' ? 'eye' : 'eye-slash',\n                        cssClass: classNames\n                    })),\n                    click: this._onMenuSelect.bind(this)\n                });\n            },\n\n            destroy: function() {\n                this._sortable.destroy();\n            },\n\n            _scrollableAllowed: function() {\n                var options = this.options;\n                return options.scrollable && !isNaN(options.scrollable.distance);\n            },\n\n            _scrollSheetsToItem: function(item) {\n                var that = this;\n                var sheetsGroup = that._sheetsGroup();\n                var currentScrollOffset = kendo.scrollLeft(sheetsGroup);\n                var itemWidth = outerWidth(item);\n                var itemOffset = that._isRtl ? item.position().left : item.position().left - sheetsGroup.children().first().position().left;\n                var sheetsGroupWidth = sheetsGroup[0].offsetWidth;\n                var itemPosition;\n\n                if (that._isRtl) {\n                    if (itemOffset < 0) {\n                        itemPosition = currentScrollOffset + itemOffset - (sheetsGroupWidth - currentScrollOffset);\n                    } else if (itemOffset + itemWidth > sheetsGroupWidth) {\n                        itemPosition = currentScrollOffset + itemOffset - itemWidth;\n                    }\n                } else {\n                    if (currentScrollOffset + sheetsGroupWidth < itemOffset + itemWidth) {\n                        itemPosition = itemOffset + itemWidth - sheetsGroupWidth;\n                    } else if (currentScrollOffset > itemOffset) {\n                        itemPosition = itemOffset;\n                    }\n                }\n\n                sheetsGroup.finish().animate({ \"scrollLeft\": itemPosition }, \"fast\", \"linear\", function() {\n                    that._toggleScrollButtons();\n                });\n            },\n\n            _sheetsGroup: function() {\n                return this._sheetsWrapper().find(\"ul\");\n            },\n\n            _sheetsWrapper: function() {\n                return this.element.find(DOT + SheetsBar.classNames.sheetsBarItems);\n            },\n\n            _scrollSheetsByDelta: function(delta) {\n                var that = this;\n                var sheetsGroup = that._sheetsGroup();\n                var scrLeft = kendo.scrollLeft(sheetsGroup);\n\n                sheetsGroup.finish().animate({ \"scrollLeft\": scrLeft + delta }, \"fast\", \"linear\", function() {\n                    if (that._nowScrollingSheets) {\n                        that._scrollSheetsByDelta(delta);\n                    } else {\n                        that._toggleScrollButtons();\n                    }\n                });\n            }\n        });\n\n        kendo.spreadsheet.SheetsBar = SheetsBar;\n        $.extend(true, SheetsBar, { classNames: sheetsBarClassNames });\n    })(window.kendo);\n\n(function(kendo) {\n\n        var $ = kendo.jQuery;\n        var Widget = kendo.ui.Widget;\n        var classNames = {\n            details: \"k-details\",\n            button: \"k-button\",\n            detailsSummary: \"k-details-summary\",\n            detailsContent: \"k-details-content\",\n            icon: \"k-icon\",\n            iconCollapseName: \"caret-br\",\n            iconExpandName: \"caret-alt-right\",\n            iconSearchName: \"search\",\n            textbox: \"k-textbox\",\n            wrapper: \"k-spreadsheet-filter-menu\",\n            filterByCondition: \"k-spreadsheet-condition-filter\",\n            filterByValue: \"k-spreadsheet-value-filter\",\n            valuesTreeViewWrapper: \"k-spreadsheet-value-treeview-wrapper\",\n            actionButtons: \"k-actions\"\n        };\n\n        kendo.spreadsheet.messages.filterMenu = {\n            all: \"All\",\n            sortAscending: \"Sort range A to Z\",\n            sortDescending: \"Sort range Z to A\",\n            filterByValue: \"Filter by value\",\n            filterByCondition: \"Filter by condition\",\n            apply: \"Apply\",\n            search: \"Search\",\n            addToCurrent: \"Add to current selection\",\n            clear: \"Clear\",\n            blanks: \"(Blanks)\",\n            operatorNone: \"None\",\n            and: \"AND\",\n            or: \"OR\",\n            operators: {\n                string: {\n                    contains: \"Text contains\",\n                    doesnotcontain: \"Text does not contain\",\n                    startswith: \"Text starts with\",\n                    endswith: \"Text ends with\",\n                    matches: \"Text matches\",\n                    doesnotmatch: \"Text does not match\"\n                },\n                date: {\n                    eq:  \"Date is\",\n                    neq: \"Date is not\",\n                    lt:  \"Date is before\",\n                    gt:  \"Date is after\"\n                },\n                number: {\n                    eq: \"Is equal to\",\n                    neq: \"Is not equal to\",\n                    gte: \"Is greater than or equal to\",\n                    gt: \"Is greater than\",\n                    lte: \"Is less than or equal to\",\n                    lt: \"Is less than\"\n                }\n            }\n        };\n\n        var Details = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this.element.addClass(FilterMenu.classNames.details);\n\n                this._summary = this.element.find(\".\" + FilterMenu.classNames.detailsSummary)\n                    .on(\"click\", this._toggle.bind(this));\n\n                var iconName = options.expanded ? FilterMenu.classNames.iconCollapseName : FilterMenu.classNames.iconExpandName;\n                this._icon = $(kendo.ui.icon(iconName))\n                    .prependTo(this._summary);\n\n                this._container = kendo.wrap(this._summary.next(), true);\n\n                if (!options.expanded) {\n                    this._container.hide();\n                }\n            },\n            options: {\n                name: \"Details\"\n            },\n            events: [ \"toggle\" ],\n            visible: function() {\n                return this.options.expanded;\n            },\n            toggle: function(show) {\n                var animation = kendo.fx(this._container).expand(\"vertical\");\n\n                animation.stop()[show ? \"reverse\" : \"play\"]();\n                kendo.ui.icon(this._icon, { icon: show ? FilterMenu.classNames.iconExpandName : FilterMenu.classNames.iconCollapseName });\n\n                this.options.expanded = !show;\n            },\n            _toggle: function() {\n                var show = this.visible();\n                this.toggle(show);\n                this.trigger(\"toggle\", { show: show });\n            }\n        });\n\n        kendo.data.binders.spreadsheetFilterValue = kendo.data.Binder.extend({\n            init: function(element, bindings, options) {\n                kendo.data.Binder.fn.init.call(this, element, bindings, options);\n\n                this._change = this.change.bind(this);\n                $(this.element).on(\"change\", this._change);\n            },\n            refresh: function() {\n                var that = this,\n                    value = that.bindings.spreadsheetFilterValue.get(); //get the value from the View-Model\n\n                $(that.element).val(value instanceof Date ? \"\" : value);\n            },\n            change: function() {\n                var value = this.element.value;\n                this.bindings.spreadsheetFilterValue.set(value); //update the View-Model\n            }\n        });\n\n        kendo.data.binders.widget.spreadsheetFilterValue = kendo.data.Binder.extend({\n            init: function(widget, bindings, options) {\n                kendo.data.Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n                this._change = this.change.bind(this);\n                this.widget.first(\"change\", this._change);\n            },\n            refresh: function() {\n                var binding = this.bindings.spreadsheetFilterValue,\n                    value = binding.get(),\n                    type = $(this.widget.element).data(\"filterType\");\n\n                if ((type === \"date\" && value instanceof Date) || (type === \"number\" && !isNaN(value))) {\n                    this.widget.value(value);\n                } else {\n                    this.widget.value(null);\n                }\n            },\n            change: function() {\n                var value = this.widget.value(),\n                    binding = this.bindings.spreadsheetFilterValue;\n\n                binding.set(value);\n            }\n        });\n\n        var templates = {\n            filterByValue: (data) =>\n                `<div class='${classNames.detailsSummary}'>${data.messages.filterByValue}</div>` +\n                `<div class='${classNames.detailsContent}'>` +\n                    \"<div class='k-searchbox k-input k-input-md k-rounded-md k-input-solid'>\" +\n                        kendo.ui.icon({ icon: \"search\", iconClass: \"k-input-icon\" }) +\n                        `<input class='k-input-inner' autocomplete='off' placeholder='${data.messages.search}' data-${data.ns}bind='events: { input: filterValues }' />` +\n                    \"</div>\" +\n                    `<div data-${data.ns}bind='visible: hasActiveSearch'><input class='k-checkbox k-checkbox-md k-rounded-md' type='checkbox' data-${data.ns}bind='checked: appendToSearch' id='_${data.guid}'/><label class='k-checkbox-label' for='_${data.guid}'>${data.messages.addToCurrent}</label></div>` +\n                    `<div class='${classNames.valuesTreeViewWrapper}'>` +\n                        `<div data-${data.ns}role='treeview' ` +\n                            `bind:data-${data.ns}checkboxes='checkboxesConfig' `+\n                            `data-${data.ns}bind='source: valuesDataSource, events: { check: valuesChange, select: valueSelect }' `+\n                            \"></div>\" +\n                    \"</div>\" +\n                \"</div>\",\n            filterByCondition: (data) =>\n                `<div class='${classNames.detailsSummary}'>${data.messages.filterByCondition}</div>` +\n                `<div class='${classNames.detailsContent}'>` +\n                    '<div>' +\n                        '<select ' +\n                            `aria-label=\"${data.messages.filterByCondition}\" ` +\n                            `data-${data.ns}role=\"dropdownlist\"` +\n                            `data-${data.ns}bind=\"value: operator, source: operators, events: { change: operatorChange } \"` +\n                            `data-${data.ns}value-primitive=\"false\"` +\n                            `data-${data.ns}option-label=\"${data.messages.operatorNone}\"` +\n                            `data-${data.ns}height=\"auto\"` +\n                            `data-${data.ns}text-field=\"text\"` +\n                            `data-${data.ns}value-field=\"unique\">`+\n                        '</select>'+\n                    '</div>' +\n\n                    `<div data-${data.ns}bind=\"visible: isString\">` +\n                        `<input aria-label=\"string-value\" data-filter-type=\"string\" data-${data.ns}bind=\"spreadsheetFilterValue: customFilter.criteria[0].value\" class=\"k-textbox\" />`+\n                    '</div>' +\n\n                    `<div data-${data.ns}bind=\"visible: isNumber\">` +\n                        `<input aria-label=\"number-value\" data-filter-type=\"number\" data-${data.ns}role=\"numerictextbox\" data-${data.ns}bind=\"spreadsheetFilterValue: customFilter.criteria[0].value\" />`+\n                    '</div>' +\n\n                    `<div data-${data.ns}bind=\"visible: isDate\">` +\n                        `<input aria-label=\"date-value\" data-filter-type=\"date\" data-${data.ns}role=\"datepicker\" data-${data.ns}bind=\"spreadsheetFilterValue: customFilter.criteria[0].value\" />`+\n                    '</div>' +\n                \"</div>\",\n            menuItem: (data) =>\n                `<li data-command='${data.command}' data-dir='${data.dir}'>` +\n                    `${kendo.ui.icon(data.iconClass)}${data.text}` +\n                \"</li>\",\n            actionButtons: (data) =>\n                `<button data-${data.ns}bind='click: apply' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary'><span class='k-button-text'>${data.messages.apply}</span></button>` +\n                `<button data-${data.ns}bind='click: clear' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'><span class='k-button-text'>${data.messages.clear}</span></button>`\n        };\n\n        function distinctValues(values) {\n            var hash = {};\n            var result = [];\n\n            for (var i = 0; i < values.length; i++) {\n                if (!hash[values[i].value]) {\n                    hash[values[i].value] = values[i];\n                    result.push(values[i]);\n                } else if (!hash[values[i].value].checked && values[i].checked) {\n                    hash[values[i].value].checked = true;\n                }\n            }\n\n            return result;\n        }\n\n        function filter(dataSource, query) {\n            var hasVisibleChildren = false;\n            var data = dataSource instanceof kendo.data.HierarchicalDataSource && dataSource.data();\n            var valuesFilter = this;\n            var values = this.values;\n            for (var i = 0; i < data.length; i++) {\n                var item = data[i];\n                var text = item.text.toString().toLocaleLowerCase(kendo.culture().name);\n                var itemVisible = query === true || query === \"\" || text.indexOf(query) >= 0;\n                var filterSpread = filter.bind(valuesFilter);\n                var anyVisibleChildren = filterSpread(item.children, query); // pass true if parent matches\n\n                hasVisibleChildren = hasVisibleChildren || anyVisibleChildren || itemVisible;\n                item.hidden = !itemVisible && !anyVisibleChildren;\n\n                if (query.length || (values && !values.length)) {\n                    item.checked = !item.hidden;\n                } else if (values && values.indexOf(item.text) != -1){\n                    item.checked = true;\n                }\n            }\n\n            if (data) {\n                // re-apply filter on children\n                dataSource.filter({ field: \"hidden\", operator: \"neq\", value: true });\n            }\n\n            return hasVisibleChildren;\n        }\n\n        function uncheckAll(dataSource) {\n            var data = dataSource instanceof kendo.data.HierarchicalDataSource && dataSource.data();\n\n            for (var i = 0; i < data.length; i++) {\n                var item = data[i];\n                item.checked = false;\n\n                if (item.hasChildren) {\n                    uncheckAll(item.children);\n                }\n            }\n        }\n\n        var FilterMenuViewModel = kendo.spreadsheet.FilterMenuViewModel = kendo.data.ObservableObject.extend({\n            valuesChange: function(e) {\n                var dataSource = e ? e.sender.dataSource : this.valuesDataSource;\n                var checked = function(item) {\n                    return item.checked;\n                };\n                var value = function(item) {\n                    return item.dataType === \"date\" ? kendo.spreadsheet.dateToNumber(item.value) : item.value;\n                };\n                var unique = function(value, index, array) {\n                    return array.lastIndexOf(value) === index;\n                };\n                var data = dataSource.data();\n                var values = data.toJSON()[0].items;\n                var blanks = values.filter(function(item) {\n                    return item.dataType === \"blank\";\n                });\n\n                blanks = blanks.length ? blanks[0].checked : false;\n                values = values.filter(checked).map(value);\n\n                if (this.appendToSearch && this.valueFilter && this.valueFilter.values.length) {\n                    values = values.concat(this.valueFilter.values.toJSON()).sort().filter(unique);\n                }\n\n                this.set(\"valueFilter\", {\n                    values: values,\n                    blanks: blanks\n                });\n            },\n            valueSelect: function(e) {\n                e.preventDefault();\n\n                var node = e.sender.dataItem(e.node);\n                node.set(\"checked\", !node.checked);\n            },\n            hasActiveSearch: false,\n            appendToSearch: false,\n            filterValues: function(e) {\n                var query = typeof e == \"string\" ? e : $(e.target).val().toLocaleLowerCase(kendo.culture().name);\n                var dataSource = this.valuesDataSource;\n\n                this.set(\"hasActiveSearch\", !!query);\n\n                var filterSpread = filter.bind(this.valueFilter);\n                uncheckAll(dataSource);\n                filterSpread(dataSource, query);\n            },\n            reset: function() {\n                this.set(\"customFilter\", { logic: \"and\", criteria: [ { operator: null, value: null } ] });\n                this.set(\"valueFilter\", { values: [] });\n            },\n            operatorChange: function(e) {\n                var dataItem = e.sender.dataItem();\n                this.set(\"operatorType\", dataItem.type);\n\n                // https://github.com/telerik/kendo-ui-core/issues/3317 - when switching from Value\n                // filter to “filter by condition”, the customFilter property is lost.\n                if (!this.get(\"customFilter\")) {\n                    this.reset();\n                }\n\n                this.set(\"customFilter.criteria[0].operator\", dataItem.value);\n            },\n            isNone: function() {\n                return this.get(\"operatorType\") === undefined;\n            },\n            isString: function() {\n                return this.get(\"operatorType\") === \"string\";\n            },\n            isNumber: function() {\n                return this.get(\"operatorType\") === \"number\";\n            },\n            isDate: function() {\n                return this.get(\"operatorType\") === \"date\";\n            }\n        });\n\n        function flattenOperators(operators) {\n            var messages = kendo.spreadsheet.messages.filterMenu.operators;\n            var result = [];\n            for (var type in operators) {\n                if (!operators.hasOwnProperty(type)) {\n                    continue;\n                }\n\n                for (var operator in operators[type]) {\n                    if (!operators[type].hasOwnProperty(operator)) {\n                        continue;\n                    }\n\n                    result.push({\n                        text: messages[type][operator],\n                        value: operator,\n                        unique: type + \"_\" + operator,\n                        type: type\n                    });\n                }\n            }\n            return result;\n        }\n\n        var FilterMenuController = kendo.spreadsheet.FilterMenuController = {\n            valuesTree: function(range, column) {\n                return [{\n                    text: kendo.spreadsheet.messages.filterMenu.all,\n                    expanded: true,\n                    checked: false,\n                    items: this.values(range.resize({ top: 1 }), column)\n                }];\n            },\n            values: function(range, column) {\n                var values = [];\n                var messages = kendo.spreadsheet.messages.filterMenu;\n                var columnRange = range.column(column);\n                var sheet = range.sheet();\n\n                columnRange.forEachCell(function(row, col, cell) {\n                    var checked = true;\n                    if (sheet.isHiddenRow(row)) {\n                        checked = false;\n                    }\n\n                    var value = cell.value;\n                    var dataType = cell.dataType;\n                    var text = cell.text;\n\n                    if (value === undefined) {\n                        dataType = \"blank\";\n                    } else if (cell.format) {\n                        dataType = kendo.spreadsheet.formatting.type(value, cell.format);\n                    } else {\n                        dataType = typeof value;\n                    }\n\n                    if (value !== null && cell.format) {\n                        text = kendo.spreadsheet.formatting.text(value, cell.format);\n                    } else {\n                        text = dataType == \"blank\" ? messages.blanks : value;\n                    }\n\n                    if (dataType === \"percent\" || dataType === \"currency\") { //treat percent as number\n                        dataType = \"number\";\n                    }\n\n                    if (dataType === \"date\") {\n                        value = kendo.spreadsheet.numberToDate(value);\n                    }\n\n                    values.push({\n                        dataType: dataType,\n                        value: value,\n                        text: text,\n                        checked: checked\n                    });\n                });\n\n                values = distinctValues(values);\n\n                values.sort(function(a, b) {\n                    if (a.dataType === b.dataType) {\n                        return 0;\n                    }\n\n                    if (a.dataType === \"blank\" || b.dataType === \"blank\") {\n                        return a.dataType === \"blank\" ? -1 : 1;\n                    }\n\n                    if (a.dataType === \"number\" || b.dataType === \"number\") {\n                        return a.dataType === \"number\" ? -1 : 1;\n                    }\n\n                    if (a.dataType === \"date\" || b.dataType === \"date\") {\n                        return a.dataType === \"date\" ? -1 : 1;\n                    }\n\n                    return 0;\n                });\n\n                return values;\n            },\n\n            filterType: function(range, column) {\n                // 1. try to infer type from current filter\n                var sheet = range.sheet();\n                var filter = this.filterForColumn(column, sheet);\n                var type;\n\n                filter = filter && filter.filter.toJSON();\n\n                if (filter && filter.filter == \"custom\") {\n                    var value = filter.criteria[0].value;\n\n                    if (value instanceof Date) {\n                        type = \"date\";\n                    } else if (typeof value == \"string\") {\n                        type = \"string\";\n                    } else if (typeof value == \"number\") {\n                        type = \"number\";\n                    }\n                }\n\n                if (!type) {\n                    // 2. try to infer type from column data\n                    var topValue = this.values(range.row(1), column)[0];\n                    type = topValue && topValue.dataType;\n\n                    if (type == \"blank\") {\n                        type = null;\n                    }\n                }\n\n                return type;\n            },\n\n            filterForColumn: function(column, sheet) {\n                var allFilters = sheet.filter();\n                var filters;\n\n                if (allFilters) {\n                    filters =  allFilters.columns.filter(function(item) {\n                        return item.index === column;\n                    })[0];\n                }\n\n                return filters;\n            },\n\n            filter: function(column, sheet) {\n                var columnFilters = this.filterForColumn(column, sheet);\n\n                if (!columnFilters) {\n                    return;\n                }\n\n                var options = columnFilters.filter.toJSON();\n                var type = options.filter;\n\n                delete options.filter;\n\n                var result = {\n                    type: type,\n                    options: options\n                };\n\n                var criteria = options.criteria;\n                if (criteria && criteria.length) {\n                    result.operator = criteria[0].operator;\n                }\n\n                return result;\n            }\n        };\n\n        var FilterMenu = Widget.extend({\n            init: function(element, options) {\n                Widget.call(this, element, options);\n\n                this.element.addClass(FilterMenu.classNames.wrapper);\n\n                this.viewModel = new FilterMenuViewModel({\n                    active: \"value\",\n                    checkboxesConfig: { checkChildren: true },\n                    operator: null,\n                    operators: flattenOperators(this.options.operators),\n                    clear: this.clear.bind(this),\n                    apply: this.apply.bind(this)\n                });\n\n                this._filterInit();\n                this._popup();\n                this._sort();\n                this._filterByCondition();\n                this._filterByValue();\n                this._actionButtons();\n            },\n\n            options: {\n                name: \"FilterMenu\",\n                column: 0,\n                range: null,\n                operators: {\n                    string: {\n                        contains: \"Text contains\",\n                        doesnotcontain: \"Text does not contain\",\n                        startswith: \"Text starts with\",\n                        endswith: \"Text ends with\",\n                        matches: \"Text matches\",\n                        doesnotmatch: \"Text does not match\"\n                    },\n                    date: {\n                        eq:  \"Date is\",\n                        neq: \"Date is not\",\n                        lt:  \"Date is before\",\n                        gt:  \"Date is after\"\n                    },\n                    number: {\n                        eq: \"Is equal to\",\n                        neq: \"Is not equal to\",\n                        gte: \"Is greater than or equal to\",\n                        gt: \"Is greater than\",\n                        lte: \"Is less than or equal to\",\n                        lt: \"Is less than\"\n                    }\n                }\n            },\n\n            events: [\n                \"action\"\n            ],\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.menu.destroy();\n                this.valuesTreeView.destroy();\n                this.popup.destroy();\n            },\n\n            openFor: function(anchor, event) {\n                if ($(anchor).hasClass(\"k-spreadsheet-view-size\")) {\n                    // on touch devices this element will sit above to\n                    // enable scrolling; it's not useful as an anchor,\n                    // use event coords instead.\n                    this.popup.open(event.pageX, event.pageY);\n                } else {\n                    this.popup.setOptions({ anchor: anchor });\n                    this.popup.open();\n                }\n            },\n\n            close: function() {\n                this.popup.close();\n            },\n\n            clear: function() {\n                this.action({\n                    command: \"ClearFilterCommand\",\n                    options: {\n                        column: this.options.column\n                    }\n                });\n                this.viewModel.reset();\n                this.close();\n            },\n\n            apply: function() {\n                this._active();\n\n                var options = {\n                    operatingRange: this.options.range,\n                    column: this.options.column\n                };\n\n                var valueFilter;\n                var customFilter;\n\n                if (this.viewModel.active === \"value\") {\n                    this.viewModel.valuesChange({ sender: this.valuesTreeView });\n                    valueFilter = this.viewModel.valueFilter.toJSON();\n\n                    if (valueFilter.blanks || (valueFilter.values && valueFilter.values.length)) {\n                        options.valueFilter = valueFilter;\n                    }\n                } else if (this.viewModel.active === \"custom\") {\n                    customFilter = this.viewModel.customFilter.toJSON();\n\n                    if (customFilter.criteria.length && customFilter.criteria[0].value !== null) {\n                        options.customFilter = customFilter;\n                    }\n                }\n\n                if (options.valueFilter || options.customFilter) {\n                    this.action({ command: \"ApplyFilterCommand\", options: options });\n                }\n            },\n\n            action: function(options) {\n                this.trigger(\"action\", $.extend({ }, options));\n            },\n\n            _filterInit: function() {\n                var column = this.options.column;\n                var range = this.options.range;\n                var sheet = range.sheet();\n                var activeFilter = FilterMenuController.filter(column, sheet);\n\n                if (activeFilter) {\n                    var filterType = FilterMenuController.filterType(range, column);\n\n                    this.viewModel.set(\"active\", activeFilter.type);\n                    this.viewModel.set(activeFilter.type + \"Filter\", activeFilter.options);\n\n                    if (activeFilter.type == \"custom\") {\n                        this.viewModel.set(\"operator\", filterType + \"_\" + activeFilter.operator);\n                        this.viewModel.set(\"operatorType\", filterType);\n                    }\n                } else {\n                    this.viewModel.reset();\n                }\n            },\n\n            _popup: function() {\n                this.popup = this.element.kendoPopup({\n                    copyAnchorStyles: false\n                }).data(\"kendoPopup\");\n            },\n\n            _sort: function() {\n                var template = kendo.template(FilterMenu.templates.menuItem);\n                var messages = kendo.spreadsheet.messages.filterMenu;\n                var items = [\n                    { command: \"sort\", dir: \"asc\", text: messages.sortAscending, iconClass: \"sort-asc\" },\n                    { command: \"sort\", dir: \"desc\", text: messages.sortDescending, iconClass: \"sort-desc\" }\n                ];\n\n                var ul = $(\"<ul></ul>\", {\n                    \"html\": kendo.render(template, items)\n                }).appendTo(this.element);\n\n                this.menu = ul.kendoMenu({\n                    orientation: \"vertical\",\n                    select: function(e) {\n                        var dir = $(e.item).data(\"dir\");\n                        var range = this.options.range.resize({ top: 1 });\n                        var options = {\n                            value: dir,\n                            sheet: false,\n                            operatingRange: range,\n                            column: this.options.column\n                        };\n\n                        this.action({ command: \"SortCommand\", options: options });\n                    }.bind(this)\n                }).data(\"kendoMenu\");\n            },\n\n            _appendTemplate: function(template, className, details, expanded) {\n                var compiledTemplate = kendo.template(template);\n                var wrapper = $(\"<div class='\" + className + \"'/>\").html(compiledTemplate({\n                    messages: kendo.spreadsheet.messages.filterMenu,\n                    guid: kendo.guid(),\n                    ns: kendo.ns\n                }));\n\n                this.element.append(wrapper);\n\n                if (details) {\n                    details = new Details(wrapper, { expanded: expanded, toggle: this._detailToggle.bind(this) });\n                }\n\n                kendo.bind(wrapper, this.viewModel);\n\n                return wrapper;\n            },\n\n            _detailToggle: function(e) {\n                this.element\n                    .find(\"[\" + kendo.attr(\"role\") + \"=details]\")\n                    .not(e.sender.element)\n                    .data(\"kendoDetails\")\n                    .toggle(!e.show);\n            },\n\n            _filterByCondition: function() {\n                var isExpanded = this.viewModel.active === \"custom\";\n                this._appendTemplate(FilterMenu.templates.filterByCondition, FilterMenu.classNames.filterByCondition, true, isExpanded);\n            },\n\n            _filterByValue: function() {\n                var isExpanded = this.viewModel.active === \"value\";\n                var wrapper = this._appendTemplate(FilterMenu.templates.filterByValue, FilterMenu.classNames.filterByValue, true, isExpanded);\n\n                this.valuesTreeView = wrapper.find(\"[\" + kendo.attr(\"role\") + \"=treeview]\").data(\"kendoTreeView\");\n\n                var values = FilterMenuController.valuesTree(this.options.range, this.options.column);\n\n                this.viewModel.set(\"valuesDataSource\", new kendo.data.HierarchicalDataSource({ data: values, accentFoldingFiltering: kendo.culture().name }));\n            },\n\n            _actionButtons: function() {\n                this._appendTemplate(FilterMenu.templates.actionButtons, FilterMenu.classNames.actionButtons, false);\n            },\n\n            _active: function() {\n                var activeContainer = this.element.find(\"[\" + kendo.attr(\"role\") + \"=details]\").filter(function(index, element) {\n                    return $(element).data(\"kendoDetails\").visible();\n                });\n\n                if (activeContainer.hasClass(FilterMenu.classNames.filterByValue)) {\n                    this.viewModel.set(\"active\", \"value\");\n                } else if (activeContainer.hasClass(FilterMenu.classNames.filterByCondition)) {\n                    this.viewModel.set(\"active\", \"custom\");\n                }\n            }\n        });\n\n        kendo.spreadsheet.FilterMenu = FilterMenu;\n        $.extend(true, FilterMenu, { classNames: classNames, templates: templates });\n\n    })(window.kendo);\n\n(function(kendo) {\n\n    kendo.spreadsheet.messages.workbook = {\n        defaultSheetName: \"Sheet\"\n    };\n\n    kendo.spreadsheet.messages.view = {\n        nameBox: \"Name Box\",\n        formulaInput: \"Formula Input\",\n        errors: {\n            openUnsupported: \"Unsupported format. Please select an .xlsx file.\",\n            shiftingNonblankCells: \"Cannot insert cells due to data loss possibility. Select another insert location or delete the data from the end of your worksheet.\",\n            insertColumnWhenRowIsSelected: \"Cannot insert column when all columns are selected.\",\n            insertRowWhenColumnIsSelected: \"Cannot insert row when all rows are selected.\",\n            filterRangeContainingMerges: \"Cannot create a filter within a range containing merges\",\n            sortRangeContainingMerges: \"Cannot sort a range containing merges\",\n            cantSortMultipleSelection: \"Cannot sort multiple selection\",\n            cantSortNullRef: \"Cannot sort empty selection\",\n            cantSortMixedCells: \"Cannot sort range containing cells of mixed shapes\",\n            validationError: \"The value that you entered violates the validation rules set on the cell.\",\n            cannotModifyDisabled: \"Cannot modify disabled cells.\",\n            insertRowBelowLastRow: \"Cannot insert row below the last row.\",\n            insertColAfterLastCol: \"Cannot insert column to the right of the last column.\"\n        },\n        tabs: {\n            file: \"File\",\n            home: \"Home\",\n            insert: \"Insert\",\n            format: \"Format\",\n            data: \"Data\",\n            view: \"View\"\n        }\n    };\n\n    kendo.spreadsheet.messages.menus = {\n        \"cut\": \"Cut\",\n        \"copy\": \"Copy\",\n        \"paste\": \"Paste\",\n        \"merge\": \"Merge\",\n        \"unmerge\": \"Unmerge\",\n        \"delete\": \"Delete\",\n        \"hide\": \"Hide\",\n        \"unhide\": \"Unhide\",\n        \"bringToFront\": \"Bring to front\",\n        \"sendToBack\": \"Send to back\"\n    };\n})(window.kendo);\n\n(function(kendo) {\n    let $ = kendo.jQuery;\n\n    if (kendo.PDFMixin) {\n        let override_drawPDF = function(options) {\n            var result = new $.Deferred();\n            var callback = function(group) {\n                result.resolve(group);\n            };\n            switch(options.area) {\n            case \"workbook\":\n                options.workbook.draw(options, callback);\n                break;\n            case \"sheet\":\n                options.workbook.activeSheet().draw(options, callback);\n                break;\n            case \"selection\":\n                options.workbook.activeSheet().selection().draw(options, callback);\n                break;\n            }\n\n            return result.promise();\n        };\n\n         let overrideSaveAsPDF = function(options) {\n            if (this.events.indexOf(\"pdfExport\") === -1) {\n                kendo.PDFMixin.extend(this);\n                this.saveAsPDF = overrideSaveAsPDF;\n                this._drawPDF = override_drawPDF;\n            }\n\n            var progress = new $.Deferred();\n            var promise = progress.promise();\n            var args = { promise: promise };\n            if (this.trigger(\"pdfExport\", args)) {\n                return;\n            }\n\n            this._drawPDF(options, progress)\n            .then(function(root) {\n                let pdfResultPromise = options.forceProxy\n                    ? kendo.pdf.exportPDF(root) // produce data URI for proxy\n                    : kendo.pdf.exportPDFToBlob(root);\n                return kendo.convertPromiseToDeferred(pdfResultPromise);\n            })\n            .done(function(dataURI) {\n                kendo.saveAs({\n                    dataURI: dataURI,\n                    fileName: options.fileName,\n                    proxyURL: options.proxyURL,\n                    forceProxy: options.forceProxy,\n                    proxyTarget: options.proxyTarget\n                });\n\n                progress.resolve();\n            })\n            .fail(function(err) {\n                progress.reject(err);\n            });\n\n            return promise;\n        };\n\n        kendo.spreadsheet.Workbook.prototype.saveAsPDF = overrideSaveAsPDF;\n\n        kendo.spreadsheet.Workbook.prototype._drawPDF = override_drawPDF;\n    }\n})(kendo);\n\nconst __meta__ = {\n    id: \"spreadsheet\",\n    name: \"Spreadsheet\",\n    category: \"web\",\n    description: \"Spreadsheet component\",\n    depends: [\n        \"core\", \"binder\", \"colorpicker\", \"combobox\", \"data\", \"dom\", \"dropdownlist\",\n        \"menu\", \"ooxml\", \"popup\", \"sortable\", \"toolbar\", \"treeview\",\n        \"window\", \"validator\", \"excel\", \"pdf\", \"drawing\", \"list\", \"spreadsheet.common\"]\n};\n\n(function(kendo, undefined$1) {\n    if (kendo.support.browser.msie && kendo.support.browser.version < 9) {\n        return;\n    }\n\n    const K_ACTIVE = \"k-active\";\n    let $ = kendo.jQuery;\n    let Widget = kendo.ui.Widget;\n    let NS = \".kendoSpreadsheet\";\n    let DOT = \".\";\n    let commonEngine = kendo.spreadsheet.commonEngine;\n    let FormulaInput = kendo.spreadsheet.FormulaInput;\n    let SheetsBar = kendo.spreadsheet.SheetsBar;\n\n    function toActionSelector(selectors) {\n        return selectors.map(function(action) {\n            return '[data-action=\"' + action + '\"]';\n        }).join(\",\");\n    }\n\n    let COMPOSITE_UNAVAILABLE_ACTION_SELECTORS = toActionSelector(['cut', 'copy', 'paste', 'insert-left', 'insert-right', 'insert-above', 'insert-below']);\n    let UNHIDE_ACTION_SELECTORS = toActionSelector(['unhide-row', 'unhide-column']);\n    let classNames = {\n        wrapper: \"k-spreadsheet\"\n    };\n\n    let viewClassNames = commonEngine.View.classNames;\n\n    const SPREADSHEET_CONTENT_HTML_TEMPLATE = ({ messages }) => `\n                            <div ref-header-container class=\"k-spreadsheet-header\"><div ref-header-menu></div><div ref-header-toolbar></div></div>\n                            <div class=\"k-spreadsheet-action-bar\">\n                                <div class=\"k-spreadsheet-name-editor\">\n                                    <input ref-namebox-input title=\"${messages.nameBox || \"Name Box\"}\" aria-label=\"${messages.nameBox || \"Name Box\"}\"></input>\n                                </div>\n                                <div class=\"k-spreadsheet-formula-bar\">\n                                    ${kendo.ui.icon(\"formula-fx\")}\n                                    <div class=\"k-spreadsheet-formula-input\"\n                                        role=\"combobox\"\n                                        title=\"${messages.view.formulaInput}\"\n                                        aria-haspopup=\"menu\"\n                                        aria-expanded=\"false\"\n                                        contentEditable=\"true\"\n                                        spellCheck=\"false\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"k-spreadsheet-view\">\n                                <div class=\"k-spreadsheet-fixed-container\"></div>\n                                <div class=\"k-spreadsheet-scroller\">\n                                    <div class=\"k-spreadsheet-view-size\"></div>\n                                </div>\n                                <div tabIndex=\"0\" class=\"k-spreadsheet-clipboard\" contentEditable=\"true\" ></div>\n                                <div contentEditable=\"true\"\n                                    spellCheck=\"false\"\n                                    role=\"combobox\"\n                                    title=\"${messages.view.formulaInput}\"\n                                    aria-haspopup=\"menu\"\n                                    aria-expanded=\"false\"\n                                    class=\"k-spreadsheet-formula-input k-spreadsheet-cell-editor\">\n                                </div>\n                            </div>\n                            <div ref-sheets-bar></div>`;\n\n    const CELL_CONTEXT_MENU = ({ messages }) => `\n                    <ul class=\"${viewClassNames.cellContextMenu}\">\n                        <li data-action=\"cut\">${messages.menus.cut}</li>\n                        <li data-action=\"copy\">${messages.menus.copy}</li>\n                        <li data-action=\"paste\">${messages.menus.paste}</li>\n                        <li class=\"k-separator\"></li>\n                        <li data-action=\"merge\">${messages.menus.merge}</li>\n                        <li data-action=\"unmerge\">${messages.menus.unmerge}</li>\n                    </ul>`;\n\n    const ROW_HEADER_CONTEXT_MENU = ({ messages }) => `\n                    <ul class=\"${viewClassNames.rowHeaderContextMenu}\">\n                        <li data-action=\"cut\">${messages.menus.cut}</li>\n                        <li data-action=\"copy\">${messages.menus.copy}</li>\n                        <li data-action=\"paste\">${messages.menus.paste}</li>\n                        <li class=\"k-separator\"></li>\n                        <li data-action=\"delete-row\">${messages.menus.delete}</li>\n                        <li data-action=\"hide-row\">${messages.menus.hide}</li>\n                        <li data-action=\"unhide-row\">${messages.menus.unhide}</li>\n                    </ul>`;\n\n    const COL_HEADER_CONTEXT_MENU = ({ messages }) => `\n                    <ul class=\"${viewClassNames.colHeaderContextMenu}\">\n                        <li data-action=\"cut\">${messages.menus.cut}</li>\n                        <li data-action=\"copy\">${messages.menus.copy}</li>\n                        <li data-action=\"paste\">${messages.menus.paste}</li>\n                        <li class=\"k-separator\"></li>\n                        <li data-action=\"delete-column\">${messages.menus.delete}</li>\n                        <li data-action=\"hide-column\">${messages.menus.hide}</li>\n                        <li data-action=\"unhide-column\">${messages.menus.unhide}</li>\n                    </ul>`;\n\n    const DRAWING_CONTEXT_MENU = ({ messages }) => `\n                    <ul class=\"${viewClassNames.drawingContextMenu}\">\n                        <li data-action=\"bring-to-front\">${messages.menus.bringToFront}</li>\n                        <li data-action=\"send-to-back\">${messages.menus.sendToBack}</li>\n                        <li class=\"k-separator\"></li>\n                        <li data-action=\"delete-drawing\">${messages.menus.delete}</li>\n                    </ul>`;\n\n    kendo.spreadsheet.ContextMenu = kendo.ui.ContextMenu;\n\n    let FormulaInputStaticList = kendo.ui.StaticList.extend({\n        data: function(d) {\n            return this.dataSource.data(d);\n        },\n        itemClick: function(handler) {\n            this.bind(\"change\", function(ev) { handler(this.value()[0]); });\n        }\n    });\n\n    class FormulaInputRefArgs {\n        constructor({ list, popup }) {\n            this.current = { list, popup };\n            this.clone = function clone() {\n                return this;\n            };\n        }\n    }\n\n    class NameBoxRefArgs {\n        constructor({ nameEditor, container }) {\n            let combo = this.initializeComboBox(container, nameEditor);\n            this.current = {\n                value: (val) => {\n                    if (val === undefined$1) {\n                        const item = combo.value();\n                        return item ? (item.name || item) : item;\n                    } else {\n                        combo.value(val || '');\n                    }\n                }\n            };\n\n            this.nameEditor = nameEditor;\n\n            this.clone = function clone() {\n                return this;\n            };\n        }\n\n        initializeComboBox(container) {\n            let that = this;\n            let dataSource = new kendo.data.DataSource({\n                transport: {\n                    read: function(options) {\n                        let data = that.nameEditor()?.readData() || [];\n                        options.success(data);\n                    },\n                    cache: false\n                }\n            });\n\n            let combo = $(container).kendoComboBox({\n                clearButton: false,\n                dataTextField: \"name\",\n                dataValueField: \"name\",\n                template: ({ name }) => `${kendo.htmlEncode(name)}<a role='button' class='k-button-delete' href='\\\\#'>${kendo.ui.icon(\"x\")}</a>`,\n                dataSource: dataSource,\n                autoBind: false,\n                ignoreCase: true,\n                change: that.onChange.bind(that),\n                noDataTemplate: () => \"<div></div>\",\n                open: function() {\n                    dataSource.read();\n                }\n            }).data(\"kendoComboBox\");\n\n            combo.input\n                .on(\"keydown\", that.onKeyDown.bind(this));\n            combo.popup.element\n                .addClass(\"k-spreadsheet-names-popup\")\n\n                .on(\"mousemove\", function(ev) {\n                    // XXX: should remove this when we find a better\n                    // solution for the popup closing as we hover the\n                    // resize handles.\n                    ev.stopPropagation();\n                })\n\n                .on(\"click\", \".k-button-delete\", function(ev) {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    let item = $(ev.target).closest(\".k-list-item\");\n                    item = combo.dataItem(item);\n                    that.onDelete(item.name);\n                });\n\n            return combo;\n        }\n\n        // Event: Handle change in ComboBox\n        onChange(event) {\n            const editor = this.nameEditor();\n            if (editor && event.sender.value()) {\n                editor.trigger(\"select\", { name: event.sender.value() });\n            }\n        }\n\n        // Event: Delete button click within item\n        onDelete(name) {\n            this.nameEditor()?.trigger(\"delete\", { name });\n        }\n\n        // Handling keyboard events like Enter, Escape\n        onKeyDown(event) {\n            const editor = this.nameEditor();\n            if (editor) {\n                if (event.key === 'Enter') {\n                    const name = event.target.value;\n                    editor.trigger(\"enter\", { value: name });\n                } else if (event.key === 'Escape') {\n                    editor.trigger(\"cancel\");\n                }\n            }\n        }\n    }\n\n    let Spreadsheet = kendo.ui.Widget.extend({\n        _renderInnerContent: function(element) {\n            $(element).append(SPREADSHEET_CONTENT_HTML_TEMPLATE(this.options));\n        },\n        init: function(element, options) {\n            let that = this;\n            Widget.fn.init.call(this, element, options);\n\n            this.options.messages = $.extend(true, {\n                view: kendo.spreadsheet.messages.view,\n                tabs: kendo.spreadsheet.messages.view.tabs,\n                menus: kendo.spreadsheet.messages.menus,\n                workbook: {\n                    defaultSheetName: \"Sheet\",\n                }\n            }, this.options.messages);\n\n            this.element.addClass(Spreadsheet.classNames.wrapper);\n            this.element.attr(\"role\", \"application\");\n            this._renderInnerContent(this.element);\n\n            this._createFormulaInputs();\n\n            that.spreadsheetRef = this._initSpreadsheetWidget();\n\n            this._bindWorkbookEvents();\n\n            const activeSheet = this.activeSheet();\n            this._onUpdateTools({ range: activeSheet.range(activeSheet.activeCell()) });\n\n            this._resizeHandler = function() { that.resize(); };\n            $(window).on(\"resize\" + NS, this._resizeHandler);\n\n            if (this._showWatermarkOverlay) {\n                this._showWatermarkOverlay(this.element[0]);\n            }\n        },\n        _initSpreadsheetWidget: function() {\n            let that = this;\n            let widgetOptions = $.extend({},\n                that.options, {\n                sheetsbar: that.options.sheetsbar != false ? that.options.sheetsbar : {},\n                formulaBarInputRef: new FormulaInputRefArgs({\n                    list: this._formulaBarInputRefList,\n                    popup: this._formulaBarInputRefPopup\n                }),\n                formulaCellInputRef: new FormulaInputRefArgs({\n                    list: this._formulaCellInputRefList,\n                    popup: this._formulaCellInputRefPopup\n                }),\n                nameBoxRef: new NameBoxRefArgs({\n                    container: that.element.find('.k-spreadsheet-name-editor [ref-namebox-input]'),\n                    nameEditor: function() {\n                        return that.spreadsheetRef?.view.nameEditor;\n                    }\n                }),\n                createFilterMenu: function(options) {\n                    let element = $(\"<div></div>\").appendTo(that.element);\n                    return new kendo.spreadsheet.FilterMenu(element, options);\n                },\n                createTabStrip: function(options) {\n                    if (that.options.toolbar) {\n                        that._initHeader();\n\n                        return {\n                            focus: function() { that.menu.wrapper.trigger(\"focus\"); },\n                            select: function(name) { that.menu.element.find(`li[ref-tab-name=\"${name}\"]`).click(); },\n                            destroy: function() { that.menu.destroy(); }\n                        };\n                    }\n                },\n                createSheetEditor: function(options) {\n                    that.sheetsBar._createEditor();\n                },\n                createSheetBar: function(openDialogCallback) {\n                    that._sheetsBar(openDialogCallback);\n                },\n                createContextMenus: function(options) {\n                    that._dialogs = [];\n                    that._initContextMenus();\n                },\n                createSheetDataSource: function(dataSource) {\n                    return kendo.data.DataSource.create(dataSource);\n                },\n                getWorkbookCommand: function(commandName, commandOptions) {\n                    return new kendo.spreadsheet[commandName](commandOptions);\n                },\n                getIconHTMLString: function(iconName) {\n                    return $(kendo.ui.icon(iconName))[0];\n                },\n                update: function(e) {\n                    that._onUpdateTools(e);\n                    if (e.reason.sheetSelection && that.sheetsBar) {\n                        that.sheetsBar.renderSheets(e.sender.sheets(), e.sender.sheetIndex(e.sheet));\n                    }\n                },\n                message: (args) => {\n                    // exclude these properties from the options\n                    let { sender, name, ref, range, ...dialogOptions } = args;\n                    let opts = $.extend({}, { pdfExport: that.options.pdf, excelExport: that.options.excel }, dialogOptions);\n                    let dialog = kendo.spreadsheet.dialogs.create(args.name, opts);\n\n                    if (dialog) {\n                        dialog.bind(\"action\", function(args) {\n                            if (args.command == \"SaveAsCommand\") {\n                                let { sender, ...commandArgs } = args;\n                                let fileName = args.options.name + args.options.extension;\n                                if (args.options.extension === \".xlsx\") {\n                                    return that.spreadsheetRef.saveAsExcel($.extend(commandArgs, {\n                                        fileName: fileName,\n                                        Workbook: kendo.ooxml.Workbook,\n                                        saveAs: function(data, fileName, exportOptions) {\n                                            kendo.saveAs({ dataURI: data, fileName, ...exportOptions });\n                                        }\n                                    }));\n                                } else if (this.options.extension === \".pdf\") {\n                                    return that.spreadsheetRef.saveAsPDF($.extend(args.options.pdf, { workbook: this.options.workbook, fileName: fileName }));\n                                }\n                            }\n\n                            that.spreadsheetRef.executeCommand(args);\n                        });\n\n                        dialog.bind(\"deactivate\", () => {\n                            dialog.destroy();\n                            that._dialogs.pop();\n                        });\n\n                        that._dialogs.push(dialog);\n\n                        dialog.open(args.range, args);\n                        args.dialog = dialog;\n                    }\n                },\n                contextmenu: (e) => {\n                    const { objectRef, targetType, showUnhide, showUnmerge, originalEvent, isComposite } = e;\n                    const selection = e.sender.activeSheet().select();\n                    const { topLeft, bottomRight } = selection;\n\n                    this.cellContextMenu.close();\n                    this.colHeaderContextMenu.close();\n                    this.rowHeaderContextMenu.close();\n                    this.drawingContextMenu.close();\n\n                    let menu;\n\n                    if (targetType == \"columnheader\") {\n                        menu = this.colHeaderContextMenu;\n                    } else if (targetType == \"rowheader\") {\n                        menu = this.rowHeaderContextMenu;\n                    } else if (targetType == \"drawing\") {\n                        menu = this.drawingContextMenu;\n                    } else {\n                        menu = this.cellContextMenu;\n                    }\n\n                    menu.element.find(COMPOSITE_UNAVAILABLE_ACTION_SELECTORS).toggle(!isComposite);\n                    menu.element.find(UNHIDE_ACTION_SELECTORS).toggle(showUnhide);\n                    menu.element.find('[data-action=unmerge]').toggle(showUnmerge);\n\n                    // avoid the immediate close\n                    setTimeout(function() {\n                        menu.open(e.originalEvent.pageX, e.originalEvent.pageY);\n                    });\n                },\n                locale: kendo.cultures.current.name,\n                intl: kendo.kendoCultureToIntl(),\n            });\n\n            return new kendo.spreadsheet.commonEngine.SpreadsheetWidget(this.element[0], widgetOptions);\n        },\n        _createFormulaInputs: function() {\n            let formulaBarInputRefElement = this.element.find('.k-spreadsheet-action-bar .k-spreadsheet-formula-input');\n            let formulaBarInputRefListId = kendo.guid();\n            formulaBarInputRefElement.attr(\"aria-controls\", formulaBarInputRefListId);\n\n            this._formulaBarInputRefList = new FormulaInputStaticList($(`<ul id=\"${formulaBarInputRefListId}\" />`)\n                .addClass(FormulaInput.classNames.listWrapper)\n                .insertAfter(formulaBarInputRefElement), {\n                aria: {\n                    role: 'menu',\n                    itemRole: 'menuitem'\n                },\n                autoBind: false,\n                selectable: true,\n                dataTextField: \"text\",\n                dataValueField: \"value\",\n                template: ({ text, value }) => `${text || value}`\n            });\n\n            this._formulaBarInputRefList.element.on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n            this._formulaBarInputRefPopup = new kendo.ui.Popup(this._formulaBarInputRefList.element, {\n                anchor: this.element.find(\".k-spreadsheet-formula-input:not(.k-spreadsheet-cell-editor)\"),\n                open: function(ev) { formulaBarInputRefElement.attr(\"aria-expanded\", true); },\n                close: function(ev) { formulaBarInputRefElement.attr(\"aria-expanded\", false); }\n            });\n\n            let formulaCellInputRefElement = this.element.find('.k-spreadsheet-cell-editor');\n            let formulaCellInputRefListId = kendo.guid();\n            formulaCellInputRefElement.attr(\"aria-controls\", formulaCellInputRefListId);\n\n            this._formulaCellInputRefList = new FormulaInputStaticList($(`<ul id=\"${formulaCellInputRefListId}\" />`)\n                .addClass(FormulaInput.classNames.listWrapper)\n                .insertAfter(formulaCellInputRefElement), {\n                aria: {\n                    role: 'menu',\n                    itemRole: 'menuitem'\n                },\n                autoBind: false,\n                selectable: true,\n                dataValueField: \"value\",\n                dataTextField: \"text\",\n                template: ({ text, value }) => `${text || value}`\n\n            });\n\n            this._formulaCellInputRefList.element.on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n            this._formulaCellInputRefPopup = new kendo.ui.Popup(this._formulaCellInputRefList.element, {\n                anchor: this.element.find(DOT + commonEngine.View.classNames.cellEditor),\n                open: function(ev) { formulaCellInputRefElement.attr(\"aria-expanded\", true); },\n                close: function(ev) { formulaCellInputRefElement.attr(\"aria-expanded\", false); }\n            });\n        },\n        _initContextMenus: function() {\n            let that = this;\n\n            let contextMenuConfig = {\n                target: this.element,\n                animation: false,\n                showOn: \"never\" // this is just an invalid event name to prevent the show\n            };\n\n            this.cellContextMenu = new kendo.spreadsheet.ContextMenu($(CELL_CONTEXT_MENU(that.options)).appendTo(that.element), contextMenuConfig);\n\n            this.colHeaderContextMenu = new kendo.spreadsheet.ContextMenu($(COL_HEADER_CONTEXT_MENU(that.options)).appendTo(that.element), contextMenuConfig);\n\n            this.rowHeaderContextMenu = new kendo.spreadsheet.ContextMenu($(ROW_HEADER_CONTEXT_MENU(that.options)).appendTo(that.element), contextMenuConfig);\n\n            this.drawingContextMenu = new kendo.spreadsheet.ContextMenu($(DRAWING_CONTEXT_MENU(that.options)).appendTo(that.element), contextMenuConfig);\n\n            this.cellContextMenu.bind(\"select\", this.onContextMenuSelect.bind(this));\n            this.rowHeaderContextMenu.bind(\"select\", this.onContextMenuSelect.bind(this));\n            this.colHeaderContextMenu.bind(\"select\", this.onContextMenuSelect.bind(this));\n            this.drawingContextMenu.bind(\"select\", this.onContextMenuSelect.bind(this));\n        },\n        onContextMenuSelect: function(e) {\n            let that = this;\n            let action = $(e.item).data(\"action\");\n            let command;\n            switch (action) {\n                case \"cut\":\n                    command = { command: \"ToolbarCutCommand\", options: { workbook: this.spreadsheetRef.workbook } };\n                    break;\n                case \"copy\":\n                    command = { command: \"ToolbarCopyCommand\", options: { workbook: this.spreadsheetRef.workbook } };\n                    break;\n                case \"paste\":\n                    command = { command: \"ToolbarPasteCommand\", options: { workbook: this.spreadsheetRef.workbook } };\n                    break;\n                case \"delete-drawing\":\n                    command = { command: \"DeleteDrawingCommand\", options: { drawing: this.spreadsheetRef._controller.navigator._sheet._activeDrawing } };\n                    break;\n                case \"bring-to-front\":\n                    command = { command: \"BringToFrontCommand\", options: { drawing: this.spreadsheetRef._controller.navigator._sheet._activeDrawing } };\n                    break;\n                case \"send-to-back\":\n                    command = { command: \"SendToBackCommand\", options: { drawing: this.spreadsheetRef._controller.navigator._sheet._activeDrawing } };\n                    break;\n                case \"unmerge\":\n                    command = { command: \"MergeCellCommand\", options: { value: \"unmerge\" } };\n                    break;\n                case \"merge\":\n                    this.spreadsheetRef.openDialog(\"merge\");\n                    break;\n                case \"hide-row\":\n                    command = { command: \"HideLineCommand\", options: { axis: \"row\" } };\n                    break;\n                case \"hide-column\":\n                    command = { command: \"HideLineCommand\", options: { axis: \"column\" } };\n                    break;\n                case \"unhide-row\":\n                    command = { command: \"UnHideLineCommand\", options: { axis: \"row\" } };\n                    break;\n                case \"unhide-column\":\n                    command = { command: \"UnHideLineCommand\", options: { axis: \"column\" } };\n                    break;\n                case \"delete-row\":\n                    command = { command: \"DeleteRowCommand\" };\n                    break;\n                case \"delete-column\":\n                    command = { command: \"DeleteColumnCommand\" };\n                    break;\n            }\n\n            if (command) {\n                that.spreadsheetRef.executeCommand(command);\n            }\n        },\n        _onUpdateTools: function(e) {\n            let reason = e.reason;\n            if (reason && (reason.overElement || reason.comment)) {\n                return;\n            }\n            this.toolbar?.refresh(e.range);\n        },\n        _getCopyRegex: function(sheetName) {\n            const newName = sheetName.replaceAll('(', '\\\\(').replaceAll(')', '\\\\)');\n            const st = `(${newName})\\\\s?\\\\(`;\n            return new RegExp(st, 's');\n        },\n        _sheetsBar: function(openDialogCallback) {\n            let that = this;\n\n            if (that.options.sheetsbar) {\n                let sheetsbarOptions = $.extend(true, {\n                    openDialog: openDialogCallback,\n                }, that.options.sheetsbar);\n\n                that.sheetsBar = new SheetsBar(that.element[0].querySelector('[ref-sheets-bar]'), sheetsbarOptions);\n\n                that.sheetsBar.bind(\"select\", function onSheetSelect(ev) {\n                    if (ev.isAddButton) {\n                        that.spreadsheetRef.view.sheetsbar.onAddSelect();\n                    } else {\n                        that.spreadsheetRef.view.sheetsbar.onSheetSelect(ev.name);\n                    }\n                });\n\n                that.sheetsBar.bind(\"reorder\", function onSheetReorderEnd(ev) {\n                    that.spreadsheetRef.view.sheetsbar.onSheetReorderEnd(ev);\n                });\n\n                that.sheetsBar.bind(\"rename\", function onSheetRename(ev) {\n                    that.spreadsheetRef.view.sheetsbar.onSheetRename(ev.name, ev.sheetIndex);\n                });\n\n                that.sheetsBar.bind(\"duplicate\", function onSheetDuplicate(ev) {\n                    let name = ev.name;\n                    let sheetToCopy = that.sheetByName(name);\n                    let sheetIndex = that.sheetIndex(sheetToCopy);\n                    let copies = 0;\n                    const regex = that._getCopyRegex(name);\n                    that.sheets().forEach(sheet => {\n                        const isPresent = regex.test(sheet.name());\n                        if (isPresent) {\n                            copies += 1;\n                        }\n                    });\n\n                    const newName = `${name} (${copies + 1})`;\n                    that.insertSheet({ data: { ...sheetToCopy.toJSON(), name: newName }, index: sheetIndex + 1 });\n                    that.spreadsheetRef.view.sheetsbar.onSheetSelect(newName);\n                });\n\n                that.sheetsBar.bind(\"remove\", function onSheetBarRemove(ev) {\n                    that.spreadsheetRef.view.sheetsbar.onSheetRemove(ev.name);\n                });\n\n                that.sheetsBar.bind(\"hide\", function onSheetBarHide(ev) {\n                    let sheetName = ev.name;\n                    let sheetToHide = that.sheetByName(sheetName);\n                    let visibleSheets = that.sheets().filter(x=> x.state() === \"visible\");\n                    let visibleSheetIndex = visibleSheets.findIndex(x=> x.name() === sheetName);\n                    let nextVisibleSheet = visibleSheets[visibleSheetIndex + 1] || visibleSheets[visibleSheetIndex - 1];\n                    sheetToHide._state('hidden');\n\n                    that.spreadsheetRef.workbook._sheetsSearchCache = {};\n                    that.spreadsheetRef.view.sheetsbar.onSheetSelect(nextVisibleSheet.name());\n                });\n\n                that.sheetsBar.bind(\"show\", function onSheetBarShow(ev) {\n                    let sheetName = ev.name;\n                    that.sheetByName(sheetName)._state('visible');\n                    that.spreadsheetRef.workbook._sheetsSearchCache = {};\n                    that.spreadsheetRef.view.sheetsbar.onSheetSelect(ev.name);\n                });\n            }\n        },\n        _createToolBar: function(options, tabs, toolbarId) {\n            let that = this;\n\n            if (that.toolbar) {\n                that.toolbar.destroy();\n                that.toolbar.element.empty();\n            }\n\n            let activeTabIndex = tabs.findIndex((item) => item.id === toolbarId);\n            let activeToolbar = tabs[activeTabIndex];\n            let tools = options[activeToolbar.id];\n\n            that._activeToolBar = activeToolbar.text;\n\n            that.toolbar = new kendo.spreadsheet.ToolBar(this.element.find(\"[ref-header-toolbar]\"), {\n                tools: typeof tools === \"boolean\" ? undefined$1 : tools,\n                toolbarName: activeToolbar.id,\n                fillMode: \"flat\",\n                action: function(args) {\n                    if (args.command === 'undo' || args.command === 'redo') {\n                        that.spreadsheetRef.workbook.undoRedoStack[args.command]();\n                        return;\n                    }\n\n                    if (args.command == \"OpenCommand\") {\n                        args.options.file = args.options.value;\n                    } else if (args.command === \"BorderChangeCommand\") {\n                        args.options.border = args.options.border || args.options.value.type;\n                        args.options.style = args.options.style || args.options.value.style || { color: args.options.value.color, size: 1 };\n                    }\n\n                    that.spreadsheetRef.executeCommand(args);\n                },\n                dialog: function(args) {\n                    that.spreadsheetRef.openDialog(args.name, args.options);\n                }\n            });\n            that.toolbar.element.attr(\"aria-label\", activeToolbar.text);\n        },\n\n        _initHeader: function() {\n            let that = this;\n            let messages = this.options.messages.tabs;\n            let options = $.extend(true, { file: true, home: true, insert: true, format: true, data: true, view: true }, this.options.toolbar);\n            let tabs = [];\n\n            if (this.menu) {\n                this.menu.destroy();\n                this.menu.empty();\n            }\n\n            if (this.toolbar) {\n                this.toolbar.destroy();\n                this.toolbar.empty();\n            }\n\n            for (let name in options) {\n                if (options[name] === true || options[name] instanceof Array) {\n                    tabs.push({ id: name, text: messages[name], content: \"\", attr: { \"ref-tab-name\": name } });\n                }\n            }\n\n            this.menu = new kendo.spreadsheet.Menu(this.element.find(\"[ref-header-menu]\"), {\n                dataSource: tabs,\n                toolbarOptions: options,\n                select: function(e) {\n                    let text = $(e.item).text();\n                    if (that._activeToolBar !== text) {\n                        $(e.item).addClass(K_ACTIVE)\n                            .siblings(\"li\").removeClass(K_ACTIVE);\n\n                        that._createToolBar(options, tabs, tabs.find((item) => item.text === text).id);\n                        const activeSheet = that.activeSheet();\n                        that._onUpdateTools({ range: activeSheet.range(activeSheet.activeCell()) });\n                    }\n                }\n            });\n\n            if (tabs.length) {\n                let defaultTab = tabs.find((item)=> item.id === \"home\");\n                this.menu.element.find(`li[ref-tab-name=\"home\"]`).addClass(K_ACTIVE);\n                that._createToolBar(options, tabs, defaultTab ? defaultTab.id : tabs[0].id);\n            }\n        },\n\n        executeCommand(options) {\n            return this.spreadsheetRef.executeCommand(options);\n        },\n\n        _resize: function() {\n            this.refresh({ layout: true });\n        },\n\n        _workbookChanging: function(e) {\n            if (this.trigger(\"changing\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookChange: function(e) {\n            if (this._autoRefresh) {\n                this.refresh(e);\n            }\n\n            if (e.recalc && e.ref) {\n                let range = e.range || new kendo.spreadsheet.Range(e.ref, this.activeSheet());\n                this.trigger(\"change\", { range: range });\n            }\n        },\n\n        _workbookCut: function(e) {\n            this.trigger(\"cut\", e);\n        },\n\n        _workbookCopy: function(e) {\n            this.trigger(\"copy\", e);\n        },\n\n        _workbookPaste: function(e) {\n            this.trigger(\"paste\", e);\n        },\n\n        activeSheet: function(sheet) {\n            return this.spreadsheetRef.activeSheet(sheet);\n        },\n\n        moveSheetToIndex: function(sheet, index) {\n            return this.spreadsheetRef.moveSheetToIndex(sheet, index);\n        },\n\n        insertSheet: function(options) {\n            return this.spreadsheetRef.insertSheet(options);\n        },\n\n        sheets: function() {\n            return this.spreadsheetRef.sheets();\n        },\n\n        removeSheet: function(sheet) {\n            return this.spreadsheetRef.removeSheet(sheet);\n        },\n\n        sheetByName: function(sheetName) {\n            return this.spreadsheetRef.sheetByName(sheetName);\n        },\n\n        sheetIndex: function(sheet) {\n            return this.spreadsheetRef.sheetIndex(sheet);\n        },\n\n        sheetByIndex: function(index) {\n            return this.spreadsheetRef.sheetByIndex(index);\n        },\n\n        renameSheet: function(sheet, newSheetName) {\n            return this.spreadsheetRef.renameSheet(sheet, newSheetName);\n        },\n\n        refresh: function(reason) {\n            this.spreadsheetRef.refresh(reason);\n\n            return this;\n        },\n\n        openDialog: function(name, options) {\n            return this.spreadsheetRef.openDialog(name, options);\n        },\n\n        autoRefresh: function(value) {\n            if (value !== undefined$1) {\n                this._autoRefresh = value;\n\n                if (value === true) {\n                    this.refresh();\n                }\n\n                return this;\n            }\n\n            return this._autoRefresh;\n        },\n\n        toJSON: function() {\n            return this.spreadsheetRef.toJSON();\n        },\n\n        fromJSON: function(json) {\n            this.spreadsheetRef.fromJSON(json);\n        },\n\n        saveJSON: function() {\n            return this.spreadsheetRef.saveJSON();\n        },\n\n        fromFile: function(blob, name) {\n            return this.spreadsheetRef.fromFile(blob, name);\n        },\n\n        saveAsPDF: function(options) {\n            this.spreadsheetRef.saveAsPDF(\n                $.extend({}, this.options.pdf, options, { workbook: this.spreadsheetRef._workbook })\n            );\n        },\n\n        saveAsExcel: function(options) {\n            this.spreadsheetRef.saveAsExcel(options);\n        },\n\n        draw: function(options, callback) {\n            this.spreadsheetRef.draw(options, callback);\n        },\n\n        _workbookExcelExport: function(e) {\n            if (this.trigger(\"excelExport\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookExcelImport: function(e) {\n            if (this.trigger(\"excelImport\", e)) {\n                e.preventDefault();\n            } else {\n                this._initProgress(e.deferred);\n            }\n        },\n\n        _initProgress: function(deferred) {\n            let loading =\n                $(\"<div class='k-loading-mask' \" +\n                    \"style='width: 100%; height: 100%; top: 0;'>\" +\n                    \"<div class='k-loading-color'></div>\" +\n                    \"</div>\")\n                    .appendTo(this.element);\n\n            let pb = $(\"<div class='k-loading-progress'>\")\n                .appendTo(loading)\n                .kendoProgressBar({\n                    type: \"chunk\", chunkCount: 10,\n                    min: 0, max: 1, value: 0\n                }).data(\"kendoProgressBar\");\n\n            deferred.progress(function(e) {\n                pb.value(e.progress);\n            })\n                .promise.finally(function() {\n                    kendo.destroy(loading);\n                    loading.remove();\n                });\n        },\n\n        _workbookPdfExport: function(e) {\n            if (this.trigger(\"pdfExport\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookInsertSheet: function(e) {\n            if (this.trigger(\"insertSheet\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookRemoveSheet: function(e) {\n            if (this.trigger(\"removeSheet\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookSelectSheet: function(e) {\n            if (this.trigger(\"selectSheet\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookRenameSheet: function(e) {\n            if (this.trigger(\"renameSheet\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookInsertRow: function(e) {\n            if (this.trigger(\"insertRow\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookInsertColumn: function(e) {\n            if (this.trigger(\"insertColumn\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookDeleteRow: function(e) {\n            if (this.trigger(\"deleteRow\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookDeleteColumn: function(e) {\n            if (this.trigger(\"deleteColumn\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookHideRow: function(e) {\n            if (this.trigger(\"hideRow\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookHideColumn: function(e) {\n            if (this.trigger(\"hideColumn\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookUnhideRow: function(e) {\n            if (this.trigger(\"unhideRow\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookUnhideColumn: function(e) {\n            if (this.trigger(\"unhideColumn\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookSelect: function(e) {\n            this.trigger(\"select\", e);\n        },\n\n        _workbookChangeFormat: function(e) {\n            this.trigger(\"changeFormat\", e);\n        },\n\n        _workbookDataBinding: function(e) {\n            if (this.trigger(\"dataBinding\", e)) {\n                e.preventDefault();\n            }\n        },\n\n        _workbookDataBound: function(e) {\n            this.trigger(\"dataBound\", e);\n        },\n\n        _workbookProgress: function(e) {\n            kendo.ui.progress(this.element, e.toggle);\n        },\n\n        _bindWorkbookEvents: function() {\n            this.spreadsheetRef.bind(\"cut\", this._workbookCut.bind(this));\n            this.spreadsheetRef.bind(\"copy\", this._workbookCopy.bind(this));\n            this.spreadsheetRef.bind(\"paste\", this._workbookPaste.bind(this));\n            this.spreadsheetRef.bind(\"changing\", this._workbookChanging.bind(this));\n            this.spreadsheetRef.bind(\"change\", this._workbookChange.bind(this));\n            this.spreadsheetRef.bind(\"excelExport\", this._workbookExcelExport.bind(this));\n            this.spreadsheetRef.bind(\"excelImport\", this._workbookExcelImport.bind(this));\n            this.spreadsheetRef.bind(\"pdfExport\", this._workbookPdfExport.bind(this));\n            this.spreadsheetRef.bind(\"insertSheet\", this._workbookInsertSheet.bind(this));\n            this.spreadsheetRef.bind(\"removeSheet\", this._workbookRemoveSheet.bind(this));\n            this.spreadsheetRef.bind(\"selectSheet\", this._workbookSelectSheet.bind(this));\n            this.spreadsheetRef.bind(\"renameSheet\", this._workbookRenameSheet.bind(this));\n            this.spreadsheetRef.bind(\"insertRow\", this._workbookInsertRow.bind(this));\n            this.spreadsheetRef.bind(\"insertColumn\", this._workbookInsertColumn.bind(this));\n            this.spreadsheetRef.bind(\"deleteRow\", this._workbookDeleteRow.bind(this));\n            this.spreadsheetRef.bind(\"deleteColumn\", this._workbookDeleteColumn.bind(this));\n            this.spreadsheetRef.bind(\"hideRow\", this._workbookHideRow.bind(this));\n            this.spreadsheetRef.bind(\"hideColumn\", this._workbookHideColumn.bind(this));\n            this.spreadsheetRef.bind(\"unhideRow\", this._workbookUnhideRow.bind(this));\n            this.spreadsheetRef.bind(\"unhideColumn\", this._workbookUnhideColumn.bind(this));\n            this.spreadsheetRef.bind(\"select\", this._workbookSelect.bind(this));\n            this.spreadsheetRef.bind(\"changeFormat\", this._workbookChangeFormat.bind(this));\n            this.spreadsheetRef.bind(\"dataBinding\", this._workbookDataBinding.bind(this));\n            this.spreadsheetRef.bind(\"dataBound\", this._workbookDataBound.bind(this));\n            this.spreadsheetRef.bind(\"progress\", this._workbookProgress.bind(this));\n        },\n\n        destroy: function() {\n            kendo.ui.Widget.fn.destroy.call(this);\n\n            this._formulaBarInputRefPopup?.destroy();\n            this._formulaCellInputRefPopup?.destroy();\n            this._formulaBarInputRefList?.destroy();\n            this._formulaCellInputRefList?.destroy();\n\n            this._formulaBarInputRefList = this._formulaCellInputRefList = null;\n            this._formulaBarInputRefPopup = this._formulaCellInputRefPopup = null;\n\n            if (this.menu) {\n                this.menu.destroy();\n            }\n\n            if (this.toolbar) {\n                this.toolbar.destroy();\n            }\n\n            if (this.sheetsBar) {\n                this.sheetsBar.destroy();\n            }\n\n            this._dialogs?.forEach(function(dialog) {\n                dialog?.destroy();\n            });\n\n            this.spreadsheetRef?.destroy();\n\n            this.cellContextMenu?.destroy();\n\n            this.rowHeaderContextMenu?.destroy();\n            this.colHeaderContextMenu?.destroy();\n            this.drawingContextMenu?.destroy();\n\n            this.cellContextMenu = this.rowHeaderContextMenu =\n                this.colHeaderContextMenu =\n                this.drawingContextMenu = null;\n\n            if (this._resizeHandler) {\n                $(window).off(\"resize\" + NS, this._resizeHandler);\n            }\n\n            kendo.destroy(this.element);\n        },\n\n        options: {\n            name: \"Spreadsheet\",\n            toolbar: true,\n            sheetsbar: true,\n            rows: 200,\n            columns: 50,\n            rowHeight: 30,\n            columnWidth: 64,\n            headerHeight: 30,\n            headerWidth: 32,\n            excel: {\n                proxyURL: \"\",\n                fileName: \"Workbook.xlsx\"\n            },\n            messages: {},\n            pdf: {\n                // which part of the workbook to be exported\n                area: \"workbook\",\n                fileName: \"Workbook.pdf\",\n                proxyURL: \"\",\n                // paperSize can be an usual name, i.e. \"A4\", or an array of two Number-s specifying the\n                // width/height in points (1pt = 1/72in), or strings including unit, i.e. \"10mm\".  Supported\n                // units are \"mm\", \"cm\", \"in\" and \"pt\".  The default \"auto\" means paper size is determined\n                // by content.\n                paperSize: \"a4\",\n                // True to reverse the paper dimensions if needed such that width is the larger edge.\n                landscape: true,\n                // An object containing { left, top, bottom, right } margins with units.\n                margin: null,\n                // Optional information for the PDF Info dictionary; all strings except for the date.\n                title: null,\n                author: null,\n                subject: null,\n                keywords: null,\n                creator: \"Kendo UI PDF Generator v.\" + kendo.version,\n                // Creation Date; defaults to new Date()\n                date: null\n            },\n            defaultCellStyle: {\n                fontFamily: \"Arial\",\n                fontSize: 12\n            },\n            useCultureDecimals: false\n        },\n\n        defineName: function(name, value, hidden) {\n            return this.spreadsheetRef.defineName(name, value, hidden);\n        },\n\n        undefineName: function(name) {\n            return this.spreadsheetRef.undefineName(name);\n        },\n\n        nameValue: function(name) {\n            return this.spreadsheetRef.nameValue(name);\n        },\n\n        forEachName: function(func) {\n            return this.spreadsheetRef.forEachName(func);\n        },\n\n        cellContextMenu: function() {\n            return this.cellContextMenu;\n        },\n\n        rowHeaderContextMenu: function() {\n            return this.rowHeaderContextMenu;\n        },\n\n        colHeaderContextMenu: function() {\n            return this.colHeaderContextMenu;\n        },\n\n        addImage: function(image) {\n            return this.spreadsheetRef.addImage(image);\n        },\n\n        cleanupImages: function() {\n            return this.spreadsheetRef.cleanupImages();\n        },\n\n        events: [\n            \"cut\",\n            \"copy\",\n            \"paste\",\n            \"pdfExport\",\n            \"excelExport\",\n            \"excelImport\",\n            \"changing\",\n            \"change\",\n            \"render\",\n            \"removeSheet\",\n            \"selectSheet\",\n            \"renameSheet\",\n            \"insertRow\",\n            \"insertColumn\",\n            \"deleteRow\",\n            \"insertSheet\",\n            \"deleteColumn\",\n            \"hideRow\",\n            \"hideColumn\",\n            \"unhideRow\",\n            \"unhideColumn\",\n            \"select\",\n            \"changeFormat\",\n            \"dataBinding\",\n            \"dataBound\"\n        ]\n    });\n\n    kendo.ui.plugin(Spreadsheet);\n    $.extend(true, Spreadsheet, { classNames: classNames });\n})(window.kendo);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}