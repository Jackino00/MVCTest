{"version":3,"sources":["raw-mjs/kendo.drawing.js"],"names":["LRUCache","TextMetrics","measureText","objectKey","hashKey","normalizeText","encodeBase64","pdf","drawing","Segment","geometry","exportPDF","drawText","Color","drawDOM","getFontFaces","window","kendo","jQuery","util","deepExtend","$","pdfExtended","extend","group","options","promise","convertPromiseToDeferred","dataviz","NS","utils","defined","limitValue","eventCoordinates","outerWidth","_outerWidth","outerHeight","_outerHeight","TOOLTIP_CLOSE_TEMPLATE","ui","icon","SurfaceTooltip","Class","init","surface","this","element","content","children","_tooltipOptions","popupOptions","appendTo","animation","copyAnchorStyles","collision","_openPopupHandler","_openPopup","bind","_bindEvents","position","showOn","offset","autoHide","hideDelay","showAfter","_showHandler","_showEvent","_surfaceLeaveHandler","_surfaceLeave","_mouseleaveHandler","_mouseleave","_mousemoveHandler","_mousemove","on","_hideClick","_tooltipLeave","getPopup","popup","Popup","destroy","unbind","off","clearTimeout","_timeout","width","height","shared","_tooltipShape","shape","tooltip","parent","_updateContent","target","isFunction","html","_position","elementSize","event","tooltipOffset","_instance","_elementOffset","size","getSize","surfaceOffset","_offset","bbox","left","top","origin","translate","x","y","coord","center","bottomRight","show","_show","hide","current","_current","_showTimeout","visible","trigger","close","e","preventDefault","delay","_autoHide","_measure","setTimeout","open","_closeButton","removeClass","remove","addClass","type","originalEvent","css","clone","document","body","visibility","_popupRelatedTarget","wrapper","relatedTarget","closest","length","draw","DrawingSurface","Surface","Widget","support","svg","canvas","fn","call","create","_triggerInstanceHandler","_triggerInstanceEvent","_bindHandler","_enableTracking","name","events","clear","hideTooltip","_tooltip","exportVisual","eventTarget","showTooltip","suspendTracking","resumeTracking","setSize","_size","currentSize","_resize","plugin","template","__meta__","id","category","description","depends"],"mappings":"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","file":"kendo.drawing.js","sourcesContent":["import { E as LRUCache, F as TextMetrics, n as measureText, H as objectKey, J as hashKey, K as normalizeText, N as encodeBase64, O as pdf, Q as drawing, S as Segment, U as geometry, V as exportPDF, D as drawText, C as Color, W as drawDOM, X as getFontFaces } from './kendo.drawing.cmn.chunk.js';\nimport './kendo.color.js';\nimport './kendo.core.js';\nimport './kendo.popup.js';\nimport './kendo.icons.js';\n\n(function($) {\n\nwindow.kendo.util = window.kendo.util || {};\nkendo.deepExtend(kendo.util, {\n    LRUCache: LRUCache,\n    TextMetrics: TextMetrics,\n    measureText: measureText,\n    objectKey: objectKey,\n    hashKey: hashKey,\n    normalizeText: normalizeText,\n    encodeBase64: encodeBase64\n});\n\n})(window.kendo.jQuery);\n\n(function($) {\n\nwindow.kendo = window.kendo || {};\nlet pdfExtended = kendo.deepExtend({}, pdf);\nkendo.deepExtend(kendo, {\n    drawing: $.extend(true, {}, drawing, { Segment: Segment, pdf: pdfExtended }),\n    pdf: pdfExtended,\n    geometry: geometry\n});\n\nkendo.drawing.exportPDF = function(group, options) {\n    let promise = exportPDF(group, options);\n    return kendo.convertPromiseToDeferred(promise);\n};\n\nkendo.drawing.drawText = drawText;\nkendo.drawing.Color = Color;\nkendo.dataviz.drawing = kendo.drawing;\nkendo.dataviz.geometry = geometry;\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    var NS = \".kendo\";\n    var kendo = window.kendo;\n    var deepExtend = kendo.deepExtend;\n    var utils = kendo.drawing.util;\n    var defined = utils.defined;\n    var limitValue = utils.limitValue;\n    var eventCoordinates = utils.eventCoordinates;\n    var outerWidth = kendo._outerWidth;\n    var outerHeight = kendo._outerHeight;\n\n    var TOOLTIP_TEMPLATE = '<div class=\"k-tooltip\">' +\n            '<div class=\"k-tooltip-content\"></div>' +\n        '</div>';\n    var TOOLTIP_CLOSE_TEMPLATE = `<div class=\"k-tooltip-button\">${kendo.ui.icon($('<a href=\"#\" title=\"Close\"></a>'), { icon: \"x\" })}</div>`;\n\n    var SurfaceTooltip = kendo.Class.extend({\n        init: function(surface, options) {\n            this.element = $(TOOLTIP_TEMPLATE);\n            this.content = this.element.children(\".k-tooltip-content\");\n\n            options = options || {};\n\n            this.options = deepExtend({}, this.options, this._tooltipOptions(options));\n            this.popupOptions = {\n                appendTo: options.appendTo,\n                animation: options.animation,\n                copyAnchorStyles: false,\n                collision: \"fit fit\"\n            };\n\n            this._openPopupHandler = this._openPopup.bind(this);\n\n            this.surface = surface;\n            this._bindEvents();\n        },\n\n        options: {\n            position: \"top\",\n            showOn: \"mouseenter\",\n            offset: 7,\n            autoHide: true,\n            hideDelay: 0,\n            showAfter: 100\n        },\n\n        _bindEvents: function() {\n            this._showHandler = this._showEvent.bind(this);\n            this._surfaceLeaveHandler = this._surfaceLeave.bind(this);\n            this._mouseleaveHandler = this._mouseleave.bind(this);\n            this._mousemoveHandler = this._mousemove.bind(this);\n\n            this.surface.bind(\"click\", this._showHandler);\n            this.surface.bind(\"mouseenter\", this._showHandler);\n            this.surface.bind(\"mouseleave\", this._mouseleaveHandler);\n            this.surface.bind(\"mousemove\", this._mousemoveHandler);\n\n            this.surface.element.on(\"mouseleave\" + NS, this._surfaceLeaveHandler);\n\n            this.element.on(\"click\" + NS, \".k-tooltip-button\", this._hideClick.bind(this));\n            this.element.on(\"mouseleave\" + NS, this._tooltipLeave.bind(this));\n        },\n\n        getPopup: function() {\n            if (!this.popup) {\n                this.popup = new kendo.ui.Popup(this.element, this.popupOptions);\n            }\n\n            return this.popup;\n        },\n\n        destroy: function() {\n            var popup = this.popup;\n\n            this.surface.unbind(\"click\", this._showHandler);\n            this.surface.unbind(\"mouseenter\", this._showHandler);\n            this.surface.unbind(\"mouseleave\", this._mouseleaveHandler);\n            this.surface.unbind(\"mousemove\", this._mousemoveHandler);\n\n            this.surface.element.off(\"mouseleave\" + NS, this._surfaceLeaveHandler);\n            this.element.off(\"click\" + NS);\n            this.element.off(\"mouseleave\" + NS);\n\n            if (popup) {\n                popup.destroy();\n                delete this.popup;\n            }\n            delete this.popupOptions;\n\n            clearTimeout(this._timeout);\n\n            delete this.element;\n            delete this.content;\n            delete this.surface;\n        },\n\n        _tooltipOptions: function(options) {\n            options = options || {};\n            return {\n                position: options.position,\n                showOn: options.showOn,\n                offset: options.offset,\n                autoHide: options.autoHide,\n                width: options.width,\n                height: options.height,\n                content: options.content,\n                shared: options.shared,\n                hideDelay: options.hideDelay,\n                showAfter: options.showAfter\n            };\n        },\n\n        _tooltipShape: function(shape) {\n            while (shape && !shape.options.tooltip) {\n                shape = shape.parent;\n            }\n            return shape;\n        },\n\n        _updateContent: function(target, shape, options) {\n            var content = options.content;\n            if (kendo.isFunction(content)) {\n                content = content({\n                    element: shape,\n                    target: target\n                });\n            }\n\n            if (content) {\n                this.content.html(content);\n                return true;\n            }\n        },\n\n        _position: function(shape, options, elementSize, event) {\n            var position = options.position;\n            var tooltipOffset = options.offset || 0;\n            var surface = this.surface;\n            var offset = surface._instance._elementOffset();\n            var size = surface.getSize();\n            var surfaceOffset = surface._instance._offset;\n            var bbox = shape.bbox();\n            var width = elementSize.width;\n            var height = elementSize.height;\n            var left = 0, top = 0;\n\n            bbox.origin.translate(offset.left, offset.top);\n            if (surfaceOffset) {\n                bbox.origin.translate(-surfaceOffset.x, -surfaceOffset.y);\n            }\n\n            if (position == \"cursor\" && event) {\n                var coord = eventCoordinates(event);\n                left = coord.x - width / 2;\n                top = coord.y - height - tooltipOffset;\n            } else if (position == \"left\") {\n                left = bbox.origin.x - width - tooltipOffset;\n                top = bbox.center().y - height / 2;\n            } else if (position == \"right\") {\n                left = bbox.bottomRight().x + tooltipOffset;\n                top = bbox.center().y - height / 2;\n            } else if (position == \"bottom\") {\n                left = bbox.center().x - width / 2;\n                top = bbox.bottomRight().y + tooltipOffset;\n            } else {\n                left = bbox.center().x - width / 2;\n                top = bbox.origin.y - height - tooltipOffset;\n            }\n\n            return {\n                left: limitValue(left, offset.left, offset.left + size.width),\n                top: limitValue(top, offset.top, offset.top + size.height)\n            };\n        },\n\n        show: function(shape, options) {\n            this._show(shape, shape, deepExtend({}, this.options, this._tooltipOptions(shape.options.tooltip), options));\n        },\n\n        hide: function() {\n            var popup = this.popup;\n            var current = this._current;\n\n            delete this._current;\n            clearTimeout(this._showTimeout);\n            if (popup && popup.visible() && current &&\n                !this.surface.trigger(\"tooltipClose\", { element: current.shape, target: current.target, popup: popup })) {\n                popup.close();\n            }\n        },\n\n        _hideClick: function(e) {\n            e.preventDefault();\n            this.hide();\n        },\n\n        _show: function(target, shape, options, event, delay) {\n            var current = this._current;\n\n            clearTimeout(this._timeout);\n\n            if (current && ((current.shape === shape && options.shared) || current.target === target)) {\n                return;\n            }\n\n            clearTimeout(this._showTimeout);\n\n            var popup = this.getPopup();\n\n            if (!this.surface.trigger(\"tooltipOpen\", { element: shape, target: target, popup: popup }) &&\n                this._updateContent(target, shape, options)) {\n\n                this._autoHide(options);\n                var elementSize = this._measure(options);\n\n                if (popup.visible()) {\n                    popup.close(true);\n                }\n\n                this._current = {\n                    options: options,\n                    elementSize: elementSize,\n                    shape: shape,\n                    target: target,\n                    position: this._position(options.shared ? shape : target, options, elementSize, event)\n                };\n\n                if (delay) {\n                    this._showTimeout = setTimeout(this._openPopupHandler, options.showAfter || 0);\n                } else {\n                    this._openPopup();\n                }\n            }\n        },\n\n        _openPopup: function() {\n            var current = this._current;\n            var position = current.position;\n\n            this.getPopup().open(position.left, position.top);\n        },\n\n        _autoHide: function(options) {\n            if (options.autoHide && this._closeButton) {\n                this.element.removeClass(\"k-tooltip-closable\");\n                this._closeButton.remove();\n                delete this._closeButton;\n            }\n\n            if (!options.autoHide && !this._closeButton) {\n                this.element.addClass(\"k-tooltip-closable\");\n                this._closeButton = $(TOOLTIP_CLOSE_TEMPLATE).appendTo(this.element);\n            }\n        },\n\n        _showEvent: function(e) {\n            var shape = this._tooltipShape(e.element);\n\n            if (shape) {\n                var options = deepExtend({}, this.options, this._tooltipOptions(shape.options.tooltip));\n\n                if (options && options.showOn == e.type) {\n                    this._show(e.element, shape, options, e.originalEvent, true);\n                }\n            }\n        },\n\n        _measure: function(options) {\n            this.element.css({\n                width: defined(options.width) ? options.width : 'auto',\n                height: defined(options.height) ? options.height : 'auto'\n            });\n\n            const clone = this.element.clone().appendTo(document.body).css({ visibility: 'hidden' });\n            const width = outerWidth(clone);\n            const height = outerHeight(clone);\n            clone.remove();\n\n            this.element.css({\n                width: width,\n                height: height\n            });\n\n            return {\n                width: width,\n                height: height\n            };\n        },\n\n        _mouseleave: function(e) {\n            if (this.popup && !this._popupRelatedTarget(e.originalEvent)) {\n                var tooltip = this;\n                var current = tooltip._current;\n\n                if (current && current.options.autoHide) {\n                    tooltip._timeout = setTimeout(function() {\n                        clearTimeout(tooltip._showTimeout);\n                        tooltip.hide();\n                    }, current.options.hideDelay || 0);\n                }\n            }\n        },\n\n        _mousemove: function(e) {\n            var current = this._current;\n            if (current && e.element) {\n                var options = current.options;\n                if (options.position == \"cursor\") {\n                    var position = this._position(e.element, options, current.elementSize, e.originalEvent);\n                    current.position = position;\n                    this.getPopup().wrapper.css({ left: position.left, top: position.top });\n                }\n            }\n        },\n\n        _surfaceLeave: function(e) {\n            if (this.popup && !this._popupRelatedTarget(e)) {\n                clearTimeout(this._showTimeout);\n                this.hide();\n            }\n        },\n\n        _popupRelatedTarget: function(e) {\n            return e.relatedTarget && $(e.relatedTarget).closest(this.popup.wrapper).length;\n        },\n\n        _tooltipLeave: function() {\n            var tooltip = this;\n            var current = tooltip._current;\n            if (current && current.options.autoHide) {\n                tooltip._timeout = setTimeout(function() {\n                    tooltip.hide();\n                }, current.options.hideDelay || 0);\n            }\n        }\n    });\n\n    kendo.drawing.SurfaceTooltip = SurfaceTooltip;\n    kendo.dataviz.drawing.SurfaceTooltip = SurfaceTooltip;\n\n})(window.kendo.jQuery);\n\n(function($) {\n\n    var kendo = window.kendo;\n    var draw = kendo.drawing;\n    var DrawingSurface = draw.Surface;\n    var Widget = kendo.ui.Widget;\n    var deepExtend = kendo.deepExtend;\n\n    kendo.support.svg = DrawingSurface.support.svg;\n    kendo.support.canvas = DrawingSurface.support.canvas;\n\n    var Surface = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, {});\n\n            this.options = deepExtend({}, this.options, options);\n\n            this._instance = DrawingSurface.create(this.element[0], options);\n            if (this._instance.translate) {\n                this.translate = translate;\n            }\n\n            this._triggerInstanceHandler = this._triggerInstanceEvent.bind(this);\n            this._bindHandler(\"click\");\n            this._bindHandler(\"mouseenter\");\n            this._bindHandler(\"mouseleave\");\n            this._bindHandler(\"mousemove\");\n\n            this._enableTracking();\n        },\n\n        options: {\n            name: \"Surface\",\n            tooltip: {}\n        },\n\n        events: [\n            \"click\",\n            \"mouseenter\",\n            \"mouseleave\",\n            \"mousemove\",\n            \"resize\",\n            \"tooltipOpen\",\n            \"tooltipClose\"\n        ],\n\n        _triggerInstanceEvent: function(e) {\n            this.trigger(e.type, e);\n        },\n\n        _bindHandler: function(event) {\n            this._instance.bind(event, this._triggerInstanceHandler);\n        },\n\n        draw: function(element) {\n            this._instance.draw(element);\n        },\n\n        clear: function() {\n            if (this._instance) {\n                this._instance.clear();\n            }\n            this.hideTooltip();\n        },\n\n        destroy: function() {\n            if (this._instance) {\n                this._instance.destroy();\n                delete this._instance;\n            }\n\n            if (this._tooltip) {\n                this._tooltip.destroy();\n                delete this._tooltip;\n            }\n\n            Widget.fn.destroy.call(this);\n        },\n\n        exportVisual: function() {\n            return this._instance.exportVisual();\n        },\n\n        eventTarget: function(e) {\n            return this._instance.eventTarget(e);\n        },\n\n        showTooltip: function(shape, options) {\n            if (this._tooltip) {\n                this._tooltip.show(shape, options);\n            }\n        },\n\n        hideTooltip: function() {\n            if (this._tooltip) {\n                this._tooltip.hide();\n            }\n        },\n\n        suspendTracking: function() {\n            this._instance.suspendTracking();\n            this.hideTooltip();\n        },\n\n        resumeTracking: function() {\n            this._instance.resumeTracking();\n        },\n\n        getSize: function() {\n            return {\n                width: this.element.width(),\n                height: this.element.height()\n            };\n        },\n\n        setSize: function(size) {\n            this.element.css({\n                width: size.width,\n                height: size.height\n            });\n\n            this._size = size;\n            this._instance.currentSize(size);\n            this._resize();\n        },\n\n        _resize: function() {\n            this._instance.currentSize(this._size);\n            this._instance._resize();\n        },\n\n        _enableTracking: function() {\n            if (kendo.ui.Popup) {\n                this._tooltip = new draw.SurfaceTooltip(this, this.options.tooltip || {});\n            }\n        }\n    });\n\n    kendo.ui.plugin(Surface);\n\n    Surface.create = function(element, options) {\n        return new Surface(element, options);\n    };\n\n    kendo.drawing.Surface = Surface;\n\n    function translate(offset) {\n        this._instance.translate(offset);\n    }\n\n})(window.kendo.jQuery);\n\nwindow.kendo.drawing = window.kendo.drawing || {};\n\n(function($) {\n\n    var kendo = window.kendo;\n    var drawing = kendo.drawing;\n\n    drawing.drawDOM = function(element, options) {\n        if (typeof options?.template === \"string\") {\n            options.template = kendo.template(options.template);\n        }\n\n        let promise = drawDOM($(element)[0], options);\n        return kendo.convertPromiseToDeferred(promise);\n    };\n\n    // Aliases used by spreadsheet/print.js\n    drawing.drawDOM.drawText = drawText;\n    drawing.drawDOM.getFontFaces = getFontFaces;\n\n})(window.kendo.jQuery);\n\nconst __meta__ = {\n        id: \"drawing\",\n        name: \"Drawing API\",\n        category: \"framework\",\n        description: \"The Kendo UI low-level drawing API\",\n        depends: [\"core\", \"color\", \"popup\", \"icons\", \"drawing.cmn.chunk\"]\n    };\n\nexport { __meta__ };\n"]}