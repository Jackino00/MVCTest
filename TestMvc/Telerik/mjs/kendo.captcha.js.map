{"version":3,"sources":["raw-mjs/kendo.captcha.js"],"names":["__meta__","id","name","category","description","depends","$","kendo","window","Widget","ui","extend","ajax","isFunction","NS","DOT","CLICK","CHANGE","REQUEST_START","REQUEST_END","ERROR","Captcha","init","element","options","that","this","fn","call","_captchaField","dataCaptchaField","_valueField","attr","_captchaIdField","dataCaptchaIdField","_wrapper","_idInput","_captchaImage","audioButton","resetButton","_buttons","captcha","captchaId","_resetHandler","validateOnBlur","on","_validationHandler","ev","_isValid","trigger","value","val","originalEvent","notify","events","handler","audioHandler","validationHandler","volumeControl","messages","reset","audio","imageAlt","success","destroy","textbox","off","_audioEnded","styles","wrapper","inputWrapper","imageWrapper","cssText","style","css","kendoTextBox","clearButton","data","_inputWrapper","wrap","parent","prepend","captchaImage","find","append","_tabindex","_attachImageErrorHandler","one","type","nameAttr","idInput","ns","after","buttonsWrapper","_audioButton","_resetButton","button","iconButton","icon","resetIcon","iconClass","bind","audioIcon","_audioHandler","focusResetButton","deferred","Deferred","_resetCaptcha","_toggleSuccessMessage","_progress","_callHandler","done","fail","args","reject","promise","console","error","msg","_playAudio","_validate","_error","requestEnd","_requestEnd","url","cache","jqXHR","textStatus","errorThrown","resolve","_canPlayWav","audioElement","Audio","volume","_audioVolume","_showVolumeControl","play","volumeControlWrapper","volumeControlElm","_isRtl","width","kendoSlider","min","max","smallStep","largeStep","orientation","showButtons","tickPlacement","tooltip","enabled","change","document","activeElement","is","remove","pause","_canPlayAudio","canPlayType","replace","toggle","idAttr","successMessage","removeAttr","htmlEncode","_toggleButtons","prop","toggleClass","loading","disabled","_toggleSkeleton","skeleton","height","before","support","isRtl","getCaptchaId","toJSON","obj","validate","isValid","enable","readonly","speak","plugin","buttonIcon","hidden","jQuery","kendo$1"],"mappings":"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","file":"kendo.captcha.js","sourcesContent":["import './kendo.core.js';\nimport './kendo.slider.js';\nimport './kendo.textbox.js';\nimport './kendo.skeletoncontainer.js';\nimport './kendo.icons.js';\n\nconst __meta__ = {\n        id: \"captcha\",\n        name: \"Captcha\",\n        category: \"web\",\n        description: \"The Captcha widget displays captcha validation image and an input so that user case be validated against captcha value.\",\n        depends: [\"core\", \"slider\", \"textbox\", \"skeletoncontainer\", \"icons\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            extend = $.extend,\n            ajax = $.ajax,\n            isFunction = kendo.isFunction,\n\n            STRING = \"string\",\n\n            DOT = \".\",\n            NS = DOT + \"kendoCaptcha\",\n\n            CLICK = \"click\",\n            BLUR = \"blur\",\n\n            CHANGE = \"change\",\n            REQUEST_START = \"requestStart\",\n            REQUEST_END = \"requestEnd\",\n            ERROR = \"error\";\n\n        var CaptchaStyles = {\n            wrapper: \"k-captcha\",\n            textbox: \"k-textbox\",\n            button: \"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n            buttonIcon: \"k-button-icon\",\n            iconButton: \"k-icon-button\",\n            resetIcon: \"arrow-rotate-cw\",\n            audioIcon: \"volume-up\",\n            disabled: \"k-disabled\",\n            inputWrapper: \"k-captcha-input k-vstack\",\n            imageWrapper: \"k-captcha-image-wrap k-hstack\",\n            captchaImage: \"k-captcha-image\",\n            buttonsWrapper: \"k-captcha-image-controls k-vstack\",\n            volumeControlWrapper: \"k-captcha-volume-control k-vstack k-pos-absolute\",\n            hidden: \"k-hidden\",\n            success: \"k-captcha-validation-message k-text-success\",\n            loading: \"k-captcha-loading\"\n        };\n\n        var Captcha = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._captchaField = that.options.dataCaptchaField;\n                that._valueField = that.element.attr(\"name\") || \"captcha\";\n                that._captchaIdField = that.options.dataCaptchaIdField;\n\n                that._wrapper();\n                that._idInput();\n                that._captchaImage();\n\n                if (that.options.audioButton || that.options.resetButton) {\n                    that._buttons();\n\n                }\n\n                if (!that.options.captcha || !that.options.captchaId) {\n                    that._resetHandler();\n                }\n\n                if (that.options.validateOnBlur) {\n                    that.element.on(BLUR + NS, function() {\n                        that._validationHandler();\n                    });\n                }\n\n                that.element.on(CHANGE + NS, function(ev) {\n                    delete that._isValid;\n                    that.trigger(CHANGE, { value: that.element.val(), originalEvent: ev });\n                });\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE,\n                REQUEST_START,\n                REQUEST_END,\n                ERROR\n            ],\n\n            options: {\n                name: \"Captcha\",\n                dataCaptchaField: \"captcha\",\n                dataCaptchaIdField: \"captchaId\",\n                captchaId: \"\",\n                captcha: null,\n                handler: null,\n                audioHandler: null,\n                validationHandler: null,\n                validateOnBlur: false,\n                resetButton: true,\n                audioButton: true,\n                volumeControl: true,\n                messages: {\n                    reset: \"Reset captcha\",\n                    audio: \"Speak captcha\",\n                    imageAlt: \"Type the Captcha code from the image\",\n                    success: \"Verification successful\"\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.textbox.destroy();\n\n                if (that.resetButton) {\n                    that.resetButton.off(NS);\n                }\n\n                if (that.audioButton) {\n                    that.audioButton.off(NS);\n                }\n\n                that.element.off(NS);\n\n                // Just in case, destroy slider.\n                that._audioEnded();\n\n                Widget.fn.destroy.call(that);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    styles = Captcha.styles,\n                    wrapper = \"<div class='\" + styles.wrapper + \"'><div class='\" + styles.inputWrapper + \"'></div></div>\",\n                    imageWrapper = \"<div class='\" + styles.imageWrapper + \"'></div>\",\n                    cssText = that.element[0].style.cssText;\n\n                that.element.css(\"width\", \"auto\");\n                that.element.css(\"height\", \"auto\");\n                that.textbox = that.element.kendoTextBox({ clearButton: true }).data(\"kendoTextBox\");\n                that._inputWrapper = that.textbox.wrapper;\n                that.wrapper = that._inputWrapper.wrap(wrapper).parent().parent();\n                that.wrapper[0].style.cssText = cssText;\n                that.imageWrapper = $(imageWrapper);\n                that.wrapper.prepend(that.imageWrapper);\n            },\n\n            _captchaImage: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    styles = Captcha.styles;\n\n\n                that.captchaImage = $(\"<div class=\\\"\" + styles.captchaImage + \"\\\">\" +\n                                        \"<img alt=\\\"\" + messages.imageAlt + \"\\\" src= \\\"\" + (options.captcha || \"\") + \"\\\"/>\" +\n                                    \"</div>\").find(\"img\");\n\n                that.imageWrapper.append(that.captchaImage.parent());\n\n                that._tabindex(that.captchaImage);\n\n                that._attachImageErrorHandler();\n            },\n\n            _attachImageErrorHandler: function() {\n                var that = this;\n\n                that.captchaImage.off(\"error\");\n                that.captchaImage.one(\"error\", function(ev) {\n                    that.trigger(ERROR, { type: \"image\", originalEvent: ev });\n                });\n            },\n\n            _idInput: function() {\n                var that = this,\n                    options = that.options,\n                    nameAttr = that._captchaIdField;\n\n                that.idInput = $(\"<input type=\\\"hidden\\\" name=\\\"\" + nameAttr + \"\\\" value=\\\"\" + options.captchaId + \"\\\" data-\" + kendo.ns + \"stop=\\\"true\\\" />\");\n                that._inputWrapper.after(that.idInput);\n            },\n\n            _buttons: function() {\n                var that = this,\n                    styles = Captcha.styles;\n\n                that.buttonsWrapper = $(\"<div class=\\\"\" + styles.buttonsWrapper + \"\\\"></div>\");\n                that.imageWrapper.append(that.buttonsWrapper);\n\n                if (that.options.audioButton) {\n                    that._audioButton();\n                }\n\n                if (that.options.resetButton) {\n                    that._resetButton();\n                }\n            },\n\n            _resetButton: function() {\n                var that = this,\n                    messages = that.options.messages,\n                    styles = Captcha.styles;\n\n                that.resetButton = $(\"<button type=\\\"button\\\" title=\\\"\" + messages.reset + \"\\\" class=\\\"\" + styles.button + \" \" + styles.iconButton + \"\\\">\" +\n                                        kendo.ui.icon({ icon: styles.resetIcon, iconClass: \"k-button-icon\" }) +\n                                    \"</button>\");\n\n                that.buttonsWrapper.append(that.resetButton);\n\n                that.resetButton.on(CLICK + NS, that._resetHandler.bind(that, true));\n            },\n\n            _audioButton: function() {\n                var that = this,\n                    messages = that.options.messages,\n                    styles = Captcha.styles;\n\n                that.audioButton = $(\"<button type=\\\"button\\\" title=\\\"\" + messages.audio + \"\\\" class=\\\"\" + styles.button + \" \" + styles.iconButton + \"\\\">\" +\n                                        kendo.ui.icon({ icon: styles.audioIcon, iconClass: \"k-button-icon\" }) +\n                                    \"</button>\");\n\n                that.buttonsWrapper.append(that.audioButton);\n\n                that.audioButton.on(CLICK + NS, that._audioHandler.bind(that));\n            },\n\n            _resetHandler: function(focusResetButton) {\n                var that = this,\n                    handler = that.options.handler,\n                    deferred = $.Deferred(),\n                    success = that._resetCaptcha.bind(that, deferred);\n\n                delete that._isValid;\n                that._toggleSuccessMessage(false);\n                that._audioEnded();\n                that._progress(true);\n\n                if (!handler) {\n                    window.console.error(\"Captcha's handler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's handler option is not defined!\", error: \"handler_not_defined\" });\n                    that._progress(false);\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"reset\", handler, success)\n                    .done(function() {\n                        if (focusResetButton) {\n                            that.resetButton.trigger(\"focus\");\n                        }\n                    })\n                    .fail(function(args) {\n                        that._progress(false);\n                        deferred.reject(args);\n                    });\n                return deferred.promise();\n            },\n\n            _audioHandler: function() {\n                var that = this,\n                    handler = that.options.audioHandler,\n                    deferred = $.Deferred(),\n                    success = that._playAudio.bind(that, deferred),\n                    data = {};\n\n                data[that._captchaIdField] = that.idInput.val();\n\n                if (!handler) {\n                    window.console.error(\"Captcha's audioHandler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's audioHandler option is not defined!\", error: \"handler_not_defined\" });\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"audio\", handler, success, data).fail(deferred.reject);\n                return deferred.promise();\n            },\n\n            _validationHandler: function() {\n                var that = this,\n                    handler = that.options.validationHandler,\n                    deferred = $.Deferred(),\n                    success = that._validate.bind(that, deferred),\n                    data = {};\n\n                delete that._isValid;\n\n                data[that._captchaIdField] = that.idInput.val();\n                data[that._valueField] = that.element.val();\n\n                if (!handler) {\n                    window.console.error(\"Captcha's validationHandler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's validationHandler option is not defined!\", error: \"handler_not_defined\" });\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"validation\", handler, success, data).fail(deferred.reject);\n                return deferred.promise();\n            },\n\n            _callHandler: function(type, handler, success, data) {\n                var that = this,\n                    error = that._error.bind(that, type),\n                    requestEnd = that._requestEnd.bind(that, type),\n                    args;\n\n                if (isFunction(handler)) {\n                    handler({ success: success, data: data });\n                    return $.Deferred().promise();\n                } else {\n                    args = typeof handler === STRING ? { url: handler, cache: false } : extend({}, handler);\n                    args.success = success;\n                    args.data = extend({}, data, args.data);\n\n                    if (!that.trigger(REQUEST_START, { type: type, data: data })) {\n                        return ajax(args).done(requestEnd).fail(error);\n                    }\n                }\n            },\n\n            _requestEnd: function(type, data) {\n                var that = this;\n                that.trigger(REQUEST_END, { type: type, data: data });\n            },\n\n            _error: function(type, jqXHR, textStatus, errorThrown) {\n                var that = this;\n                that.trigger(ERROR, { type: type, jqXHR: jqXHR, textStatus: textStatus, errorThrown: errorThrown });\n            },\n\n            _resetCaptcha: function(deferred, data) {\n                var that = this,\n                    id = data[that._captchaIdField],\n                    captcha = data[that._captchaField];\n\n                that.idInput.val(id);\n                that.captchaImage.attr(\"src\", captcha || \"\");\n\n                that.captchaImage.off(\"load\");\n                that.captchaImage.one(\"load\", function() {\n                    that._progress(false);\n                });\n\n                that._attachImageErrorHandler();\n\n                deferred.resolve(data);\n            },\n\n            _playAudio: function(deferred, data) {\n                var that = this;\n\n                if (that._canPlayWav()) {\n                    if (that.audioElement) {\n                        return;\n                    }\n\n                    that.audioElement = new Audio(data);\n                    that.audioElement.volume = that._audioVolume || that.audioElement.volume;\n\n                    if (that.options.volumeControl) {\n                        $(that.audioElement).on(\"loadeddata\" + NS, function() {\n                            that._showVolumeControl(that.audioElement.volume);\n                        });\n                    }\n\n                    $(that.audioElement).on(\"ended\" + NS + \" error\" + NS, that._audioEnded.bind(that, deferred));\n\n                    that.audioElement.play();\n                }\n            },\n\n            _showVolumeControl: function(volume) {\n                var that = this,\n                    styles = Captcha.styles,\n                    volumeControlWrapper = $(\"<div class=\\\"\" + styles.volumeControlWrapper + \"\\\"></div>\");\n\n                if (that.volumeControl) {\n                    return;\n                }\n\n                that.volumeControlElm = $(\"<input />\");\n                that.volumeControlWrapper = volumeControlWrapper.append(that.volumeControlElm);\n                that.imageWrapper.append(volumeControlWrapper);\n                that.volumeControlWrapper.css(that._isRtl() ? \"right\" : \"left\", that.wrapper.width());\n\n                that.volumeControl = that.volumeControlElm.kendoSlider({\n                    min: 0,\n                    max: 1,\n                    smallStep: 0.1,\n                    largeStep: 0.5,\n                    orientation: \"vertical\",\n                    showButtons: false,\n                    tickPlacement: \"none\",\n                    value: volume,\n                    tooltip: {\n                        enabled: false\n                    },\n                    change: function(ev) {\n                        that._audioVolume = that.audioElement.volume = ev.value;\n                    }\n                }).data(\"kendoSlider\");\n            },\n\n            _audioEnded: function(deferred) {\n                var that = this;\n\n                if ($(document.activeElement).is(\"a.k-draghandle\")) {\n                    that.audioButton.trigger(\"focus\");\n                }\n\n                if (that.volumeControl) {\n                    that.volumeControl.destroy();\n                    that.volumeControl.wrapper.remove();\n                    delete that.volumeControl;\n                    that.volumeControlElm.remove();\n                    that.volumeControlWrapper.remove();\n                    delete that.volumeControlElm;\n                    delete that.volumeControlWrapper;\n                }\n\n                if (that.audioElement) {\n                    that.audioElement.pause();\n                }\n\n                $(that.audioElement).off(NS);\n                $(that.audioElement).remove();\n                delete that.audioElement;\n\n                if (deferred && deferred.resolve) {\n                    deferred.resolve();\n                }\n            },\n\n            _canPlayWav: function() {\n                var that = this,\n                    audio;\n\n                if (that._canPlayAudio) {\n                    return that._canPlayAudio;\n                }\n\n                audio = new Audio();\n                that._canPlayAudio = audio.canPlayType(\"audio/wav\").replace(/no/gi, \"\") !== \"\";\n\n                return that._canPlayAudio;\n            },\n\n            _validate: function(deferred, data) {\n                var that = this;\n                that._isValid = data;\n                that._toggleSuccessMessage(that._isValid);\n                deferred.resolve(data);\n            },\n\n            _toggleSuccessMessage: function(toggle) {\n                var that = this,\n                    idAttr = (that.element.attr(\"id\") || that.element.attr(\"name\")) + \"-success\",\n                    messages = that.options.messages;\n\n                $(that.successMessage).remove();\n                that.element.removeAttr(\"aria-describedby\");\n\n                if (toggle) {\n                    that.successMessage = $(\"<span id=\\\"\" + idAttr + \"\\\" class=\\\"\" + Captcha.styles.success + \"\\\">\" + kendo.htmlEncode(messages.success) + \"</span>\");\n                    that._inputWrapper.after(that.successMessage);\n                    that.element.attr(\"aria-describedby\", idAttr);\n                }\n            },\n\n            _toggleButtons: function(toggle) {\n                var that = this;\n\n                if (that.resetButton) {\n                    that.resetButton.prop(\"disabled\", !toggle);\n                }\n\n                if (that.audioButton) {\n                    that.audioButton.prop(\"disabled\", !toggle);\n                }\n            },\n\n            _progress: function(toggle) {\n                var that = this;\n\n                that.wrapper.toggleClass(Captcha.styles.loading, toggle);\n                that._inputWrapper.toggleClass(Captcha.styles.disabled, toggle);\n                that._toggleButtons(!toggle);\n                that._toggleSkeleton(toggle);\n            },\n\n            _toggleSkeleton: function(toggle) {\n                var that = this;\n\n                if (that.skeleton) {\n                    that.skeleton.remove();\n                }\n\n                if (toggle) {\n                    that.skeleton = $(\"<span class='k-skeleton k-skeleton-rect k-skeleton-pulse'></span>\").css({\n                        width: \"100%\",\n                        height: \"100%\"\n                    });\n                    that.captchaImage.before(that.skeleton);\n                }\n            },\n\n            _isRtl: function() {\n                return kendo.support.isRtl(this.wrapper);\n            },\n\n            value: function() {\n                return this.element.val();\n            },\n\n            getCaptchaId: function() {\n                return this.idInput.val();\n            },\n\n            toJSON: function() {\n                var that = this,\n                    obj = {};\n\n                obj[that._valueField] = that.value();\n                obj[that._captchaIdField] = that.getCaptchaId();\n\n                return obj;\n            },\n\n            validate: function() {\n                return this._validationHandler();\n            },\n\n            isValid: function() {\n                return this._isValid;\n            },\n\n            enable: function(toggle) {\n                var that = this;\n\n                toggle = toggle !== false;\n\n                that._toggleButtons(toggle);\n\n                that.textbox.enable(toggle);\n\n                if (toggle) {\n                    that.captchaImage.removeAttr(\"tabIndex\");\n                    that._tabindex(that.captchaImage);\n                } else {\n                    that.captchaImage.attr(\"tabIndex\", \"-1\");\n                }\n\n                that.captchaImage.toggleClass(Captcha.styles.disabled, !toggle);\n                that.wrapper.toggleClass(Captcha.styles.disabled, !toggle);\n            },\n\n            readonly: function(toggle) {\n                var that = this;\n\n                toggle = toggle !== false;\n\n                if (that.resetButton) {\n                    that.resetButton.prop(\"disabled\", toggle);\n                }\n\n                that.textbox.readonly(toggle);\n            },\n\n            speak: function() {\n                return this._audioHandler();\n            },\n\n            reset: function() {\n                return this._resetHandler();\n            }\n        });\n\n        kendo.ui.plugin(Captcha);\n\n        extend(true, Captcha, { styles: CaptchaStyles });\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}